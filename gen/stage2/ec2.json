{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "EC2",
        "error": "EC2Error",
        "namespace": "Network.AWS.EC2",
        "protocol": "query",
        "imports": [
            "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "Network.AWS.EC2.AllocateAddress",
            "Network.AWS.EC2.AssignPrivateIpAddresses",
            "Network.AWS.EC2.AssociateAddress",
            "Network.AWS.EC2.AssociateDhcpOptions",
            "Network.AWS.EC2.AssociateRouteTable",
            "Network.AWS.EC2.AttachInternetGateway",
            "Network.AWS.EC2.AttachNetworkInterface",
            "Network.AWS.EC2.AttachVolume",
            "Network.AWS.EC2.AttachVpnGateway",
            "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "Network.AWS.EC2.BundleInstance",
            "Network.AWS.EC2.CancelBundleTask",
            "Network.AWS.EC2.CancelConversionTask",
            "Network.AWS.EC2.CancelExportTask",
            "Network.AWS.EC2.CancelReservedInstancesListing",
            "Network.AWS.EC2.CancelSpotInstanceRequests",
            "Network.AWS.EC2.ConfirmProductInstance",
            "Network.AWS.EC2.CopyImage",
            "Network.AWS.EC2.CopySnapshot",
            "Network.AWS.EC2.CreateCustomerGateway",
            "Network.AWS.EC2.CreateDhcpOptions",
            "Network.AWS.EC2.CreateImage",
            "Network.AWS.EC2.CreateInstanceExportTask",
            "Network.AWS.EC2.CreateInternetGateway",
            "Network.AWS.EC2.CreateKeyPair",
            "Network.AWS.EC2.CreateNetworkAcl",
            "Network.AWS.EC2.CreateNetworkAclEntry",
            "Network.AWS.EC2.CreateNetworkInterface",
            "Network.AWS.EC2.CreatePlacementGroup",
            "Network.AWS.EC2.CreateReservedInstancesListing",
            "Network.AWS.EC2.CreateRoute",
            "Network.AWS.EC2.CreateRouteTable",
            "Network.AWS.EC2.CreateSecurityGroup",
            "Network.AWS.EC2.CreateSnapshot",
            "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "Network.AWS.EC2.CreateSubnet",
            "Network.AWS.EC2.CreateTags",
            "Network.AWS.EC2.CreateVolume",
            "Network.AWS.EC2.CreateVpc",
            "Network.AWS.EC2.CreateVpcPeeringConnection",
            "Network.AWS.EC2.CreateVpnConnection",
            "Network.AWS.EC2.CreateVpnConnectionRoute",
            "Network.AWS.EC2.CreateVpnGateway",
            "Network.AWS.EC2.DeleteCustomerGateway",
            "Network.AWS.EC2.DeleteDhcpOptions",
            "Network.AWS.EC2.DeleteInternetGateway",
            "Network.AWS.EC2.DeleteKeyPair",
            "Network.AWS.EC2.DeleteNetworkAcl",
            "Network.AWS.EC2.DeleteNetworkAclEntry",
            "Network.AWS.EC2.DeleteNetworkInterface",
            "Network.AWS.EC2.DeletePlacementGroup",
            "Network.AWS.EC2.DeleteRoute",
            "Network.AWS.EC2.DeleteRouteTable",
            "Network.AWS.EC2.DeleteSecurityGroup",
            "Network.AWS.EC2.DeleteSnapshot",
            "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "Network.AWS.EC2.DeleteSubnet",
            "Network.AWS.EC2.DeleteTags",
            "Network.AWS.EC2.DeleteVolume",
            "Network.AWS.EC2.DeleteVpc",
            "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "Network.AWS.EC2.DeleteVpnConnection",
            "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "Network.AWS.EC2.DeleteVpnGateway",
            "Network.AWS.EC2.DeregisterImage",
            "Network.AWS.EC2.DescribeAccountAttributes",
            "Network.AWS.EC2.DescribeAddresses",
            "Network.AWS.EC2.DescribeAvailabilityZones",
            "Network.AWS.EC2.DescribeBundleTasks",
            "Network.AWS.EC2.DescribeConversionTasks",
            "Network.AWS.EC2.DescribeCustomerGateways",
            "Network.AWS.EC2.DescribeDhcpOptions",
            "Network.AWS.EC2.DescribeExportTasks",
            "Network.AWS.EC2.DescribeImageAttribute",
            "Network.AWS.EC2.DescribeImages",
            "Network.AWS.EC2.DescribeInstanceAttribute",
            "Network.AWS.EC2.DescribeInstanceStatus",
            "Network.AWS.EC2.DescribeInstances",
            "Network.AWS.EC2.DescribeInternetGateways",
            "Network.AWS.EC2.DescribeKeyPairs",
            "Network.AWS.EC2.DescribeNetworkAcls",
            "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "Network.AWS.EC2.DescribeNetworkInterfaces",
            "Network.AWS.EC2.DescribePlacementGroups",
            "Network.AWS.EC2.DescribeRegions",
            "Network.AWS.EC2.DescribeReservedInstances",
            "Network.AWS.EC2.DescribeReservedInstancesListings",
            "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "Network.AWS.EC2.DescribeRouteTables",
            "Network.AWS.EC2.DescribeSecurityGroups",
            "Network.AWS.EC2.DescribeSnapshotAttribute",
            "Network.AWS.EC2.DescribeSnapshots",
            "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "Network.AWS.EC2.DescribeSpotPriceHistory",
            "Network.AWS.EC2.DescribeSubnets",
            "Network.AWS.EC2.DescribeTags",
            "Network.AWS.EC2.DescribeVolumeAttribute",
            "Network.AWS.EC2.DescribeVolumeStatus",
            "Network.AWS.EC2.DescribeVolumes",
            "Network.AWS.EC2.DescribeVpcAttribute",
            "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "Network.AWS.EC2.DescribeVpcs",
            "Network.AWS.EC2.DescribeVpnConnections",
            "Network.AWS.EC2.DescribeVpnGateways",
            "Network.AWS.EC2.DetachInternetGateway",
            "Network.AWS.EC2.DetachNetworkInterface",
            "Network.AWS.EC2.DetachVolume",
            "Network.AWS.EC2.DetachVpnGateway",
            "Network.AWS.EC2.DisableVgwRoutePropagation",
            "Network.AWS.EC2.DisassociateAddress",
            "Network.AWS.EC2.DisassociateRouteTable",
            "Network.AWS.EC2.EnableVgwRoutePropagation",
            "Network.AWS.EC2.EnableVolumeIO",
            "Network.AWS.EC2.GetConsoleOutput",
            "Network.AWS.EC2.GetPasswordData",
            "Network.AWS.EC2.ImportInstance",
            "Network.AWS.EC2.ImportKeyPair",
            "Network.AWS.EC2.ImportVolume",
            "Network.AWS.EC2.ModifyImageAttribute",
            "Network.AWS.EC2.ModifyInstanceAttribute",
            "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "Network.AWS.EC2.ModifyReservedInstances",
            "Network.AWS.EC2.ModifySnapshotAttribute",
            "Network.AWS.EC2.ModifySubnetAttribute",
            "Network.AWS.EC2.ModifyVolumeAttribute",
            "Network.AWS.EC2.ModifyVpcAttribute",
            "Network.AWS.EC2.MonitorInstances",
            "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "Network.AWS.EC2.RebootInstances",
            "Network.AWS.EC2.RegisterImage",
            "Network.AWS.EC2.RejectVpcPeeringConnection",
            "Network.AWS.EC2.ReleaseAddress",
            "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "Network.AWS.EC2.ReplaceRoute",
            "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "Network.AWS.EC2.ReportInstanceStatus",
            "Network.AWS.EC2.RequestSpotInstances",
            "Network.AWS.EC2.ResetImageAttribute",
            "Network.AWS.EC2.ResetInstanceAttribute",
            "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "Network.AWS.EC2.ResetSnapshotAttribute",
            "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "Network.AWS.EC2.RunInstances",
            "Network.AWS.EC2.StartInstances",
            "Network.AWS.EC2.StopInstances",
            "Network.AWS.EC2.TerminateInstances",
            "Network.AWS.EC2.Types",
            "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "Network.AWS.EC2.UnmonitorInstances"
        ],
        "name": "Amazon Elastic Compute Cloud",
        "version": "2014-09-01",
        "documentation": "Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers. Amazon EC2’s simple web service interface allows you to obtain and configure capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon’s proven computing environment. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale capacity, both up and down, as your computing requirements change. Amazon EC2 changes the economics of computing by allowing you to pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate themselves from common failure scenarios.",
        "xmlNamespace": "http://ec2.amazonaws.com/doc/2014-09-01",
        "endpoint": "Regional",
        "endpointPrefix": "ec2"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-ec2",
        "exposed": [
            "Network.AWS.EC2",
            "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "Network.AWS.EC2.AllocateAddress",
            "Network.AWS.EC2.AssignPrivateIpAddresses",
            "Network.AWS.EC2.AssociateAddress",
            "Network.AWS.EC2.AssociateDhcpOptions",
            "Network.AWS.EC2.AssociateRouteTable",
            "Network.AWS.EC2.AttachInternetGateway",
            "Network.AWS.EC2.AttachNetworkInterface",
            "Network.AWS.EC2.AttachVolume",
            "Network.AWS.EC2.AttachVpnGateway",
            "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "Network.AWS.EC2.BundleInstance",
            "Network.AWS.EC2.CancelBundleTask",
            "Network.AWS.EC2.CancelConversionTask",
            "Network.AWS.EC2.CancelExportTask",
            "Network.AWS.EC2.CancelReservedInstancesListing",
            "Network.AWS.EC2.CancelSpotInstanceRequests",
            "Network.AWS.EC2.ConfirmProductInstance",
            "Network.AWS.EC2.CopyImage",
            "Network.AWS.EC2.CopySnapshot",
            "Network.AWS.EC2.CreateCustomerGateway",
            "Network.AWS.EC2.CreateDhcpOptions",
            "Network.AWS.EC2.CreateImage",
            "Network.AWS.EC2.CreateInstanceExportTask",
            "Network.AWS.EC2.CreateInternetGateway",
            "Network.AWS.EC2.CreateKeyPair",
            "Network.AWS.EC2.CreateNetworkAcl",
            "Network.AWS.EC2.CreateNetworkAclEntry",
            "Network.AWS.EC2.CreateNetworkInterface",
            "Network.AWS.EC2.CreatePlacementGroup",
            "Network.AWS.EC2.CreateReservedInstancesListing",
            "Network.AWS.EC2.CreateRoute",
            "Network.AWS.EC2.CreateRouteTable",
            "Network.AWS.EC2.CreateSecurityGroup",
            "Network.AWS.EC2.CreateSnapshot",
            "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "Network.AWS.EC2.CreateSubnet",
            "Network.AWS.EC2.CreateTags",
            "Network.AWS.EC2.CreateVolume",
            "Network.AWS.EC2.CreateVpc",
            "Network.AWS.EC2.CreateVpcPeeringConnection",
            "Network.AWS.EC2.CreateVpnConnection",
            "Network.AWS.EC2.CreateVpnConnectionRoute",
            "Network.AWS.EC2.CreateVpnGateway",
            "Network.AWS.EC2.DeleteCustomerGateway",
            "Network.AWS.EC2.DeleteDhcpOptions",
            "Network.AWS.EC2.DeleteInternetGateway",
            "Network.AWS.EC2.DeleteKeyPair",
            "Network.AWS.EC2.DeleteNetworkAcl",
            "Network.AWS.EC2.DeleteNetworkAclEntry",
            "Network.AWS.EC2.DeleteNetworkInterface",
            "Network.AWS.EC2.DeletePlacementGroup",
            "Network.AWS.EC2.DeleteRoute",
            "Network.AWS.EC2.DeleteRouteTable",
            "Network.AWS.EC2.DeleteSecurityGroup",
            "Network.AWS.EC2.DeleteSnapshot",
            "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "Network.AWS.EC2.DeleteSubnet",
            "Network.AWS.EC2.DeleteTags",
            "Network.AWS.EC2.DeleteVolume",
            "Network.AWS.EC2.DeleteVpc",
            "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "Network.AWS.EC2.DeleteVpnConnection",
            "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "Network.AWS.EC2.DeleteVpnGateway",
            "Network.AWS.EC2.DeregisterImage",
            "Network.AWS.EC2.DescribeAccountAttributes",
            "Network.AWS.EC2.DescribeAddresses",
            "Network.AWS.EC2.DescribeAvailabilityZones",
            "Network.AWS.EC2.DescribeBundleTasks",
            "Network.AWS.EC2.DescribeConversionTasks",
            "Network.AWS.EC2.DescribeCustomerGateways",
            "Network.AWS.EC2.DescribeDhcpOptions",
            "Network.AWS.EC2.DescribeExportTasks",
            "Network.AWS.EC2.DescribeImageAttribute",
            "Network.AWS.EC2.DescribeImages",
            "Network.AWS.EC2.DescribeInstanceAttribute",
            "Network.AWS.EC2.DescribeInstanceStatus",
            "Network.AWS.EC2.DescribeInstances",
            "Network.AWS.EC2.DescribeInternetGateways",
            "Network.AWS.EC2.DescribeKeyPairs",
            "Network.AWS.EC2.DescribeNetworkAcls",
            "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "Network.AWS.EC2.DescribeNetworkInterfaces",
            "Network.AWS.EC2.DescribePlacementGroups",
            "Network.AWS.EC2.DescribeRegions",
            "Network.AWS.EC2.DescribeReservedInstances",
            "Network.AWS.EC2.DescribeReservedInstancesListings",
            "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "Network.AWS.EC2.DescribeRouteTables",
            "Network.AWS.EC2.DescribeSecurityGroups",
            "Network.AWS.EC2.DescribeSnapshotAttribute",
            "Network.AWS.EC2.DescribeSnapshots",
            "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "Network.AWS.EC2.DescribeSpotPriceHistory",
            "Network.AWS.EC2.DescribeSubnets",
            "Network.AWS.EC2.DescribeTags",
            "Network.AWS.EC2.DescribeVolumeAttribute",
            "Network.AWS.EC2.DescribeVolumeStatus",
            "Network.AWS.EC2.DescribeVolumes",
            "Network.AWS.EC2.DescribeVpcAttribute",
            "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "Network.AWS.EC2.DescribeVpcs",
            "Network.AWS.EC2.DescribeVpnConnections",
            "Network.AWS.EC2.DescribeVpnGateways",
            "Network.AWS.EC2.DetachInternetGateway",
            "Network.AWS.EC2.DetachNetworkInterface",
            "Network.AWS.EC2.DetachVolume",
            "Network.AWS.EC2.DetachVpnGateway",
            "Network.AWS.EC2.DisableVgwRoutePropagation",
            "Network.AWS.EC2.DisassociateAddress",
            "Network.AWS.EC2.DisassociateRouteTable",
            "Network.AWS.EC2.EnableVgwRoutePropagation",
            "Network.AWS.EC2.EnableVolumeIO",
            "Network.AWS.EC2.GetConsoleOutput",
            "Network.AWS.EC2.GetPasswordData",
            "Network.AWS.EC2.ImportInstance",
            "Network.AWS.EC2.ImportKeyPair",
            "Network.AWS.EC2.ImportVolume",
            "Network.AWS.EC2.ModifyImageAttribute",
            "Network.AWS.EC2.ModifyInstanceAttribute",
            "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "Network.AWS.EC2.ModifyReservedInstances",
            "Network.AWS.EC2.ModifySnapshotAttribute",
            "Network.AWS.EC2.ModifySubnetAttribute",
            "Network.AWS.EC2.ModifyVolumeAttribute",
            "Network.AWS.EC2.ModifyVpcAttribute",
            "Network.AWS.EC2.MonitorInstances",
            "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "Network.AWS.EC2.RebootInstances",
            "Network.AWS.EC2.RegisterImage",
            "Network.AWS.EC2.RejectVpcPeeringConnection",
            "Network.AWS.EC2.ReleaseAddress",
            "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "Network.AWS.EC2.ReplaceRoute",
            "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "Network.AWS.EC2.ReportInstanceStatus",
            "Network.AWS.EC2.RequestSpotInstances",
            "Network.AWS.EC2.ResetImageAttribute",
            "Network.AWS.EC2.ResetInstanceAttribute",
            "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "Network.AWS.EC2.ResetSnapshotAttribute",
            "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "Network.AWS.EC2.RunInstances",
            "Network.AWS.EC2.StartInstances",
            "Network.AWS.EC2.StopInstances",
            "Network.AWS.EC2.TerminateInstances",
            "Network.AWS.EC2.Types",
            "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "Network.AWS.EC2.UnmonitorInstances"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "service": {
            "signature": "V4",
            "checksum": "sha256",
            "abbrev": "EC2",
            "error": "EC2Error",
            "namespace": "Network.AWS.EC2",
            "protocol": "query",
            "imports": [
                "Network.AWS.EC2.AcceptVpcPeeringConnection",
                "Network.AWS.EC2.AllocateAddress",
                "Network.AWS.EC2.AssignPrivateIpAddresses",
                "Network.AWS.EC2.AssociateAddress",
                "Network.AWS.EC2.AssociateDhcpOptions",
                "Network.AWS.EC2.AssociateRouteTable",
                "Network.AWS.EC2.AttachInternetGateway",
                "Network.AWS.EC2.AttachNetworkInterface",
                "Network.AWS.EC2.AttachVolume",
                "Network.AWS.EC2.AttachVpnGateway",
                "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
                "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
                "Network.AWS.EC2.BundleInstance",
                "Network.AWS.EC2.CancelBundleTask",
                "Network.AWS.EC2.CancelConversionTask",
                "Network.AWS.EC2.CancelExportTask",
                "Network.AWS.EC2.CancelReservedInstancesListing",
                "Network.AWS.EC2.CancelSpotInstanceRequests",
                "Network.AWS.EC2.ConfirmProductInstance",
                "Network.AWS.EC2.CopyImage",
                "Network.AWS.EC2.CopySnapshot",
                "Network.AWS.EC2.CreateCustomerGateway",
                "Network.AWS.EC2.CreateDhcpOptions",
                "Network.AWS.EC2.CreateImage",
                "Network.AWS.EC2.CreateInstanceExportTask",
                "Network.AWS.EC2.CreateInternetGateway",
                "Network.AWS.EC2.CreateKeyPair",
                "Network.AWS.EC2.CreateNetworkAcl",
                "Network.AWS.EC2.CreateNetworkAclEntry",
                "Network.AWS.EC2.CreateNetworkInterface",
                "Network.AWS.EC2.CreatePlacementGroup",
                "Network.AWS.EC2.CreateReservedInstancesListing",
                "Network.AWS.EC2.CreateRoute",
                "Network.AWS.EC2.CreateRouteTable",
                "Network.AWS.EC2.CreateSecurityGroup",
                "Network.AWS.EC2.CreateSnapshot",
                "Network.AWS.EC2.CreateSpotDatafeedSubscription",
                "Network.AWS.EC2.CreateSubnet",
                "Network.AWS.EC2.CreateTags",
                "Network.AWS.EC2.CreateVolume",
                "Network.AWS.EC2.CreateVpc",
                "Network.AWS.EC2.CreateVpcPeeringConnection",
                "Network.AWS.EC2.CreateVpnConnection",
                "Network.AWS.EC2.CreateVpnConnectionRoute",
                "Network.AWS.EC2.CreateVpnGateway",
                "Network.AWS.EC2.DeleteCustomerGateway",
                "Network.AWS.EC2.DeleteDhcpOptions",
                "Network.AWS.EC2.DeleteInternetGateway",
                "Network.AWS.EC2.DeleteKeyPair",
                "Network.AWS.EC2.DeleteNetworkAcl",
                "Network.AWS.EC2.DeleteNetworkAclEntry",
                "Network.AWS.EC2.DeleteNetworkInterface",
                "Network.AWS.EC2.DeletePlacementGroup",
                "Network.AWS.EC2.DeleteRoute",
                "Network.AWS.EC2.DeleteRouteTable",
                "Network.AWS.EC2.DeleteSecurityGroup",
                "Network.AWS.EC2.DeleteSnapshot",
                "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
                "Network.AWS.EC2.DeleteSubnet",
                "Network.AWS.EC2.DeleteTags",
                "Network.AWS.EC2.DeleteVolume",
                "Network.AWS.EC2.DeleteVpc",
                "Network.AWS.EC2.DeleteVpcPeeringConnection",
                "Network.AWS.EC2.DeleteVpnConnection",
                "Network.AWS.EC2.DeleteVpnConnectionRoute",
                "Network.AWS.EC2.DeleteVpnGateway",
                "Network.AWS.EC2.DeregisterImage",
                "Network.AWS.EC2.DescribeAccountAttributes",
                "Network.AWS.EC2.DescribeAddresses",
                "Network.AWS.EC2.DescribeAvailabilityZones",
                "Network.AWS.EC2.DescribeBundleTasks",
                "Network.AWS.EC2.DescribeConversionTasks",
                "Network.AWS.EC2.DescribeCustomerGateways",
                "Network.AWS.EC2.DescribeDhcpOptions",
                "Network.AWS.EC2.DescribeExportTasks",
                "Network.AWS.EC2.DescribeImageAttribute",
                "Network.AWS.EC2.DescribeImages",
                "Network.AWS.EC2.DescribeInstanceAttribute",
                "Network.AWS.EC2.DescribeInstanceStatus",
                "Network.AWS.EC2.DescribeInstances",
                "Network.AWS.EC2.DescribeInternetGateways",
                "Network.AWS.EC2.DescribeKeyPairs",
                "Network.AWS.EC2.DescribeNetworkAcls",
                "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
                "Network.AWS.EC2.DescribeNetworkInterfaces",
                "Network.AWS.EC2.DescribePlacementGroups",
                "Network.AWS.EC2.DescribeRegions",
                "Network.AWS.EC2.DescribeReservedInstances",
                "Network.AWS.EC2.DescribeReservedInstancesListings",
                "Network.AWS.EC2.DescribeReservedInstancesModifications",
                "Network.AWS.EC2.DescribeReservedInstancesOfferings",
                "Network.AWS.EC2.DescribeRouteTables",
                "Network.AWS.EC2.DescribeSecurityGroups",
                "Network.AWS.EC2.DescribeSnapshotAttribute",
                "Network.AWS.EC2.DescribeSnapshots",
                "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
                "Network.AWS.EC2.DescribeSpotInstanceRequests",
                "Network.AWS.EC2.DescribeSpotPriceHistory",
                "Network.AWS.EC2.DescribeSubnets",
                "Network.AWS.EC2.DescribeTags",
                "Network.AWS.EC2.DescribeVolumeAttribute",
                "Network.AWS.EC2.DescribeVolumeStatus",
                "Network.AWS.EC2.DescribeVolumes",
                "Network.AWS.EC2.DescribeVpcAttribute",
                "Network.AWS.EC2.DescribeVpcPeeringConnections",
                "Network.AWS.EC2.DescribeVpcs",
                "Network.AWS.EC2.DescribeVpnConnections",
                "Network.AWS.EC2.DescribeVpnGateways",
                "Network.AWS.EC2.DetachInternetGateway",
                "Network.AWS.EC2.DetachNetworkInterface",
                "Network.AWS.EC2.DetachVolume",
                "Network.AWS.EC2.DetachVpnGateway",
                "Network.AWS.EC2.DisableVgwRoutePropagation",
                "Network.AWS.EC2.DisassociateAddress",
                "Network.AWS.EC2.DisassociateRouteTable",
                "Network.AWS.EC2.EnableVgwRoutePropagation",
                "Network.AWS.EC2.EnableVolumeIO",
                "Network.AWS.EC2.GetConsoleOutput",
                "Network.AWS.EC2.GetPasswordData",
                "Network.AWS.EC2.ImportInstance",
                "Network.AWS.EC2.ImportKeyPair",
                "Network.AWS.EC2.ImportVolume",
                "Network.AWS.EC2.ModifyImageAttribute",
                "Network.AWS.EC2.ModifyInstanceAttribute",
                "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
                "Network.AWS.EC2.ModifyReservedInstances",
                "Network.AWS.EC2.ModifySnapshotAttribute",
                "Network.AWS.EC2.ModifySubnetAttribute",
                "Network.AWS.EC2.ModifyVolumeAttribute",
                "Network.AWS.EC2.ModifyVpcAttribute",
                "Network.AWS.EC2.MonitorInstances",
                "Network.AWS.EC2.PurchaseReservedInstancesOffering",
                "Network.AWS.EC2.RebootInstances",
                "Network.AWS.EC2.RegisterImage",
                "Network.AWS.EC2.RejectVpcPeeringConnection",
                "Network.AWS.EC2.ReleaseAddress",
                "Network.AWS.EC2.ReplaceNetworkAclAssociation",
                "Network.AWS.EC2.ReplaceNetworkAclEntry",
                "Network.AWS.EC2.ReplaceRoute",
                "Network.AWS.EC2.ReplaceRouteTableAssociation",
                "Network.AWS.EC2.ReportInstanceStatus",
                "Network.AWS.EC2.RequestSpotInstances",
                "Network.AWS.EC2.ResetImageAttribute",
                "Network.AWS.EC2.ResetInstanceAttribute",
                "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
                "Network.AWS.EC2.ResetSnapshotAttribute",
                "Network.AWS.EC2.RevokeSecurityGroupEgress",
                "Network.AWS.EC2.RevokeSecurityGroupIngress",
                "Network.AWS.EC2.RunInstances",
                "Network.AWS.EC2.StartInstances",
                "Network.AWS.EC2.StopInstances",
                "Network.AWS.EC2.TerminateInstances",
                "Network.AWS.EC2.Types",
                "Network.AWS.EC2.UnassignPrivateIpAddresses",
                "Network.AWS.EC2.UnmonitorInstances"
            ],
            "name": "Amazon Elastic Compute Cloud",
            "version": "2014-09-01",
            "documentation": "Amazon Elastic Compute Cloud (Amazon EC2) is a web service that provides resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers. Amazon EC2’s simple web service interface allows you to obtain and configure capacity with minimal friction. It provides you with complete control of your computing resources and lets you run on Amazon’s proven computing environment. Amazon EC2 reduces the time required to obtain and boot new server instances to minutes, allowing you to quickly scale capacity, both up and down, as your computing requirements change. Amazon EC2 changes the economics of computing by allowing you to pay only for capacity that you actually use. Amazon EC2 provides developers the tools to build failure resilient applications and isolate themselves from common failure scenarios.",
            "xmlNamespace": "http://ec2.amazonaws.com/doc/2014-09-01",
            "endpoint": "Regional",
            "endpointPrefix": "ec2"
        },
        "namespace": "Network.AWS.EC2.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "IANLaunchPermission": "launchPermission",
                    "IANProductCodes": "productCodes",
                    "IANRamdisk": "ramdisk",
                    "IANKernel": "kernel",
                    "IANDescription": "description",
                    "IANBlockDeviceMapping": "blockDeviceMapping"
                },
                "valuePad": 19,
                "name": "ImageAttributeName",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "All": "all"
                },
                "valuePad": 4,
                "name": "PermissionGroup",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "networkAclEntry",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "naeRuleNumber",
                    "name": "_naeRuleNumber",
                    "shape": "Integer",
                    "locationName": "ruleNumber",
                    "documentation": "\u003cp\u003eThe rule number for the entry. ACL entries are processed in ascending order by rule number.\u003c/p\u003e",
                    "typeExposed": "Maybe Int",
                    "type": "Maybe Int"
                },
                "required": [],
                "name": "NetworkAclEntry",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeRuleNumber",
                        "name": "_naeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number for the entry. ACL entries are processed in ascending order by rule number.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeProtocol",
                        "name": "_naeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe protocol. A value of \u003ccode\u003e-1\u003c/code\u003e means all protocols.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeRuleAction",
                        "name": "_naeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeEgress",
                        "name": "_naeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether the rule is an egress rule (applied to traffic leaving the subnet).\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeCidrBlock",
                        "name": "_naeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeIcmpTypeCode",
                        "name": "_naeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "icmpTypeCode",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naePortRange",
                        "name": "_naePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeCidrBlock",
                        "name": "_naeCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeEgress",
                        "name": "_naeEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether the rule is an egress rule (applied to traffic leaving the subnet).\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeIcmpTypeCode",
                        "name": "_naeIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "icmpTypeCode",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naePortRange",
                        "name": "_naePortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeProtocol",
                        "name": "_naeProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe protocol. A value of \u003ccode\u003e-1\u003c/code\u003e means all protocols.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeRuleAction",
                        "name": "_naeRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naeRuleNumber",
                        "name": "_naeRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number for the entry. ACL entries are processed in ascending order by rule number.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "fieldPad": 0,
                "ctor": "blobAttributeValue",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "bavValue",
                    "name": "_bavValue",
                    "shape": "Blob",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Blob",
                    "type": "Maybe Blob"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "bavValue",
                    "name": "_bavValue",
                    "shape": "Blob",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Blob",
                    "type": "Maybe Blob"
                },
                "required": [],
                "name": "BlobAttributeValue",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bavValue",
                        "name": "_bavValue",
                        "shape": "Blob",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Blob",
                        "type": "Maybe Blob"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bavValue",
                        "name": "_bavValue",
                        "shape": "Blob",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Blob",
                        "type": "Maybe Blob"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 38,
                "ctor": "importInstanceLaunchSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iilsArchitecture",
                    "name": "_iilsArchitecture",
                    "shape": "ArchitectureValues",
                    "locationName": "architecture",
                    "documentation": "\u003cp\u003eThe architecture of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ImportInstanceLaunchSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsArchitecture",
                        "name": "_iilsArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iilsGroupNames",
                        "name": "_iilsGroupNames",
                        "shape": "SecurityGroupStringList",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eOne or more security group names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iilsGroupIds",
                        "name": "_iilsGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsAdditionalInfo",
                        "name": "_iilsAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsUserData",
                        "name": "_iilsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eUser data to be made available to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsInstanceType",
                        "name": "_iilsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsPlacement",
                        "name": "_iilsPlacement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": null,
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsMonitoring",
                        "name": "_iilsMonitoring",
                        "shape": "Boolean",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsSubnetId",
                        "name": "_iilsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the subnet to launch the instance into.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsInstanceInitiatedShutdownBehavior",
                        "name": "_iilsInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsPrivateIpAddress",
                        "name": "_iilsPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] Optionally, you can use this parameter to assign the instance a specific available IP address from the IP address range of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsAdditionalInfo",
                        "name": "_iilsAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsArchitecture",
                        "name": "_iilsArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iilsGroupIds",
                        "name": "_iilsGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iilsGroupNames",
                        "name": "_iilsGroupNames",
                        "shape": "SecurityGroupStringList",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eOne or more security group names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsInstanceInitiatedShutdownBehavior",
                        "name": "_iilsInstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsInstanceType",
                        "name": "_iilsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsMonitoring",
                        "name": "_iilsMonitoring",
                        "shape": "Boolean",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsPlacement",
                        "name": "_iilsPlacement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": null,
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsPrivateIpAddress",
                        "name": "_iilsPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] Optionally, you can use this parameter to assign the instance a specific available IP address from the IP address range of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsSubnetId",
                        "name": "_iilsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the subnet to launch the instance into.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iilsUserData",
                        "name": "_iilsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eUser data to be made available to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "spotInstanceStateFault",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sisfCode",
                    "name": "_sisfCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe reason code for the Spot Instance state change.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotInstanceStateFault",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisfCode",
                        "name": "_sisfCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe reason code for the Spot Instance state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisfMessage",
                        "name": "_sisfMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message for the Spot Instance state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisfCode",
                        "name": "_sisfCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe reason code for the Spot Instance state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisfMessage",
                        "name": "_sisfMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message for the Spot Instance state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "tagDescription",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "tdResourceId",
                    "name": "_tdResourceId",
                    "shape": "String",
                    "locationName": "resourceId",
                    "documentation": "\u003cp\u003eThe ID of the resource. For example, \u003ccode\u003eami-1a2b3c4d\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdResourceId",
                        "name": "_tdResourceId",
                        "shape": "String",
                        "locationName": "resourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource. For example, \u003ccode\u003eami-1a2b3c4d\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdResourceType",
                        "name": "_tdResourceType",
                        "shape": "ResourceType",
                        "locationName": "resourceType",
                        "documentation": "\u003cp\u003eThe type of resource.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdKey",
                        "name": "_tdKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe key of the tag.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdValue",
                        "name": "_tdValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eThe value of the tag.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "TagDescription",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdKey",
                        "name": "_tdKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe key of the tag.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdResourceId",
                        "name": "_tdResourceId",
                        "shape": "String",
                        "locationName": "resourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource. For example, \u003ccode\u003eami-1a2b3c4d\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdResourceType",
                        "name": "_tdResourceType",
                        "shape": "ResourceType",
                        "locationName": "resourceType",
                        "documentation": "\u003cp\u003eThe type of resource.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tdValue",
                        "name": "_tdValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eThe value of the tag.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "groupIdentifier",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "giGroupName",
                    "name": "_giGroupName",
                    "shape": "String",
                    "locationName": "groupName",
                    "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GroupIdentifier",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "giGroupName",
                        "name": "_giGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "giGroupId",
                        "name": "_giGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "giGroupId",
                        "name": "_giGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "giGroupName",
                        "name": "_giGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Static": "Static"
                },
                "valuePad": 7,
                "name": "VpnStaticRouteSource",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 30,
                "ctor": "reservedInstancesListing",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rilReservedInstancesListingId",
                    "name": "_rilReservedInstancesListingId",
                    "shape": "String",
                    "locationName": "reservedInstancesListingId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesListing",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilReservedInstancesListingId",
                        "name": "_rilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilReservedInstancesId",
                        "name": "_rilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilCreateDate",
                        "name": "_rilCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "\u003cp\u003eThe time the listing was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilUpdateDate",
                        "name": "_rilUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "\u003cp\u003eThe last modified timestamp of the listing.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilStatus",
                        "name": "_rilStatus",
                        "shape": "ListingStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilStatusMessage",
                        "name": "_rilStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe reason for the current status of the Reserved Instance listing. The response can be blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilInstanceCounts",
                        "name": "_rilInstanceCounts",
                        "shape": "InstanceCountList",
                        "locationName": "instanceCounts",
                        "documentation": "\u003cp\u003eThe number of instances in this state.\u003c/p\u003e",
                        "typeExposed": "[InstanceCount]",
                        "type": "[InstanceCount]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilPriceSchedules",
                        "name": "_rilPriceSchedules",
                        "shape": "PriceScheduleList",
                        "locationName": "priceSchedules",
                        "documentation": "\u003cp\u003eThe price of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[PriceSchedule]",
                        "type": "[PriceSchedule]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilTags",
                        "name": "_rilTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilClientToken",
                        "name": "_rilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eThe idempotency token you provided when you created the listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilClientToken",
                        "name": "_rilClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eThe idempotency token you provided when you created the listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilCreateDate",
                        "name": "_rilCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "\u003cp\u003eThe time the listing was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilInstanceCounts",
                        "name": "_rilInstanceCounts",
                        "shape": "InstanceCountList",
                        "locationName": "instanceCounts",
                        "documentation": "\u003cp\u003eThe number of instances in this state.\u003c/p\u003e",
                        "typeExposed": "[InstanceCount]",
                        "type": "[InstanceCount]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilPriceSchedules",
                        "name": "_rilPriceSchedules",
                        "shape": "PriceScheduleList",
                        "locationName": "priceSchedules",
                        "documentation": "\u003cp\u003eThe price of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[PriceSchedule]",
                        "type": "[PriceSchedule]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilReservedInstancesId",
                        "name": "_rilReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilReservedInstancesListingId",
                        "name": "_rilReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilStatus",
                        "name": "_rilStatus",
                        "shape": "ListingStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilStatusMessage",
                        "name": "_rilStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe reason for the current status of the Reserved Instance listing. The response can be blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rilTags",
                        "name": "_rilTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilUpdateDate",
                        "name": "_rilUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "\u003cp\u003eThe last modified timestamp of the listing.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Spot": "spot"
                },
                "valuePad": 5,
                "name": "InstanceLifecycleType",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Paravirtual": "paravirtual",
                    "Hvm": "hvm"
                },
                "valuePad": 12,
                "name": "VirtualizationType",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "InUse": "in-use",
                    "Detaching": "detaching",
                    "Attaching": "attaching",
                    "Available": "available"
                },
                "valuePad": 10,
                "name": "NetworkInterfaceStatus",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Windows": "Windows"
                },
                "valuePad": 8,
                "name": "PlatformValues",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "createVolumePermission",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvpUserId",
                    "name": "_cvpUserId",
                    "shape": "String",
                    "locationName": "userId",
                    "documentation": "\u003cp\u003eThe specific AWS account ID that is to be added or removed from a volume's list of create volume permissions.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CreateVolumePermission",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpUserId",
                        "name": "_cvpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe specific AWS account ID that is to be added or removed from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpGroup",
                        "name": "_cvpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "\u003cp\u003eThe specific group that is to be added or removed from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpGroup",
                        "name": "_cvpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "\u003cp\u003eThe specific group that is to be added or removed from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpUserId",
                        "name": "_cvpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe specific AWS account ID that is to be added or removed from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "networkInterfaceAttachmentChanges",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "niacAttachmentId",
                    "name": "_niacAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkInterfaceAttachmentChanges",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niacAttachmentId",
                        "name": "_niacAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niacDeleteOnTermination",
                        "name": "_niacDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niacAttachmentId",
                        "name": "_niacAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niacDeleteOnTermination",
                        "name": "_niacDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Hourly": "Hourly"
                },
                "valuePad": 7,
                "name": "RecurringChargeFrequency",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "dhcpOptions",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "doDhcpOptionsId",
                    "name": "_doDhcpOptionsId",
                    "shape": "String",
                    "locationName": "dhcpOptionsId",
                    "documentation": "\u003cp\u003eThe ID of the set of DHCP options.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DhcpOptions",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDhcpOptionsId",
                        "name": "_doDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the set of DHCP options.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doDhcpConfigurations",
                        "name": "_doDhcpConfigurations",
                        "shape": "DhcpConfigurationList",
                        "locationName": "dhcpConfigurationSet",
                        "documentation": "\u003cp\u003eOne or more DHCP options in the set.\u003c/p\u003e",
                        "typeExposed": "[DhcpConfiguration]",
                        "type": "[DhcpConfiguration]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doTags",
                        "name": "_doTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the DHCP options set.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doDhcpConfigurations",
                        "name": "_doDhcpConfigurations",
                        "shape": "DhcpConfigurationList",
                        "locationName": "dhcpConfigurationSet",
                        "documentation": "\u003cp\u003eOne or more DHCP options in the set.\u003c/p\u003e",
                        "typeExposed": "[DhcpConfiguration]",
                        "type": "[DhcpConfiguration]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "doDhcpOptionsId",
                        "name": "_doDhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the set of DHCP options.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "doTags",
                        "name": "_doTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the DHCP options set.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 35,
                "ctor": "instanceNetworkInterfaceSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "inisNetworkInterfaceId",
                    "name": "_inisNetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceNetworkInterfaceSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisNetworkInterfaceId",
                        "name": "_inisNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDeviceIndex",
                        "name": "_inisDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device on the instance for the network interface attachment. If you are specifying a network interface in a \u003ca\u003eRunInstances\u003c/a\u003e request, you must provide the device index.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisSubnetId",
                        "name": "_inisSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDescription",
                        "name": "_inisDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisPrivateIpAddress",
                        "name": "_inisPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address of the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "inisGroups",
                        "name": "_inisGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eThe IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDeleteOnTermination",
                        "name": "_inisDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIf set to \u003ccode\u003etrue\u003c/code\u003e, the interface is deleted when the instance is terminated. You can specify \u003ccode\u003etrue\u003c/code\u003e only if creating a new network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "inisPrivateIpAddresses",
                        "name": "_inisPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eOne or more private IP addresses to assign to the network interface. Only one private IP address can be designated as primary.\u003c/p\u003e",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "[PrivateIpAddressSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisSecondaryPrivateIpAddressCount",
                        "name": "_inisSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary private IP addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisAssociatePublicIpAddress",
                        "name": "_inisAssociatePublicIpAddress",
                        "shape": "Boolean",
                        "locationName": "associatePublicIpAddress",
                        "documentation": "\u003cp\u003eIndicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If luanching into a default subnet, the default value is \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisAssociatePublicIpAddress",
                        "name": "_inisAssociatePublicIpAddress",
                        "shape": "Boolean",
                        "locationName": "associatePublicIpAddress",
                        "documentation": "\u003cp\u003eIndicates whether to assign a public IP address to an instance you launch in a VPC. The public IP address can only be assigned to a network interface for eth0, and can only be assigned to a new network interface, not an existing one. You cannot specify more than one network interface in the request. If luanching into a default subnet, the default value is \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDeleteOnTermination",
                        "name": "_inisDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIf set to \u003ccode\u003etrue\u003c/code\u003e, the interface is deleted when the instance is terminated. You can specify \u003ccode\u003etrue\u003c/code\u003e only if creating a new network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDescription",
                        "name": "_inisDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisDeviceIndex",
                        "name": "_inisDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device on the instance for the network interface attachment. If you are specifying a network interface in a \u003ca\u003eRunInstances\u003c/a\u003e request, you must provide the device index.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "inisGroups",
                        "name": "_inisGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eThe IDs of the security groups for the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisNetworkInterfaceId",
                        "name": "_inisNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisPrivateIpAddress",
                        "name": "_inisPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address of the network interface. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "inisPrivateIpAddresses",
                        "name": "_inisPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eOne or more private IP addresses to assign to the network interface. Only one private IP address can be designated as primary.\u003c/p\u003e",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "[PrivateIpAddressSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisSecondaryPrivateIpAddressCount",
                        "name": "_inisSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary private IP addresses. You can't specify this option and specify more than one private IP address using the private IP addresses option.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "inisSubnetId",
                        "name": "_inisSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet associated with the network string. Applies only if creating a network interface when launching an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "VSError": "error",
                    "VSInUse": "in-use",
                    "VSCreating": "creating",
                    "VSAvailable": "available",
                    "VSDeleted": "deleted",
                    "VSDeleting": "deleting"
                },
                "valuePad": 10,
                "name": "VolumeState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "attributeValue",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avValue",
                    "name": "_avValue",
                    "shape": "String",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avValue",
                    "name": "_avValue",
                    "shape": "String",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AttributeValue",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avValue",
                        "name": "_avValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avValue",
                        "name": "_avValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "privateIpAddressSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "piasPrivateIpAddress",
                    "name": "_piasPrivateIpAddress",
                    "shape": "String",
                    "locationName": "privateIpAddress",
                    "documentation": "\u003cp\u003eThe private IP addresses.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "piasPrivateIpAddress",
                        "name": "_piasPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP addresses.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "PrivateIpAddressSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piasPrimary",
                        "name": "_piasPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether the private IP address is the primary private IP address. Only one IP address can be designated as primary.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "piasPrimary",
                        "name": "_piasPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether the private IP address is the primary private IP address. Only one IP address can be designated as primary.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "piasPrivateIpAddress",
                        "name": "_piasPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP addresses.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "image",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "iImageId",
                    "name": "_iImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageId",
                        "name": "_iImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageLocation",
                        "name": "_iImageLocation",
                        "shape": "String",
                        "locationName": "imageLocation",
                        "documentation": "\u003cp\u003eThe location of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iState",
                        "name": "_iState",
                        "shape": "ImageState",
                        "locationName": "imageState",
                        "documentation": "\u003cp\u003eThe current state of the AMI. If the state is \u003ccode\u003eavailable\u003c/code\u003e, the image is successfully registered and can be used to launch an instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iOwnerId",
                        "name": "_iOwnerId",
                        "shape": "String",
                        "locationName": "imageOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the image owner.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iPublic",
                        "name": "_iPublic",
                        "shape": "Boolean",
                        "locationName": "isPublic",
                        "documentation": "\u003cp\u003eIndicates whether the image has public launch permissions. The value is \u003ccode\u003etrue\u003c/code\u003e if this image has public launch permissions or \u003ccode\u003efalse\u003c/code\u003e if it has only implicit and explicit launch permissions.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iArchitecture",
                        "name": "_iArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageType",
                        "name": "_iImageType",
                        "shape": "ImageTypeValues",
                        "locationName": "imageType",
                        "documentation": "\u003cp\u003eThe type of image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iName",
                        "name": "_iName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the AMI that was provided during image creation.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iRootDeviceType",
                        "name": "_iRootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "\u003cp\u003eThe type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iVirtualizationType",
                        "name": "_iVirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe type of virtualization of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iHypervisor",
                        "name": "_iHypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "\u003cp\u003eThe hypervisor type of the image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Image",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iProductCodes",
                        "name": "_iProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eAny product codes associated with the AMI.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iKernelId",
                        "name": "_iKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe kernel associated with the image, if any. Only applicable for machine images.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iRamdiskId",
                        "name": "_iRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe RAM disk associated with the image, if any. Only applicable for machine images.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iPlatform",
                        "name": "_iPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe value is \u003ccode\u003eWindows\u003c/code\u003e for Windows AMIs; otherwise blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iSriovNetSupport",
                        "name": "_iSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSpecifies whether enhanced networking is enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iStateReason",
                        "name": "_iStateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "\u003cp\u003eThe reason for the state change.\u003c/p\u003e",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iImageOwnerAlias",
                        "name": "_iImageOwnerAlias",
                        "shape": "String",
                        "locationName": "imageOwnerAlias",
                        "documentation": "\u003cp\u003eThe AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e, \u003ccode\u003eself\u003c/code\u003e) or the AWS account ID of the AMI owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iDescription",
                        "name": "_iDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the AMI that was provided during image creation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iRootDeviceName",
                        "name": "_iRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe device name of the root device (for example, \u003cfilename\u003e/dev/sda1\u003c/filename\u003e or \u003cfilename\u003exvda\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iBlockDeviceMappings",
                        "name": "_iBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eAny block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iTags",
                        "name": "_iTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the image.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iArchitecture",
                        "name": "_iArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iBlockDeviceMappings",
                        "name": "_iBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eAny block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iDescription",
                        "name": "_iDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the AMI that was provided during image creation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iHypervisor",
                        "name": "_iHypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "\u003cp\u003eThe hypervisor type of the image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageId",
                        "name": "_iImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageLocation",
                        "name": "_iImageLocation",
                        "shape": "String",
                        "locationName": "imageLocation",
                        "documentation": "\u003cp\u003eThe location of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iImageOwnerAlias",
                        "name": "_iImageOwnerAlias",
                        "shape": "String",
                        "locationName": "imageOwnerAlias",
                        "documentation": "\u003cp\u003eThe AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e, \u003ccode\u003eself\u003c/code\u003e) or the AWS account ID of the AMI owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iImageType",
                        "name": "_iImageType",
                        "shape": "ImageTypeValues",
                        "locationName": "imageType",
                        "documentation": "\u003cp\u003eThe type of image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iKernelId",
                        "name": "_iKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe kernel associated with the image, if any. Only applicable for machine images.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iName",
                        "name": "_iName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the AMI that was provided during image creation.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iOwnerId",
                        "name": "_iOwnerId",
                        "shape": "String",
                        "locationName": "imageOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the image owner.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iPlatform",
                        "name": "_iPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe value is \u003ccode\u003eWindows\u003c/code\u003e for Windows AMIs; otherwise blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iProductCodes",
                        "name": "_iProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eAny product codes associated with the AMI.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iPublic",
                        "name": "_iPublic",
                        "shape": "Boolean",
                        "locationName": "isPublic",
                        "documentation": "\u003cp\u003eIndicates whether the image has public launch permissions. The value is \u003ccode\u003etrue\u003c/code\u003e if this image has public launch permissions or \u003ccode\u003efalse\u003c/code\u003e if it has only implicit and explicit launch permissions.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iRamdiskId",
                        "name": "_iRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe RAM disk associated with the image, if any. Only applicable for machine images.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iRootDeviceName",
                        "name": "_iRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe device name of the root device (for example, \u003cfilename\u003e/dev/sda1\u003c/filename\u003e or \u003cfilename\u003exvda\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iRootDeviceType",
                        "name": "_iRootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "\u003cp\u003eThe type of root device used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iSriovNetSupport",
                        "name": "_iSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSpecifies whether enhanced networking is enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iState",
                        "name": "_iState",
                        "shape": "ImageState",
                        "locationName": "imageState",
                        "documentation": "\u003cp\u003eThe current state of the AMI. If the state is \u003ccode\u003eavailable\u003c/code\u003e, the image is successfully registered and can be used to launch an instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iStateReason",
                        "name": "_iStateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "\u003cp\u003eThe reason for the state change.\u003c/p\u003e",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iTags",
                        "name": "_iTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the image.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iVirtualizationType",
                        "name": "_iVirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe type of virtualization of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "dhcpConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dcKey",
                    "name": "_dcKey",
                    "shape": "String",
                    "locationName": "key",
                    "documentation": "\u003cp\u003eThe name of a DHCP option.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DhcpConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcKey",
                        "name": "_dcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe name of a DHCP option.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcValues",
                        "name": "_dcValues",
                        "shape": "DhcpConfigurationValueList",
                        "locationName": "valueSet",
                        "documentation": "\u003cp\u003eOne or more values for the DHCP option.\u003c/p\u003e",
                        "typeExposed": "[AttributeValue]",
                        "type": "[AttributeValue]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcKey",
                        "name": "_dcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe name of a DHCP option.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcValues",
                        "name": "_dcValues",
                        "shape": "DhcpConfigurationValueList",
                        "locationName": "valueSet",
                        "documentation": "\u003cp\u003eOne or more values for the DHCP option.\u003c/p\u003e",
                        "typeExposed": "[AttributeValue]",
                        "type": "[AttributeValue]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "tag",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "tKey",
                    "name": "_tKey",
                    "shape": "String",
                    "locationName": "key",
                    "documentation": "\u003cp\u003eThe key of the tag. \u003c/p\u003e \u003cp\u003eConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with \u003ccode\u003eaws:\u003c/code\u003e\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tKey",
                        "name": "_tKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe key of the tag. \u003c/p\u003e \u003cp\u003eConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with \u003ccode\u003eaws:\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tValue",
                        "name": "_tValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eThe value of the tag.\u003c/p\u003e \u003cp\u003eConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Tag",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tKey",
                        "name": "_tKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": "\u003cp\u003eThe key of the tag. \u003c/p\u003e \u003cp\u003eConstraints: Tag keys are case-sensitive and accept a maximum of 127 Unicode characters. May not begin with \u003ccode\u003eaws:\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "tValue",
                        "name": "_tValue",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eThe value of the tag.\u003c/p\u003e \u003cp\u003eConstraints: Tag values are case-sensitive and accept a maximum of 255 Unicode characters.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SupportedPlatforms": "supported-platforms",
                    "DefaultVpc": "default-vpc"
                },
                "valuePad": 20,
                "name": "AccountAttributeName",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 23,
                "ctor": "networkInterfaceAttachment",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "niaAttachmentId",
                    "name": "_niaAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkInterfaceAttachment",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAttachmentId",
                        "name": "_niaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaInstanceId",
                        "name": "_niaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaInstanceOwnerId",
                        "name": "_niaInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaDeviceIndex",
                        "name": "_niaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe device index of the network interface attachment on the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaStatus",
                        "name": "_niaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAttachTime",
                        "name": "_niaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe timestamp indicating when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaDeleteOnTermination",
                        "name": "_niaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAttachTime",
                        "name": "_niaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe timestamp indicating when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAttachmentId",
                        "name": "_niaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaDeleteOnTermination",
                        "name": "_niaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaDeviceIndex",
                        "name": "_niaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe device index of the network interface attachment on the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaInstanceId",
                        "name": "_niaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaInstanceOwnerId",
                        "name": "_niaInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaStatus",
                        "name": "_niaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "fieldPad": 0,
                "ctor": "runInstancesMonitoringEnabled",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rimeEnabled",
                    "name": "_rimeEnabled",
                    "shape": "Boolean",
                    "locationName": "enabled",
                    "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                    "typeExposed": "Bool",
                    "type": "Bool"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rimeEnabled",
                    "name": "_rimeEnabled",
                    "shape": "Boolean",
                    "locationName": "enabled",
                    "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                    "typeExposed": "Bool",
                    "type": "Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rimeEnabled",
                        "name": "_rimeEnabled",
                        "shape": "Boolean",
                        "locationName": "enabled",
                        "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "name": "RunInstancesMonitoringEnabled",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rimeEnabled",
                        "name": "_rimeEnabled",
                        "shape": "Boolean",
                        "locationName": "enabled",
                        "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "volumeStatusInfo",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vsiStatus",
                    "name": "_vsiStatus",
                    "shape": "VolumeStatusInfoStatus",
                    "locationName": "status",
                    "documentation": "\u003cp\u003eThe status of the volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeStatusInfo",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiStatus",
                        "name": "_vsiStatus",
                        "shape": "VolumeStatusInfoStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiDetails",
                        "name": "_vsiDetails",
                        "shape": "VolumeStatusDetailsList",
                        "locationName": "details",
                        "documentation": "\u003cp\u003eThe details of the volume status.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusDetails]",
                        "type": "[VolumeStatusDetails]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiDetails",
                        "name": "_vsiDetails",
                        "shape": "VolumeStatusDetailsList",
                        "locationName": "details",
                        "documentation": "\u003cp\u003eThe details of the volume status.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusDetails]",
                        "type": "[VolumeStatusDetails]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiStatus",
                        "name": "_vsiStatus",
                        "shape": "VolumeStatusInfoStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "networkInterfaceAssociation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "niaPublicIp",
                    "name": "_niaPublicIp",
                    "shape": "String",
                    "locationName": "publicIp",
                    "documentation": "\u003cp\u003eThe address of the Elastic IP address bound to the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkInterfaceAssociation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaPublicIp",
                        "name": "_niaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe address of the Elastic IP address bound to the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaPublicDnsName",
                        "name": "_niaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "\u003cp\u003eThe public DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaIpOwnerId",
                        "name": "_niaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the Elastic IP address owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAllocationId",
                        "name": "_niaAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003eThe allocation ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAssociationId",
                        "name": "_niaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAllocationId",
                        "name": "_niaAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003eThe allocation ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaAssociationId",
                        "name": "_niaAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaIpOwnerId",
                        "name": "_niaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the Elastic IP address owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaPublicDnsName",
                        "name": "_niaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "\u003cp\u003eThe public DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niaPublicIp",
                        "name": "_niaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe address of the Elastic IP address bound to the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "createVolumePermissionModifications",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "cvpmAdd",
                    "name": "_cvpmAdd",
                    "shape": "CreateVolumePermissionList",
                    "locationName": "Add",
                    "documentation": "\u003cp\u003eAdds a specific AWS account ID or group to a volume's list of create volume permissions.\u003c/p\u003e",
                    "typeExposed": "[CreateVolumePermission]",
                    "type": "[CreateVolumePermission]"
                },
                "required": [],
                "name": "CreateVolumePermissionModifications",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cvpmAdd",
                        "name": "_cvpmAdd",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Add",
                        "documentation": "\u003cp\u003eAdds a specific AWS account ID or group to a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cvpmRemove",
                        "name": "_cvpmRemove",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Remove",
                        "documentation": "\u003cp\u003eRemoves a specific AWS account ID or group from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cvpmAdd",
                        "name": "_cvpmAdd",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Add",
                        "documentation": "\u003cp\u003eAdds a specific AWS account ID or group to a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cvpmRemove",
                        "name": "_cvpmRemove",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "Remove",
                        "documentation": "\u003cp\u003eRemoves a specific AWS account ID or group from a volume's list of create volume permissions.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "VPCSTATEPending": "pending",
                    "VPCSTATEAvailable": "available"
                },
                "valuePad": 10,
                "name": "VpcState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "RTSecurityGroup": "security-group",
                    "RTSnapshot": "snapshot",
                    "RTSubnet": "subnet",
                    "RTNetworkInterface": "network-interface",
                    "RTReservedInstances": "reserved-instances",
                    "RTVpnConnection": "vpn-connection",
                    "RTNetworkAcl": "network-acl",
                    "RTVpnGateway": "vpn-gateway",
                    "RTDhcpOptions": "dhcp-options",
                    "RTImage": "image",
                    "RTInstance": "instance",
                    "RTCustomerGateway": "customer-gateway",
                    "RTInternetGateway": "internet-gateway",
                    "RTSpotInstancesRequest": "spot-instances-request",
                    "RTVpc": "vpc",
                    "RTVolume": "volume",
                    "RTRouteTable": "route-table"
                },
                "valuePad": 23,
                "name": "ResourceType",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Ok": "ok",
                    "Impaired": "impaired"
                },
                "valuePad": 9,
                "name": "ReportStatusType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Usd": "USD"
                },
                "valuePad": 4,
                "name": "CurrencyCodeValues",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 8,
                "ctor": "icmpTypeCode",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "itcType",
                    "name": "_itcType",
                    "shape": "Integer",
                    "locationName": "type",
                    "documentation": "\u003cp\u003eThe ICMP code. A value of -1 means all codes for the specified ICMP type.\u003c/p\u003e",
                    "typeExposed": "Maybe Int",
                    "type": "Maybe Int"
                },
                "required": [],
                "name": "IcmpTypeCode",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "itcType",
                        "name": "_itcType",
                        "shape": "Integer",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe ICMP code. A value of -1 means all codes for the specified ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "itcCode",
                        "name": "_itcCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe ICMP type. A value of -1 means all types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "itcCode",
                        "name": "_itcCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe ICMP type. A value of -1 means all types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "itcType",
                        "name": "_itcType",
                        "shape": "Integer",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe ICMP code. A value of -1 means all codes for the specified ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "instanceCount",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "icState",
                    "name": "_icState",
                    "shape": "ListingState",
                    "locationName": "state",
                    "documentation": "\u003cp\u003eThe states of the listed Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceCount",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "icState",
                        "name": "_icState",
                        "shape": "ListingState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe states of the listed Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "icInstanceCount",
                        "name": "_icInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003ehe number of listed Reserved Instances in the state specified by the \u003ccode\u003estate\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "icInstanceCount",
                        "name": "_icInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003ehe number of listed Reserved Instances in the state specified by the \u003ccode\u003estate\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "icState",
                        "name": "_icState",
                        "shape": "ListingState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe states of the listed Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "exportToS3Task",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "etstDiskImageFormat",
                    "name": "_etstDiskImageFormat",
                    "shape": "DiskImageFormat",
                    "locationName": "diskImageFormat",
                    "documentation": "\u003cp\u003eThe format for the exported image.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ExportToS3Task",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstDiskImageFormat",
                        "name": "_etstDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": "\u003cp\u003eThe format for the exported image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstContainerFormat",
                        "name": "_etstContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": "\u003cp\u003eThe container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstS3Bucket",
                        "name": "_etstS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACL permissions to the AWS account \u003ccode\u003evm-import-export@amazon.com\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstS3Key",
                        "name": "_etstS3Key",
                        "shape": "String",
                        "locationName": "s3Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstContainerFormat",
                        "name": "_etstContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": "\u003cp\u003eThe container format used to combine disk images with metadata (such as OVF). If absent, only the disk image is exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstDiskImageFormat",
                        "name": "_etstDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": "\u003cp\u003eThe format for the exported image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstS3Bucket",
                        "name": "_etstS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket for the destination image. The destination bucket must exist and grant WRITE and READ_ACL permissions to the AWS account \u003ccode\u003evm-import-export@amazon.com\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstS3Key",
                        "name": "_etstS3Key",
                        "shape": "String",
                        "locationName": "s3Key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "blockDeviceMapping",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "bdmVirtualName",
                    "name": "_bdmVirtualName",
                    "shape": "String",
                    "locationName": "virtualName",
                    "documentation": "\u003cp\u003eThe virtual device name (ephemeral[0..3]). The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\u003c/p\u003e \u003cp\u003eConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "bdmDeviceName",
                        "name": "_bdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "BlockDeviceMapping",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmVirtualName",
                        "name": "_bdmVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "\u003cp\u003eThe virtual device name (ephemeral[0..3]). The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\u003c/p\u003e \u003cp\u003eConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmEbs",
                        "name": "_bdmEbs",
                        "shape": "EbsBlockDevice",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsBlockDevice",
                        "type": "Maybe EbsBlockDevice"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmNoDevice",
                        "name": "_bdmNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "\u003cp\u003eSuppresses the specified device included in the block device mapping of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "bdmDeviceName",
                        "name": "_bdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmEbs",
                        "name": "_bdmEbs",
                        "shape": "EbsBlockDevice",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsBlockDevice",
                        "type": "Maybe EbsBlockDevice"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmNoDevice",
                        "name": "_bdmNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "\u003cp\u003eSuppresses the specified device included in the block device mapping of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bdmVirtualName",
                        "name": "_bdmVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "\u003cp\u003eThe virtual device name (ephemeral[0..3]). The number of available instance store volumes depends on the instance type. After you connect to the instance, you must mount the volume.\u003c/p\u003e \u003cp\u003eConstraints: For M3 instances, you must specify instance store volumes in the block device mapping for the instance. When you launch an M3 instance, we ignore any instance store volumes specified in the block device mapping for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "conversionTask",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ctConversionTaskId",
                    "name": "_ctConversionTaskId",
                    "shape": "String",
                    "locationName": "conversionTaskId",
                    "documentation": "\u003cp\u003eThe ID of the conversion task.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctConversionTaskId",
                        "name": "_ctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eThe ID of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctState",
                        "name": "_ctState",
                        "shape": "ConversionTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "ConversionTask",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctExpirationTime",
                        "name": "_ctExpirationTime",
                        "shape": "String",
                        "locationName": "expirationTime",
                        "documentation": "\u003cp\u003eThe time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctImportInstance",
                        "name": "_ctImportInstance",
                        "shape": "ImportInstanceTaskDetails",
                        "locationName": "importInstance",
                        "documentation": "\u003cp\u003eIf the task is for importing an instance, this contains information about the import instance task.\u003c/p\u003e",
                        "typeExposed": "Maybe ImportInstanceTaskDetails",
                        "type": "Maybe ImportInstanceTaskDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctImportVolume",
                        "name": "_ctImportVolume",
                        "shape": "ImportVolumeTaskDetails",
                        "locationName": "importVolume",
                        "documentation": "\u003cp\u003eIf the task is for importing a volume, this contains information about the import volume task.\u003c/p\u003e",
                        "typeExposed": "Maybe ImportVolumeTaskDetails",
                        "type": "Maybe ImportVolumeTaskDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctStatusMessage",
                        "name": "_ctStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status message related to the conversion task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctConversionTaskId",
                        "name": "_ctConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eThe ID of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctExpirationTime",
                        "name": "_ctExpirationTime",
                        "shape": "String",
                        "locationName": "expirationTime",
                        "documentation": "\u003cp\u003eThe time when the task expires. If the upload isn't complete before the expiration time, we automatically cancel the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctImportInstance",
                        "name": "_ctImportInstance",
                        "shape": "ImportInstanceTaskDetails",
                        "locationName": "importInstance",
                        "documentation": "\u003cp\u003eIf the task is for importing an instance, this contains information about the import instance task.\u003c/p\u003e",
                        "typeExposed": "Maybe ImportInstanceTaskDetails",
                        "type": "Maybe ImportInstanceTaskDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctImportVolume",
                        "name": "_ctImportVolume",
                        "shape": "ImportVolumeTaskDetails",
                        "locationName": "importVolume",
                        "documentation": "\u003cp\u003eIf the task is for importing a volume, this contains information about the import volume task.\u003c/p\u003e",
                        "typeExposed": "Maybe ImportVolumeTaskDetails",
                        "type": "Maybe ImportVolumeTaskDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ctState",
                        "name": "_ctState",
                        "shape": "ConversionTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctStatusMessage",
                        "name": "_ctStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status message related to the conversion task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctTags",
                        "name": "_ctTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": null,
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ASDetached": "detached",
                    "ASDetaching": "detaching",
                    "ASAttached": "attached",
                    "ASAttaching": "attaching"
                },
                "valuePad": 10,
                "name": "AttachmentStatus",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "CreateRouteTable": "CreateRouteTable",
                    "CreateRoute": "CreateRoute",
                    "EnableVgwRoutePropagation": "EnableVgwRoutePropagation"
                },
                "valuePad": 26,
                "name": "RouteOrigin",
                "type": "nullary",
                "branchPad": 25
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "LSPending": "pending",
                    "LSAvailable": "available",
                    "LSCancelled": "cancelled",
                    "LSSold": "sold"
                },
                "valuePad": 10,
                "name": "ListingState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "spotPrice",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "spInstanceType",
                    "name": "_spInstanceType",
                    "shape": "InstanceType",
                    "locationName": "instanceType",
                    "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotPrice",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spInstanceType",
                        "name": "_spInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spProductDescription",
                        "name": "_spProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eA general description of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spSpotPrice",
                        "name": "_spSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum price you will pay to launch one or more Spot Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "spTimestamp",
                        "name": "_spTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe date and time the request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spAvailabilityZone",
                        "name": "_spAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spAvailabilityZone",
                        "name": "_spAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spInstanceType",
                        "name": "_spInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spProductDescription",
                        "name": "_spProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eA general description of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "spSpotPrice",
                        "name": "_spSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum price you will pay to launch one or more Spot Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "spTimestamp",
                        "name": "_spTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe date and time the request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "instanceMonitoring",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "imInstanceId",
                    "name": "_imInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceMonitoring",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "imInstanceId",
                        "name": "_imInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "imMonitoring",
                        "name": "_imMonitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "\u003cp\u003eThe monitoring information.\u003c/p\u003e",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "imInstanceId",
                        "name": "_imInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "imMonitoring",
                        "name": "_imMonitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "\u003cp\u003eThe monitoring information.\u003c/p\u003e",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "priceScheduleSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pssTerm",
                    "name": "_pssTerm",
                    "shape": "Long",
                    "locationName": "term",
                    "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                    "typeExposed": "Maybe Integer",
                    "type": "Maybe Integer"
                },
                "required": [],
                "name": "PriceScheduleSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssTerm",
                        "name": "_pssTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssPrice",
                        "name": "_pssPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe fixed price for the term.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssCurrencyCode",
                        "name": "_pssCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency for transacting the Reserved Instance resale. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssCurrencyCode",
                        "name": "_pssCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency for transacting the Reserved Instance resale. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssPrice",
                        "name": "_pssPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe fixed price for the term.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pssTerm",
                        "name": "_pssTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "spotInstanceStatus",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sisCode",
                    "name": "_sisCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe status code of the request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotInstanceStatus",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisCode",
                        "name": "_sisCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe status code of the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisUpdateTime",
                        "name": "_sisUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "\u003cp\u003eThe time of the most recent status update.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisMessage",
                        "name": "_sisMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe description for the status code for the Spot request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisCode",
                        "name": "_sisCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe status code of the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisMessage",
                        "name": "_sisMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe description for the status code for the Spot request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sisUpdateTime",
                        "name": "_sisUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "\u003cp\u003eThe time of the most recent status update.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "AZSAvailable": "available"
                },
                "valuePad": 10,
                "name": "AvailabilityZoneState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 28,
                "ctor": "spotInstanceRequest",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sirSpotInstanceRequestId",
                    "name": "_sirSpotInstanceRequestId",
                    "shape": "String",
                    "locationName": "spotInstanceRequestId",
                    "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotInstanceRequest",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirSpotInstanceRequestId",
                        "name": "_sirSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirSpotPrice",
                        "name": "_sirSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirType",
                        "name": "_sirType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe Spot Instance request type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirState",
                        "name": "_sirState",
                        "shape": "SpotInstanceState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance request. Spot bid status information can help you track your Spot Instance requests. For information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html\"\u003eTracking Spot Requests with Bid Status Codes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirFault",
                        "name": "_sirFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "\u003cp\u003eThe fault codes for the Spot Instance request, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirStatus",
                        "name": "_sirStatus",
                        "shape": "SpotInstanceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status code and status message describing the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStatus",
                        "type": "Maybe SpotInstanceStatus"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirValidFrom",
                        "name": "_sirValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "\u003cp\u003eThe start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirValidUntil",
                        "name": "_sirValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "\u003cp\u003eThe end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchGroup",
                        "name": "_sirLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "\u003cp\u003eThe instance launch group. Launch groups are Spot Instances that launch together and terminate together.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirAvailabilityZoneGroup",
                        "name": "_sirAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "\u003cp\u003eThe Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchSpecification",
                        "name": "_sirLaunchSpecification",
                        "shape": "LaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "\u003cp\u003eAdditional information for launching instances.\u003c/p\u003e",
                        "typeExposed": "Maybe LaunchSpecification",
                        "type": "Maybe LaunchSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirInstanceId",
                        "name": "_sirInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe instance ID, if an instance has been launched to fulfill the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirCreateTime",
                        "name": "_sirCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "\u003cp\u003eThe time stamp when the Spot Instance request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirProductDescription",
                        "name": "_sirProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe product description associated with the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirTags",
                        "name": "_sirTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchedAvailabilityZone",
                        "name": "_sirLaunchedAvailabilityZone",
                        "shape": "String",
                        "locationName": "launchedAvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the bid is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirAvailabilityZoneGroup",
                        "name": "_sirAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "\u003cp\u003eThe Availability Zone group. If you specify the same Availability Zone group for all Spot Instance requests, all Spot Instances are launched in the same Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirCreateTime",
                        "name": "_sirCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "\u003cp\u003eThe time stamp when the Spot Instance request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirFault",
                        "name": "_sirFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "\u003cp\u003eThe fault codes for the Spot Instance request, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirInstanceId",
                        "name": "_sirInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe instance ID, if an instance has been launched to fulfill the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchGroup",
                        "name": "_sirLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "\u003cp\u003eThe instance launch group. Launch groups are Spot Instances that launch together and terminate together.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchSpecification",
                        "name": "_sirLaunchSpecification",
                        "shape": "LaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "\u003cp\u003eAdditional information for launching instances.\u003c/p\u003e",
                        "typeExposed": "Maybe LaunchSpecification",
                        "type": "Maybe LaunchSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirLaunchedAvailabilityZone",
                        "name": "_sirLaunchedAvailabilityZone",
                        "shape": "String",
                        "locationName": "launchedAvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the bid is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirProductDescription",
                        "name": "_sirProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe product description associated with the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirSpotInstanceRequestId",
                        "name": "_sirSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirSpotPrice",
                        "name": "_sirSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirState",
                        "name": "_sirState",
                        "shape": "SpotInstanceState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance request. Spot bid status information can help you track your Spot Instance requests. For information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html\"\u003eTracking Spot Requests with Bid Status Codes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirStatus",
                        "name": "_sirStatus",
                        "shape": "SpotInstanceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status code and status message describing the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStatus",
                        "type": "Maybe SpotInstanceStatus"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirTags",
                        "name": "_sirTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirType",
                        "name": "_sirType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe Spot Instance request type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirValidFrom",
                        "name": "_sirValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "\u003cp\u003eThe start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirValidUntil",
                        "name": "_sirValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "\u003cp\u003eThe end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date is reached.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "launchSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lsImageId",
                    "name": "_lsImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "LaunchSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsImageId",
                        "name": "_lsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsKeyName",
                        "name": "_lsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsSecurityGroups",
                        "name": "_lsSecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups. If requesting a Spot Instance in a nondefault VPC, you must specify the security group ID. If requesting a Spot Instance in EC2-Classic or a default VPC, you can specify either the security group name or ID.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsUserData",
                        "name": "_lsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data to make available to the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsAddressingType",
                        "name": "_lsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "\u003cp\u003eDeprecated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsInstanceType",
                        "name": "_lsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsPlacement",
                        "name": "_lsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe placement information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsKernelId",
                        "name": "_lsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsRamdiskId",
                        "name": "_lsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsBlockDeviceMappings",
                        "name": "_lsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsSubnetId",
                        "name": "_lsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which to launch the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsNetworkInterfaces",
                        "name": "_lsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsIamInstanceProfile",
                        "name": "_lsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsEbsOptimized",
                        "name": "_lsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsMonitoring",
                        "name": "_lsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsAddressingType",
                        "name": "_lsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "\u003cp\u003eDeprecated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsBlockDeviceMappings",
                        "name": "_lsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsEbsOptimized",
                        "name": "_lsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsIamInstanceProfile",
                        "name": "_lsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsImageId",
                        "name": "_lsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsInstanceType",
                        "name": "_lsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsKernelId",
                        "name": "_lsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsKeyName",
                        "name": "_lsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsMonitoring",
                        "name": "_lsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsNetworkInterfaces",
                        "name": "_lsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsPlacement",
                        "name": "_lsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe placement information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsRamdiskId",
                        "name": "_lsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsSecurityGroups",
                        "name": "_lsSecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups. If requesting a Spot Instance in a nondefault VPC, you must specify the security group ID. If requesting a Spot Instance in EC2-Classic or a default VPC, you can specify either the security group name or ID.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsSubnetId",
                        "name": "_lsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which to launch the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsUserData",
                        "name": "_lsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data to make available to the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "volumeStatusEvent",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vseEventType",
                    "name": "_vseEventType",
                    "shape": "String",
                    "locationName": "eventType",
                    "documentation": "\u003cp\u003eThe type of this event.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeStatusEvent",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseEventType",
                        "name": "_vseEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "\u003cp\u003eThe type of this event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseDescription",
                        "name": "_vseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseNotBefore",
                        "name": "_vseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "\u003cp\u003eThe earliest start time of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseNotAfter",
                        "name": "_vseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "\u003cp\u003eThe latest end time of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseEventId",
                        "name": "_vseEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "\u003cp\u003eThe ID of this event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseDescription",
                        "name": "_vseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseEventId",
                        "name": "_vseEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "\u003cp\u003eThe ID of this event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseEventType",
                        "name": "_vseEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "\u003cp\u003eThe type of this event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseNotAfter",
                        "name": "_vseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "\u003cp\u003eThe latest end time of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vseNotBefore",
                        "name": "_vseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "\u003cp\u003eThe earliest start time of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "importInstanceVolumeDetailItem",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "iivdiBytesConverted",
                    "name": "_iivdiBytesConverted",
                    "shape": "Long",
                    "locationName": "bytesConverted",
                    "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiBytesConverted",
                        "name": "_iivdiBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiAvailabilityZone",
                        "name": "_iivdiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the resulting instance will reside.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiImage",
                        "name": "_iivdiImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "\u003cp\u003eThe image.\u003c/p\u003e",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiVolume",
                        "name": "_iivdiVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "\u003cp\u003eThe volume.\u003c/p\u003e",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiStatus",
                        "name": "_iivdiStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the import of this particular disk image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "ImportInstanceVolumeDetailItem",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iivdiStatusMessage",
                        "name": "_iivdiStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status information or errors related to the disk image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iivdiDescription",
                        "name": "_iivdiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiAvailabilityZone",
                        "name": "_iivdiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the resulting instance will reside.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiBytesConverted",
                        "name": "_iivdiBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iivdiDescription",
                        "name": "_iivdiDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiImage",
                        "name": "_iivdiImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "\u003cp\u003eThe image.\u003c/p\u003e",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiStatus",
                        "name": "_iivdiStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the import of this particular disk image.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iivdiStatusMessage",
                        "name": "_iivdiStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status information or errors related to the disk image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iivdiVolume",
                        "name": "_iivdiVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "\u003cp\u003eThe volume.\u003c/p\u003e",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SSNotApplicable": "not-applicable",
                    "SSOk": "ok",
                    "SSImpaired": "impaired",
                    "SSInsufficientData": "insufficient-data"
                },
                "valuePad": 18,
                "name": "SummaryStatus",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 35,
                "ctor": "reservedInstancesModification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rimReservedInstancesModificationId",
                    "name": "_rimReservedInstancesModificationId",
                    "shape": "String",
                    "locationName": "reservedInstancesModificationId",
                    "documentation": "\u003cp\u003eA unique ID for the Reserved Instance modification.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesModification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimReservedInstancesModificationId",
                        "name": "_rimReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "\u003cp\u003eA unique ID for the Reserved Instance modification.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rimReservedInstancesIds",
                        "name": "_rimReservedInstancesIds",
                        "shape": "ReservedIntancesIds",
                        "locationName": "reservedInstancesSet",
                        "documentation": "\u003cp\u003eThe IDs of one or more Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesId]",
                        "type": "[ReservedInstancesId]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rimModificationResults",
                        "name": "_rimModificationResults",
                        "shape": "ReservedInstancesModificationResultList",
                        "locationName": "modificationResultSet",
                        "documentation": "\u003cp\u003eContains target configurations along with their corresponding new Reserved Instance IDs.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesModificationResult]",
                        "type": "[ReservedInstancesModificationResult]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimCreateDate",
                        "name": "_rimCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "\u003cp\u003eThe time when the modification request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimUpdateDate",
                        "name": "_rimUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "\u003cp\u003eThe time when the modification request was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimEffectiveDate",
                        "name": "_rimEffectiveDate",
                        "shape": "DateTime",
                        "locationName": "effectiveDate",
                        "documentation": "\u003cp\u003eThe time for the modification to become effective.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimStatus",
                        "name": "_rimStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the Reserved Instances modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimStatusMessage",
                        "name": "_rimStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe reason for the status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimClientToken",
                        "name": "_rimClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eA unique, case-sensitive key supplied by the client to ensure that the modification request is idempotent.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimClientToken",
                        "name": "_rimClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eA unique, case-sensitive key supplied by the client to ensure that the modification request is idempotent.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimCreateDate",
                        "name": "_rimCreateDate",
                        "shape": "DateTime",
                        "locationName": "createDate",
                        "documentation": "\u003cp\u003eThe time when the modification request was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimEffectiveDate",
                        "name": "_rimEffectiveDate",
                        "shape": "DateTime",
                        "locationName": "effectiveDate",
                        "documentation": "\u003cp\u003eThe time for the modification to become effective.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rimModificationResults",
                        "name": "_rimModificationResults",
                        "shape": "ReservedInstancesModificationResultList",
                        "locationName": "modificationResultSet",
                        "documentation": "\u003cp\u003eContains target configurations along with their corresponding new Reserved Instance IDs.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesModificationResult]",
                        "type": "[ReservedInstancesModificationResult]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rimReservedInstancesIds",
                        "name": "_rimReservedInstancesIds",
                        "shape": "ReservedIntancesIds",
                        "locationName": "reservedInstancesSet",
                        "documentation": "\u003cp\u003eThe IDs of one or more Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesId]",
                        "type": "[ReservedInstancesId]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimReservedInstancesModificationId",
                        "name": "_rimReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "\u003cp\u003eA unique ID for the Reserved Instance modification.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimStatus",
                        "name": "_rimStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the Reserved Instances modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimStatusMessage",
                        "name": "_rimStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe reason for the status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimUpdateDate",
                        "name": "_rimUpdateDate",
                        "shape": "DateTime",
                        "locationName": "updateDate",
                        "documentation": "\u003cp\u003eThe time when the modification request was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Allow": "allow",
                    "Deny": "deny"
                },
                "valuePad": 6,
                "name": "RuleAction",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "networkInterface",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "niNetworkInterfaceId",
                    "name": "_niNetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkInterface",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niNetworkInterfaceId",
                        "name": "_niNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niSubnetId",
                        "name": "_niSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niVpcId",
                        "name": "_niVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAvailabilityZone",
                        "name": "_niAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niDescription",
                        "name": "_niDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niOwnerId",
                        "name": "_niOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niRequesterId",
                        "name": "_niRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "\u003cp\u003eThe ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niRequesterManaged",
                        "name": "_niRequesterManaged",
                        "shape": "Boolean",
                        "locationName": "requesterManaged",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is being managed by AWS.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niStatus",
                        "name": "_niStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niMacAddress",
                        "name": "_niMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "\u003cp\u003eThe MAC address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niPrivateIpAddress",
                        "name": "_niPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe IP address of the network interface within the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niPrivateDnsName",
                        "name": "_niPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niSourceDestCheck",
                        "name": "_niSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether traffic to or from the instance is validated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niGroups",
                        "name": "_niGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eAny security groups for the network interface.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAttachment",
                        "name": "_niAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAssociation",
                        "name": "_niAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niTagSet",
                        "name": "_niTagSet",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the network interface.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niPrivateIpAddresses",
                        "name": "_niPrivateIpAddresses",
                        "shape": "NetworkInterfacePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eThe private IP addresses associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[NetworkInterfacePrivateIpAddress]",
                        "type": "[NetworkInterfacePrivateIpAddress]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAssociation",
                        "name": "_niAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAttachment",
                        "name": "_niAttachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niAvailabilityZone",
                        "name": "_niAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niDescription",
                        "name": "_niDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niGroups",
                        "name": "_niGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eAny security groups for the network interface.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niMacAddress",
                        "name": "_niMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "\u003cp\u003eThe MAC address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niNetworkInterfaceId",
                        "name": "_niNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niOwnerId",
                        "name": "_niOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niPrivateDnsName",
                        "name": "_niPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niPrivateIpAddress",
                        "name": "_niPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe IP address of the network interface within the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niPrivateIpAddresses",
                        "name": "_niPrivateIpAddresses",
                        "shape": "NetworkInterfacePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eThe private IP addresses associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[NetworkInterfacePrivateIpAddress]",
                        "type": "[NetworkInterfacePrivateIpAddress]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niRequesterId",
                        "name": "_niRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "\u003cp\u003eThe ID of the entity that launched the instance on your behalf (for example, AWS Management Console or Auto Scaling).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niRequesterManaged",
                        "name": "_niRequesterManaged",
                        "shape": "Boolean",
                        "locationName": "requesterManaged",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is being managed by AWS.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niSourceDestCheck",
                        "name": "_niSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether traffic to or from the instance is validated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niStatus",
                        "name": "_niStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niSubnetId",
                        "name": "_niSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "niTagSet",
                        "name": "_niTagSet",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the network interface.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "niVpcId",
                        "name": "_niVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Down": "DOWN",
                    "Up": "UP"
                },
                "valuePad": 5,
                "name": "TelemetryStatus",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 26,
                "ctor": "subnet",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "s1SubnetId",
                    "name": "_s1SubnetId",
                    "shape": "String",
                    "locationName": "subnetId",
                    "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Subnet",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1SubnetId",
                        "name": "_s1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1State",
                        "name": "_s1State",
                        "shape": "SubnetState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1VpcId",
                        "name": "_s1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC the subnet is in.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1CidrBlock",
                        "name": "_s1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block assigned to the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1AvailableIpAddressCount",
                        "name": "_s1AvailableIpAddressCount",
                        "shape": "Integer",
                        "locationName": "availableIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of unused IP addresses in the subnet. Note that the IP addresses for any stopped instances are considered unavailable.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1AvailabilityZone",
                        "name": "_s1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1DefaultForAz",
                        "name": "_s1DefaultForAz",
                        "shape": "Boolean",
                        "locationName": "defaultForAz",
                        "documentation": "\u003cp\u003eIndicates whether this is the default subnet for the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1MapPublicIpOnLaunch",
                        "name": "_s1MapPublicIpOnLaunch",
                        "shape": "Boolean",
                        "locationName": "mapPublicIpOnLaunch",
                        "documentation": "\u003cp\u003eIndicates whether instances launched in this subnet receive a public IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "s1Tags",
                        "name": "_s1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the subnet.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1AvailabilityZone",
                        "name": "_s1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1AvailableIpAddressCount",
                        "name": "_s1AvailableIpAddressCount",
                        "shape": "Integer",
                        "locationName": "availableIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of unused IP addresses in the subnet. Note that the IP addresses for any stopped instances are considered unavailable.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1CidrBlock",
                        "name": "_s1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block assigned to the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1DefaultForAz",
                        "name": "_s1DefaultForAz",
                        "shape": "Boolean",
                        "locationName": "defaultForAz",
                        "documentation": "\u003cp\u003eIndicates whether this is the default subnet for the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1MapPublicIpOnLaunch",
                        "name": "_s1MapPublicIpOnLaunch",
                        "shape": "Boolean",
                        "locationName": "mapPublicIpOnLaunch",
                        "documentation": "\u003cp\u003eIndicates whether instances launched in this subnet receive a public IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1State",
                        "name": "_s1State",
                        "shape": "SubnetState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1SubnetId",
                        "name": "_s1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "s1Tags",
                        "name": "_s1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the subnet.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "s1VpcId",
                        "name": "_s1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC the subnet is in.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "keyPairInfo",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "kpiKeyName",
                    "name": "_kpiKeyName",
                    "shape": "String",
                    "locationName": "keyName",
                    "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "KeyPairInfo",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpiKeyName",
                        "name": "_kpiKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpiKeyFingerprint",
                        "name": "_kpiKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eIf you used \u003ca\u003eCreateKeyPair\u003c/a\u003e to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used \u003ca\u003eImportKeyPair\u003c/a\u003e to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpiKeyFingerprint",
                        "name": "_kpiKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eIf you used \u003ca\u003eCreateKeyPair\u003c/a\u003e to create the key pair, this is the SHA-1 digest of the DER encoded private key. If you used \u003ca\u003eImportKeyPair\u003c/a\u003e to provide AWS the public key, this is the MD5 public key fingerprint as specified in section 4 of RFC4716.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpiKeyName",
                        "name": "_kpiKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "launchPermissionModifications",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lpmAdd",
                    "name": "_lpmAdd",
                    "shape": "LaunchPermissionList",
                    "locationName": "Add",
                    "documentation": "\u003cp\u003eThe AWS account ID to add to the list of launch permissions for the AMI.\u003c/p\u003e",
                    "typeExposed": "[LaunchPermission]",
                    "type": "[LaunchPermission]"
                },
                "required": [],
                "name": "LaunchPermissionModifications",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpmAdd",
                        "name": "_lpmAdd",
                        "shape": "LaunchPermissionList",
                        "locationName": "Add",
                        "documentation": "\u003cp\u003eThe AWS account ID to add to the list of launch permissions for the AMI.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpmRemove",
                        "name": "_lpmRemove",
                        "shape": "LaunchPermissionList",
                        "locationName": "Remove",
                        "documentation": "\u003cp\u003eThe AWS account ID to remove from the list of launch permissions for the AMI.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpmAdd",
                        "name": "_lpmAdd",
                        "shape": "LaunchPermissionList",
                        "locationName": "Add",
                        "documentation": "\u003cp\u003eThe AWS account ID to add to the list of launch permissions for the AMI.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpmRemove",
                        "name": "_lpmRemove",
                        "shape": "LaunchPermissionList",
                        "locationName": "Remove",
                        "documentation": "\u003cp\u003eThe AWS account ID to remove from the list of launch permissions for the AMI.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Pending": "pending",
                    "Error": "error",
                    "Completed": "completed"
                },
                "valuePad": 10,
                "name": "SnapshotState",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "instanceNetworkInterfaceAssociation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iniaPublicIp",
                    "name": "_iniaPublicIp",
                    "shape": "String",
                    "locationName": "publicIp",
                    "documentation": "\u003cp\u003eThe public IP address or Elastic IP address bound to the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceNetworkInterfaceAssociation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaPublicIp",
                        "name": "_iniaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe public IP address or Elastic IP address bound to the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaPublicDnsName",
                        "name": "_iniaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "\u003cp\u003eThe public DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaIpOwnerId",
                        "name": "_iniaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the owner of the Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaIpOwnerId",
                        "name": "_iniaIpOwnerId",
                        "shape": "String",
                        "locationName": "ipOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the owner of the Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaPublicDnsName",
                        "name": "_iniaPublicDnsName",
                        "shape": "String",
                        "locationName": "publicDnsName",
                        "documentation": "\u003cp\u003eThe public DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaPublicIp",
                        "name": "_iniaPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe public IP address or Elastic IP address bound to the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "diskImageDetail",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "didFormat",
                    "name": "_didFormat",
                    "shape": "DiskImageFormat",
                    "locationName": "format",
                    "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didFormat",
                        "name": "_didFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didBytes",
                        "name": "_didBytes",
                        "shape": "Long",
                        "locationName": "bytes",
                        "documentation": null,
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didImportManifestUrl",
                        "name": "_didImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "\u003cp\u003eA presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\u003eAuthenticating REST Requests\u003c/a\u003e topic in the \u003ci\u003eAmazon Simple Storage Service Developer Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "DiskImageDetail",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didBytes",
                        "name": "_didBytes",
                        "shape": "Long",
                        "locationName": "bytes",
                        "documentation": null,
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didFormat",
                        "name": "_didFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "didImportManifestUrl",
                        "name": "_didImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "\u003cp\u003eA presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\u003eAuthenticating REST Requests\u003c/a\u003e topic in the \u003ci\u003eAmazon Simple Storage Service Developer Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "instancePrivateIpAddress",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ipiaPrivateIpAddress",
                    "name": "_ipiaPrivateIpAddress",
                    "shape": "String",
                    "locationName": "privateIpAddress",
                    "documentation": "\u003cp\u003eThe private IP address of the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstancePrivateIpAddress",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrivateIpAddress",
                        "name": "_ipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrivateDnsName",
                        "name": "_ipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrimary",
                        "name": "_ipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether this IP address is the primary private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaAssociation",
                        "name": "_ipiaAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP address for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaAssociation",
                        "name": "_ipiaAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP address for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrimary",
                        "name": "_ipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether this IP address is the primary private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrivateDnsName",
                        "name": "_ipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ipiaPrivateIpAddress",
                        "name": "_ipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 26,
                "ctor": "cancelledSpotInstanceRequest",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csirSpotInstanceRequestId",
                    "name": "_csirSpotInstanceRequestId",
                    "shape": "String",
                    "locationName": "spotInstanceRequestId",
                    "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CancelledSpotInstanceRequest",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirSpotInstanceRequestId",
                        "name": "_csirSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirState",
                        "name": "_csirState",
                        "shape": "CancelSpotInstanceRequestState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirSpotInstanceRequestId",
                        "name": "_csirSpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirState",
                        "name": "_csirState",
                        "shape": "CancelSpotInstanceRequestState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "fieldPad": 0,
                "ctor": "vpnConnectionOptionsSpecification",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcosStaticRoutesOnly",
                    "name": "_vcosStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcosStaticRoutesOnly",
                    "name": "_vcosStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "VpnConnectionOptionsSpecification",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcosStaticRoutesOnly",
                        "name": "_vcosStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcosStaticRoutesOnly",
                        "name": "_vcosStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "address",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aInstanceId",
                    "name": "_aInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance the address is associated with (if any).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Address",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aInstanceId",
                        "name": "_aInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance the address is associated with (if any).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPublicIp",
                        "name": "_aPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAllocationId",
                        "name": "_aAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003eThe ID representing the allocation of the address for use with EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAssociationId",
                        "name": "_aAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe ID representing the association of the address with an instance in a VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aDomain",
                        "name": "_aDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "\u003cp\u003eIndicates whether this Elastic IP address is for use with instances in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or instances in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aNetworkInterfaceId",
                        "name": "_aNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aNetworkInterfaceOwnerId",
                        "name": "_aNetworkInterfaceOwnerId",
                        "shape": "String",
                        "locationName": "networkInterfaceOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that owns the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPrivateIpAddress",
                        "name": "_aPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address associated with the Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAllocationId",
                        "name": "_aAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003eThe ID representing the allocation of the address for use with EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAssociationId",
                        "name": "_aAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe ID representing the association of the address with an instance in a VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aDomain",
                        "name": "_aDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "\u003cp\u003eIndicates whether this Elastic IP address is for use with instances in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or instances in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aInstanceId",
                        "name": "_aInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance the address is associated with (if any).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aNetworkInterfaceId",
                        "name": "_aNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aNetworkInterfaceOwnerId",
                        "name": "_aNetworkInterfaceOwnerId",
                        "shape": "String",
                        "locationName": "networkInterfaceOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that owns the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPrivateIpAddress",
                        "name": "_aPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address associated with the Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPublicIp",
                        "name": "_aPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "VASAttached": "attached",
                    "VASAttaching": "attaching",
                    "VASDetached": "detached",
                    "VASDetaching": "detaching"
                },
                "valuePad": 10,
                "name": "VolumeAttachmentState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "launchPermission",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "lpUserId",
                    "name": "_lpUserId",
                    "shape": "String",
                    "locationName": "userId",
                    "documentation": "\u003cp\u003eThe AWS account ID.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "LaunchPermission",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpUserId",
                        "name": "_lpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe AWS account ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpGroup",
                        "name": "_lpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "\u003cp\u003eThe name of the group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpGroup",
                        "name": "_lpGroup",
                        "shape": "PermissionGroup",
                        "locationName": "group",
                        "documentation": "\u003cp\u003eThe name of the group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpUserId",
                        "name": "_lpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe AWS account ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Blackhole": "blackhole",
                    "Active": "active"
                },
                "valuePad": 10,
                "name": "RouteState",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 27,
                "ctor": "routeTableAssociation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rtaRouteTableAssociationId",
                    "name": "_rtaRouteTableAssociationId",
                    "shape": "String",
                    "locationName": "routeTableAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the association between a route table and a subnet.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "RouteTableAssociation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaRouteTableAssociationId",
                        "name": "_rtaRouteTableAssociationId",
                        "shape": "String",
                        "locationName": "routeTableAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the association between a route table and a subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaRouteTableId",
                        "name": "_rtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaSubnetId",
                        "name": "_rtaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaMain",
                        "name": "_rtaMain",
                        "shape": "Boolean",
                        "locationName": "main",
                        "documentation": "\u003cp\u003eIndicates whether this is the main route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaMain",
                        "name": "_rtaMain",
                        "shape": "Boolean",
                        "locationName": "main",
                        "documentation": "\u003cp\u003eIndicates whether this is the main route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaRouteTableAssociationId",
                        "name": "_rtaRouteTableAssociationId",
                        "shape": "String",
                        "locationName": "routeTableAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the association between a route table and a subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaRouteTableId",
                        "name": "_rtaRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtaSubnetId",
                        "name": "_rtaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "BTSComplete": "complete",
                    "BTSStoring": "storing",
                    "BTSPending": "pending",
                    "BTSWaitingForShutdown": "waiting-for-shutdown",
                    "BTSBundling": "bundling",
                    "BTSCancelling": "cancelling",
                    "BTSFailed": "failed"
                },
                "valuePad": 21,
                "name": "BundleTaskState",
                "type": "nullary",
                "branchPad": 21
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 7,
                "ctor": "portRange",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "prFrom",
                    "name": "_prFrom",
                    "shape": "Integer",
                    "locationName": "from",
                    "documentation": "\u003cp\u003eThe first port in the range.\u003c/p\u003e",
                    "typeExposed": "Maybe Int",
                    "type": "Maybe Int"
                },
                "required": [],
                "name": "PortRange",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prFrom",
                        "name": "_prFrom",
                        "shape": "Integer",
                        "locationName": "from",
                        "documentation": "\u003cp\u003eThe first port in the range.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prTo",
                        "name": "_prTo",
                        "shape": "Integer",
                        "locationName": "to",
                        "documentation": "\u003cp\u003eThe last port in the range.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prFrom",
                        "name": "_prFrom",
                        "shape": "Integer",
                        "locationName": "from",
                        "documentation": "\u003cp\u003eThe first port in the range.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "prTo",
                        "name": "_prTo",
                        "shape": "Integer",
                        "locationName": "to",
                        "documentation": "\u003cp\u003eThe last port in the range.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "EnableDnsHostnames": "enableDnsHostnames",
                    "EnableDnsSupport": "enableDnsSupport"
                },
                "valuePad": 19,
                "name": "VpcAttributeName",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "reservedInstancesConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ricAvailabilityZone",
                    "name": "_ricAvailabilityZone",
                    "shape": "String",
                    "locationName": "availabilityZone",
                    "documentation": "\u003cp\u003eThe Availability Zone for the modified Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricAvailabilityZone",
                        "name": "_ricAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricPlatform",
                        "name": "_ricPlatform",
                        "shape": "String",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricInstanceCount",
                        "name": "_ricInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricInstanceType",
                        "name": "_ricInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type for the modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricAvailabilityZone",
                        "name": "_ricAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricInstanceCount",
                        "name": "_ricInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricInstanceType",
                        "name": "_ricInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type for the modified Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ricPlatform",
                        "name": "_ricPlatform",
                        "shape": "String",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe network platform of the modified Reserved Instances, which is either EC2-Classic or EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "volumeStatusDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vsdName",
                    "name": "_vsdName",
                    "shape": "VolumeStatusName",
                    "locationName": "name",
                    "documentation": "\u003cp\u003eThe name of the volume status.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeStatusDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsdName",
                        "name": "_vsdName",
                        "shape": "VolumeStatusName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsdStatus",
                        "name": "_vsdStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe intended status of the volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsdName",
                        "name": "_vsdName",
                        "shape": "VolumeStatusName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsdStatus",
                        "name": "_vsdStatus",
                        "shape": "String",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe intended status of the volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SISCancelled": "cancelled",
                    "SISClosed": "closed",
                    "SISFailed": "failed",
                    "SISActive": "active",
                    "SISOpen": "open"
                },
                "valuePad": 10,
                "name": "SpotInstanceState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "fieldPad": 0,
                "ctor": "vpnConnectionOptions",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcoStaticRoutesOnly",
                    "name": "_vcoStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcoStaticRoutesOnly",
                    "name": "_vcoStaticRoutesOnly",
                    "shape": "Boolean",
                    "locationName": "staticRoutesOnly",
                    "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "VpnConnectionOptions",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcoStaticRoutesOnly",
                        "name": "_vcoStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcoStaticRoutesOnly",
                        "name": "_vcoStaticRoutesOnly",
                        "shape": "Boolean",
                        "locationName": "staticRoutesOnly",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection uses static routes only. Static routes must be used for devices that don't support BGP.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "userIdGroupPair",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "uigpUserId",
                    "name": "_uigpUserId",
                    "shape": "String",
                    "locationName": "userId",
                    "documentation": "\u003cp\u003eThe ID of an AWS account.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "UserIdGroupPair",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpUserId",
                        "name": "_uigpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe ID of an AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpGroupName",
                        "name": "_uigpGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe ID of the security group owned by the specified AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpGroupId",
                        "name": "_uigpGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe name of the security group in the specified AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpGroupId",
                        "name": "_uigpGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe name of the security group in the specified AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpGroupName",
                        "name": "_uigpGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe ID of the security group owned by the specified AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uigpUserId",
                        "name": "_uigpUserId",
                        "shape": "String",
                        "locationName": "userId",
                        "documentation": "\u003cp\u003eThe ID of an AWS account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "instanceStatusSummary",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "issStatus",
                    "name": "_issStatus",
                    "shape": "SummaryStatus",
                    "locationName": "status",
                    "documentation": "\u003cp\u003eThe status.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceStatusSummary",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "issStatus",
                        "name": "_issStatus",
                        "shape": "SummaryStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "issDetails",
                        "name": "_issDetails",
                        "shape": "InstanceStatusDetailsList",
                        "locationName": "details",
                        "documentation": "\u003cp\u003eThe system instance health or application instance health.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatusDetails]",
                        "type": "[InstanceStatusDetails]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "issDetails",
                        "name": "_issDetails",
                        "shape": "InstanceStatusDetailsList",
                        "locationName": "details",
                        "documentation": "\u003cp\u003eThe system instance health or application instance health.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatusDetails]",
                        "type": "[InstanceStatusDetails]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "issStatus",
                        "name": "_issStatus",
                        "shape": "SummaryStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "spotPlacement",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sp1AvailabilityZone",
                    "name": "_sp1AvailabilityZone",
                    "shape": "String",
                    "locationName": "availabilityZone",
                    "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotPlacement",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sp1AvailabilityZone",
                        "name": "_sp1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sp1GroupName",
                        "name": "_sp1GroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group (for cluster instances).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sp1AvailabilityZone",
                        "name": "_sp1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sp1GroupName",
                        "name": "_sp1GroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group (for cluster instances).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "ebsInstanceBlockDeviceSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "eibdsVolumeId",
                    "name": "_eibdsVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "EbsInstanceBlockDeviceSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdsVolumeId",
                        "name": "_eibdsVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdsDeleteOnTermination",
                        "name": "_eibdsDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdsDeleteOnTermination",
                        "name": "_eibdsDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdsVolumeId",
                        "name": "_eibdsVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 27,
                "ctor": "networkAclAssociation",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "naaNetworkAclAssociationId",
                    "name": "_naaNetworkAclAssociationId",
                    "shape": "String",
                    "locationName": "networkAclAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the association between a network ACL and a subnet.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkAclAssociation",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaNetworkAclAssociationId",
                        "name": "_naaNetworkAclAssociationId",
                        "shape": "String",
                        "locationName": "networkAclAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the association between a network ACL and a subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaNetworkAclId",
                        "name": "_naaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaSubnetId",
                        "name": "_naaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaNetworkAclAssociationId",
                        "name": "_naaNetworkAclAssociationId",
                        "shape": "String",
                        "locationName": "networkAclAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the association between a network ACL and a subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaNetworkAclId",
                        "name": "_naaNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naaSubnetId",
                        "name": "_naaSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "bundleTask",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "btInstanceId",
                    "name": "_btInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance associated with this bundle task.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "BundleTask",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btInstanceId",
                        "name": "_btInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance associated with this bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btBundleId",
                        "name": "_btBundleId",
                        "shape": "String",
                        "locationName": "bundleId",
                        "documentation": "\u003cp\u003eThe ID for this bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btState",
                        "name": "_btState",
                        "shape": "BundleTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "btStartTime",
                        "name": "_btStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time this task started.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "btUpdateTime",
                        "name": "_btUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "\u003cp\u003eThe time of the most recent update for the task.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btStorage",
                        "name": "_btStorage",
                        "shape": "Storage",
                        "locationName": "storage",
                        "documentation": "\u003cp\u003eThe Amazon S3 storage locations.\u003c/p\u003e",
                        "typeExposed": "Maybe Storage",
                        "type": "Maybe Storage"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btProgress",
                        "name": "_btProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "\u003cp\u003eThe level of task completion, as a percent (for example, 20%).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btBundleTaskError",
                        "name": "_btBundleTaskError",
                        "shape": "BundleTaskError",
                        "locationName": "error",
                        "documentation": "\u003cp\u003eIf the task fails, a description of the error.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTaskError",
                        "type": "Maybe BundleTaskError"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btBundleId",
                        "name": "_btBundleId",
                        "shape": "String",
                        "locationName": "bundleId",
                        "documentation": "\u003cp\u003eThe ID for this bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btBundleTaskError",
                        "name": "_btBundleTaskError",
                        "shape": "BundleTaskError",
                        "locationName": "error",
                        "documentation": "\u003cp\u003eIf the task fails, a description of the error.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTaskError",
                        "type": "Maybe BundleTaskError"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btInstanceId",
                        "name": "_btInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance associated with this bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btProgress",
                        "name": "_btProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "\u003cp\u003eThe level of task completion, as a percent (for example, 20%).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "btStartTime",
                        "name": "_btStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time this task started.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btState",
                        "name": "_btState",
                        "shape": "BundleTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "btStorage",
                        "name": "_btStorage",
                        "shape": "Storage",
                        "locationName": "storage",
                        "documentation": "\u003cp\u003eThe Amazon S3 storage locations.\u003c/p\u003e",
                        "typeExposed": "Maybe Storage",
                        "type": "Maybe Storage"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "btUpdateTime",
                        "name": "_btUpdateTime",
                        "shape": "DateTime",
                        "locationName": "updateTime",
                        "documentation": "\u003cp\u003eThe time of the most recent update for the task.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "instanceStatusEvent",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iseCode",
                    "name": "_iseCode",
                    "shape": "EventCode",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe associated code of the event.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceStatusEvent",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseCode",
                        "name": "_iseCode",
                        "shape": "EventCode",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe associated code of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseDescription",
                        "name": "_iseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseNotBefore",
                        "name": "_iseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "\u003cp\u003eThe earliest scheduled start time for the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseNotAfter",
                        "name": "_iseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "\u003cp\u003eThe latest scheduled end time for the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseCode",
                        "name": "_iseCode",
                        "shape": "EventCode",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe associated code of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseDescription",
                        "name": "_iseDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the event.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseNotAfter",
                        "name": "_iseNotAfter",
                        "shape": "DateTime",
                        "locationName": "notAfter",
                        "documentation": "\u003cp\u003eThe latest scheduled end time for the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iseNotBefore",
                        "name": "_iseNotBefore",
                        "shape": "DateTime",
                        "locationName": "notBefore",
                        "documentation": "\u003cp\u003eThe earliest scheduled start time for the event.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "I22xlarge": "i2.2xlarge",
                    "Cc28xlarge": "cc2.8xlarge",
                    "C1Medium": "c1.medium",
                    "I24xlarge": "i2.4xlarge",
                    "Cr18xlarge": "cr1.8xlarge",
                    "C3Xlarge": "c3.xlarge",
                    "Cc14xlarge": "cc1.4xlarge",
                    "M3Large": "m3.large",
                    "M3Medium": "m3.medium",
                    "T2Medium": "t2.medium",
                    "M24xlarge": "m2.4xlarge",
                    "R32xlarge": "r3.2xlarge",
                    "M1Xlarge": "m1.xlarge",
                    "M32xlarge": "m3.2xlarge",
                    "T2Small": "t2.small",
                    "R3Xlarge": "r3.xlarge",
                    "R3Large": "r3.large",
                    "T2Micro": "t2.micro",
                    "R38xlarge": "r3.8xlarge",
                    "Cg14xlarge": "cg1.4xlarge",
                    "C32xlarge": "c3.2xlarge",
                    "C1Xlarge": "c1.xlarge",
                    "T1Micro": "t1.micro",
                    "Hs18xlarge": "hs1.8xlarge",
                    "G22xlarge": "g2.2xlarge",
                    "M2Xlarge": "m2.xlarge",
                    "C38xlarge": "c3.8xlarge",
                    "C3Large": "c3.large",
                    "M22xlarge": "m2.2xlarge",
                    "R34xlarge": "r3.4xlarge",
                    "M3Xlarge": "m3.xlarge",
                    "M1Small": "m1.small",
                    "I28xlarge": "i2.8xlarge",
                    "I2Xlarge": "i2.xlarge",
                    "Hi14xlarge": "hi1.4xlarge",
                    "C34xlarge": "c3.4xlarge",
                    "M1Large": "m1.large",
                    "M1Medium": "m1.medium"
                },
                "valuePad": 12,
                "name": "InstanceType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "route",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rDestinationCidrBlock",
                    "name": "_rDestinationCidrBlock",
                    "shape": "String",
                    "locationName": "destinationCidrBlock",
                    "documentation": "\u003cp\u003eThe CIDR block used for the destination match.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Route",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rDestinationCidrBlock",
                        "name": "_rDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block used for the destination match.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rGatewayId",
                        "name": "_rGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of a gateway attached to your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rInstanceId",
                        "name": "_rInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rInstanceOwnerId",
                        "name": "_rInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNetworkInterfaceId",
                        "name": "_rNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rVpcPeeringConnectionId",
                        "name": "_rVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rState",
                        "name": "_rState",
                        "shape": "RouteState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the route. The \u003ccode\u003eblackhole\u003c/code\u003e state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rOrigin",
                        "name": "_rOrigin",
                        "shape": "RouteOrigin",
                        "locationName": "origin",
                        "documentation": "\u003cp\u003eDescribes how the route was created.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCreateRouteTable\u003c/code\u003e indicates that route was automatically created when the route table was created.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eCreateRoute\u003c/code\u003e indicates that the route was manually added to the route table.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnableVgwRoutePropagation\u003c/code\u003e indicates that the route was propagated by route propagation.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rDestinationCidrBlock",
                        "name": "_rDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block used for the destination match.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rGatewayId",
                        "name": "_rGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of a gateway attached to your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rInstanceId",
                        "name": "_rInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rInstanceOwnerId",
                        "name": "_rInstanceOwnerId",
                        "shape": "String",
                        "locationName": "instanceOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rNetworkInterfaceId",
                        "name": "_rNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rOrigin",
                        "name": "_rOrigin",
                        "shape": "RouteOrigin",
                        "locationName": "origin",
                        "documentation": "\u003cp\u003eDescribes how the route was created.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eCreateRouteTable\u003c/code\u003e indicates that route was automatically created when the route table was created.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eCreateRoute\u003c/code\u003e indicates that the route was manually added to the route table.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEnableVgwRoutePropagation\u003c/code\u003e indicates that the route was propagated by route propagation.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rState",
                        "name": "_rState",
                        "shape": "RouteState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the route. The \u003ccode\u003eblackhole\u003c/code\u003e state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rVpcPeeringConnectionId",
                        "name": "_rVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "spotDatafeedSubscription",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sdsOwnerId",
                    "name": "_sdsOwnerId",
                    "shape": "String",
                    "locationName": "ownerId",
                    "documentation": "\u003cp\u003eThe AWS account ID of the account.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "SpotDatafeedSubscription",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsOwnerId",
                        "name": "_sdsOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsBucket",
                        "name": "_sdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket where the Spot Instance datafeed is located.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsPrefix",
                        "name": "_sdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eThe prefix that is prepended to datafeed files.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsState",
                        "name": "_sdsState",
                        "shape": "DatafeedSubscriptionState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsFault",
                        "name": "_sdsFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "\u003cp\u003eThe fault codes for the Spot Instance request, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsBucket",
                        "name": "_sdsBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket where the Spot Instance datafeed is located.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsFault",
                        "name": "_sdsFault",
                        "shape": "SpotInstanceStateFault",
                        "locationName": "fault",
                        "documentation": "\u003cp\u003eThe fault codes for the Spot Instance request, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotInstanceStateFault",
                        "type": "Maybe SpotInstanceStateFault"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsOwnerId",
                        "name": "_sdsOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the account.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsPrefix",
                        "name": "_sdsPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eThe prefix that is prepended to datafeed files.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sdsState",
                        "name": "_sdsState",
                        "shape": "DatafeedSubscriptionState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 0,
                "ctor": "storage",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sS3",
                    "name": "_sS3",
                    "shape": "S3Storage",
                    "locationName": "S3",
                    "documentation": "\u003cp\u003eAn Amazon S3 storage location.\u003c/p\u003e",
                    "typeExposed": "Maybe S3Storage",
                    "type": "Maybe S3Storage"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sS3",
                    "name": "_sS3",
                    "shape": "S3Storage",
                    "locationName": "S3",
                    "documentation": "\u003cp\u003eAn Amazon S3 storage location.\u003c/p\u003e",
                    "typeExposed": "Maybe S3Storage",
                    "type": "Maybe S3Storage"
                },
                "required": [],
                "name": "Storage",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sS3",
                        "name": "_sS3",
                        "shape": "S3Storage",
                        "locationName": "S3",
                        "documentation": "\u003cp\u003eAn Amazon S3 storage location.\u003c/p\u003e",
                        "typeExposed": "Maybe S3Storage",
                        "type": "Maybe S3Storage"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sS3",
                        "name": "_sS3",
                        "shape": "S3Storage",
                        "locationName": "S3",
                        "documentation": "\u003cp\u003eAn Amazon S3 storage location.\u003c/p\u003e",
                        "typeExposed": "Maybe S3Storage",
                        "type": "Maybe S3Storage"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "securityGroup",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "sgOwnerId",
                    "name": "_sgOwnerId",
                    "shape": "String",
                    "locationName": "ownerId",
                    "documentation": "\u003cp\u003eThe AWS account ID of the owner of the security group.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgOwnerId",
                        "name": "_sgOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgGroupName",
                        "name": "_sgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgGroupId",
                        "name": "_sgGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgDescription",
                        "name": "_sgDescription",
                        "shape": "String",
                        "locationName": "groupDescription",
                        "documentation": "\u003cp\u003eA description of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "SecurityGroup",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgIpPermissions",
                        "name": "_sgIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eOne or more inbound rules associated with the security group.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgIpPermissionsEgress",
                        "name": "_sgIpPermissionsEgress",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissionsEgress",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more outbound rules associated with the security group.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sgVpcId",
                        "name": "_sgVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the VPC for the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgTags",
                        "name": "_sgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the security group.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgDescription",
                        "name": "_sgDescription",
                        "shape": "String",
                        "locationName": "groupDescription",
                        "documentation": "\u003cp\u003eA description of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgGroupId",
                        "name": "_sgGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgGroupName",
                        "name": "_sgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgIpPermissions",
                        "name": "_sgIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eOne or more inbound rules associated with the security group.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgIpPermissionsEgress",
                        "name": "_sgIpPermissionsEgress",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissionsEgress",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more outbound rules associated with the security group.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sgOwnerId",
                        "name": "_sgOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sgTags",
                        "name": "_sgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the security group.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sgVpcId",
                        "name": "_sgVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the VPC for the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "CSIRSClosed": "closed",
                    "CSIRSActive": "active",
                    "CSIRSOpen": "open",
                    "CSIRSCompleted": "completed",
                    "CSIRSCancelled": "cancelled"
                },
                "valuePad": 10,
                "name": "CancelSpotInstanceRequestState",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "PGSDeleting": "deleting",
                    "PGSPending": "pending",
                    "PGSAvailable": "available",
                    "PGSDeleted": "deleted"
                },
                "valuePad": 10,
                "name": "PlacementGroupState",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "reservedInstancesModificationResult",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rimrReservedInstancesId",
                    "name": "_rimrReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesModificationResult",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimrReservedInstancesId",
                        "name": "_rimrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimrTargetConfiguration",
                        "name": "_rimrTargetConfiguration",
                        "shape": "ReservedInstancesConfiguration",
                        "locationName": "targetConfiguration",
                        "documentation": "\u003cp\u003eThe target Reserved Instances configurations supplied as part of the modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe ReservedInstancesConfiguration",
                        "type": "Maybe ReservedInstancesConfiguration"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimrReservedInstancesId",
                        "name": "_rimrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID for the Reserved Instances that were created as part of the modification request. This field is only available when the modification is fulfilled.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rimrTargetConfiguration",
                        "name": "_rimrTargetConfiguration",
                        "shape": "ReservedInstancesConfiguration",
                        "locationName": "targetConfiguration",
                        "documentation": "\u003cp\u003eThe target Reserved Instances configurations supplied as part of the modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe ReservedInstancesConfiguration",
                        "type": "Maybe ReservedInstancesConfiguration"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "instanceBlockDeviceMappingSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ibdmsDeviceName",
                    "name": "_ibdmsDeviceName",
                    "shape": "String",
                    "locationName": "deviceName",
                    "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceBlockDeviceMappingSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsDeviceName",
                        "name": "_ibdmsDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsEbs",
                        "name": "_ibdmsEbs",
                        "shape": "EbsInstanceBlockDeviceSpecification",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsInstanceBlockDeviceSpecification",
                        "type": "Maybe EbsInstanceBlockDeviceSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsVirtualName",
                        "name": "_ibdmsVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "\u003cp\u003eThe virtual device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsNoDevice",
                        "name": "_ibdmsNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "\u003cp\u003esuppress the specified device included in the block device mapping.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsDeviceName",
                        "name": "_ibdmsDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsEbs",
                        "name": "_ibdmsEbs",
                        "shape": "EbsInstanceBlockDeviceSpecification",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsInstanceBlockDeviceSpecification",
                        "type": "Maybe EbsInstanceBlockDeviceSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsNoDevice",
                        "name": "_ibdmsNoDevice",
                        "shape": "String",
                        "locationName": "noDevice",
                        "documentation": "\u003cp\u003esuppress the specified device included in the block device mapping.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmsVirtualName",
                        "name": "_ibdmsVirtualName",
                        "shape": "String",
                        "locationName": "virtualName",
                        "documentation": "\u003cp\u003eThe virtual device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Citrix": "citrix",
                    "Microsoft": "microsoft",
                    "Vmware": "vmware"
                },
                "valuePad": 10,
                "name": "ExportEnvironment",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "customerGateway",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cgCustomerGatewayId",
                    "name": "_cgCustomerGatewayId",
                    "shape": "String",
                    "locationName": "customerGatewayId",
                    "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CustomerGateway",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgCustomerGatewayId",
                        "name": "_cgCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgState",
                        "name": "_cgState",
                        "shape": "String",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the customer gateway (\u003ccode\u003epending | available | deleting | deleted\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgType",
                        "name": "_cgType",
                        "shape": "String",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection the customer gateway supports (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgIpAddress",
                        "name": "_cgIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address of the customer gateway's outside interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgBgpAsn",
                        "name": "_cgBgpAsn",
                        "shape": "String",
                        "locationName": "bgpAsn",
                        "documentation": "\u003cp\u003eThe customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cgTags",
                        "name": "_cgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the customer gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgBgpAsn",
                        "name": "_cgBgpAsn",
                        "shape": "String",
                        "locationName": "bgpAsn",
                        "documentation": "\u003cp\u003eThe customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgCustomerGatewayId",
                        "name": "_cgCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgIpAddress",
                        "name": "_cgIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address of the customer gateway's outside interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgState",
                        "name": "_cgState",
                        "shape": "String",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the customer gateway (\u003ccode\u003epending | available | deleting | deleted\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cgTags",
                        "name": "_cgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the customer gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgType",
                        "name": "_cgType",
                        "shape": "String",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection the customer gateway supports (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "ebsInstanceBlockDevice",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "eibdVolumeId",
                    "name": "_eibdVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "EbsInstanceBlockDevice",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdVolumeId",
                        "name": "_eibdVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdStatus",
                        "name": "_eibdStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdAttachTime",
                        "name": "_eibdAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdDeleteOnTermination",
                        "name": "_eibdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdAttachTime",
                        "name": "_eibdAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdDeleteOnTermination",
                        "name": "_eibdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdStatus",
                        "name": "_eibdStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eibdVolumeId",
                        "name": "_eibdVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Stop": "stop",
                    "Terminate": "terminate"
                },
                "valuePad": 10,
                "name": "ShutdownBehavior",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "diskImageDescription",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "did1Format",
                    "name": "_did1Format",
                    "shape": "DiskImageFormat",
                    "locationName": "format",
                    "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1Format",
                        "name": "_did1Format",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1Size",
                        "name": "_did1Size",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the disk image.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1ImportManifestUrl",
                        "name": "_did1ImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "\u003cp\u003eA presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\u003eAuthenticating REST Requests\u003c/a\u003e topic in the \u003ci\u003eAmazon Simple Storage Service Developer Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "DiskImageDescription",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "did1Checksum",
                        "name": "_did1Checksum",
                        "shape": "String",
                        "locationName": "checksum",
                        "documentation": "\u003cp\u003eThe checksum computed for the disk image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "did1Checksum",
                        "name": "_did1Checksum",
                        "shape": "String",
                        "locationName": "checksum",
                        "documentation": "\u003cp\u003eThe checksum computed for the disk image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1Format",
                        "name": "_did1Format",
                        "shape": "DiskImageFormat",
                        "locationName": "format",
                        "documentation": "\u003cp\u003eThe disk image format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1ImportManifestUrl",
                        "name": "_did1ImportManifestUrl",
                        "shape": "String",
                        "locationName": "importManifestUrl",
                        "documentation": "\u003cp\u003eA presigned URL for the import manifest stored in Amazon S3. For information about creating a presigned URL for an Amazon S3 object, read the \"Query String Request Authentication Alternative\" section of the \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\u003eAuthenticating REST Requests\u003c/a\u003e topic in the \u003ci\u003eAmazon Simple Storage Service Developer Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "did1Size",
                        "name": "_did1Size",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the disk image.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "diskImageVolumeDescription",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "divdSize",
                    "name": "_divdSize",
                    "shape": "Long",
                    "locationName": "size",
                    "documentation": "\u003cp\u003eThe size of the volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Integer",
                    "type": "Maybe Integer"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "divdId",
                        "name": "_divdId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe volume identifier.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "DiskImageVolumeDescription",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "divdSize",
                        "name": "_divdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "divdId",
                        "name": "_divdId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe volume identifier.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "divdSize",
                        "name": "_divdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "monitoring",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mState",
                    "name": "_mState",
                    "shape": "MonitoringState",
                    "locationName": "state",
                    "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mState",
                    "name": "_mState",
                    "shape": "MonitoringState",
                    "locationName": "state",
                    "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Monitoring",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mState",
                        "name": "_mState",
                        "shape": "MonitoringState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mState",
                        "name": "_mState",
                        "shape": "MonitoringState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eIndicates whether monitoring is enabled for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SSAvailable": "available",
                    "SSPending": "pending"
                },
                "valuePad": 10,
                "name": "SubnetState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Ova": "ova"
                },
                "valuePad": 4,
                "name": "ContainerFormat",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "availabilityZoneMessage",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "azmMessage",
                    "name": "_azmMessage",
                    "shape": "String",
                    "locationName": "message",
                    "documentation": "\u003cp\u003eThe message about the Availability Zone.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "azmMessage",
                    "name": "_azmMessage",
                    "shape": "String",
                    "locationName": "message",
                    "documentation": "\u003cp\u003eThe message about the Availability Zone.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AvailabilityZoneMessage",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azmMessage",
                        "name": "_azmMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message about the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azmMessage",
                        "name": "_azmMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message about the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "vpcAttachment",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "va1VpcId",
                    "name": "_va1VpcId",
                    "shape": "String",
                    "locationName": "vpcId",
                    "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpcAttachment",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "va1VpcId",
                        "name": "_va1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "va1State",
                        "name": "_va1State",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "va1State",
                        "name": "_va1State",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "va1VpcId",
                        "name": "_va1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "instanceBlockDeviceMapping",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ibdmDeviceName",
                    "name": "_ibdmDeviceName",
                    "shape": "String",
                    "locationName": "deviceName",
                    "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceBlockDeviceMapping",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmDeviceName",
                        "name": "_ibdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmEbs",
                        "name": "_ibdmEbs",
                        "shape": "EbsInstanceBlockDevice",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsInstanceBlockDevice",
                        "type": "Maybe EbsInstanceBlockDevice"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmDeviceName",
                        "name": "_ibdmDeviceName",
                        "shape": "String",
                        "locationName": "deviceName",
                        "documentation": "\u003cp\u003eThe device name exposed to the instance (for example, \u003cfilename\u003e/dev/sdh\u003c/filename\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ibdmEbs",
                        "name": "_ibdmEbs",
                        "shape": "EbsInstanceBlockDevice",
                        "locationName": "ebs",
                        "documentation": "\u003cp\u003eParameters used to automatically set up Amazon EBS volumes when the instance is launched.\u003c/p\u003e",
                        "typeExposed": "Maybe EbsInstanceBlockDevice",
                        "type": "Maybe EbsInstanceBlockDevice"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "InsufficientData": "insufficient-data",
                    "Passed": "passed",
                    "Failed": "failed"
                },
                "valuePad": 18,
                "name": "StatusType",
                "type": "nullary",
                "branchPad": 16
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "exportToS3TaskSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "etstsDiskImageFormat",
                    "name": "_etstsDiskImageFormat",
                    "shape": "DiskImageFormat",
                    "locationName": "diskImageFormat",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ExportToS3TaskSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsDiskImageFormat",
                        "name": "_etstsDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsContainerFormat",
                        "name": "_etstsContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsS3Bucket",
                        "name": "_etstsS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsS3Prefix",
                        "name": "_etstsS3Prefix",
                        "shape": "String",
                        "locationName": "s3Prefix",
                        "documentation": "\u003cp\u003eThe image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsContainerFormat",
                        "name": "_etstsContainerFormat",
                        "shape": "ContainerFormat",
                        "locationName": "containerFormat",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsDiskImageFormat",
                        "name": "_etstsDiskImageFormat",
                        "shape": "DiskImageFormat",
                        "locationName": "diskImageFormat",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsS3Bucket",
                        "name": "_etstsS3Bucket",
                        "shape": "String",
                        "locationName": "s3Bucket",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etstsS3Prefix",
                        "name": "_etstsS3Prefix",
                        "shape": "String",
                        "locationName": "s3Prefix",
                        "documentation": "\u003cp\u003eThe image is written to a single object in the Amazon S3 bucket at the S3 key s3prefix + exportTaskId + '.' + diskImageFormat.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SourceDestCheck": "sourceDestCheck",
                    "Attachment": "attachment",
                    "GroupSet": "groupSet",
                    "Description": "description"
                },
                "valuePad": 16,
                "name": "NetworkInterfaceAttribute",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Machine": "machine",
                    "Kernel": "kernel",
                    "Ramdisk": "ramdisk"
                },
                "valuePad": 8,
                "name": "ImageTypeValues",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "instanceExportDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iedInstanceId",
                    "name": "_iedInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the resource being exported.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceExportDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iedInstanceId",
                        "name": "_iedInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the resource being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iedTargetEnvironment",
                        "name": "_iedTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "\u003cp\u003eThe target virtualization environment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iedInstanceId",
                        "name": "_iedInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the resource being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iedTargetEnvironment",
                        "name": "_iedTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "\u003cp\u003eThe target virtualization environment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "SANProductCodes": "productCodes",
                    "SANCreateVolumePermission": "createVolumePermission"
                },
                "valuePad": 23,
                "name": "SnapshotAttributeName",
                "type": "nullary",
                "branchPad": 25
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "availabilityZone",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "azZoneName",
                    "name": "_azZoneName",
                    "shape": "String",
                    "locationName": "zoneName",
                    "documentation": "\u003cp\u003eThe name of the Availability Zone.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AvailabilityZone",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azZoneName",
                        "name": "_azZoneName",
                        "shape": "String",
                        "locationName": "zoneName",
                        "documentation": "\u003cp\u003eThe name of the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azState",
                        "name": "_azState",
                        "shape": "AvailabilityZoneState",
                        "locationName": "zoneState",
                        "documentation": "\u003cp\u003eThe state of the Availability Zone (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003eunavailable\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azRegionName",
                        "name": "_azRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "\u003cp\u003eThe name of the region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "azMessages",
                        "name": "_azMessages",
                        "shape": "AvailabilityZoneMessageList",
                        "locationName": "messageSet",
                        "documentation": "\u003cp\u003eAny messages about the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "[AvailabilityZoneMessage]",
                        "type": "[AvailabilityZoneMessage]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "azMessages",
                        "name": "_azMessages",
                        "shape": "AvailabilityZoneMessageList",
                        "locationName": "messageSet",
                        "documentation": "\u003cp\u003eAny messages about the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "[AvailabilityZoneMessage]",
                        "type": "[AvailabilityZoneMessage]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azRegionName",
                        "name": "_azRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "\u003cp\u003eThe name of the region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azState",
                        "name": "_azState",
                        "shape": "AvailabilityZoneState",
                        "locationName": "zoneState",
                        "documentation": "\u003cp\u003eThe state of the Availability Zone (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003eunavailable\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "azZoneName",
                        "name": "_azZoneName",
                        "shape": "String",
                        "locationName": "zoneName",
                        "documentation": "\u003cp\u003eThe name of the Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "VPNSTATEPending": "pending",
                    "VPNSTATEAvailable": "available",
                    "VPNSTATEDeleted": "deleted",
                    "VPNSTATEDeleting": "deleting"
                },
                "valuePad": 10,
                "name": "VpnState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "routeTable",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rtRouteTableId",
                    "name": "_rtRouteTableId",
                    "shape": "String",
                    "locationName": "routeTableId",
                    "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "RouteTable",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtRouteTableId",
                        "name": "_rtRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtVpcId",
                        "name": "_rtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtRoutes",
                        "name": "_rtRoutes",
                        "shape": "RouteList",
                        "locationName": "routeSet",
                        "documentation": "\u003cp\u003eThe routes in the route table.\u003c/p\u003e",
                        "typeExposed": "[Route]",
                        "type": "[Route]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtAssociations",
                        "name": "_rtAssociations",
                        "shape": "RouteTableAssociationList",
                        "locationName": "associationSet",
                        "documentation": "\u003cp\u003eThe associations between the route table and one or more subnets.\u003c/p\u003e",
                        "typeExposed": "[RouteTableAssociation]",
                        "type": "[RouteTableAssociation]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtTags",
                        "name": "_rtTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the route table.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtPropagatingVgws",
                        "name": "_rtPropagatingVgws",
                        "shape": "PropagatingVgwList",
                        "locationName": "propagatingVgwSet",
                        "documentation": "\u003cp\u003eAny virtual private gateway (VGW) propagating routes.\u003c/p\u003e",
                        "typeExposed": "[PropagatingVgw]",
                        "type": "[PropagatingVgw]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtAssociations",
                        "name": "_rtAssociations",
                        "shape": "RouteTableAssociationList",
                        "locationName": "associationSet",
                        "documentation": "\u003cp\u003eThe associations between the route table and one or more subnets.\u003c/p\u003e",
                        "typeExposed": "[RouteTableAssociation]",
                        "type": "[RouteTableAssociation]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtPropagatingVgws",
                        "name": "_rtPropagatingVgws",
                        "shape": "PropagatingVgwList",
                        "locationName": "propagatingVgwSet",
                        "documentation": "\u003cp\u003eAny virtual private gateway (VGW) propagating routes.\u003c/p\u003e",
                        "typeExposed": "[PropagatingVgw]",
                        "type": "[PropagatingVgw]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtRouteTableId",
                        "name": "_rtRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtRoutes",
                        "name": "_rtRoutes",
                        "shape": "RouteList",
                        "locationName": "routeSet",
                        "documentation": "\u003cp\u003eThe routes in the route table.\u003c/p\u003e",
                        "typeExposed": "[Route]",
                        "type": "[Route]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rtTags",
                        "name": "_rtTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the route table.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rtVpcId",
                        "name": "_rtVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Xen": "xen",
                    "Ovm": "ovm"
                },
                "valuePad": 4,
                "name": "HypervisorType",
                "type": "nullary",
                "branchPad": 3
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "instanceStatusDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "isdName",
                    "name": "_isdName",
                    "shape": "StatusName",
                    "locationName": "name",
                    "documentation": "\u003cp\u003eThe type of instance status.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceStatusDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdName",
                        "name": "_isdName",
                        "shape": "StatusName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe type of instance status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdStatus",
                        "name": "_isdStatus",
                        "shape": "StatusType",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdImpairedSince",
                        "name": "_isdImpairedSince",
                        "shape": "DateTime",
                        "locationName": "impairedSince",
                        "documentation": "\u003cp\u003eThe time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdImpairedSince",
                        "name": "_isdImpairedSince",
                        "shape": "DateTime",
                        "locationName": "impairedSince",
                        "documentation": "\u003cp\u003eThe time when a status check failed. For an instance that was launched and impaired, this is the time when the instance was launched.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdName",
                        "name": "_isdName",
                        "shape": "StatusName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe type of instance status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isdStatus",
                        "name": "_isdStatus",
                        "shape": "StatusType",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "iamInstanceProfile",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iipArn",
                    "name": "_iipArn",
                    "shape": "String",
                    "locationName": "arn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "IamInstanceProfile",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipArn",
                        "name": "_iipArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipId",
                        "name": "_iipId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe ID of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipArn",
                        "name": "_iipArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipId",
                        "name": "_iipId",
                        "shape": "String",
                        "locationName": "id",
                        "documentation": "\u003cp\u003eThe ID of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "internetGatewayAttachment",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "igaVpcId",
                    "name": "_igaVpcId",
                    "shape": "String",
                    "locationName": "vpcId",
                    "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igaVpcId",
                        "name": "_igaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igaState",
                        "name": "_igaState",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the attachment.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "InternetGatewayAttachment",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igaState",
                        "name": "_igaState",
                        "shape": "AttachmentStatus",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the attachment.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igaVpcId",
                        "name": "_igaVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "RISPaymentPending": "payment-pending",
                    "RISRetired": "retired",
                    "RISActive": "active",
                    "RISPaymentFailed": "payment-failed"
                },
                "valuePad": 16,
                "name": "ReservedInstanceState",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "IANInstanceInitiatedShutdownBehavior": "instanceInitiatedShutdownBehavior",
                    "IANProductCodes": "productCodes",
                    "IANGroupSet": "groupSet",
                    "IANDisableApiTermination": "disableApiTermination",
                    "IANSriovNetSupport": "sriovNetSupport",
                    "IANRootDeviceName": "rootDeviceName",
                    "IANUserData": "userData",
                    "IANEbsOptimized": "ebsOptimized",
                    "IANInstanceType": "instanceType",
                    "IANRamdisk": "ramdisk",
                    "IANKernel": "kernel",
                    "IANBlockDeviceMapping": "blockDeviceMapping",
                    "IANSourceDestCheck": "sourceDestCheck"
                },
                "valuePad": 34,
                "name": "InstanceAttributeName",
                "type": "nullary",
                "branchPad": 36
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "ipPermission",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ipIpProtocol",
                    "name": "_ipIpProtocol",
                    "shape": "String",
                    "locationName": "ipProtocol",
                    "documentation": "\u003cp\u003eThe protocol.\u003c/p\u003e \u003cp\u003eWhen you call \u003ca\u003eDescribeSecurityGroups\u003c/a\u003e, the protocol value returned is the number. Exception: For TCP, UDP, and ICMP, the value returned is the name (for example, \u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, or \u003ccode\u003eicmp\u003c/code\u003e). For a list of protocol numbers, see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipIpProtocol",
                        "name": "_ipIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe protocol.\u003c/p\u003e \u003cp\u003eWhen you call \u003ca\u003eDescribeSecurityGroups\u003c/a\u003e, the protocol value returned is the number. Exception: For TCP, UDP, and ICMP, the value returned is the name (for example, \u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, or \u003ccode\u003eicmp\u003c/code\u003e). For a list of protocol numbers, see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipFromPort",
                        "name": "_ipFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. A value of \u003ccode\u003e-1\u003c/code\u003e indicates all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipToPort",
                        "name": "_ipToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code. A value of \u003ccode\u003e-1\u003c/code\u003e indicates all ICMP codes for the specified ICMP type.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "name": "IpPermission",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipUserIdGroupPairs",
                        "name": "_ipUserIdGroupPairs",
                        "shape": "UserIdGroupPairList",
                        "locationName": "groups",
                        "documentation": "\u003cp\u003eOne or more security group and AWS account ID pairs.\u003c/p\u003e",
                        "typeExposed": "[UserIdGroupPair]",
                        "type": "[UserIdGroupPair]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipIpRanges",
                        "name": "_ipIpRanges",
                        "shape": "IpRangeList",
                        "locationName": "ipRanges",
                        "documentation": "\u003cp\u003eOne or more IP ranges.\u003c/p\u003e",
                        "typeExposed": "[IpRange]",
                        "type": "[IpRange]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipFromPort",
                        "name": "_ipFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. A value of \u003ccode\u003e-1\u003c/code\u003e indicates all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipIpProtocol",
                        "name": "_ipIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe protocol.\u003c/p\u003e \u003cp\u003eWhen you call \u003ca\u003eDescribeSecurityGroups\u003c/a\u003e, the protocol value returned is the number. Exception: For TCP, UDP, and ICMP, the value returned is the name (for example, \u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, or \u003ccode\u003eicmp\u003c/code\u003e). For a list of protocol numbers, see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipIpRanges",
                        "name": "_ipIpRanges",
                        "shape": "IpRangeList",
                        "locationName": "ipRanges",
                        "documentation": "\u003cp\u003eOne or more IP ranges.\u003c/p\u003e",
                        "typeExposed": "[IpRange]",
                        "type": "[IpRange]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipToPort",
                        "name": "_ipToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code. A value of \u003ccode\u003e-1\u003c/code\u003e indicates all ICMP codes for the specified ICMP type.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipUserIdGroupPairs",
                        "name": "_ipUserIdGroupPairs",
                        "shape": "UserIdGroupPairList",
                        "locationName": "groups",
                        "documentation": "\u003cp\u003eOne or more security group and AWS account ID pairs.\u003c/p\u003e",
                        "typeExposed": "[UserIdGroupPair]",
                        "type": "[UserIdGroupPair]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "CTSCancelled": "cancelled",
                    "CTSActive": "active",
                    "CTSCancelling": "cancelling",
                    "CTSCompleted": "completed"
                },
                "valuePad": 11,
                "name": "ConversionTaskState",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "diskImage",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "diImage",
                    "name": "_diImage",
                    "shape": "DiskImageDetail",
                    "locationName": "Image",
                    "documentation": null,
                    "typeExposed": "Maybe DiskImageDetail",
                    "type": "Maybe DiskImageDetail"
                },
                "required": [],
                "name": "DiskImage",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diImage",
                        "name": "_diImage",
                        "shape": "DiskImageDetail",
                        "locationName": "Image",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageDetail",
                        "type": "Maybe DiskImageDetail"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diDescription",
                        "name": "_diDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diVolume",
                        "name": "_diVolume",
                        "shape": "VolumeDetail",
                        "locationName": "Volume",
                        "documentation": null,
                        "typeExposed": "Maybe VolumeDetail",
                        "type": "Maybe VolumeDetail"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diDescription",
                        "name": "_diDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diImage",
                        "name": "_diImage",
                        "shape": "DiskImageDetail",
                        "locationName": "Image",
                        "documentation": null,
                        "typeExposed": "Maybe DiskImageDetail",
                        "type": "Maybe DiskImageDetail"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diVolume",
                        "name": "_diVolume",
                        "shape": "VolumeDetail",
                        "locationName": "Volume",
                        "documentation": null,
                        "typeExposed": "Maybe VolumeDetail",
                        "type": "Maybe VolumeDetail"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Default": "default",
                    "Dedicated": "dedicated"
                },
                "valuePad": 10,
                "name": "Tenancy",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "vpcPeeringConnectionStateReason",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vpcsrCode",
                    "name": "_vpcsrCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe status of the VPC peering connection.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpcPeeringConnectionStateReason",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcsrCode",
                        "name": "_vpcsrCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe status of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcsrMessage",
                        "name": "_vpcsrMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eA message that provides more information about the status, if applicable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcsrCode",
                        "name": "_vpcsrCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe status of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcsrMessage",
                        "name": "_vpcsrMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eA message that provides more information about the status, if applicable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 9,
                "ctor": "iamInstanceProfileSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iipsArn",
                    "name": "_iipsArn",
                    "shape": "String",
                    "locationName": "arn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "IamInstanceProfileSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipsArn",
                        "name": "_iipsArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipsName",
                        "name": "_iipsName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipsArn",
                        "name": "_iipsArn",
                        "shape": "String",
                        "locationName": "arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iipsName",
                        "name": "_iipsName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe name of the instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "importVolumeTaskDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ivtdBytesConverted",
                    "name": "_ivtdBytesConverted",
                    "shape": "Long",
                    "locationName": "bytesConverted",
                    "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdBytesConverted",
                        "name": "_ivtdBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdAvailabilityZone",
                        "name": "_ivtdAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the resulting volume will reside.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdImage",
                        "name": "_ivtdImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "\u003cp\u003eThe image.\u003c/p\u003e",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdVolume",
                        "name": "_ivtdVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "\u003cp\u003eThe volume.\u003c/p\u003e",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ],
                "name": "ImportVolumeTaskDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivtdDescription",
                        "name": "_ivtdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description you provided when starting the import volume task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdAvailabilityZone",
                        "name": "_ivtdAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the resulting volume will reside.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdBytesConverted",
                        "name": "_ivtdBytesConverted",
                        "shape": "Long",
                        "locationName": "bytesConverted",
                        "documentation": "\u003cp\u003eThe number of bytes converted so far.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivtdDescription",
                        "name": "_ivtdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description you provided when starting the import volume task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdImage",
                        "name": "_ivtdImage",
                        "shape": "DiskImageDescription",
                        "locationName": "image",
                        "documentation": "\u003cp\u003eThe image.\u003c/p\u003e",
                        "typeExposed": "DiskImageDescription",
                        "type": "DiskImageDescription"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivtdVolume",
                        "name": "_ivtdVolume",
                        "shape": "DiskImageVolumeDescription",
                        "locationName": "volume",
                        "documentation": "\u003cp\u003eThe volume.\u003c/p\u003e",
                        "typeExposed": "DiskImageVolumeDescription",
                        "type": "DiskImageVolumeDescription"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Cluster": "cluster"
                },
                "valuePad": 8,
                "name": "PlacementStrategy",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "instanceNetworkInterface",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iniNetworkInterfaceId",
                    "name": "_iniNetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceNetworkInterface",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniNetworkInterfaceId",
                        "name": "_iniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniSubnetId",
                        "name": "_iniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniVpcId",
                        "name": "_iniVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniDescription",
                        "name": "_iniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniOwnerId",
                        "name": "_iniOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that created the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniStatus",
                        "name": "_iniStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniMacAddress",
                        "name": "_iniMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "\u003cp\u003eThe MAC address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniPrivateIpAddress",
                        "name": "_iniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe IP address of the network interface within the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniPrivateDnsName",
                        "name": "_iniPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniSourceDestCheck",
                        "name": "_iniSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether to validate network traffic to or from this network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iniGroups",
                        "name": "_iniGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniAttachment",
                        "name": "_iniAttachment",
                        "shape": "InstanceNetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAttachment",
                        "type": "Maybe InstanceNetworkInterfaceAttachment"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniAssociation",
                        "name": "_iniAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iniPrivateIpAddresses",
                        "name": "_iniPrivateIpAddresses",
                        "shape": "InstancePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eThe private IP addresses associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[InstancePrivateIpAddress]",
                        "type": "[InstancePrivateIpAddress]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniAssociation",
                        "name": "_iniAssociation",
                        "shape": "InstanceNetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAssociation",
                        "type": "Maybe InstanceNetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniAttachment",
                        "name": "_iniAttachment",
                        "shape": "InstanceNetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceNetworkInterfaceAttachment",
                        "type": "Maybe InstanceNetworkInterfaceAttachment"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniDescription",
                        "name": "_iniDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iniGroups",
                        "name": "_iniGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniMacAddress",
                        "name": "_iniMacAddress",
                        "shape": "String",
                        "locationName": "macAddress",
                        "documentation": "\u003cp\u003eThe MAC address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniNetworkInterfaceId",
                        "name": "_iniNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniOwnerId",
                        "name": "_iniOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that created the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniPrivateDnsName",
                        "name": "_iniPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniPrivateIpAddress",
                        "name": "_iniPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe IP address of the network interface within the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iniPrivateIpAddresses",
                        "name": "_iniPrivateIpAddresses",
                        "shape": "InstancePrivateIpAddressList",
                        "locationName": "privateIpAddressesSet",
                        "documentation": "\u003cp\u003eThe private IP addresses associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[InstancePrivateIpAddress]",
                        "type": "[InstancePrivateIpAddress]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniSourceDestCheck",
                        "name": "_iniSourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether to validate network traffic to or from this network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniStatus",
                        "name": "_iniStatus",
                        "shape": "NetworkInterfaceStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniSubnetId",
                        "name": "_iniSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniVpcId",
                        "name": "_iniVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "volumeStatusAction",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vsaCode",
                    "name": "_vsaCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe code identifying the operation, for example, \u003ccode\u003eenable-volume-io\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeStatusAction",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaCode",
                        "name": "_vsaCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe code identifying the operation, for example, \u003ccode\u003eenable-volume-io\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaDescription",
                        "name": "_vsaDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaEventType",
                        "name": "_vsaEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "\u003cp\u003eThe event type associated with this operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaEventId",
                        "name": "_vsaEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "\u003cp\u003eThe ID of the event associated with this operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaCode",
                        "name": "_vsaCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe code identifying the operation, for example, \u003ccode\u003eenable-volume-io\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaDescription",
                        "name": "_vsaDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaEventId",
                        "name": "_vsaEventId",
                        "shape": "String",
                        "locationName": "eventId",
                        "documentation": "\u003cp\u003eThe ID of the event associated with this operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsaEventType",
                        "name": "_vsaEventType",
                        "shape": "String",
                        "locationName": "eventType",
                        "documentation": "\u003cp\u003eThe event type associated with this operation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "vpcPeeringConnectionVpcInfo",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vpcviCidrBlock",
                    "name": "_vpcviCidrBlock",
                    "shape": "String",
                    "locationName": "cidrBlock",
                    "documentation": "\u003cp\u003eThe CIDR block for the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpcPeeringConnectionVpcInfo",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviCidrBlock",
                        "name": "_vpcviCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviOwnerId",
                        "name": "_vpcviOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the VPC owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviVpcId",
                        "name": "_vpcviVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviCidrBlock",
                        "name": "_vpcviCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviOwnerId",
                        "name": "_vpcviOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the VPC owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcviVpcId",
                        "name": "_vpcviVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "reservedInstanceLimitPrice",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rilpAmount",
                    "name": "_rilpAmount",
                    "shape": "Double",
                    "locationName": "amount",
                    "documentation": "\u003cp\u003eUsed for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).\u003c/p\u003e",
                    "typeExposed": "Maybe Double",
                    "type": "Maybe Double"
                },
                "required": [],
                "name": "ReservedInstanceLimitPrice",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilpAmount",
                        "name": "_rilpAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "\u003cp\u003eUsed for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilpCurrencyCode",
                        "name": "_rilpCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency in which the \u003ccode\u003elimitPrice\u003c/code\u003e amount is specified. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilpAmount",
                        "name": "_rilpAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "\u003cp\u003eUsed for Reserved Instance Marketplace offerings. Specifies the limit price on the total order (instanceCount * price).\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rilpCurrencyCode",
                        "name": "_rilpCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency in which the \u003ccode\u003elimitPrice\u003c/code\u003e amount is specified. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "vpc",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "v1VpcId",
                    "name": "_v1VpcId",
                    "shape": "String",
                    "locationName": "vpcId",
                    "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Vpc",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1VpcId",
                        "name": "_v1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1State",
                        "name": "_v1State",
                        "shape": "VpcState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1CidrBlock",
                        "name": "_v1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1DhcpOptionsId",
                        "name": "_v1DhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the set of DHCP options you've associated with the VPC (or \u003ccode\u003edefault\u003c/code\u003e if the default options are associated with the VPC).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "v1Tags",
                        "name": "_v1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the VPC.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1InstanceTenancy",
                        "name": "_v1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe allowed tenancy of instances launched into the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1IsDefault",
                        "name": "_v1IsDefault",
                        "shape": "Boolean",
                        "locationName": "isDefault",
                        "documentation": "\u003cp\u003eIndicates whether the VPC is the default VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1CidrBlock",
                        "name": "_v1CidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1DhcpOptionsId",
                        "name": "_v1DhcpOptionsId",
                        "shape": "String",
                        "locationName": "dhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the set of DHCP options you've associated with the VPC (or \u003ccode\u003edefault\u003c/code\u003e if the default options are associated with the VPC).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1InstanceTenancy",
                        "name": "_v1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe allowed tenancy of instances launched into the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1IsDefault",
                        "name": "_v1IsDefault",
                        "shape": "Boolean",
                        "locationName": "isDefault",
                        "documentation": "\u003cp\u003eIndicates whether the VPC is the default VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1State",
                        "name": "_v1State",
                        "shape": "VpcState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "v1Tags",
                        "name": "_v1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the VPC.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "v1VpcId",
                        "name": "_v1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "instanceStatus",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "isInstanceId",
                    "name": "_isInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceStatus",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceId",
                        "name": "_isInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isAvailabilityZone",
                        "name": "_isAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "isEvents",
                        "name": "_isEvents",
                        "shape": "InstanceStatusEventList",
                        "locationName": "eventsSet",
                        "documentation": "\u003cp\u003eExtra information regarding events associated with the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatusEvent]",
                        "type": "[InstanceStatusEvent]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceState",
                        "name": "_isInstanceState",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "\u003cp\u003eThe intended state of the instance. \u003ca\u003eDescribeInstanceStatus\u003c/a\u003e requires that an instance be in the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isSystemStatus",
                        "name": "_isSystemStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "systemStatus",
                        "documentation": "\u003cp\u003eReports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceStatus",
                        "name": "_isInstanceStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "instanceStatus",
                        "documentation": "\u003cp\u003eReports impaired functionality that stems from issues internal to the instance, such as impaired reachability.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isAvailabilityZone",
                        "name": "_isAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "isEvents",
                        "name": "_isEvents",
                        "shape": "InstanceStatusEventList",
                        "locationName": "eventsSet",
                        "documentation": "\u003cp\u003eExtra information regarding events associated with the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatusEvent]",
                        "type": "[InstanceStatusEvent]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceId",
                        "name": "_isInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceState",
                        "name": "_isInstanceState",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "\u003cp\u003eThe intended state of the instance. \u003ca\u003eDescribeInstanceStatus\u003c/a\u003e requires that an instance be in the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isInstanceStatus",
                        "name": "_isInstanceStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "instanceStatus",
                        "documentation": "\u003cp\u003eReports impaired functionality that stems from issues internal to the instance, such as impaired reachability.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "isSystemStatus",
                        "name": "_isSystemStatus",
                        "shape": "InstanceStatusSummary",
                        "locationName": "systemStatus",
                        "documentation": "\u003cp\u003eReports impaired functionality that stems from issues related to the systems that support an instance, such as hardware failures and network connectivity problems.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceStatusSummary",
                        "type": "Maybe InstanceStatusSummary"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "I386": "i386",
                    "X8664": "x86_64"
                },
                "valuePad": 7,
                "name": "ArchitectureValues",
                "type": "nullary",
                "branchPad": 5
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "PerformanceOther": "performance-other",
                    "Other": "other",
                    "Unresponsive": "unresponsive",
                    "NotAcceptingCredentials": "not-accepting-credentials",
                    "InstanceStuckInState": "instance-stuck-in-state",
                    "PerformanceNetwork": "performance-network",
                    "PerformanceInstanceStore": "performance-instance-store",
                    "PerformanceEbsVolume": "performance-ebs-volume",
                    "PasswordNotAvailable": "password-not-available"
                },
                "valuePad": 27,
                "name": "ReportInstanceReasonCodes",
                "type": "nullary",
                "branchPad": 24
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 23,
                "ctor": "ebsBlockDevice",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ebdSnapshotId",
                    "name": "_ebdSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "EbsBlockDevice",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdSnapshotId",
                        "name": "_ebdSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdVolumeSize",
                        "name": "_ebdVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e \u003cp\u003eConstraints: If the volume type is \u003ccode\u003eio1\u003c/code\u003e, the minimum size of the volume is 10 GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024 GiB. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\u003c/p\u003e \u003cp\u003eDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdDeleteOnTermination",
                        "name": "_ebdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdVolumeType",
                        "name": "_ebdVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "\u003cp\u003eThe volume type. \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, and \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estandard\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdIops",
                        "name": "_ebdIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "\u003cp\u003eThe number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\"\u003eAmazon EBS Volume Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD) volumes.\u003c/p\u003e \u003cp\u003eCondition: This parameter is required for requests to create \u003ccode\u003eio1\u003c/code\u003e volumes; it is not used in requests to create \u003ccode\u003estandard\u003c/code\u003e or \u003ccode\u003egp2\u003c/code\u003e volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdEncrypted",
                        "name": "_ebdEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdDeleteOnTermination",
                        "name": "_ebdDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdEncrypted",
                        "name": "_ebdEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is encrypted. Encrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdIops",
                        "name": "_ebdIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "\u003cp\u003eThe number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\"\u003eAmazon EBS Volume Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD) volumes.\u003c/p\u003e \u003cp\u003eCondition: This parameter is required for requests to create \u003ccode\u003eio1\u003c/code\u003e volumes; it is not used in requests to create \u003ccode\u003estandard\u003c/code\u003e or \u003ccode\u003egp2\u003c/code\u003e volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdSnapshotId",
                        "name": "_ebdSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdVolumeSize",
                        "name": "_ebdVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e \u003cp\u003eConstraints: If the volume type is \u003ccode\u003eio1\u003c/code\u003e, the minimum size of the volume is 10 GiB; otherwise, the minimum size is 1 GiB. The maximum volume size is 1024 GiB. If you specify a snapshot, the volume size must be equal to or larger than the snapshot size.\u003c/p\u003e \u003cp\u003eDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ebdVolumeType",
                        "name": "_ebdVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "\u003cp\u003eThe volume type. \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, and \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estandard\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "accountAttribute",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aaAttributeName",
                    "name": "_aaAttributeName",
                    "shape": "String",
                    "locationName": "attributeName",
                    "documentation": "\u003cp\u003eThe name of the account attribute.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AccountAttribute",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aaAttributeName",
                        "name": "_aaAttributeName",
                        "shape": "String",
                        "locationName": "attributeName",
                        "documentation": "\u003cp\u003eThe name of the account attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "aaAttributeValues",
                        "name": "_aaAttributeValues",
                        "shape": "AccountAttributeValueList",
                        "locationName": "attributeValueSet",
                        "documentation": "\u003cp\u003eOne or more values for the account attribute.\u003c/p\u003e",
                        "typeExposed": "[AccountAttributeValue]",
                        "type": "[AccountAttributeValue]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aaAttributeName",
                        "name": "_aaAttributeName",
                        "shape": "String",
                        "locationName": "attributeName",
                        "documentation": "\u003cp\u003eThe name of the account attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "aaAttributeValues",
                        "name": "_aaAttributeValues",
                        "shape": "AccountAttributeValueList",
                        "locationName": "attributeValueSet",
                        "documentation": "\u003cp\u003eOne or more values for the account attribute.\u003c/p\u003e",
                        "typeExposed": "[AccountAttributeValue]",
                        "type": "[AccountAttributeValue]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "priceSchedule",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "psTerm",
                    "name": "_psTerm",
                    "shape": "Long",
                    "locationName": "term",
                    "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                    "typeExposed": "Maybe Integer",
                    "type": "Maybe Integer"
                },
                "required": [],
                "name": "PriceSchedule",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psTerm",
                        "name": "_psTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psPrice",
                        "name": "_psPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe fixed price for the term.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psCurrencyCode",
                        "name": "_psCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency for transacting the Reserved Instance resale. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psActive",
                        "name": "_psActive",
                        "shape": "Boolean",
                        "locationName": "active",
                        "documentation": "\u003cp\u003eThe current price schedule, as determined by the term remaining for the Reserved Instance in the listing.\u003c/p\u003e \u003cp\u003eA specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psActive",
                        "name": "_psActive",
                        "shape": "Boolean",
                        "locationName": "active",
                        "documentation": "\u003cp\u003eThe current price schedule, as determined by the term remaining for the Reserved Instance in the listing.\u003c/p\u003e \u003cp\u003eA specific price schedule is always in effect, but only one price schedule can be active at any time. Take, for example, a Reserved Instance listing that has five months remaining in its term. When you specify price schedules for five months and two months, this means that schedule 1, covering the first three months of the remaining term, will be active during months 5, 4, and 3. Then schedule 2, covering the last two months of the term, will be active for months 2 and 1.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psCurrencyCode",
                        "name": "_psCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency for transacting the Reserved Instance resale. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psPrice",
                        "name": "_psPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe fixed price for the term.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "psTerm",
                        "name": "_psTerm",
                        "shape": "Long",
                        "locationName": "term",
                        "documentation": "\u003cp\u003eThe number of months remaining in the reservation. For example, 2 is the second to the last month before the capacity reservation expires.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "InstanceStore": "instance-store",
                    "Ebs": "ebs"
                },
                "valuePad": 15,
                "name": "DeviceType",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "DTStandard": "standard",
                    "DTVpc": "vpc"
                },
                "valuePad": 9,
                "name": "DomainType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "region",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rRegionName",
                    "name": "_rRegionName",
                    "shape": "String",
                    "locationName": "regionName",
                    "documentation": "\u003cp\u003eThe name of the region.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Region",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rRegionName",
                        "name": "_rRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "\u003cp\u003eThe name of the region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rEndpoint",
                        "name": "_rEndpoint",
                        "shape": "String",
                        "locationName": "regionEndpoint",
                        "documentation": "\u003cp\u003eThe region service endpoint.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rEndpoint",
                        "name": "_rEndpoint",
                        "shape": "String",
                        "locationName": "regionEndpoint",
                        "documentation": "\u003cp\u003eThe region service endpoint.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rRegionName",
                        "name": "_rRegionName",
                        "shape": "String",
                        "locationName": "regionName",
                        "documentation": "\u003cp\u003eThe name of the region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "propagatingVgw",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pvGatewayId",
                    "name": "_pvGatewayId",
                    "shape": "String",
                    "locationName": "gatewayId",
                    "documentation": "\u003cp\u003eThe ID of the virtual private gateway (VGW).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pvGatewayId",
                    "name": "_pvGatewayId",
                    "shape": "String",
                    "locationName": "gatewayId",
                    "documentation": "\u003cp\u003eThe ID of the virtual private gateway (VGW).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "PropagatingVgw",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pvGatewayId",
                        "name": "_pvGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway (VGW).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pvGatewayId",
                        "name": "_pvGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway (VGW).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "MediumUtilization": "Medium Utilization",
                    "HeavyUtilization": "Heavy Utilization",
                    "LightUtilization": "Light Utilization"
                },
                "valuePad": 19,
                "name": "OfferingTypeValues",
                "type": "nullary",
                "branchPad": 17
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "vpnGateway",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vgVpnGatewayId",
                    "name": "_vgVpnGatewayId",
                    "shape": "String",
                    "locationName": "vpnGatewayId",
                    "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpnGateway",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgVpnGatewayId",
                        "name": "_vgVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgState",
                        "name": "_vgState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgType",
                        "name": "_vgType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection the virtual private gateway supports.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgAvailabilityZone",
                        "name": "_vgAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the virtual private gateway was created.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vgVpcAttachments",
                        "name": "_vgVpcAttachments",
                        "shape": "VpcAttachmentList",
                        "locationName": "attachments",
                        "documentation": "\u003cp\u003eAny VPCs attached to the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "[VpcAttachment]",
                        "type": "[VpcAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vgTags",
                        "name": "_vgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgAvailabilityZone",
                        "name": "_vgAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone where the virtual private gateway was created.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgState",
                        "name": "_vgState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vgTags",
                        "name": "_vgTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgType",
                        "name": "_vgType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection the virtual private gateway supports.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vgVpcAttachments",
                        "name": "_vgVpcAttachments",
                        "shape": "VpcAttachmentList",
                        "locationName": "attachments",
                        "documentation": "\u003cp\u003eAny VPCs attached to the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "[VpcAttachment]",
                        "type": "[VpcAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vgVpnGatewayId",
                        "name": "_vgVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 8,
                "ctor": "filter",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "fName",
                    "name": "_fName",
                    "shape": "String",
                    "locationName": "Name",
                    "documentation": "\u003cp\u003eThe name of the filter.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "fName",
                        "name": "_fName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the filter.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "Filter",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "fValues",
                        "name": "_fValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eOne or more filter values.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "fName",
                        "name": "_fName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the filter.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "fValues",
                        "name": "_fValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eOne or more filter values.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Standard": "standard",
                    "Io1": "io1",
                    "Gp2": "gp2"
                },
                "valuePad": 9,
                "name": "VolumeType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "instanceStateChange",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iscInstanceId",
                    "name": "_iscInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceStateChange",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscInstanceId",
                        "name": "_iscInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscCurrentState",
                        "name": "_iscCurrentState",
                        "shape": "InstanceState",
                        "locationName": "currentState",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscPreviousState",
                        "name": "_iscPreviousState",
                        "shape": "InstanceState",
                        "locationName": "previousState",
                        "documentation": "\u003cp\u003eThe previous state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscCurrentState",
                        "name": "_iscCurrentState",
                        "shape": "InstanceState",
                        "locationName": "currentState",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscInstanceId",
                        "name": "_iscInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iscPreviousState",
                        "name": "_iscPreviousState",
                        "shape": "InstanceState",
                        "locationName": "previousState",
                        "documentation": "\u003cp\u003eThe previous state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "networkAcl",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "naNetworkAclId",
                    "name": "_naNetworkAclId",
                    "shape": "String",
                    "locationName": "networkAclId",
                    "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkAcl",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naNetworkAclId",
                        "name": "_naNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naVpcId",
                        "name": "_naVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC for the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naIsDefault",
                        "name": "_naIsDefault",
                        "shape": "Boolean",
                        "locationName": "default",
                        "documentation": "\u003cp\u003eIndicates whether this is the default network ACL for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naEntries",
                        "name": "_naEntries",
                        "shape": "NetworkAclEntryList",
                        "locationName": "entrySet",
                        "documentation": "\u003cp\u003eOne or more entries (rules) in the network ACL.\u003c/p\u003e",
                        "typeExposed": "[NetworkAclEntry]",
                        "type": "[NetworkAclEntry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naAssociations",
                        "name": "_naAssociations",
                        "shape": "NetworkAclAssociationList",
                        "locationName": "associationSet",
                        "documentation": "\u003cp\u003eAny associations between the network ACL and one or more subnets\u003c/p\u003e",
                        "typeExposed": "[NetworkAclAssociation]",
                        "type": "[NetworkAclAssociation]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naTags",
                        "name": "_naTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the network ACL.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naAssociations",
                        "name": "_naAssociations",
                        "shape": "NetworkAclAssociationList",
                        "locationName": "associationSet",
                        "documentation": "\u003cp\u003eAny associations between the network ACL and one or more subnets\u003c/p\u003e",
                        "typeExposed": "[NetworkAclAssociation]",
                        "type": "[NetworkAclAssociation]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naEntries",
                        "name": "_naEntries",
                        "shape": "NetworkAclEntryList",
                        "locationName": "entrySet",
                        "documentation": "\u003cp\u003eOne or more entries (rules) in the network ACL.\u003c/p\u003e",
                        "typeExposed": "[NetworkAclEntry]",
                        "type": "[NetworkAclEntry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naIsDefault",
                        "name": "_naIsDefault",
                        "shape": "Boolean",
                        "locationName": "default",
                        "documentation": "\u003cp\u003eIndicates whether this is the default network ACL for the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naNetworkAclId",
                        "name": "_naNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "naTags",
                        "name": "_naTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the network ACL.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "naVpcId",
                        "name": "_naVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC for the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ISAvailable": "available",
                    "ISDeregistered": "deregistered"
                },
                "valuePad": 13,
                "name": "ImageState",
                "type": "nullary",
                "branchPad": 14
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Ipsec1": "ipsec.1"
                },
                "valuePad": 8,
                "name": "GatewayType",
                "type": "nullary",
                "branchPad": 6
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "instanceNetworkInterfaceAttachment",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iniaAttachmentId",
                    "name": "_iniaAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceNetworkInterfaceAttachment",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaAttachmentId",
                        "name": "_iniaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaDeviceIndex",
                        "name": "_iniaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device on the instance for the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaStatus",
                        "name": "_iniaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaAttachTime",
                        "name": "_iniaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaDeleteOnTermination",
                        "name": "_iniaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaAttachTime",
                        "name": "_iniaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaAttachmentId",
                        "name": "_iniaAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaDeleteOnTermination",
                        "name": "_iniaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaDeviceIndex",
                        "name": "_iniaDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device on the instance for the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iniaStatus",
                        "name": "_iniaStatus",
                        "shape": "AttachmentStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "fieldPad": 0,
                "ctor": "attributeBooleanValue",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "abvValue",
                    "name": "_abvValue",
                    "shape": "Boolean",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "abvValue",
                    "name": "_abvValue",
                    "shape": "Boolean",
                    "locationName": "value",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "AttributeBooleanValue",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "abvValue",
                        "name": "_abvValue",
                        "shape": "Boolean",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "abvValue",
                        "name": "_abvValue",
                        "shape": "Boolean",
                        "locationName": "value",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "recurringCharge",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rcFrequency",
                    "name": "_rcFrequency",
                    "shape": "RecurringChargeFrequency",
                    "locationName": "frequency",
                    "documentation": "\u003cp\u003eThe frequency of the recurring charge.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "RecurringCharge",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rcFrequency",
                        "name": "_rcFrequency",
                        "shape": "RecurringChargeFrequency",
                        "locationName": "frequency",
                        "documentation": "\u003cp\u003eThe frequency of the recurring charge.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rcAmount",
                        "name": "_rcAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "\u003cp\u003eThe amount of the recurring charge.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rcAmount",
                        "name": "_rcAmount",
                        "shape": "Double",
                        "locationName": "amount",
                        "documentation": "\u003cp\u003eThe amount of the recurring charge.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rcFrequency",
                        "name": "_rcFrequency",
                        "shape": "RecurringChargeFrequency",
                        "locationName": "frequency",
                        "documentation": "\u003cp\u003eThe frequency of the recurring charge.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "newDhcpConfiguration",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ndcKey",
                    "name": "_ndcKey",
                    "shape": "String",
                    "locationName": "key",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NewDhcpConfiguration",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ndcKey",
                        "name": "_ndcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ndcValues",
                        "name": "_ndcValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ndcKey",
                        "name": "_ndcKey",
                        "shape": "String",
                        "locationName": "key",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ndcValues",
                        "name": "_ndcValues",
                        "shape": "ValueStringList",
                        "locationName": "Value",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "stateReason",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "srCode",
                    "name": "_srCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe reason code for the state change.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "StateReason",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srCode",
                        "name": "_srCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe reason code for the state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srMessage",
                        "name": "_srMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message for the state change.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.SpotInstanceTermination\u003c/code\u003e: A Spot Instance was terminated due to an increase in the market price.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.InternalError\u003c/code\u003e: An internal error occurred during instance launch, resulting in termination.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.InsufficientInstanceCapacity\u003c/code\u003e: There was insufficient instance capacity to satisfy the launch request.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InternalError\u003c/code\u003e: A client error caused the instance to terminate on launch.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InstanceInitiatedShutdown\u003c/code\u003e: The instance was shut down using the \u003ccode\u003eshutdown -h\u003c/code\u003e command from the instance.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.UserInitiatedShutdown\u003c/code\u003e: The instance was shut down using the Amazon EC2 API.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.VolumeLimitExceeded\u003c/code\u003e: The volume limit was exceeded.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InvalidSnapshot.NotFound\u003c/code\u003e: The specified snapshot was not found.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srCode",
                        "name": "_srCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe reason code for the state change.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "srMessage",
                        "name": "_srMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe message for the state change.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.SpotInstanceTermination\u003c/code\u003e: A Spot Instance was terminated due to an increase in the market price.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.InternalError\u003c/code\u003e: An internal error occurred during instance launch, resulting in termination.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServer.InsufficientInstanceCapacity\u003c/code\u003e: There was insufficient instance capacity to satisfy the launch request.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InternalError\u003c/code\u003e: A client error caused the instance to terminate on launch.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InstanceInitiatedShutdown\u003c/code\u003e: The instance was shut down using the \u003ccode\u003eshutdown -h\u003c/code\u003e command from the instance.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.UserInitiatedShutdown\u003c/code\u003e: The instance was shut down using the Amazon EC2 API.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.VolumeLimitExceeded\u003c/code\u003e: The volume limit was exceeded.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eClient.InvalidSnapshot.NotFound\u003c/code\u003e: The specified snapshot was not found.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "MSEnabled": "enabled",
                    "MSPending": "pending",
                    "MSDisabled": "disabled"
                },
                "valuePad": 9,
                "name": "MonitoringState",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "reservedInstancesId",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "riiReservedInstancesId",
                    "name": "_riiReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "riiReservedInstancesId",
                    "name": "_riiReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesId",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riiReservedInstancesId",
                        "name": "_riiReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riiReservedInstancesId",
                        "name": "_riiReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Reachability": "reachability"
                },
                "valuePad": 13,
                "name": "StatusName",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "internetGateway",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "igInternetGatewayId",
                    "name": "_igInternetGatewayId",
                    "shape": "String",
                    "locationName": "internetGatewayId",
                    "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igInternetGatewayId",
                        "name": "_igInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "InternetGateway",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "igAttachments",
                        "name": "_igAttachments",
                        "shape": "InternetGatewayAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": "\u003cp\u003eAny VPCs attached to the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "[InternetGatewayAttachment]",
                        "type": "[InternetGatewayAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "igTags",
                        "name": "_igTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "igAttachments",
                        "name": "_igAttachments",
                        "shape": "InternetGatewayAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": "\u003cp\u003eAny VPCs attached to the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "[InternetGatewayAttachment]",
                        "type": "[InternetGatewayAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "igInternetGatewayId",
                        "name": "_igInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "igTags",
                        "name": "_igTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "IoPerformance": "io-performance",
                    "IoEnabled": "io-enabled"
                },
                "valuePad": 15,
                "name": "VolumeStatusName",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ProductCodes": "productCodes",
                    "AutoEnableIO": "autoEnableIO"
                },
                "valuePad": 13,
                "name": "VolumeAttributeName",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "importInstanceTaskDetails",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "iitdVolumes",
                    "name": "_iitdVolumes",
                    "shape": "ImportInstanceVolumeDetailSet",
                    "locationName": "volumes",
                    "documentation": null,
                    "typeExposed": "[ImportInstanceVolumeDetailItem]",
                    "type": "[ImportInstanceVolumeDetailItem]"
                },
                "required": [],
                "name": "ImportInstanceTaskDetails",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iitdVolumes",
                        "name": "_iitdVolumes",
                        "shape": "ImportInstanceVolumeDetailSet",
                        "locationName": "volumes",
                        "documentation": null,
                        "typeExposed": "[ImportInstanceVolumeDetailItem]",
                        "type": "[ImportInstanceVolumeDetailItem]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdInstanceId",
                        "name": "_iitdInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdPlatform",
                        "name": "_iitdPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe instance operating system.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdDescription",
                        "name": "_iitdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdDescription",
                        "name": "_iitdDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdInstanceId",
                        "name": "_iitdInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iitdPlatform",
                        "name": "_iitdPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe instance operating system.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iitdVolumes",
                        "name": "_iitdVolumes",
                        "shape": "ImportInstanceVolumeDetailSet",
                        "locationName": "volumes",
                        "documentation": null,
                        "typeExposed": "[ImportInstanceVolumeDetailItem]",
                        "type": "[ImportInstanceVolumeDetailItem]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "placementGroup",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pgGroupName",
                    "name": "_pgGroupName",
                    "shape": "String",
                    "locationName": "groupName",
                    "documentation": "\u003cp\u003eThe name of the placement group.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "PlacementGroup",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgStrategy",
                        "name": "_pgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "\u003cp\u003eThe placement strategy.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgState",
                        "name": "_pgState",
                        "shape": "PlacementGroupState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the placement group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgGroupName",
                        "name": "_pgGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgState",
                        "name": "_pgState",
                        "shape": "PlacementGroupState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the placement group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pgStrategy",
                        "name": "_pgStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "\u003cp\u003eThe placement strategy.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "productCode",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pcProductCodeId",
                    "name": "_pcProductCodeId",
                    "shape": "String",
                    "locationName": "productCode",
                    "documentation": "\u003cp\u003eThe product code.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ProductCode",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pcProductCodeId",
                        "name": "_pcProductCodeId",
                        "shape": "String",
                        "locationName": "productCode",
                        "documentation": "\u003cp\u003eThe product code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pcProductCodeType",
                        "name": "_pcProductCodeType",
                        "shape": "ProductCodeValues",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of product code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pcProductCodeId",
                        "name": "_pcProductCodeId",
                        "shape": "String",
                        "locationName": "productCode",
                        "documentation": "\u003cp\u003eThe product code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pcProductCodeType",
                        "name": "_pcProductCodeType",
                        "shape": "ProductCodeValues",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of product code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "LISTINGSTATUSClosed": "closed",
                    "LISTINGSTATUSPending": "pending",
                    "LISTINGSTATUSActive": "active",
                    "LISTINGSTATUSCancelled": "cancelled"
                },
                "valuePad": 10,
                "name": "ListingStatus",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "ipRange",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "irCidrIp",
                    "name": "_irCidrIp",
                    "shape": "String",
                    "locationName": "cidrIp",
                    "documentation": "\u003cp\u003eThe CIDR range. You can either specify a CIDR range or a source security group, not both.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "irCidrIp",
                    "name": "_irCidrIp",
                    "shape": "String",
                    "locationName": "cidrIp",
                    "documentation": "\u003cp\u003eThe CIDR range. You can either specify a CIDR range or a source security group, not both.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "irCidrIp",
                        "name": "_irCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR range. You can either specify a CIDR range or a source security group, not both.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "IpRange",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "irCidrIp",
                        "name": "_irCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR range. You can either specify a CIDR range or a source security group, not both.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "VSISInsufficientData": "insufficient-data",
                    "VSISImpaired": "impaired",
                    "VSISOk": "ok"
                },
                "valuePad": 18,
                "name": "VolumeStatusInfoStatus",
                "type": "nullary",
                "branchPad": 20
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "fieldPad": 0,
                "ctor": "accountAttributeValue",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aavAttributeValue",
                    "name": "_aavAttributeValue",
                    "shape": "String",
                    "locationName": "attributeValue",
                    "documentation": "\u003cp\u003eThe value of the attribute.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aavAttributeValue",
                    "name": "_aavAttributeValue",
                    "shape": "String",
                    "locationName": "attributeValue",
                    "documentation": "\u003cp\u003eThe value of the attribute.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AccountAttributeValue",
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aavAttributeValue",
                        "name": "_aavAttributeValue",
                        "shape": "String",
                        "locationName": "attributeValue",
                        "documentation": "\u003cp\u003eThe value of the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aavAttributeValue",
                        "name": "_aavAttributeValue",
                        "shape": "String",
                        "locationName": "attributeValue",
                        "documentation": "\u003cp\u003eThe value of the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "RIPDLinuxUNIX": "Linux/UNIX",
                    "RIPDLinuxUNIXAmazonVPC": "Linux/UNIX (Amazon VPC)",
                    "RIPDWindows": "Windows",
                    "RIPDWindowsAmazonVPC": "Windows (Amazon VPC)"
                },
                "valuePad": 24,
                "name": "RIProductDescription",
                "type": "nullary",
                "branchPad": 22
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 31,
                "ctor": "reservedInstancesOffering",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rioReservedInstancesOfferingId",
                    "name": "_rioReservedInstancesOfferingId",
                    "shape": "String",
                    "locationName": "reservedInstancesOfferingId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance offering.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstancesOffering",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioReservedInstancesOfferingId",
                        "name": "_rioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "reservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance offering.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioInstanceType",
                        "name": "_rioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioAvailabilityZone",
                        "name": "_rioAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioDuration",
                        "name": "_rioDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "\u003cp\u003eThe duration of the Reserved Instance, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioUsagePrice",
                        "name": "_rioUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "\u003cp\u003eThe usage price of the Reserved Instance, per hour.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioFixedPrice",
                        "name": "_rioFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "\u003cp\u003eThe purchase price of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioProductDescription",
                        "name": "_rioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioInstanceTenancy",
                        "name": "_rioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the reserved instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioCurrencyCode",
                        "name": "_rioCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioOfferingType",
                        "name": "_rioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rioRecurringCharges",
                        "name": "_rioRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "\u003cp\u003eThe recurring charge tag assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[RecurringCharge]",
                        "type": "[RecurringCharge]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioMarketplace",
                        "name": "_rioMarketplace",
                        "shape": "Boolean",
                        "locationName": "marketplace",
                        "documentation": "\u003cp\u003eIndicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rioPricingDetails",
                        "name": "_rioPricingDetails",
                        "shape": "PricingDetailsList",
                        "locationName": "pricingDetailsSet",
                        "documentation": "\u003cp\u003eThe pricing details of the Reserved Instance offering.\u003c/p\u003e",
                        "typeExposed": "[PricingDetail]",
                        "type": "[PricingDetail]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioAvailabilityZone",
                        "name": "_rioAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioCurrencyCode",
                        "name": "_rioCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency of the Reserved Instance offering you are purchasing. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioDuration",
                        "name": "_rioDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "\u003cp\u003eThe duration of the Reserved Instance, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioFixedPrice",
                        "name": "_rioFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "\u003cp\u003eThe purchase price of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioInstanceTenancy",
                        "name": "_rioInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the reserved instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioInstanceType",
                        "name": "_rioInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioMarketplace",
                        "name": "_rioMarketplace",
                        "shape": "Boolean",
                        "locationName": "marketplace",
                        "documentation": "\u003cp\u003eIndicates whether the offering is available through the Reserved Instance Marketplace (resale) or AWS. If it's a Reserved Instance Marketplace offering, this is \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioOfferingType",
                        "name": "_rioOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rioPricingDetails",
                        "name": "_rioPricingDetails",
                        "shape": "PricingDetailsList",
                        "locationName": "pricingDetailsSet",
                        "documentation": "\u003cp\u003eThe pricing details of the Reserved Instance offering.\u003c/p\u003e",
                        "typeExposed": "[PricingDetail]",
                        "type": "[PricingDetail]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioProductDescription",
                        "name": "_rioProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rioRecurringCharges",
                        "name": "_rioRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "\u003cp\u003eThe recurring charge tag assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[RecurringCharge]",
                        "type": "[RecurringCharge]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioReservedInstancesOfferingId",
                        "name": "_rioReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "reservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance offering.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rioUsagePrice",
                        "name": "_rioUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "\u003cp\u003eThe usage price of the Reserved Instance, per hour.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "reservedInstances",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "riReservedInstancesId",
                    "name": "_riReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReservedInstances",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riReservedInstancesId",
                        "name": "_riReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceType",
                        "name": "_riInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riAvailabilityZone",
                        "name": "_riAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "riStart",
                        "name": "_riStart",
                        "shape": "DateTime",
                        "locationName": "start",
                        "documentation": "\u003cp\u003eThe date and time the Reserved Instance started.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "riEnd",
                        "name": "_riEnd",
                        "shape": "DateTime",
                        "locationName": "end",
                        "documentation": "\u003cp\u003eThe time when the Reserved Instance expires.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riDuration",
                        "name": "_riDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "\u003cp\u003eThe duration of the Reserved Instance, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riUsagePrice",
                        "name": "_riUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "\u003cp\u003eThe usage price of the Reserved Instance, per hour.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riFixedPrice",
                        "name": "_riFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "\u003cp\u003eThe purchase price of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceCount",
                        "name": "_riInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of Reserved Instances purchased.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riProductDescription",
                        "name": "_riProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riState",
                        "name": "_riState",
                        "shape": "ReservedInstanceState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Reserved Instance purchase.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "riTags",
                        "name": "_riTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceTenancy",
                        "name": "_riInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the reserved instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riCurrencyCode",
                        "name": "_riCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riOfferingType",
                        "name": "_riOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "riRecurringCharges",
                        "name": "_riRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "\u003cp\u003eThe recurring charge tag assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[RecurringCharge]",
                        "type": "[RecurringCharge]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riAvailabilityZone",
                        "name": "_riAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riCurrencyCode",
                        "name": "_riCurrencyCode",
                        "shape": "CurrencyCodeValues",
                        "locationName": "currencyCode",
                        "documentation": "\u003cp\u003eThe currency of the Reserved Instance. It's specified using ISO 4217 standard currency codes. At this time, the only supported currency is \u003ccode\u003eUSD\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riDuration",
                        "name": "_riDuration",
                        "shape": "Long",
                        "locationName": "duration",
                        "documentation": "\u003cp\u003eThe duration of the Reserved Instance, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "riEnd",
                        "name": "_riEnd",
                        "shape": "DateTime",
                        "locationName": "end",
                        "documentation": "\u003cp\u003eThe time when the Reserved Instance expires.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riFixedPrice",
                        "name": "_riFixedPrice",
                        "shape": "Float",
                        "locationName": "fixedPrice",
                        "documentation": "\u003cp\u003eThe purchase price of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceCount",
                        "name": "_riInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of Reserved Instances purchased.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceTenancy",
                        "name": "_riInstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the reserved instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riInstanceType",
                        "name": "_riInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riOfferingType",
                        "name": "_riOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riProductDescription",
                        "name": "_riProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "productDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "riRecurringCharges",
                        "name": "_riRecurringCharges",
                        "shape": "RecurringChargesList",
                        "locationName": "recurringCharges",
                        "documentation": "\u003cp\u003eThe recurring charge tag assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[RecurringCharge]",
                        "type": "[RecurringCharge]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riReservedInstancesId",
                        "name": "_riReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "riStart",
                        "name": "_riStart",
                        "shape": "DateTime",
                        "locationName": "start",
                        "documentation": "\u003cp\u003eThe date and time the Reserved Instance started.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riState",
                        "name": "_riState",
                        "shape": "ReservedInstanceState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the Reserved Instance purchase.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "riTags",
                        "name": "_riTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riUsagePrice",
                        "name": "_riUsagePrice",
                        "shape": "Float",
                        "locationName": "usagePrice",
                        "documentation": "\u003cp\u003eThe usage price of the Reserved Instance, per hour.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "DSSInactive": "Inactive",
                    "DSSActive": "Active"
                },
                "valuePad": 9,
                "name": "DatafeedSubscriptionState",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ETSCompleted": "completed",
                    "ETSCancelled": "cancelled",
                    "ETSCancelling": "cancelling",
                    "ETSActive": "active"
                },
                "valuePad": 11,
                "name": "ExportTaskState",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Marketplace": "marketplace",
                    "Devpay": "devpay"
                },
                "valuePad": 12,
                "name": "ProductCodeValues",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 31,
                "ctor": "vpnConnection",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vcVpnConnectionId",
                    "name": "_vcVpnConnectionId",
                    "shape": "String",
                    "locationName": "vpnConnectionId",
                    "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpnConnection",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcVpnConnectionId",
                        "name": "_vcVpnConnectionId",
                        "shape": "String",
                        "locationName": "vpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcState",
                        "name": "_vcState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcCustomerGatewayConfiguration",
                        "name": "_vcCustomerGatewayConfiguration",
                        "shape": "String",
                        "locationName": "customerGatewayConfiguration",
                        "documentation": "\u003cp\u003eThe configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the \u003ca\u003eCreateVpnConnection\u003c/a\u003e response; however, it's present in the \u003ca\u003eDescribeVpnConnections\u003c/a\u003e response only if the VPN connection is in the \u003ccode\u003epending\u003c/code\u003e or \u003ccode\u003eavailable\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcType",
                        "name": "_vcType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcCustomerGatewayId",
                        "name": "_vcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway at your end of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcVpnGatewayId",
                        "name": "_vcVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway at the AWS side of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcTags",
                        "name": "_vcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the VPN connection.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcVgwTelemetry",
                        "name": "_vcVgwTelemetry",
                        "shape": "VgwTelemetryList",
                        "locationName": "vgwTelemetry",
                        "documentation": "\u003cp\u003eInformation about the VPN tunnel.\u003c/p\u003e",
                        "typeExposed": "[VgwTelemetry]",
                        "type": "[VgwTelemetry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcOptions",
                        "name": "_vcOptions",
                        "shape": "VpnConnectionOptions",
                        "locationName": "options",
                        "documentation": "\u003cp\u003eThe VPN connection options.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnectionOptions",
                        "type": "Maybe VpnConnectionOptions"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcRoutes",
                        "name": "_vcRoutes",
                        "shape": "VpnStaticRouteList",
                        "locationName": "routes",
                        "documentation": "\u003cp\u003eThe static routes associated with the VPN connection.\u003c/p\u003e",
                        "typeExposed": "[VpnStaticRoute]",
                        "type": "[VpnStaticRoute]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcCustomerGatewayConfiguration",
                        "name": "_vcCustomerGatewayConfiguration",
                        "shape": "String",
                        "locationName": "customerGatewayConfiguration",
                        "documentation": "\u003cp\u003eThe configuration information for the VPN connection's customer gateway (in the native XML format). This element is always present in the \u003ca\u003eCreateVpnConnection\u003c/a\u003e response; however, it's present in the \u003ca\u003eDescribeVpnConnections\u003c/a\u003e response only if the VPN connection is in the \u003ccode\u003epending\u003c/code\u003e or \u003ccode\u003eavailable\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcCustomerGatewayId",
                        "name": "_vcCustomerGatewayId",
                        "shape": "String",
                        "locationName": "customerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway at your end of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcOptions",
                        "name": "_vcOptions",
                        "shape": "VpnConnectionOptions",
                        "locationName": "options",
                        "documentation": "\u003cp\u003eThe VPN connection options.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnectionOptions",
                        "type": "Maybe VpnConnectionOptions"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcRoutes",
                        "name": "_vcRoutes",
                        "shape": "VpnStaticRouteList",
                        "locationName": "routes",
                        "documentation": "\u003cp\u003eThe static routes associated with the VPN connection.\u003c/p\u003e",
                        "typeExposed": "[VpnStaticRoute]",
                        "type": "[VpnStaticRoute]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcState",
                        "name": "_vcState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcTags",
                        "name": "_vcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the VPN connection.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcType",
                        "name": "_vcType",
                        "shape": "GatewayType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe type of VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vcVgwTelemetry",
                        "name": "_vcVgwTelemetry",
                        "shape": "VgwTelemetryList",
                        "locationName": "vgwTelemetry",
                        "documentation": "\u003cp\u003eInformation about the VPN tunnel.\u003c/p\u003e",
                        "typeExposed": "[VgwTelemetry]",
                        "type": "[VgwTelemetry]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcVpnConnectionId",
                        "name": "_vcVpnConnectionId",
                        "shape": "String",
                        "locationName": "vpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vcVpnGatewayId",
                        "name": "_vcVpnGatewayId",
                        "shape": "String",
                        "locationName": "vpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway at the AWS side of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 7,
                "ctor": "instanceState",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "isCode",
                    "name": "_isCode",
                    "shape": "Integer",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe low byte represents the state. The high byte is an opaque internal value and should be ignored.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e0\u003c/code\u003e : \u003ccode\u003epending\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e16\u003c/code\u003e : \u003ccode\u003erunning\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e32\u003c/code\u003e : \u003ccode\u003eshutting-down\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e48\u003c/code\u003e : \u003ccode\u003eterminated\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e64\u003c/code\u003e : \u003ccode\u003estopping\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e80\u003c/code\u003e : \u003ccode\u003estopped\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                    "typeExposed": "Int",
                    "type": "Int"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "isCode",
                        "name": "_isCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe low byte represents the state. The high byte is an opaque internal value and should be ignored.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e0\u003c/code\u003e : \u003ccode\u003epending\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e16\u003c/code\u003e : \u003ccode\u003erunning\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e32\u003c/code\u003e : \u003ccode\u003eshutting-down\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e48\u003c/code\u003e : \u003ccode\u003eterminated\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e64\u003c/code\u003e : \u003ccode\u003estopping\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e80\u003c/code\u003e : \u003ccode\u003estopped\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "isName",
                        "name": "_isName",
                        "shape": "InstanceStateName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "name": "InstanceState",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "isCode",
                        "name": "_isCode",
                        "shape": "Integer",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe low byte represents the state. The high byte is an opaque internal value and should be ignored.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e0\u003c/code\u003e : \u003ccode\u003epending\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e16\u003c/code\u003e : \u003ccode\u003erunning\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e32\u003c/code\u003e : \u003ccode\u003eshutting-down\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e48\u003c/code\u003e : \u003ccode\u003eterminated\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e64\u003c/code\u003e : \u003ccode\u003estopping\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003e80\u003c/code\u003e : \u003ccode\u003estopped\u003c/code\u003e\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "isName",
                        "name": "_isName",
                        "shape": "InstanceStateName",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "placement",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pAvailabilityZone",
                    "name": "_pAvailabilityZone",
                    "shape": "String",
                    "locationName": "availabilityZone",
                    "documentation": "\u003cp\u003eThe Availability Zone of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Placement",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pAvailabilityZone",
                        "name": "_pAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGroupName",
                        "name": "_pGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group the instance is in (for cluster compute instances).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pTenancy",
                        "name": "_pTenancy",
                        "shape": "Tenancy",
                        "locationName": "tenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of \u003ccode\u003ededicated\u003c/code\u003e runs on single-tenant hardware.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pAvailabilityZone",
                        "name": "_pAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGroupName",
                        "name": "_pGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group the instance is in (for cluster compute instances).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pTenancy",
                        "name": "_pTenancy",
                        "shape": "Tenancy",
                        "locationName": "tenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of \u003ccode\u003ededicated\u003c/code\u003e runs on single-tenant hardware.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "InstanceReboot": "instance-reboot",
                    "InstanceRetirement": "instance-retirement",
                    "InstanceStop": "instance-stop",
                    "SystemReboot": "system-reboot",
                    "SystemMaintenance": "system-maintenance"
                },
                "valuePad": 20,
                "name": "EventCode",
                "type": "nullary",
                "branchPad": 18
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Persistent": "persistent",
                    "OneTime": "one-time"
                },
                "valuePad": 11,
                "name": "SpotInstanceType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 26,
                "ctor": "vpcPeeringConnection",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vpcAccepterVpcInfo",
                    "name": "_vpcAccepterVpcInfo",
                    "shape": "VpcPeeringConnectionVpcInfo",
                    "locationName": "accepterVpcInfo",
                    "documentation": "\u003cp\u003eThe information of the peer VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                    "type": "Maybe VpcPeeringConnectionVpcInfo"
                },
                "required": [],
                "name": "VpcPeeringConnection",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcAccepterVpcInfo",
                        "name": "_vpcAccepterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "accepterVpcInfo",
                        "documentation": "\u003cp\u003eThe information of the peer VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcExpirationTime",
                        "name": "_vpcExpirationTime",
                        "shape": "DateTime",
                        "locationName": "expirationTime",
                        "documentation": "\u003cp\u003eThe time that an unaccepted VPC peering connection will expire.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcRequesterVpcInfo",
                        "name": "_vpcRequesterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "requesterVpcInfo",
                        "documentation": "\u003cp\u003eThe information of the requester VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcStatus",
                        "name": "_vpcStatus",
                        "shape": "VpcPeeringConnectionStateReason",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionStateReason",
                        "type": "Maybe VpcPeeringConnectionStateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpcTags",
                        "name": "_vpcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVpcPeeringConnectionId",
                        "name": "_vpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcAccepterVpcInfo",
                        "name": "_vpcAccepterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "accepterVpcInfo",
                        "documentation": "\u003cp\u003eThe information of the peer VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcExpirationTime",
                        "name": "_vpcExpirationTime",
                        "shape": "DateTime",
                        "locationName": "expirationTime",
                        "documentation": "\u003cp\u003eThe time that an unaccepted VPC peering connection will expire.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcRequesterVpcInfo",
                        "name": "_vpcRequesterVpcInfo",
                        "shape": "VpcPeeringConnectionVpcInfo",
                        "locationName": "requesterVpcInfo",
                        "documentation": "\u003cp\u003eThe information of the requester VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionVpcInfo",
                        "type": "Maybe VpcPeeringConnectionVpcInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcStatus",
                        "name": "_vpcStatus",
                        "shape": "VpcPeeringConnectionStateReason",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnectionStateReason",
                        "type": "Maybe VpcPeeringConnectionStateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpcTags",
                        "name": "_vpcTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the resource.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpcVpcPeeringConnectionId",
                        "name": "_vpcVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "s3Storage",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ssBucket",
                    "name": "_ssBucket",
                    "shape": "String",
                    "locationName": "bucket",
                    "documentation": "\u003cp\u003eThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "S3Storage",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssBucket",
                        "name": "_ssBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssPrefix",
                        "name": "_ssPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eThe beginning of the file name of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssAWSAccessKeyId",
                        "name": "_ssAWSAccessKeyId",
                        "shape": "String",
                        "locationName": "AWSAccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\"\u003eBest Practices for Managing AWS Access Keys\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssUploadPolicy",
                        "name": "_ssUploadPolicy",
                        "shape": "Blob",
                        "locationName": "uploadPolicy",
                        "documentation": "\u003cp\u003eA Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.\u003c/p\u003e",
                        "typeExposed": "Maybe Blob",
                        "type": "Maybe Blob"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssUploadPolicySignature",
                        "name": "_ssUploadPolicySignature",
                        "shape": "String",
                        "locationName": "uploadPolicySignature",
                        "documentation": "\u003cp\u003eThe signature of the Base64 encoded JSON document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssAWSAccessKeyId",
                        "name": "_ssAWSAccessKeyId",
                        "shape": "String",
                        "locationName": "AWSAccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID of the owner of the bucket. Before you specify a value for your access key ID, review and follow the guidance in \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/aws-access-keys-best-practices.html\"\u003eBest Practices for Managing AWS Access Keys\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssBucket",
                        "name": "_ssBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssPrefix",
                        "name": "_ssPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eThe beginning of the file name of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssUploadPolicy",
                        "name": "_ssUploadPolicy",
                        "shape": "Blob",
                        "locationName": "uploadPolicy",
                        "documentation": "\u003cp\u003eA Base64-encoded Amazon S3 upload policy that gives Amazon EC2 permission to upload items into Amazon S3 on your behalf.\u003c/p\u003e",
                        "typeExposed": "Maybe Blob",
                        "type": "Maybe Blob"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ssUploadPolicySignature",
                        "name": "_ssUploadPolicySignature",
                        "shape": "String",
                        "locationName": "uploadPolicySignature",
                        "documentation": "\u003cp\u003eThe signature of the Base64 encoded JSON document.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "vgwTelemetry",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vtOutsideIpAddress",
                    "name": "_vtOutsideIpAddress",
                    "shape": "String",
                    "locationName": "outsideIpAddress",
                    "documentation": "\u003cp\u003eThe Internet-routable IP address of the virtual private gateway's outside interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VgwTelemetry",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtOutsideIpAddress",
                        "name": "_vtOutsideIpAddress",
                        "shape": "String",
                        "locationName": "outsideIpAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address of the virtual private gateway's outside interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtStatus",
                        "name": "_vtStatus",
                        "shape": "TelemetryStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the VPN tunnel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtLastStatusChange",
                        "name": "_vtLastStatusChange",
                        "shape": "DateTime",
                        "locationName": "lastStatusChange",
                        "documentation": "\u003cp\u003eThe date and time of the last change in status.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtStatusMessage",
                        "name": "_vtStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eIf an error occurs, a description of the error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtAcceptedRouteCount",
                        "name": "_vtAcceptedRouteCount",
                        "shape": "Integer",
                        "locationName": "acceptedRouteCount",
                        "documentation": "\u003cp\u003eThe number of accepted routes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtAcceptedRouteCount",
                        "name": "_vtAcceptedRouteCount",
                        "shape": "Integer",
                        "locationName": "acceptedRouteCount",
                        "documentation": "\u003cp\u003eThe number of accepted routes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtLastStatusChange",
                        "name": "_vtLastStatusChange",
                        "shape": "DateTime",
                        "locationName": "lastStatusChange",
                        "documentation": "\u003cp\u003eThe date and time of the last change in status.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtOutsideIpAddress",
                        "name": "_vtOutsideIpAddress",
                        "shape": "String",
                        "locationName": "outsideIpAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address of the virtual private gateway's outside interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtStatus",
                        "name": "_vtStatus",
                        "shape": "TelemetryStatus",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of the VPN tunnel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vtStatusMessage",
                        "name": "_vtStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eIf an error occurs, a description of the error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "vpnStaticRoute",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vsrDestinationCidrBlock",
                    "name": "_vsrDestinationCidrBlock",
                    "shape": "String",
                    "locationName": "destinationCidrBlock",
                    "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer data center.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VpnStaticRoute",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrDestinationCidrBlock",
                        "name": "_vsrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer data center.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrSource",
                        "name": "_vsrSource",
                        "shape": "VpnStaticRouteSource",
                        "locationName": "source",
                        "documentation": "\u003cp\u003eIndicates how the routes were provided.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrState",
                        "name": "_vsrState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the static route.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrDestinationCidrBlock",
                        "name": "_vsrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer data center.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrSource",
                        "name": "_vsrSource",
                        "shape": "VpnStaticRouteSource",
                        "locationName": "source",
                        "documentation": "\u003cp\u003eIndicates how the routes were provided.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsrState",
                        "name": "_vsrState",
                        "shape": "VpnState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe current state of the static route.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "ISNStopped": "stopped",
                    "ISNPending": "pending",
                    "ISNStopping": "stopping",
                    "ISNShuttingDown": "shutting-down",
                    "ISNRunning": "running",
                    "ISNTerminated": "terminated"
                },
                "valuePad": 14,
                "name": "InstanceStateName",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "instance'",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "i1InstanceId",
                    "name": "_i1InstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Instance",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceId",
                        "name": "_i1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1ImageId",
                        "name": "_i1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI used to launch the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1State",
                        "name": "_i1State",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PrivateDnsName",
                        "name": "_i1PrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PublicDnsName",
                        "name": "_i1PublicDnsName",
                        "shape": "String",
                        "locationName": "dnsName",
                        "documentation": "\u003cp\u003eThe public DNS name assigned to the instance. This name is not available until the instance enters the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1StateTransitionReason",
                        "name": "_i1StateTransitionReason",
                        "shape": "String",
                        "locationName": "reason",
                        "documentation": "\u003cp\u003eThe reason for the most recent state transition. This might be an empty string.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1KeyName",
                        "name": "_i1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair, if this instance was launched with an associated key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1AmiLaunchIndex",
                        "name": "_i1AmiLaunchIndex",
                        "shape": "Integer",
                        "locationName": "amiLaunchIndex",
                        "documentation": "\u003cp\u003eThe AMI launch index, which can be used to find this instance in the launch group.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1ProductCodes",
                        "name": "_i1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eThe product codes attached to this instance.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceType",
                        "name": "_i1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1LaunchTime",
                        "name": "_i1LaunchTime",
                        "shape": "DateTime",
                        "locationName": "launchTime",
                        "documentation": "\u003cp\u003eThe time the instance was launched.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Placement",
                        "name": "_i1Placement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe location where the instance launched.\u003c/p\u003e",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1KernelId",
                        "name": "_i1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe kernel associated with this instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RamdiskId",
                        "name": "_i1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe RAM disk associated with this instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Platform",
                        "name": "_i1Platform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe value is \u003ccode\u003eWindows\u003c/code\u003e for Windows instances; otherwise blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Monitoring",
                        "name": "_i1Monitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "\u003cp\u003eThe monitoring information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SubnetId",
                        "name": "_i1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which the instance is running.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1VpcId",
                        "name": "_i1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC in which the instance is running.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PrivateIpAddress",
                        "name": "_i1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PublicIpAddress",
                        "name": "_i1PublicIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "\u003cp\u003eThe public IP address assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1StateReason",
                        "name": "_i1StateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "\u003cp\u003eThe reason for the most recent state transition.\u003c/p\u003e",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Architecture",
                        "name": "_i1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RootDeviceType",
                        "name": "_i1RootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "\u003cp\u003eThe root device type used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RootDeviceName",
                        "name": "_i1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe root device name (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1BlockDeviceMappings",
                        "name": "_i1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eAny block device mapping entries for the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "[InstanceBlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1VirtualizationType",
                        "name": "_i1VirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe virtualization type of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceLifecycle",
                        "name": "_i1InstanceLifecycle",
                        "shape": "InstanceLifecycleType",
                        "locationName": "instanceLifecycle",
                        "documentation": "\u003cp\u003eIndicates whether this is a Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SpotInstanceRequestId",
                        "name": "_i1SpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1ClientToken",
                        "name": "_i1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eThe idempotency token you provided when you launched the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1Tags",
                        "name": "_i1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1SecurityGroups",
                        "name": "_i1SecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups for the instance.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SourceDestCheck",
                        "name": "_i1SourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eSpecifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the instance to perform NAT. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\"\u003eNAT Instances\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Hypervisor",
                        "name": "_i1Hypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "\u003cp\u003eThe hypervisor type of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1NetworkInterfaces",
                        "name": "_i1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more network interfaces for the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterface]",
                        "type": "[InstanceNetworkInterface]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1IamInstanceProfile",
                        "name": "_i1IamInstanceProfile",
                        "shape": "IamInstanceProfile",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile associated with the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfile",
                        "type": "Maybe IamInstanceProfile"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1EbsOptimized",
                        "name": "_i1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SriovNetSupport",
                        "name": "_i1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSpecifies whether enhanced networking is enabled. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1AmiLaunchIndex",
                        "name": "_i1AmiLaunchIndex",
                        "shape": "Integer",
                        "locationName": "amiLaunchIndex",
                        "documentation": "\u003cp\u003eThe AMI launch index, which can be used to find this instance in the launch group.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Architecture",
                        "name": "_i1Architecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1BlockDeviceMappings",
                        "name": "_i1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eAny block device mapping entries for the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "[InstanceBlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1ClientToken",
                        "name": "_i1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eThe idempotency token you provided when you launched the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1EbsOptimized",
                        "name": "_i1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Hypervisor",
                        "name": "_i1Hypervisor",
                        "shape": "HypervisorType",
                        "locationName": "hypervisor",
                        "documentation": "\u003cp\u003eThe hypervisor type of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1IamInstanceProfile",
                        "name": "_i1IamInstanceProfile",
                        "shape": "IamInstanceProfile",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile associated with the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfile",
                        "type": "Maybe IamInstanceProfile"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1ImageId",
                        "name": "_i1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI used to launch the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceId",
                        "name": "_i1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceLifecycle",
                        "name": "_i1InstanceLifecycle",
                        "shape": "InstanceLifecycleType",
                        "locationName": "instanceLifecycle",
                        "documentation": "\u003cp\u003eIndicates whether this is a Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1InstanceType",
                        "name": "_i1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1KernelId",
                        "name": "_i1KernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe kernel associated with this instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1KeyName",
                        "name": "_i1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair, if this instance was launched with an associated key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1LaunchTime",
                        "name": "_i1LaunchTime",
                        "shape": "DateTime",
                        "locationName": "launchTime",
                        "documentation": "\u003cp\u003eThe time the instance was launched.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Monitoring",
                        "name": "_i1Monitoring",
                        "shape": "Monitoring",
                        "locationName": "monitoring",
                        "documentation": "\u003cp\u003eThe monitoring information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Monitoring",
                        "type": "Maybe Monitoring"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1NetworkInterfaces",
                        "name": "_i1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more network interfaces for the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterface]",
                        "type": "[InstanceNetworkInterface]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Placement",
                        "name": "_i1Placement",
                        "shape": "Placement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe location where the instance launched.\u003c/p\u003e",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1Platform",
                        "name": "_i1Platform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe value is \u003ccode\u003eWindows\u003c/code\u003e for Windows instances; otherwise blank.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PrivateDnsName",
                        "name": "_i1PrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name assigned to the instance. This DNS name can only be used inside the Amazon EC2 network. This name is not available until the instance enters the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PrivateIpAddress",
                        "name": "_i1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1ProductCodes",
                        "name": "_i1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eThe product codes attached to this instance.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PublicDnsName",
                        "name": "_i1PublicDnsName",
                        "shape": "String",
                        "locationName": "dnsName",
                        "documentation": "\u003cp\u003eThe public DNS name assigned to the instance. This name is not available until the instance enters the \u003ccode\u003erunning\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1PublicIpAddress",
                        "name": "_i1PublicIpAddress",
                        "shape": "String",
                        "locationName": "ipAddress",
                        "documentation": "\u003cp\u003eThe public IP address assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RamdiskId",
                        "name": "_i1RamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe RAM disk associated with this instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RootDeviceName",
                        "name": "_i1RootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe root device name (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1RootDeviceType",
                        "name": "_i1RootDeviceType",
                        "shape": "DeviceType",
                        "locationName": "rootDeviceType",
                        "documentation": "\u003cp\u003eThe root device type used by the AMI. The AMI can use an Amazon EBS volume or an instance store volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1SecurityGroups",
                        "name": "_i1SecurityGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups for the instance.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SourceDestCheck",
                        "name": "_i1SourceDestCheck",
                        "shape": "Boolean",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eSpecifies whether to enable an instance launched in a VPC to perform NAT. This controls whether source/destination checking is enabled on the instance. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the instance to perform NAT. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\"\u003eNAT Instances\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SpotInstanceRequestId",
                        "name": "_i1SpotInstanceRequestId",
                        "shape": "String",
                        "locationName": "spotInstanceRequestId",
                        "documentation": "\u003cp\u003eThe ID of the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SriovNetSupport",
                        "name": "_i1SriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSpecifies whether enhanced networking is enabled. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1State",
                        "name": "_i1State",
                        "shape": "InstanceState",
                        "locationName": "instanceState",
                        "documentation": "\u003cp\u003eThe current state of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceState",
                        "type": "Maybe InstanceState"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1StateReason",
                        "name": "_i1StateReason",
                        "shape": "StateReason",
                        "locationName": "stateReason",
                        "documentation": "\u003cp\u003eThe reason for the most recent state transition.\u003c/p\u003e",
                        "typeExposed": "Maybe StateReason",
                        "type": "Maybe StateReason"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1StateTransitionReason",
                        "name": "_i1StateTransitionReason",
                        "shape": "String",
                        "locationName": "reason",
                        "documentation": "\u003cp\u003eThe reason for the most recent state transition. This might be an empty string.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1SubnetId",
                        "name": "_i1SubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which the instance is running.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "i1Tags",
                        "name": "_i1Tags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the instance.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1VirtualizationType",
                        "name": "_i1VirtualizationType",
                        "shape": "VirtualizationType",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe virtualization type of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "i1VpcId",
                        "name": "_i1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC in which the instance is running.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "exportTask",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "etExportTaskId",
                    "name": "_etExportTaskId",
                    "shape": "String",
                    "locationName": "exportTaskId",
                    "documentation": "\u003cp\u003eThe ID of the export task.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ExportTask",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etExportTaskId",
                        "name": "_etExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eThe ID of the export task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etDescription",
                        "name": "_etDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the resource being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etState",
                        "name": "_etState",
                        "shape": "ExportTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etStatusMessage",
                        "name": "_etStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status message related to the export task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etInstanceExportDetails",
                        "name": "_etInstanceExportDetails",
                        "shape": "InstanceExportDetails",
                        "locationName": "instanceExport",
                        "documentation": "\u003cp\u003eThe instance being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceExportDetails",
                        "type": "Maybe InstanceExportDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etExportToS3Task",
                        "name": "_etExportToS3Task",
                        "shape": "ExportToS3Task",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3Task",
                        "type": "Maybe ExportToS3Task"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etDescription",
                        "name": "_etDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description of the resource being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etExportTaskId",
                        "name": "_etExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eThe ID of the export task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etExportToS3Task",
                        "name": "_etExportToS3Task",
                        "shape": "ExportToS3Task",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3Task",
                        "type": "Maybe ExportToS3Task"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etInstanceExportDetails",
                        "name": "_etInstanceExportDetails",
                        "shape": "InstanceExportDetails",
                        "locationName": "instanceExport",
                        "documentation": "\u003cp\u003eThe instance being exported.\u003c/p\u003e",
                        "typeExposed": "Maybe InstanceExportDetails",
                        "type": "Maybe InstanceExportDetails"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etState",
                        "name": "_etState",
                        "shape": "ExportTaskState",
                        "locationName": "state",
                        "documentation": "\u003cp\u003eThe state of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "etStatusMessage",
                        "name": "_etStatusMessage",
                        "shape": "String",
                        "locationName": "statusMessage",
                        "documentation": "\u003cp\u003eThe status message related to the export task.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "RIANLaunchPermission": "launchPermission"
                },
                "valuePad": 17,
                "name": "ResetImageAttributeName",
                "type": "nullary",
                "branchPad": 20
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "requestSpotLaunchSpecification",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rslsImageId",
                    "name": "_rslsImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "RequestSpotLaunchSpecification",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsImageId",
                        "name": "_rslsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsKeyName",
                        "name": "_rslsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsSecurityGroups",
                        "name": "_rslsSecurityGroups",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroup",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsUserData",
                        "name": "_rslsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data to make available to the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsAddressingType",
                        "name": "_rslsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "\u003cp\u003eDeprecated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsInstanceType",
                        "name": "_rslsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsPlacement",
                        "name": "_rslsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe placement information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsKernelId",
                        "name": "_rslsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsRamdiskId",
                        "name": "_rslsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsBlockDeviceMappings",
                        "name": "_rslsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsSubnetId",
                        "name": "_rslsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which to launch the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsNetworkInterfaces",
                        "name": "_rslsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "NetworkInterface",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsIamInstanceProfile",
                        "name": "_rslsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsEbsOptimized",
                        "name": "_rslsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsMonitoring",
                        "name": "_rslsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsSecurityGroupIds",
                        "name": "_rslsSecurityGroupIds",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsAddressingType",
                        "name": "_rslsAddressingType",
                        "shape": "String",
                        "locationName": "addressingType",
                        "documentation": "\u003cp\u003eDeprecated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsBlockDeviceMappings",
                        "name": "_rslsBlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsEbsOptimized",
                        "name": "_rslsEbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsIamInstanceProfile",
                        "name": "_rslsIamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsImageId",
                        "name": "_rslsImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsInstanceType",
                        "name": "_rslsInstanceType",
                        "shape": "InstanceType",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsKernelId",
                        "name": "_rslsKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsKeyName",
                        "name": "_rslsKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsMonitoring",
                        "name": "_rslsMonitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "monitoring",
                        "documentation": null,
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsNetworkInterfaces",
                        "name": "_rslsNetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "NetworkInterface",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsPlacement",
                        "name": "_rslsPlacement",
                        "shape": "SpotPlacement",
                        "locationName": "placement",
                        "documentation": "\u003cp\u003eThe placement information for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotPlacement",
                        "type": "Maybe SpotPlacement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsRamdiskId",
                        "name": "_rslsRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsSecurityGroupIds",
                        "name": "_rslsSecurityGroupIds",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rslsSecurityGroups",
                        "name": "_rslsSecurityGroups",
                        "shape": "ValueStringList",
                        "locationName": "SecurityGroup",
                        "documentation": null,
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsSubnetId",
                        "name": "_rslsSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet in which to launch the Spot Instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rslsUserData",
                        "name": "_rslsUserData",
                        "shape": "String",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data to make available to the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 0,
                "ctor": "volumeDetail",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "vdSize",
                    "name": "_vdSize",
                    "shape": "Long",
                    "locationName": "size",
                    "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "vdSize",
                    "name": "_vdSize",
                    "shape": "Long",
                    "locationName": "size",
                    "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                    "typeExposed": "Integer",
                    "type": "Integer"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vdSize",
                        "name": "_vdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ],
                "name": "VolumeDetail",
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vdSize",
                        "name": "_vdSize",
                        "shape": "Long",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum",
                    "Num"
                ],
                "fieldPad": 8,
                "ctor": "pricingDetail",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "pdPrice",
                    "name": "_pdPrice",
                    "shape": "Double",
                    "locationName": "price",
                    "documentation": "\u003cp\u003eThe price per instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Double",
                    "type": "Maybe Double"
                },
                "required": [],
                "name": "PricingDetail",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdPrice",
                        "name": "_pdPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe price per instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdCount",
                        "name": "_pdCount",
                        "shape": "Integer",
                        "locationName": "count",
                        "documentation": "\u003cp\u003eThe number of instances available for the price.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdCount",
                        "name": "_pdCount",
                        "shape": "Integer",
                        "locationName": "count",
                        "documentation": "\u003cp\u003eThe number of instances available for the price.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pdPrice",
                        "name": "_pdPrice",
                        "shape": "Double",
                        "locationName": "price",
                        "documentation": "\u003cp\u003eThe price per instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Double",
                        "type": "Maybe Double"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "networkInterfacePrivateIpAddress",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "nipiaPrivateIpAddress",
                    "name": "_nipiaPrivateIpAddress",
                    "shape": "String",
                    "locationName": "privateIpAddress",
                    "documentation": "\u003cp\u003eThe private IP address.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "NetworkInterfacePrivateIpAddress",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrivateIpAddress",
                        "name": "_nipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrivateDnsName",
                        "name": "_nipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrimary",
                        "name": "_nipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether this IP address is the primary private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaAssociation",
                        "name": "_nipiaAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP address associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaAssociation",
                        "name": "_nipiaAssociation",
                        "shape": "NetworkInterfaceAssociation",
                        "locationName": "association",
                        "documentation": "\u003cp\u003eThe association information for an Elastic IP address associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAssociation",
                        "type": "Maybe NetworkInterfaceAssociation"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrimary",
                        "name": "_nipiaPrimary",
                        "shape": "Boolean",
                        "locationName": "primary",
                        "documentation": "\u003cp\u003eIndicates whether this IP address is the primary private IP address of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrivateDnsName",
                        "name": "_nipiaPrivateDnsName",
                        "shape": "String",
                        "locationName": "privateDnsName",
                        "documentation": "\u003cp\u003eThe private DNS name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nipiaPrivateIpAddress",
                        "name": "_nipiaPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe private IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Enum",
                    "Show",
                    "Generic"
                ],
                "branches": {
                    "Raw": "RAW",
                    "Vhd": "VHD",
                    "Vmdk": "VMDK"
                },
                "valuePad": 5,
                "name": "DiskImageFormat",
                "type": "nullary",
                "branchPad": 4
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 11,
                "ctor": "bundleTaskError",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "bteCode",
                    "name": "_bteCode",
                    "shape": "String",
                    "locationName": "code",
                    "documentation": "\u003cp\u003eThe error code.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "BundleTaskError",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bteCode",
                        "name": "_bteCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe error code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bteMessage",
                        "name": "_bteMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe error message.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bteCode",
                        "name": "_bteCode",
                        "shape": "String",
                        "locationName": "code",
                        "documentation": "\u003cp\u003eThe error code.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "bteMessage",
                        "name": "_bteMessage",
                        "shape": "String",
                        "locationName": "message",
                        "documentation": "\u003cp\u003eThe error message.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "volumeStatusItem",
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vsiVolumeId",
                    "name": "_vsiVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe volume ID.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeStatusItem",
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiVolumeId",
                        "name": "_vsiVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe volume ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiAvailabilityZone",
                        "name": "_vsiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiVolumeStatus",
                        "name": "_vsiVolumeStatus",
                        "shape": "VolumeStatusInfo",
                        "locationName": "volumeStatus",
                        "documentation": "\u003cp\u003eThe volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe VolumeStatusInfo",
                        "type": "Maybe VolumeStatusInfo"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiEvents",
                        "name": "_vsiEvents",
                        "shape": "VolumeStatusEventsList",
                        "locationName": "eventsSet",
                        "documentation": "\u003cp\u003eA list of events associated with the volume.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusEvent]",
                        "type": "[VolumeStatusEvent]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiActions",
                        "name": "_vsiActions",
                        "shape": "VolumeStatusActionsList",
                        "locationName": "actionsSet",
                        "documentation": "\u003cp\u003eThe details of the operation.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusAction]",
                        "type": "[VolumeStatusAction]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiActions",
                        "name": "_vsiActions",
                        "shape": "VolumeStatusActionsList",
                        "locationName": "actionsSet",
                        "documentation": "\u003cp\u003eThe details of the operation.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusAction]",
                        "type": "[VolumeStatusAction]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiAvailabilityZone",
                        "name": "_vsiAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vsiEvents",
                        "name": "_vsiEvents",
                        "shape": "VolumeStatusEventsList",
                        "locationName": "eventsSet",
                        "documentation": "\u003cp\u003eA list of events associated with the volume.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusEvent]",
                        "type": "[VolumeStatusEvent]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiVolumeId",
                        "name": "_vsiVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe volume ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vsiVolumeStatus",
                        "name": "_vsiVolumeStatus",
                        "shape": "VolumeStatusInfo",
                        "locationName": "volumeStatus",
                        "documentation": "\u003cp\u003eThe volume status.\u003c/p\u003e",
                        "typeExposed": "Maybe VolumeStatusInfo",
                        "type": "Maybe VolumeStatusInfo"
                    }
                ]
            }
        ],
        "imports": []
    },
    "operations": [
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "acceptVpcPeeringConnectionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avpcrVpcPeeringConnection",
                    "name": "_avpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avpcrVpcPeeringConnection",
                    "name": "_avpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "required": [],
                "name": "AcceptVpcPeeringConnectionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrVpcPeeringConnection",
                        "name": "_avpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrVpcPeeringConnection",
                        "name": "_avpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AcceptVpcPeeringConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AcceptVpcPeeringConnection",
            "method": "post",
            "documentation": "\u003cp\u003eAccept a VPC peering connection request. To accept a request, the VPC peering connection must be in the \u003ccode\u003epending-acceptance\u003c/code\u003e state, and you must be the owner of the peer VPC. Use the \u003ccode\u003eDescribeVpcPeeringConnections\u003c/code\u003e request to view your outstanding VPC peering connection requests.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "acceptVpcPeeringConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avpcrDryRun",
                    "name": "_avpcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "AcceptVpcPeeringConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrDryRun",
                        "name": "_avpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrVpcPeeringConnectionId",
                        "name": "_avpcrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrDryRun",
                        "name": "_avpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avpcrVpcPeeringConnectionId",
                        "name": "_avpcrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "allocateAddressResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aarPublicIp",
                    "name": "_aarPublicIp",
                    "shape": "String",
                    "locationName": "publicIp",
                    "documentation": "\u003cp\u003eThe Elastic IP address.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AllocateAddressResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarPublicIp",
                        "name": "_aarPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarDomain",
                        "name": "_aarDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "\u003cp\u003eIndicates whether this Elastic IP address is for use with instances in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or instances in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarAllocationId",
                        "name": "_aarAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarAllocationId",
                        "name": "_aarAllocationId",
                        "shape": "String",
                        "locationName": "allocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID that AWS assigns to represent the allocation of the Elastic IP address for use with instances in a VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarDomain",
                        "name": "_aarDomain",
                        "shape": "DomainType",
                        "locationName": "domain",
                        "documentation": "\u003cp\u003eIndicates whether this Elastic IP address is for use with instances in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or instances in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarPublicIp",
                        "name": "_aarPublicIp",
                        "shape": "String",
                        "locationName": "publicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AllocateAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AllocateAddress",
            "method": "post",
            "documentation": "\u003cp\u003eAcquires an Elastic IP address.\u003c/p\u003e \u003cp\u003eAn Elastic IP address is for use either in the EC2-Classic platform or in a VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\"\u003eElastic IP Addresses\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "allocateAddress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aar1DryRun",
                    "name": "_aar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "AllocateAddress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar1DryRun",
                        "name": "_aar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar1Domain",
                        "name": "_aar1Domain",
                        "shape": "DomainType",
                        "locationName": "Domain",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003evpc\u003c/code\u003e to allocate the address for use with instances in a VPC.\u003c/p\u003e \u003cp\u003eDefault: The address is for use with instances in EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar1Domain",
                        "name": "_aar1Domain",
                        "shape": "DomainType",
                        "locationName": "Domain",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003evpc\u003c/code\u003e to allocate the address for use with instances in a VPC.\u003c/p\u003e \u003cp\u003eDefault: The address is for use with instances in EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar1DryRun",
                        "name": "_aar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "assignPrivateIpAddressesResponse",
                "wrapper": false,
                "required": [],
                "name": "AssignPrivateIpAddressesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AssignPrivateIpAddresses",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AssignPrivateIpAddresses",
            "method": "post",
            "documentation": "\u003cp\u003eAssigns one or more secondary private IP addresses to the specified network interface. You can specify one or more specific secondary IP addresses, or you can specify the number of secondary IP addresses to be automatically assigned within the subnet's CIDR block range. The number of secondary IP addresses that you can assign to an instance varies by instance type. For information about instance types, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e. For more information about Elastic IP addresses, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\"\u003eElastic IP Addresses\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eAssignPrivateIpAddresses is available only in EC2-VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 36,
                "ctor": "assignPrivateIpAddresses",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "apiarNetworkInterfaceId",
                    "name": "_apiarNetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiarNetworkInterfaceId",
                        "name": "_apiarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AssignPrivateIpAddresses",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiarPrivateIpAddresses",
                        "name": "_apiarPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eOne or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.\u003c/p\u003e \u003cp\u003eIf you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apiarSecondaryPrivateIpAddressCount",
                        "name": "_apiarSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apiarAllowReassignment",
                        "name": "_apiarAllowReassignment",
                        "shape": "Boolean",
                        "locationName": "allowReassignment",
                        "documentation": "\u003cp\u003eIndicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apiarAllowReassignment",
                        "name": "_apiarAllowReassignment",
                        "shape": "Boolean",
                        "locationName": "allowReassignment",
                        "documentation": "\u003cp\u003eIndicates whether to allow an IP address that is already assigned to another network interface or instance to be reassigned to the specified network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "apiarNetworkInterfaceId",
                        "name": "_apiarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "apiarPrivateIpAddresses",
                        "name": "_apiarPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eOne or more IP addresses to be assigned as a secondary private IP address to the network interface. You can't specify this parameter when also specifying a number of secondary IP addresses.\u003c/p\u003e \u003cp\u003eIf you don't specify an IP address, Amazon EC2 automatically selects an IP address within the subnet range.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apiarSecondaryPrivateIpAddressCount",
                        "name": "_apiarSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary IP addresses to assign to the network interface. You can't specify this parameter when also specifying private IP addresses.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "associateAddressResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aarAssociationId",
                    "name": "_aarAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "\u003cp\u003e[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aarAssociationId",
                    "name": "_aarAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "\u003cp\u003e[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AssociateAddressResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarAssociationId",
                        "name": "_aarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aarAssociationId",
                        "name": "_aarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID that represents the association of the Elastic IP address with an instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AssociateAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AssociateAddress",
            "method": "post",
            "documentation": "\u003cp\u003eAssociates an Elastic IP address with an instance or a network interface.\u003c/p\u003e \u003cp\u003eAn Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\"\u003eElastic IP Addresses\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003e[EC2-Classic, VPC in an EC2-VPC-only account] If the Elastic IP address is already associated with a different instance, it is disassociated from that instance and associated with the specified instance.\u003c/p\u003e \u003cp\u003e[VPC in an EC2-Classic account] If you don't specify a private IP address, the Elastic IP address is associated with the primary IP address. If the Elastic IP address is already associated with a different instance or a network interface, you get an error unless you allow reassociation.\u003c/p\u003e \u003cp\u003eThis is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "associateAddress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aar2DryRun",
                    "name": "_aar2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "AssociateAddress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2DryRun",
                        "name": "_aar2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2InstanceId",
                        "name": "_aar2InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2PublicIp",
                        "name": "_aar2PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address. This is required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2AllocationId",
                        "name": "_aar2AllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The allocation ID. This is required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2NetworkInterfaceId",
                        "name": "_aar2NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2PrivateIpAddress",
                        "name": "_aar2PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2AllowReassociation",
                        "name": "_aar2AllowReassociation",
                        "shape": "Boolean",
                        "locationName": "allowReassociation",
                        "documentation": "\u003cp\u003e[EC2-VPC] Allows an Elastic IP address that is already associated with an instance or network interface to be re-associated with the specified instance or network interface. Otherwise, the operation fails.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2AllocationId",
                        "name": "_aar2AllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The allocation ID. This is required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2AllowReassociation",
                        "name": "_aar2AllowReassociation",
                        "shape": "Boolean",
                        "locationName": "allowReassociation",
                        "documentation": "\u003cp\u003e[EC2-VPC] Allows an Elastic IP address that is already associated with an instance or network interface to be re-associated with the specified instance or network interface. Otherwise, the operation fails.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2DryRun",
                        "name": "_aar2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2InstanceId",
                        "name": "_aar2InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance. This is required for EC2-Classic. For EC2-VPC, you can specify either the instance ID or the network interface ID, but not both. The operation fails if you specify an instance ID unless exactly one network interface is attached. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2NetworkInterfaceId",
                        "name": "_aar2NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2PrivateIpAddress",
                        "name": "_aar2PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aar2PublicIp",
                        "name": "_aar2PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003eThe Elastic IP address. This is required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "associateDhcpOptionsResponse",
                "wrapper": false,
                "required": [],
                "name": "AssociateDhcpOptionsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AssociateDhcpOptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AssociateDhcpOptions",
            "method": "post",
            "documentation": "\u003cp\u003eAssociates a set of DHCP options (that you've previously created) with the specified VPC, or associates no DHCP options with the VPC.\u003c/p\u003e \u003cp\u003eAfter you associate the options with the VPC, any existing instances and all new instances that you launch in that VPC use the options. You don't need to restart or relaunch the instances. They automatically pick up the changes within a few hours, depending on how frequently the instance renews its DHCP lease. You can explicitly renew the lease using the operating system on the instance.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html\"\u003eDHCP Options Sets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "associateDhcpOptions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "adorDryRun",
                    "name": "_adorDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "adorDhcpOptionsId",
                        "name": "_adorDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the DHCP options set, or \u003ccode\u003edefault\u003c/code\u003e to associate no DHCP options with the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "adorVpcId",
                        "name": "_adorVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AssociateDhcpOptions",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "adorDryRun",
                        "name": "_adorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "adorDhcpOptionsId",
                        "name": "_adorDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the DHCP options set, or \u003ccode\u003edefault\u003c/code\u003e to associate no DHCP options with the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "adorDryRun",
                        "name": "_adorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "adorVpcId",
                        "name": "_adorVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "associateRouteTableResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "artrAssociationId",
                    "name": "_artrAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "\u003cp\u003eThe route table association ID (needed to disassociate the route table).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "artrAssociationId",
                    "name": "_artrAssociationId",
                    "shape": "String",
                    "locationName": "associationId",
                    "documentation": "\u003cp\u003eThe route table association ID (needed to disassociate the route table).\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AssociateRouteTableResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "artrAssociationId",
                        "name": "_artrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe route table association ID (needed to disassociate the route table).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "artrAssociationId",
                        "name": "_artrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe route table association ID (needed to disassociate the route table).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AssociateRouteTable",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AssociateRouteTable",
            "method": "post",
            "documentation": "\u003cp\u003eAssociates a subnet with a route table. The subnet and route table must be in the same VPC. This association causes traffic originating from the subnet to be routed according to the routes in the route table. The action returns an association ID, which you need in order to disassociate the route table from the subnet later. A route table can be associated with multiple subnets.\u003c/p\u003e \u003cp\u003eFor more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "associateRouteTable",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "artrDryRun",
                    "name": "_artrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artrSubnetId",
                        "name": "_artrSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artrRouteTableId",
                        "name": "_artrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AssociateRouteTable",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "artrDryRun",
                        "name": "_artrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "artrDryRun",
                        "name": "_artrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artrRouteTableId",
                        "name": "_artrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artrSubnetId",
                        "name": "_artrSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "attachInternetGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "AttachInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AttachInternetGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AttachInternetGateway",
            "method": "post",
            "documentation": "\u003cp\u003eAttaches an Internet gateway to a VPC, enabling connectivity between the Internet and the VPC. For more information about your VPC and Internet gateway, see the \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/\"\u003eAmazon Virtual Private Cloud User Guide\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "attachInternetGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "aigrDryRun",
                    "name": "_aigrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "aigrInternetGatewayId",
                        "name": "_aigrInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "aigrVpcId",
                        "name": "_aigrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AttachInternetGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aigrDryRun",
                        "name": "_aigrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aigrDryRun",
                        "name": "_aigrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "aigrInternetGatewayId",
                        "name": "_aigrInternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "aigrVpcId",
                        "name": "_aigrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "attachNetworkInterfaceResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "anirAttachmentId",
                    "name": "_anirAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "anirAttachmentId",
                    "name": "_anirAttachmentId",
                    "shape": "String",
                    "locationName": "attachmentId",
                    "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "AttachNetworkInterfaceResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "anirAttachmentId",
                        "name": "_anirAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "anirAttachmentId",
                        "name": "_anirAttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AttachNetworkInterface",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AttachNetworkInterface",
            "method": "post",
            "documentation": "\u003cp\u003eAttaches a network interface to an instance.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "attachNetworkInterface",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "anirDryRun",
                    "name": "_anirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirNetworkInterfaceId",
                        "name": "_anirNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirInstanceId",
                        "name": "_anirInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirDeviceIndex",
                        "name": "_anirDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device for the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AttachNetworkInterface",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "anirDryRun",
                        "name": "_anirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirDeviceIndex",
                        "name": "_anirDeviceIndex",
                        "shape": "Integer",
                        "locationName": "deviceIndex",
                        "documentation": "\u003cp\u003eThe index of the device for the network interface attachment.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "anirDryRun",
                        "name": "_anirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirInstanceId",
                        "name": "_anirInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "anirNetworkInterfaceId",
                        "name": "_anirNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "attachVolumeResponse",
                "wrapper": false,
                "required": [],
                "name": "AttachVolumeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AttachVolume",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AttachVolume",
            "method": "post",
            "documentation": "\u003cp\u003eAttaches an Amazon EBS volume to a running or stopped instance and exposes it to the instance with the specified device name.\u003c/p\u003e \u003cp\u003eEncrypted Amazon EBS volumes may only be attached to instances that support Amazon EBS encryption. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\"\u003eAmazon EBS Encryption\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor a list of supported device names, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html\"\u003eAttaching an Amazon EBS Volume to an Instance\u003c/a\u003e. Any device names that aren't reserved for instance store volumes can be used for Amazon EBS volumes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html\"\u003eAmazon EC2 Instance Store\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf a volume has an AWS Marketplace product code:\u003c/p\u003e \u003cul\u003e \u003cli\u003eThe volume can only be attached as the root device of a stopped instance.\u003c/li\u003e \u003cli\u003eYou must be subscribed to the AWS Marketplace code that is on the volume.\u003c/li\u003e \u003cli\u003eThe configuration (instance type, operating system) of the instance must support that specific AWS Marketplace code. For example, you cannot take a volume from a Windows instance and attach it to a Linux instance.\u003c/li\u003e \u003cli\u003eAWS Marketplace product codes are copied from the volume to the instance.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor an overview of the AWS Marketplace, see \u003ca href=\"https://aws.amazon.com/marketplace/help/200900000\"\u003ehttps://aws.amazon.com/marketplace/help/200900000\u003c/a\u003e. For more information about how to use the AWS Marketplace, see \u003ca href=\"https://aws.amazon.com/marketplace\"\u003eAWS Marketplace\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor more information about Amazon EBS volumes, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-attaching-volume.html\"\u003eAttaching Amazon EBS Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "attachVolume",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avrDryRun",
                    "name": "_avrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrVolumeId",
                        "name": "_avrVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrInstanceId",
                        "name": "_avrInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrDevice",
                        "name": "_avrDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "\u003cp\u003eThe device name to expose to the instance (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e or \u003ccode\u003exvdh\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AttachVolume",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avrDryRun",
                        "name": "_avrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrDevice",
                        "name": "_avrDevice",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "\u003cp\u003eThe device name to expose to the instance (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e or \u003ccode\u003exvdh\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avrDryRun",
                        "name": "_avrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrInstanceId",
                        "name": "_avrInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avrVolumeId",
                        "name": "_avrVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume. The volume and instance must be within the same Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "attachVpnGatewayResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avgrVpcAttachment",
                    "name": "_avgrVpcAttachment",
                    "shape": "VpcAttachment",
                    "locationName": "attachment",
                    "documentation": "\u003cp\u003eInformation about the attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcAttachment",
                    "type": "Maybe VpcAttachment"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avgrVpcAttachment",
                    "name": "_avgrVpcAttachment",
                    "shape": "VpcAttachment",
                    "locationName": "attachment",
                    "documentation": "\u003cp\u003eInformation about the attachment.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcAttachment",
                    "type": "Maybe VpcAttachment"
                },
                "required": [],
                "name": "AttachVpnGatewayResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avgrVpcAttachment",
                        "name": "_avgrVpcAttachment",
                        "shape": "VpcAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eInformation about the attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcAttachment",
                        "type": "Maybe VpcAttachment"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avgrVpcAttachment",
                        "name": "_avgrVpcAttachment",
                        "shape": "VpcAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eInformation about the attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcAttachment",
                        "type": "Maybe VpcAttachment"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.AttachVpnGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AttachVpnGateway",
            "method": "post",
            "documentation": "\u003cp\u003eAttaches a virtual private gateway to a VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "attachVpnGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "avgrDryRun",
                    "name": "_avgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avgrVpnGatewayId",
                        "name": "_avgrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avgrVpcId",
                        "name": "_avgrVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AttachVpnGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avgrDryRun",
                        "name": "_avgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "avgrDryRun",
                        "name": "_avgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avgrVpcId",
                        "name": "_avgrVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "avgrVpnGatewayId",
                        "name": "_avgrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "authorizeSecurityGroupEgressResponse",
                "wrapper": false,
                "required": [],
                "name": "AuthorizeSecurityGroupEgressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AuthorizeSecurityGroupEgress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AuthorizeSecurityGroupEgress",
            "method": "post",
            "documentation": "\u003cp\u003eAdds one or more egress rules to a security group for use with a VPC. Specifically, this action permits instances to send traffic to one or more destination CIDR IP address ranges, or to one or more destination security groups for the same VPC.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eYou can have up to 50 rules per security group (covering both ingress and egress rules).\u003c/p\u003e \u003c/important\u003e \u003cp\u003eA security group is for use with instances either in the EC2-Classic platform or in a specific VPC. This action doesn't apply to security groups for use in EC2-Classic. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html\"\u003eSecurity Groups for Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eEach rule consists of the protocol (for example, TCP), plus either a CIDR range or a source group. For the TCP and UDP protocols, you must also specify the destination port or port range. For the ICMP protocol, you must also specify the ICMP type and code. You can use -1 for the type or code to mean all types or all codes.\u003c/p\u003e \u003cp\u003eRule changes are propagated to affected instances as quickly as possible. However, a small delay might occur.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "authorizeSecurityGroupEgress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "asgerDryRun",
                    "name": "_asgerDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "asgerGroupId",
                        "name": "_asgerGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "AuthorizeSecurityGroupEgress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerDryRun",
                        "name": "_asgerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerSourceSecurityGroupName",
                        "name": "_asgerSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerSourceSecurityGroupOwnerId",
                        "name": "_asgerSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerIpProtocol",
                        "name": "_asgerIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerFromPort",
                        "name": "_asgerFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerToPort",
                        "name": "_asgerToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerCidrIp",
                        "name": "_asgerCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "asgerIpPermissions",
                        "name": "_asgerIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerCidrIp",
                        "name": "_asgerCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerDryRun",
                        "name": "_asgerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerFromPort",
                        "name": "_asgerFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "asgerGroupId",
                        "name": "_asgerGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "asgerIpPermissions",
                        "name": "_asgerIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerIpProtocol",
                        "name": "_asgerIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerSourceSecurityGroupName",
                        "name": "_asgerSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerSourceSecurityGroupOwnerId",
                        "name": "_asgerSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgerToPort",
                        "name": "_asgerToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "authorizeSecurityGroupIngressResponse",
                "wrapper": false,
                "required": [],
                "name": "AuthorizeSecurityGroupIngressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.AuthorizeSecurityGroupIngress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "AuthorizeSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003eAdds one or more ingress rules to a security group.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eEC2-Classic: You can have up to 100 rules per group.\u003c/p\u003e \u003cp\u003eEC2-VPC: You can have up to 50 rules per group (covering both ingress and egress rules).\u003c/p\u003e \u003c/important\u003e \u003cp\u003eRule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\u003c/p\u003e \u003cp\u003e[EC2-Classic] This action gives one or more CIDR IP address ranges permission to access a security group in your account, or gives one or more security groups (called the \u003ci\u003esource groups\u003c/i\u003e) permission to access a security group for your account. A source group can be for your own AWS account, or another.\u003c/p\u003e \u003cp\u003e[EC2-VPC] This action gives one or more CIDR IP address ranges permission to access a security group in your VPC, or gives one or more other security groups (called the \u003ci\u003esource groups\u003c/i\u003e) permission to access a security group for your VPC. The security groups must all be for the same VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "authorizeSecurityGroupIngress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "asgirDryRun",
                    "name": "_asgirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "AuthorizeSecurityGroupIngress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirDryRun",
                        "name": "_asgirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirGroupName",
                        "name": "_asgirGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirGroupId",
                        "name": "_asgirGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirSourceSecurityGroupName",
                        "name": "_asgirSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirSourceSecurityGroupOwnerId",
                        "name": "_asgirSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirIpProtocol",
                        "name": "_asgirIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirFromPort",
                        "name": "_asgirFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirToPort",
                        "name": "_asgirToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirCidrIp",
                        "name": "_asgirCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "asgirIpPermissions",
                        "name": "_asgirIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirCidrIp",
                        "name": "_asgirCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirDryRun",
                        "name": "_asgirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirFromPort",
                        "name": "_asgirFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirGroupId",
                        "name": "_asgirGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirGroupName",
                        "name": "_asgirGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "asgirIpPermissions",
                        "name": "_asgirIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirIpProtocol",
                        "name": "_asgirIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirSourceSecurityGroupName",
                        "name": "_asgirSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirSourceSecurityGroupOwnerId",
                        "name": "_asgirSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "asgirToPort",
                        "name": "_asgirToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "bundleInstanceResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "birBundleTask",
                    "name": "_birBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "\u003cp\u003eInformation about the bundle task.\u003c/p\u003e",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "birBundleTask",
                    "name": "_birBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "\u003cp\u003eInformation about the bundle task.\u003c/p\u003e",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "required": [],
                "name": "BundleInstanceResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "birBundleTask",
                        "name": "_birBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "\u003cp\u003eInformation about the bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "birBundleTask",
                        "name": "_birBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "\u003cp\u003eInformation about the bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.BundleInstance",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "BundleInstance",
            "method": "post",
            "documentation": "\u003cp\u003eBundles an Amazon instance store-backed Windows instance.\u003c/p\u003e \u003cp\u003eDuring bundling, only the root device volume (C:\\) is bundled. Data on other instance store volumes is not preserved.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/Creating_InstanceStoreBacked_WinAMI.html\"\u003eCreating an Instance Store-Backed Windows AMI\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "bundleInstance",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "birDryRun",
                    "name": "_birDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "birInstanceId",
                        "name": "_birInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance to bundle.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "birStorage",
                        "name": "_birStorage",
                        "shape": "Storage",
                        "locationName": "Storage",
                        "documentation": "\u003cp\u003eThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\u003c/p\u003e",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "BundleInstance",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "birDryRun",
                        "name": "_birDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "birDryRun",
                        "name": "_birDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "birInstanceId",
                        "name": "_birInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance to bundle.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "birStorage",
                        "name": "_birStorage",
                        "shape": "Storage",
                        "locationName": "Storage",
                        "documentation": "\u003cp\u003eThe bucket in which to store the AMI. You can specify a bucket that you already own or a new bucket that Amazon EC2 creates on your behalf. If you specify a bucket that belongs to someone else, Amazon EC2 returns an error.\u003c/p\u003e",
                        "typeExposed": "Storage",
                        "type": "Storage"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelBundleTaskResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbtrBundleTask",
                    "name": "_cbtrBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "\u003cp\u003eThe bundle task.\u003c/p\u003e",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbtrBundleTask",
                    "name": "_cbtrBundleTask",
                    "shape": "BundleTask",
                    "locationName": "bundleInstanceTask",
                    "documentation": "\u003cp\u003eThe bundle task.\u003c/p\u003e",
                    "typeExposed": "Maybe BundleTask",
                    "type": "Maybe BundleTask"
                },
                "required": [],
                "name": "CancelBundleTaskResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbtrBundleTask",
                        "name": "_cbtrBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "\u003cp\u003eThe bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbtrBundleTask",
                        "name": "_cbtrBundleTask",
                        "shape": "BundleTask",
                        "locationName": "bundleInstanceTask",
                        "documentation": "\u003cp\u003eThe bundle task.\u003c/p\u003e",
                        "typeExposed": "Maybe BundleTask",
                        "type": "Maybe BundleTask"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CancelBundleTask",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CancelBundleTask",
            "method": "post",
            "documentation": "\u003cp\u003eCancels a bundling operation for an instance store-backed Windows instance.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "cancelBundleTask",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cbtrDryRun",
                    "name": "_cbtrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbtrBundleId",
                        "name": "_cbtrBundleId",
                        "shape": "String",
                        "locationName": "BundleId",
                        "documentation": "\u003cp\u003eThe ID of the bundle task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CancelBundleTask",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbtrDryRun",
                        "name": "_cbtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cbtrBundleId",
                        "name": "_cbtrBundleId",
                        "shape": "String",
                        "locationName": "BundleId",
                        "documentation": "\u003cp\u003eThe ID of the bundle task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cbtrDryRun",
                        "name": "_cbtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelConversionTaskResponse",
                "wrapper": false,
                "required": [],
                "name": "CancelConversionTaskResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CancelConversionTask",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CancelConversionTask",
            "method": "post",
            "documentation": "\u003cp\u003eCancels an active conversion task. The task can be the import of an instance or volume. The action removes all artifacts of the conversion, including a partially uploaded volume or instance. If the conversion is complete or is in the process of transferring the final disk image, the command fails and returns an exception.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html\"\u003eUsing the Command Line Tools to Import Your Virtual Machine to Amazon EC2\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "cancelConversion",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ccrDryRun",
                    "name": "_ccrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccrConversionTaskId",
                        "name": "_ccrConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eThe ID of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CancelConversion",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccrDryRun",
                        "name": "_ccrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccrReasonMessage",
                        "name": "_ccrReasonMessage",
                        "shape": "String",
                        "locationName": "reasonMessage",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccrConversionTaskId",
                        "name": "_ccrConversionTaskId",
                        "shape": "String",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eThe ID of the conversion task.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccrDryRun",
                        "name": "_ccrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccrReasonMessage",
                        "name": "_ccrReasonMessage",
                        "shape": "String",
                        "locationName": "reasonMessage",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelExportTaskResponse",
                "wrapper": false,
                "required": [],
                "name": "CancelExportTaskResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CancelExportTask",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CancelExportTask",
            "method": "post",
            "documentation": "\u003cp\u003eCancels an active export task. The request removes all artifacts of the export, including any partially-created Amazon S3 objects. If the export task is complete or is in the process of transferring the final disk image, the command fails and returns an error.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelExportTask",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cetrExportTaskId",
                    "name": "_cetrExportTaskId",
                    "shape": "String",
                    "locationName": "exportTaskId",
                    "documentation": "\u003cp\u003eThe ID of the export task. This is the ID returned by \u003ccode\u003eCreateInstanceExportTask\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cetrExportTaskId",
                    "name": "_cetrExportTaskId",
                    "shape": "String",
                    "locationName": "exportTaskId",
                    "documentation": "\u003cp\u003eThe ID of the export task. This is the ID returned by \u003ccode\u003eCreateInstanceExportTask\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cetrExportTaskId",
                        "name": "_cetrExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eThe ID of the export task. This is the ID returned by \u003ccode\u003eCreateInstanceExportTask\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CancelExportTask",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cetrExportTaskId",
                        "name": "_cetrExportTaskId",
                        "shape": "String",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eThe ID of the export task. This is the ID returned by \u003ccode\u003eCreateInstanceExportTask\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelReservedInstancesListingResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "crilrReservedInstancesListings",
                    "name": "_crilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eThe Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "crilrReservedInstancesListings",
                    "name": "_crilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eThe Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "required": [],
                "name": "CancelReservedInstancesListingResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilrReservedInstancesListings",
                        "name": "_crilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eThe Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilrReservedInstancesListings",
                        "name": "_crilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eThe Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CancelReservedInstancesListing",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CancelReservedInstancesListing",
            "method": "post",
            "documentation": "\u003cp\u003eCancels the specified Reserved Instance listing in the Reserved Instance Marketplace.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html\"\u003eReserved Instance Marketplace\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelReservedInstancesListing",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crilrReservedInstancesListingId",
                    "name": "_crilrReservedInstancesListingId",
                    "shape": "String",
                    "locationName": "reservedInstancesListingId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crilrReservedInstancesListingId",
                    "name": "_crilrReservedInstancesListingId",
                    "shape": "String",
                    "locationName": "reservedInstancesListingId",
                    "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrReservedInstancesListingId",
                        "name": "_crilrReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CancelReservedInstancesListing",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrReservedInstancesListingId",
                        "name": "_crilrReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "cancelSpotInstanceRequestsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "csirrCancelledSpotInstanceRequests",
                    "name": "_csirrCancelledSpotInstanceRequests",
                    "shape": "CancelledSpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                    "typeExposed": "[CancelledSpotInstanceRequest]",
                    "type": "[CancelledSpotInstanceRequest]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "csirrCancelledSpotInstanceRequests",
                    "name": "_csirrCancelledSpotInstanceRequests",
                    "shape": "CancelledSpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                    "typeExposed": "[CancelledSpotInstanceRequest]",
                    "type": "[CancelledSpotInstanceRequest]"
                },
                "required": [],
                "name": "CancelSpotInstanceRequestsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "csirrCancelledSpotInstanceRequests",
                        "name": "_csirrCancelledSpotInstanceRequests",
                        "shape": "CancelledSpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                        "typeExposed": "[CancelledSpotInstanceRequest]",
                        "type": "[CancelledSpotInstanceRequest]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "csirrCancelledSpotInstanceRequests",
                        "name": "_csirrCancelledSpotInstanceRequests",
                        "shape": "CancelledSpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                        "typeExposed": "[CancelledSpotInstanceRequest]",
                        "type": "[CancelledSpotInstanceRequest]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CancelSpotInstanceRequests",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CancelSpotInstanceRequests",
            "method": "post",
            "documentation": "\u003cp\u003eCancels one or more Spot Instance requests. Spot Instances are instances that Amazon EC2 starts on your behalf when the maximum price that you specify exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity and current Spot Instance requests. For more information about Spot Instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eCanceling a Spot Instance request does not terminate running Spot Instances associated with the request.\u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "cancelSpotInstanceRequests",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csirrDryRun",
                    "name": "_csirrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "CancelSpotInstanceRequests",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirrDryRun",
                        "name": "_csirrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "csirrSpotInstanceRequestIds",
                        "name": "_csirrSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "\u003cp\u003eOne or more Spot Instance request IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csirrDryRun",
                        "name": "_csirrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "csirrSpotInstanceRequestIds",
                        "name": "_csirrSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "\u003cp\u003eOne or more Spot Instance request IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "confirmProductInstanceResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpirOwnerId",
                    "name": "_cpirOwnerId",
                    "shape": "String",
                    "locationName": "ownerId",
                    "documentation": "\u003cp\u003eThe AWS account ID of the instance owner. This is only present if the product code is attached to the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpirOwnerId",
                    "name": "_cpirOwnerId",
                    "shape": "String",
                    "locationName": "ownerId",
                    "documentation": "\u003cp\u003eThe AWS account ID of the instance owner. This is only present if the product code is attached to the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ConfirmProductInstanceResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpirOwnerId",
                        "name": "_cpirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the instance owner. This is only present if the product code is attached to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpirOwnerId",
                        "name": "_cpirOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the instance owner. This is only present if the product code is attached to the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ConfirmProductInstance",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ConfirmProductInstance",
            "method": "post",
            "documentation": "\u003cp\u003eDetermines whether a product code is associated with an instance. This action can only be used by the owner of the product code. It is useful when a product code owner needs to verify whether another user's instance is eligible for support.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "confirmProductInstance",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpirDryRun",
                    "name": "_cpirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpirProductCode",
                        "name": "_cpirProductCode",
                        "shape": "String",
                        "locationName": "ProductCode",
                        "documentation": "\u003cp\u003eThe product code. This must be a product code that you own.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpirInstanceId",
                        "name": "_cpirInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ConfirmProductInstance",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpirDryRun",
                        "name": "_cpirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpirDryRun",
                        "name": "_cpirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpirInstanceId",
                        "name": "_cpirInstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpirProductCode",
                        "name": "_cpirProductCode",
                        "shape": "String",
                        "locationName": "ProductCode",
                        "documentation": "\u003cp\u003eThe product code. This must be a product code that you own.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "copyImageResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cir1ImageId",
                    "name": "_cir1ImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cir1ImageId",
                    "name": "_cir1ImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CopyImageResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1ImageId",
                        "name": "_cir1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1ImageId",
                        "name": "_cir1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CopyImage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CopyImage",
            "method": "post",
            "documentation": "\u003cp\u003eInitiates the copy of an AMI from the specified source region to the region in which the request was made. You specify the destination region by using its endpoint when making the request. AMIs that use encrypted Amazon EBS snapshots cannot be copied with this method.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/CopyingAMIs.html\"\u003eCopying AMIs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "copyImage",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cirDryRun",
                    "name": "_cirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirSourceRegion",
                        "name": "_cirSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "\u003cp\u003eThe name of the region that contains the AMI to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirSourceImageId",
                        "name": "_cirSourceImageId",
                        "shape": "String",
                        "locationName": "SourceImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirName",
                        "name": "_cirName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the new AMI in the destination region.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CopyImage",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirDryRun",
                        "name": "_cirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirDescription",
                        "name": "_cirDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the new AMI in the destination region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirClientToken",
                        "name": "_cirClientToken",
                        "shape": "String",
                        "locationName": "ClientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eHow to Ensure Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirClientToken",
                        "name": "_cirClientToken",
                        "shape": "String",
                        "locationName": "ClientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure idempotency of the request. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eHow to Ensure Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirDescription",
                        "name": "_cirDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the new AMI in the destination region.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirDryRun",
                        "name": "_cirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirName",
                        "name": "_cirName",
                        "shape": "String",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the new AMI in the destination region.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirSourceImageId",
                        "name": "_cirSourceImageId",
                        "shape": "String",
                        "locationName": "SourceImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cirSourceRegion",
                        "name": "_cirSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "\u003cp\u003eThe name of the region that contains the AMI to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "copySnapshotResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrSnapshotId",
                    "name": "_csrSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "\u003cp\u003eThe ID of the new snapshot.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrSnapshotId",
                    "name": "_csrSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "\u003cp\u003eThe ID of the new snapshot.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CopySnapshotResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSnapshotId",
                        "name": "_csrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the new snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSnapshotId",
                        "name": "_csrSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the new snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CopySnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CopySnapshot",
            "method": "post",
            "documentation": "\u003cp\u003eCopies a point-in-time snapshot of an Amazon EBS volume and stores it in Amazon S3. You can copy the snapshot within the same region or from one region to another. You can use the snapshot to create Amazon EBS volumes or Amazon Machine Images (AMIs). The snapshot is copied to the regional endpoint that you send the HTTP request to.\u003c/p\u003e \u003cp\u003eCopies of encrypted Amazon EBS snapshots remain encrypted. Copies of unencrypted snapshots remain unencrypted.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html\"\u003eCopying an Amazon EBS Snapshot\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "copySnapshot",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrDryRun",
                    "name": "_csrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csrSourceRegion",
                        "name": "_csrSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "\u003cp\u003eThe ID of the region that contains the snapshot to be copied.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csrSourceSnapshotId",
                        "name": "_csrSourceSnapshotId",
                        "shape": "String",
                        "locationName": "SourceSnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CopySnapshot",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDryRun",
                        "name": "_csrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDescription",
                        "name": "_csrDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the new Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDestinationRegion",
                        "name": "_csrDestinationRegion",
                        "shape": "String",
                        "locationName": "destinationRegion",
                        "documentation": "\u003cp\u003eThe destination region of the snapshot copy operation. This parameter is required in the \u003ccode\u003ePresignedUrl\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrPresignedUrl",
                        "name": "_csrPresignedUrl",
                        "shape": "String",
                        "locationName": "presignedUrl",
                        "documentation": "\u003cp\u003eThe pre-signed URL that facilitates copying an encrypted snapshot. This parameter is only required when copying an encrypted snapshot with the Amazon EC2 Query API; it is available as an optional parameter in all other cases. The \u003ccode\u003ePresignedUrl\u003c/code\u003e should use the snapshot source endpoint, the \u003ccode\u003eCopySnapshot\u003c/code\u003e action, and include the \u003ccode\u003eSourceRegion\u003c/code\u003e, \u003ccode\u003eSourceSnapshotId\u003c/code\u003e, and \u003ccode\u003eDestinationRegion\u003c/code\u003e parameters. The \u003ccode\u003ePresignedUrl\u003c/code\u003e must be signed using AWS Signature Version 4. Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"\u003eAuthenticating Requests by Using Query Parameters (AWS Signature Version 4)\u003c/a\u003e in the \u003ci\u003eAmazon Simple Storage Service API Reference\u003c/i\u003e. An invalid or improperly signed \u003ccode\u003ePresignedUrl\u003c/code\u003e will cause the copy operation to fail asynchronously, and the snapshot will move to an \u003ccode\u003eerror\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDescription",
                        "name": "_csrDescription",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the new Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDestinationRegion",
                        "name": "_csrDestinationRegion",
                        "shape": "String",
                        "locationName": "destinationRegion",
                        "documentation": "\u003cp\u003eThe destination region of the snapshot copy operation. This parameter is required in the \u003ccode\u003ePresignedUrl\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrDryRun",
                        "name": "_csrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrPresignedUrl",
                        "name": "_csrPresignedUrl",
                        "shape": "String",
                        "locationName": "presignedUrl",
                        "documentation": "\u003cp\u003eThe pre-signed URL that facilitates copying an encrypted snapshot. This parameter is only required when copying an encrypted snapshot with the Amazon EC2 Query API; it is available as an optional parameter in all other cases. The \u003ccode\u003ePresignedUrl\u003c/code\u003e should use the snapshot source endpoint, the \u003ccode\u003eCopySnapshot\u003c/code\u003e action, and include the \u003ccode\u003eSourceRegion\u003c/code\u003e, \u003ccode\u003eSourceSnapshotId\u003c/code\u003e, and \u003ccode\u003eDestinationRegion\u003c/code\u003e parameters. The \u003ccode\u003ePresignedUrl\u003c/code\u003e must be signed using AWS Signature Version 4. Because Amazon EBS snapshots are stored in Amazon S3, the signing algorithm for this parameter uses the same logic that is described in \u003ca href=\"http://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html\"\u003eAuthenticating Requests by Using Query Parameters (AWS Signature Version 4)\u003c/a\u003e in the \u003ci\u003eAmazon Simple Storage Service API Reference\u003c/i\u003e. An invalid or improperly signed \u003ccode\u003ePresignedUrl\u003c/code\u003e will cause the copy operation to fail asynchronously, and the snapshot will move to an \u003ccode\u003eerror\u003c/code\u003e state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csrSourceRegion",
                        "name": "_csrSourceRegion",
                        "shape": "String",
                        "locationName": "SourceRegion",
                        "documentation": "\u003cp\u003eThe ID of the region that contains the snapshot to be copied.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csrSourceSnapshotId",
                        "name": "_csrSourceSnapshotId",
                        "shape": "String",
                        "locationName": "SourceSnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot to copy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createCustomerGatewayResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ccgrCustomerGateway",
                    "name": "_ccgrCustomerGateway",
                    "shape": "CustomerGateway",
                    "locationName": "customerGateway",
                    "documentation": "\u003cp\u003eInformation about the customer gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe CustomerGateway",
                    "type": "Maybe CustomerGateway"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ccgrCustomerGateway",
                    "name": "_ccgrCustomerGateway",
                    "shape": "CustomerGateway",
                    "locationName": "customerGateway",
                    "documentation": "\u003cp\u003eInformation about the customer gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe CustomerGateway",
                    "type": "Maybe CustomerGateway"
                },
                "required": [],
                "name": "CreateCustomerGatewayResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccgrCustomerGateway",
                        "name": "_ccgrCustomerGateway",
                        "shape": "CustomerGateway",
                        "locationName": "customerGateway",
                        "documentation": "\u003cp\u003eInformation about the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe CustomerGateway",
                        "type": "Maybe CustomerGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccgrCustomerGateway",
                        "name": "_ccgrCustomerGateway",
                        "shape": "CustomerGateway",
                        "locationName": "customerGateway",
                        "documentation": "\u003cp\u003eInformation about the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe CustomerGateway",
                        "type": "Maybe CustomerGateway"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateCustomerGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateCustomerGateway",
            "method": "post",
            "documentation": "\u003cp\u003eProvides information to AWS about your VPN customer gateway device. The customer gateway is the appliance at your end of the VPN connection. (The device on the AWS side of the VPN connection is the virtual private gateway.) You must provide the Internet-routable IP address of the customer gateway's external interface. The IP address must be static and can't be behind a device performing network address translation (NAT).\u003c/p\u003e \u003cp\u003eFor devices that use Border Gateway Protocol (BGP), you can also provide the device's BGP Autonomous System Number (ASN). You can use an existing ASN assigned to your network. If you don't have an ASN already, you can use a private ASN (in the 64512 - 65534 range).\u003c/p\u003e \u003cp\u003eFor more information about VPN customer gateways, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "createCustomerGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ccgrDryRun",
                    "name": "_ccgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrType",
                        "name": "_ccgrType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection that this customer gateway supports (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrPublicIp",
                        "name": "_ccgrPublicIp",
                        "shape": "String",
                        "locationName": "IpAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address for the customer gateway's outside interface. The address must be static.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrBgpAsn",
                        "name": "_ccgrBgpAsn",
                        "shape": "Integer",
                        "locationName": "BgpAsn",
                        "documentation": "\u003cp\u003eFor devices that support BGP, the customer gateway's BGP ASN.\u003c/p\u003e \u003cp\u003eDefault: 65000\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateCustomerGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccgrDryRun",
                        "name": "_ccgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrBgpAsn",
                        "name": "_ccgrBgpAsn",
                        "shape": "Integer",
                        "locationName": "BgpAsn",
                        "documentation": "\u003cp\u003eFor devices that support BGP, the customer gateway's BGP ASN.\u003c/p\u003e \u003cp\u003eDefault: 65000\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ccgrDryRun",
                        "name": "_ccgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrPublicIp",
                        "name": "_ccgrPublicIp",
                        "shape": "String",
                        "locationName": "IpAddress",
                        "documentation": "\u003cp\u003eThe Internet-routable IP address for the customer gateway's outside interface. The address must be static.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ccgrType",
                        "name": "_ccgrType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection that this customer gateway supports (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createDhcpOptionsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cdorDhcpOptions",
                    "name": "_cdorDhcpOptions",
                    "shape": "DhcpOptions",
                    "locationName": "dhcpOptions",
                    "documentation": "\u003cp\u003eA set of DHCP options.\u003c/p\u003e",
                    "typeExposed": "Maybe DhcpOptions",
                    "type": "Maybe DhcpOptions"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cdorDhcpOptions",
                    "name": "_cdorDhcpOptions",
                    "shape": "DhcpOptions",
                    "locationName": "dhcpOptions",
                    "documentation": "\u003cp\u003eA set of DHCP options.\u003c/p\u003e",
                    "typeExposed": "Maybe DhcpOptions",
                    "type": "Maybe DhcpOptions"
                },
                "required": [],
                "name": "CreateDhcpOptionsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cdorDhcpOptions",
                        "name": "_cdorDhcpOptions",
                        "shape": "DhcpOptions",
                        "locationName": "dhcpOptions",
                        "documentation": "\u003cp\u003eA set of DHCP options.\u003c/p\u003e",
                        "typeExposed": "Maybe DhcpOptions",
                        "type": "Maybe DhcpOptions"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cdorDhcpOptions",
                        "name": "_cdorDhcpOptions",
                        "shape": "DhcpOptions",
                        "locationName": "dhcpOptions",
                        "documentation": "\u003cp\u003eA set of DHCP options.\u003c/p\u003e",
                        "typeExposed": "Maybe DhcpOptions",
                        "type": "Maybe DhcpOptions"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateDhcpOptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateDhcpOptions",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a set of DHCP options for your VPC. After creating the set, you must associate it with the VPC, causing all existing and new instances that you launch in the VPC to use this set of DHCP options. The following are the individual DHCP options you can specify. For more information about the options, see \u003ca href=\"http://www.ietf.org/rfc/rfc2132.txt\"\u003eRFC 2132\u003c/a\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003edomain-name-servers\u003c/code\u003e - The IP addresses of up to four domain name servers, or \u003ccode\u003eAmazonProvidedDNS\u003c/code\u003e. The default DHCP option set specifies \u003ccode\u003eAmazonProvidedDNS\u003c/code\u003e. If specifying more than one domain name server, specify the IP addresses in a single parameter, separated by commas.\u003c/li\u003e \u003cli\u003e \u003ccode\u003edomain-name\u003c/code\u003e - If you're using AmazonProvidedDNS in \u003ccode\u003eus-east-1\u003c/code\u003e, specify \u003ccode\u003eec2.internal\u003c/code\u003e. If you're using AmazonProvidedDNS in another region, specify \u003ccode\u003eregion.compute.internal\u003c/code\u003e (for example, \u003ccode\u003eap-northeast-1.compute.internal\u003c/code\u003e). Otherwise, specify a domain name (for example, \u003ccode\u003eMyCompany.com\u003c/code\u003e). If specifying more than one domain name, separate them with spaces.\u003c/li\u003e \u003cli\u003e \u003ccode\u003entp-servers\u003c/code\u003e - The IP addresses of up to four Network Time Protocol (NTP) servers.\u003c/li\u003e \u003cli\u003e \u003ccode\u003enetbios-name-servers\u003c/code\u003e - The IP addresses of up to four NetBIOS name servers.\u003c/li\u003e \u003cli\u003e \u003ccode\u003enetbios-node-type\u003c/code\u003e - The NetBIOS node type (1, 2, 4, or 8). We recommend that you specify 2 (broadcast and multicast are not currently supported). For more information about these node types, see \u003ca href=\"http://www.ietf.org/rfc/rfc2132.txt\"\u003eRFC 2132\u003c/a\u003e. \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eYour VPC automatically starts out with a set of DHCP options that includes only a DNS server that we provide (AmazonProvidedDNS). If you create a set of options, and if your VPC has an Internet gateway, make sure to set the \u003ccode\u003edomain-name-servers\u003c/code\u003e option either to \u003ccode\u003eAmazonProvidedDNS\u003c/code\u003e or to a domain name server of your choice. For more information about DHCP options, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html\"\u003eDHCP Options Sets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "createDhcpOptions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cdorDryRun",
                    "name": "_cdorDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "CreateDhcpOptions",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cdorDryRun",
                        "name": "_cdorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cdorDhcpConfigurations",
                        "name": "_cdorDhcpConfigurations",
                        "shape": "NewDhcpConfigurationList",
                        "locationName": "dhcpConfiguration",
                        "documentation": "\u003cp\u003eA DHCP configuration option.\u003c/p\u003e",
                        "typeExposed": "[NewDhcpConfiguration]",
                        "type": "[NewDhcpConfiguration]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cdorDhcpConfigurations",
                        "name": "_cdorDhcpConfigurations",
                        "shape": "NewDhcpConfigurationList",
                        "locationName": "dhcpConfiguration",
                        "documentation": "\u003cp\u003eA DHCP configuration option.\u003c/p\u003e",
                        "typeExposed": "[NewDhcpConfiguration]",
                        "type": "[NewDhcpConfiguration]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cdorDryRun",
                        "name": "_cdorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createImageResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cirImageId",
                    "name": "_cirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cirImageId",
                    "name": "_cirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CreateImageResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirImageId",
                        "name": "_cirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cirImageId",
                        "name": "_cirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the new AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateImage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateImage",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an Amazon EBS-backed AMI from an Amazon EBS-backed instance that is either running or stopped.\u003c/p\u003e \u003cp\u003eIf you customized your instance with instance store volumes or EBS volumes in addition to the root device volume, the new AMI contains block device mapping information for those volumes. When you launch an instance from this new AMI, the instance automatically launches with those additional volumes.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami-ebs.html\"\u003eCreating Amazon EBS-Backed Linux AMIs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "createImage",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cir1DryRun",
                    "name": "_cir1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cir1InstanceId",
                        "name": "_cir1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cir1Name",
                        "name": "_cir1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eA name for the new image.\u003c/p\u003e \u003cp\u003eConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateImage",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1DryRun",
                        "name": "_cir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1Description",
                        "name": "_cir1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the new image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1NoReboot",
                        "name": "_cir1NoReboot",
                        "shape": "Boolean",
                        "locationName": "noReboot",
                        "documentation": "\u003cp\u003eBy default, this parameter is set to \u003ccode\u003efalse\u003c/code\u003e, which means Amazon EC2 attempts to shut down the instance cleanly before image creation and then reboots the instance. When the parameter is set to \u003ccode\u003etrue\u003c/code\u003e, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cir1BlockDeviceMappings",
                        "name": "_cir1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eInformation about one or more block device mappings.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cir1BlockDeviceMappings",
                        "name": "_cir1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eInformation about one or more block device mappings.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1Description",
                        "name": "_cir1Description",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the new image.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1DryRun",
                        "name": "_cir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cir1InstanceId",
                        "name": "_cir1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cir1Name",
                        "name": "_cir1Name",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eA name for the new image.\u003c/p\u003e \u003cp\u003eConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cir1NoReboot",
                        "name": "_cir1NoReboot",
                        "shape": "Boolean",
                        "locationName": "noReboot",
                        "documentation": "\u003cp\u003eBy default, this parameter is set to \u003ccode\u003efalse\u003c/code\u003e, which means Amazon EC2 attempts to shut down the instance cleanly before image creation and then reboots the instance. When the parameter is set to \u003ccode\u003etrue\u003c/code\u003e, Amazon EC2 doesn't shut down the instance before creating the image. When this option is used, file system integrity on the created image can't be guaranteed.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createInstanceExportTaskResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cietrExportTask",
                    "name": "_cietrExportTask",
                    "shape": "ExportTask",
                    "locationName": "exportTask",
                    "documentation": null,
                    "typeExposed": "Maybe ExportTask",
                    "type": "Maybe ExportTask"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cietrExportTask",
                    "name": "_cietrExportTask",
                    "shape": "ExportTask",
                    "locationName": "exportTask",
                    "documentation": null,
                    "typeExposed": "Maybe ExportTask",
                    "type": "Maybe ExportTask"
                },
                "required": [],
                "name": "CreateInstanceExportTaskResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrExportTask",
                        "name": "_cietrExportTask",
                        "shape": "ExportTask",
                        "locationName": "exportTask",
                        "documentation": null,
                        "typeExposed": "Maybe ExportTask",
                        "type": "Maybe ExportTask"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrExportTask",
                        "name": "_cietrExportTask",
                        "shape": "ExportTask",
                        "locationName": "exportTask",
                        "documentation": null,
                        "typeExposed": "Maybe ExportTask",
                        "type": "Maybe ExportTask"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateInstanceExportTask",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateInstanceExportTask",
            "method": "post",
            "documentation": "\u003cp\u003eExports a running or stopped instance to an Amazon S3 bucket.\u003c/p\u003e \u003cp\u003eFor information about the supported operating systems, image formats, and known limitations for the types of instances you can export, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExportingEC2Instances.html\"\u003eExporting EC2 Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "createInstanceExportTask",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cietrDescription",
                    "name": "_cietrDescription",
                    "shape": "String",
                    "locationName": "description",
                    "documentation": "\u003cp\u003eA description for the conversion task or the resource being exported. The maximum length is 255 bytes.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cietrInstanceId",
                        "name": "_cietrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateInstanceExportTask",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrDescription",
                        "name": "_cietrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the conversion task or the resource being exported. The maximum length is 255 bytes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrTargetEnvironment",
                        "name": "_cietrTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "\u003cp\u003eThe target virtualization environment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrExportToS3Task",
                        "name": "_cietrExportToS3Task",
                        "shape": "ExportToS3TaskSpecification",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3TaskSpecification",
                        "type": "Maybe ExportToS3TaskSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrDescription",
                        "name": "_cietrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the conversion task or the resource being exported. The maximum length is 255 bytes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrExportToS3Task",
                        "name": "_cietrExportToS3Task",
                        "shape": "ExportToS3TaskSpecification",
                        "locationName": "exportToS3",
                        "documentation": null,
                        "typeExposed": "Maybe ExportToS3TaskSpecification",
                        "type": "Maybe ExportToS3TaskSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cietrInstanceId",
                        "name": "_cietrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cietrTargetEnvironment",
                        "name": "_cietrTargetEnvironment",
                        "shape": "ExportEnvironment",
                        "locationName": "targetEnvironment",
                        "documentation": "\u003cp\u003eThe target virtualization environment.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createInternetGatewayResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cigrInternetGateway",
                    "name": "_cigrInternetGateway",
                    "shape": "InternetGateway",
                    "locationName": "internetGateway",
                    "documentation": "\u003cp\u003eInformation about the Internet gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe InternetGateway",
                    "type": "Maybe InternetGateway"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cigrInternetGateway",
                    "name": "_cigrInternetGateway",
                    "shape": "InternetGateway",
                    "locationName": "internetGateway",
                    "documentation": "\u003cp\u003eInformation about the Internet gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe InternetGateway",
                    "type": "Maybe InternetGateway"
                },
                "required": [],
                "name": "CreateInternetGatewayResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cigrInternetGateway",
                        "name": "_cigrInternetGateway",
                        "shape": "InternetGateway",
                        "locationName": "internetGateway",
                        "documentation": "\u003cp\u003eInformation about the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe InternetGateway",
                        "type": "Maybe InternetGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cigrInternetGateway",
                        "name": "_cigrInternetGateway",
                        "shape": "InternetGateway",
                        "locationName": "internetGateway",
                        "documentation": "\u003cp\u003eInformation about the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe InternetGateway",
                        "type": "Maybe InternetGateway"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateInternetGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateInternetGateway",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an Internet gateway for use with a VPC. After creating the Internet gateway, you attach it to a VPC using \u003ca\u003eAttachInternetGateway\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor more information about your VPC and Internet gateway, see the \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/\"\u003eAmazon Virtual Private Cloud User Guide\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createInternetGateway",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cigrDryRun",
                    "name": "_cigrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cigrDryRun",
                    "name": "_cigrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "CreateInternetGateway",
                "query": [],
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cigrDryRun",
                        "name": "_cigrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cigrDryRun",
                        "name": "_cigrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "keyPair",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "kpKeyName",
                    "name": "_kpKeyName",
                    "shape": "String",
                    "locationName": "keyName",
                    "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "KeyPair",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyName",
                        "name": "_kpKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyFingerprint",
                        "name": "_kpKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eThe SHA-1 digest of the DER encoded private key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyMaterial",
                        "name": "_kpKeyMaterial",
                        "shape": "String",
                        "locationName": "keyMaterial",
                        "documentation": "\u003cp\u003eAn unencrypted PEM encoded RSA private key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyFingerprint",
                        "name": "_kpKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eThe SHA-1 digest of the DER encoded private key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyMaterial",
                        "name": "_kpKeyMaterial",
                        "shape": "String",
                        "locationName": "keyMaterial",
                        "documentation": "\u003cp\u003eAn unencrypted PEM encoded RSA private key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "kpKeyName",
                        "name": "_kpKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateKeyPair",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateKeyPair",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a 2048-bit RSA key pair with the specified name. Amazon EC2 stores the public key and displays the private key for you to save to a file. The private key is returned as an unencrypted PEM encoded PKCS#8 private key. If a key with the specified name already exists, Amazon EC2 returns an error.\u003c/p\u003e \u003cp\u003eYou can have up to five thousand key pairs per region.\u003c/p\u003e \u003cp\u003eThe key pair returned to you is available only in the region in which you create it. To create a key pair that is available in all regions, use \u003ca\u003eImportKeyPair\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor more information about key pairs, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\"\u003eKey Pairs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "createKeyPair",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ckprDryRun",
                    "name": "_ckprDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ckprKeyName",
                        "name": "_ckprKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eA unique name for the key pair.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateKeyPair",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ckprDryRun",
                        "name": "_ckprDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ckprDryRun",
                        "name": "_ckprDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ckprKeyName",
                        "name": "_ckprKeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eA unique name for the key pair.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createNetworkAclResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnarNetworkAcl",
                    "name": "_cnarNetworkAcl",
                    "shape": "NetworkAcl",
                    "locationName": "networkAcl",
                    "documentation": "\u003cp\u003eInformation about the network ACL.\u003c/p\u003e",
                    "typeExposed": "Maybe NetworkAcl",
                    "type": "Maybe NetworkAcl"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnarNetworkAcl",
                    "name": "_cnarNetworkAcl",
                    "shape": "NetworkAcl",
                    "locationName": "networkAcl",
                    "documentation": "\u003cp\u003eInformation about the network ACL.\u003c/p\u003e",
                    "typeExposed": "Maybe NetworkAcl",
                    "type": "Maybe NetworkAcl"
                },
                "required": [],
                "name": "CreateNetworkAclResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnarNetworkAcl",
                        "name": "_cnarNetworkAcl",
                        "shape": "NetworkAcl",
                        "locationName": "networkAcl",
                        "documentation": "\u003cp\u003eInformation about the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkAcl",
                        "type": "Maybe NetworkAcl"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnarNetworkAcl",
                        "name": "_cnarNetworkAcl",
                        "shape": "NetworkAcl",
                        "locationName": "networkAcl",
                        "documentation": "\u003cp\u003eInformation about the network ACL.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkAcl",
                        "type": "Maybe NetworkAcl"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateNetworkAcl",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateNetworkAcl",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a network ACL in a VPC. Network ACLs provide an optional layer of security (in addition to security groups) for the instances in your VPC.\u003c/p\u003e \u003cp\u003eFor more information about network ACLs, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html\"\u003eNetwork ACLs\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "createNetworkAcl",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnarDryRun",
                    "name": "_cnarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnarVpcId",
                        "name": "_cnarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateNetworkAcl",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnarDryRun",
                        "name": "_cnarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnarDryRun",
                        "name": "_cnarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnarVpcId",
                        "name": "_cnarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createNetworkAclEntryResponse",
                "wrapper": false,
                "required": [],
                "name": "CreateNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CreateNetworkAclEntry",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateNetworkAclEntry",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an entry (a rule) in a network ACL with the specified rule number. Each network ACL has a set of numbered ingress rules and a separate set of numbered egress rules. When determining whether a packet should be allowed in or out of a subnet associated with the ACL, we process the entries in the ACL according to the rule numbers, in ascending order. Each network ACL has a set of ingress rules and a separate set of egress rules.\u003c/p\u003e \u003cp\u003eWe recommend that you leave room between the rule numbers (for example, 100, 110, 120, ...), and not number them one right after the other (for example, 101, 102, 103, ...). This makes it easier to add a rule between existing ones without having to renumber the rules.\u003c/p\u003e \u003cp\u003eAfter you add an entry, you can't modify it; you must either replace it, or create an entry and delete the old one.\u003c/p\u003e \u003cp\u003eFor more information about network ACLs, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html\"\u003eNetwork ACLs\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "createNetworkAclEntry",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnaerDryRun",
                    "name": "_cnaerDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerNetworkAclId",
                        "name": "_cnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerRuleNumber",
                        "name": "_cnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.\u003c/p\u003e \u003cp\u003eConstraints: Positive integer from 1 to 32766\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerProtocol",
                        "name": "_cnaerProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe protocol. A value of -1 means all protocols.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerRuleAction",
                        "name": "_cnaerRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerEgress",
                        "name": "_cnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether this is an egress rule (rule is applied to traffic leaving the subnet).\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerCidrBlock",
                        "name": "_cnaerCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation (for example \u003ccode\u003e172.16.0.0/24\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateNetworkAclEntry",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerDryRun",
                        "name": "_cnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerIcmpTypeCode",
                        "name": "_cnaerIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code. Required if specifying ICMP for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerPortRange",
                        "name": "_cnaerPortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerCidrBlock",
                        "name": "_cnaerCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation (for example \u003ccode\u003e172.16.0.0/24\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerDryRun",
                        "name": "_cnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerEgress",
                        "name": "_cnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether this is an egress rule (rule is applied to traffic leaving the subnet).\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerIcmpTypeCode",
                        "name": "_cnaerIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code. Required if specifying ICMP for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerNetworkAclId",
                        "name": "_cnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnaerPortRange",
                        "name": "_cnaerPortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerProtocol",
                        "name": "_cnaerProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe protocol. A value of -1 means all protocols.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerRuleAction",
                        "name": "_cnaerRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnaerRuleNumber",
                        "name": "_cnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number for the entry (for example, 100). ACL entries are processed in ascending order by rule number.\u003c/p\u003e \u003cp\u003eConstraints: Positive integer from 1 to 32766\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createNetworkInterfaceResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnirNetworkInterface",
                    "name": "_cnirNetworkInterface",
                    "shape": "NetworkInterface",
                    "locationName": "networkInterface",
                    "documentation": "\u003cp\u003eInformation about the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe NetworkInterface",
                    "type": "Maybe NetworkInterface"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cnirNetworkInterface",
                    "name": "_cnirNetworkInterface",
                    "shape": "NetworkInterface",
                    "locationName": "networkInterface",
                    "documentation": "\u003cp\u003eInformation about the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe NetworkInterface",
                    "type": "Maybe NetworkInterface"
                },
                "required": [],
                "name": "CreateNetworkInterfaceResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirNetworkInterface",
                        "name": "_cnirNetworkInterface",
                        "shape": "NetworkInterface",
                        "locationName": "networkInterface",
                        "documentation": "\u003cp\u003eInformation about the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterface",
                        "type": "Maybe NetworkInterface"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirNetworkInterface",
                        "name": "_cnirNetworkInterface",
                        "shape": "NetworkInterface",
                        "locationName": "networkInterface",
                        "documentation": "\u003cp\u003eInformation about the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterface",
                        "type": "Maybe NetworkInterface"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateNetworkInterface",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateNetworkInterface",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a network interface in the specified subnet.\u003c/p\u003e \u003cp\u003eFor more information about network interfaces, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html\"\u003eElastic Network Interfaces\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 35,
                "ctor": "createNetworkInterface",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cnirSubnetId",
                    "name": "_cnirSubnetId",
                    "shape": "String",
                    "locationName": "subnetId",
                    "documentation": "\u003cp\u003eThe ID of the subnet to associate with the network interface.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnirSubnetId",
                        "name": "_cnirSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet to associate with the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateNetworkInterface",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirDescription",
                        "name": "_cnirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirPrivateIpAddress",
                        "name": "_cnirPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe primary private IP address of the network interface. If you don't specify an IP address, Amazon EC2 selects one for you from the subnet range. If you specify an IP address, you cannot indicate any IP addresses specified in \u003ccode\u003eprivateIpAddresses\u003c/code\u003e as primary (only one IP address can be designated as primary).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cnirGroups",
                        "name": "_cnirGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eThe IDs of one or more security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cnirPrivateIpAddresses",
                        "name": "_cnirPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddresses",
                        "documentation": "\u003cp\u003eOne or more private IP addresses.\u003c/p\u003e",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "[PrivateIpAddressSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirSecondaryPrivateIpAddressCount",
                        "name": "_cnirSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary private IP addresses to assign to a network interface. When you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses within the subnet range. You can't specify this option and specify more than one private IP address using \u003ccode\u003eprivateIpAddresses\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI\"\u003ePrivate IP Addresses Per ENI Per Instance Type\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirDryRun",
                        "name": "_cnirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirDescription",
                        "name": "_cnirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirDryRun",
                        "name": "_cnirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cnirGroups",
                        "name": "_cnirGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eThe IDs of one or more security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirPrivateIpAddress",
                        "name": "_cnirPrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe primary private IP address of the network interface. If you don't specify an IP address, Amazon EC2 selects one for you from the subnet range. If you specify an IP address, you cannot indicate any IP addresses specified in \u003ccode\u003eprivateIpAddresses\u003c/code\u003e as primary (only one IP address can be designated as primary).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cnirPrivateIpAddresses",
                        "name": "_cnirPrivateIpAddresses",
                        "shape": "PrivateIpAddressSpecificationList",
                        "locationName": "privateIpAddresses",
                        "documentation": "\u003cp\u003eOne or more private IP addresses.\u003c/p\u003e",
                        "typeExposed": "[PrivateIpAddressSpecification]",
                        "type": "[PrivateIpAddressSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cnirSecondaryPrivateIpAddressCount",
                        "name": "_cnirSecondaryPrivateIpAddressCount",
                        "shape": "Integer",
                        "locationName": "secondaryPrivateIpAddressCount",
                        "documentation": "\u003cp\u003eThe number of secondary private IP addresses to assign to a network interface. When you specify a number of secondary IP addresses, Amazon EC2 selects these IP addresses within the subnet range. You can't specify this option and specify more than one private IP address using \u003ccode\u003eprivateIpAddresses\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe number of IP addresses you can assign to a network interface varies by instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-eni.html#AvailableIpPerENI\"\u003ePrivate IP Addresses Per ENI Per Instance Type\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cnirSubnetId",
                        "name": "_cnirSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet to associate with the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createPlacementGroupResponse",
                "wrapper": false,
                "required": [],
                "name": "CreatePlacementGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CreatePlacementGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreatePlacementGroup",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a placement group that you launch cluster instances into. You must give the group a name that's unique within the scope of your account.\u003c/p\u003e \u003cp\u003eFor more information about placement groups and cluster instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html\"\u003eCluster Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "createPlacementGroup",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cpgrDryRun",
                    "name": "_cpgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpgrGroupName",
                        "name": "_cpgrGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eA name for the placement group.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpgrStrategy",
                        "name": "_cpgrStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "\u003cp\u003eThe placement strategy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreatePlacementGroup",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpgrDryRun",
                        "name": "_cpgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpgrDryRun",
                        "name": "_cpgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpgrGroupName",
                        "name": "_cpgrGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eA name for the placement group.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpgrStrategy",
                        "name": "_cpgrStrategy",
                        "shape": "PlacementStrategy",
                        "locationName": "strategy",
                        "documentation": "\u003cp\u003eThe placement strategy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createReservedInstancesListingResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "crilr1ReservedInstancesListings",
                    "name": "_crilr1ReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eInformation about the Reserved Instances listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "crilr1ReservedInstancesListings",
                    "name": "_crilr1ReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eInformation about the Reserved Instances listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "required": [],
                "name": "CreateReservedInstancesListingResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilr1ReservedInstancesListings",
                        "name": "_crilr1ReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eInformation about the Reserved Instances listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilr1ReservedInstancesListings",
                        "name": "_crilr1ReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eInformation about the Reserved Instances listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateReservedInstancesListing",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateReservedInstancesListing",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a listing for Amazon EC2 Reserved Instances to be sold in the Reserved Instance Marketplace. You can submit one Reserved Instance listing at a time. To get a list of your Reserved Instances, you can use the \u003ca\u003eDescribeReservedInstances\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003eThe Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances. \u003c/p\u003e \u003cp\u003eTo sell your Reserved Instances, you must first register as a Seller in the Reserved Instance Marketplace. After completing the registration process, you can create a Reserved Instance Marketplace listing of some or all of your Reserved Instances, and specify the upfront price to receive for them. Your Reserved Instance listings then become available for purchase. To view the details of your Reserved Instance listing, you can use the \u003ca\u003eDescribeReservedInstancesListings\u003c/a\u003e operation.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html\"\u003eReserved Instance Marketplace\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "createReservedInstancesListing",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crilrReservedInstancesId",
                    "name": "_crilrReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe ID of the active Reserved Instance.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrReservedInstancesId",
                        "name": "_crilrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the active Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrInstanceCount",
                        "name": "_crilrInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrClientToken",
                        "name": "_crilrClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eEnsuring Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateReservedInstancesListing",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilrPriceSchedules",
                        "name": "_crilrPriceSchedules",
                        "shape": "PriceScheduleSpecificationList",
                        "locationName": "priceSchedules",
                        "documentation": "\u003cp\u003eA list specifying the price of the Reserved Instance for each month remaining in the Reserved Instance term.\u003c/p\u003e",
                        "typeExposed": "[PriceScheduleSpecification]",
                        "type": "[PriceScheduleSpecification]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrClientToken",
                        "name": "_crilrClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure idempotency of your listings. This helps avoid duplicate listings. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eEnsuring Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrInstanceCount",
                        "name": "_crilrInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe number of instances that are a part of a Reserved Instance account to be listed in the Reserved Instance Marketplace. This number should be less than or equal to the instance count associated with the Reserved Instance ID specified in this call.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "crilrPriceSchedules",
                        "name": "_crilrPriceSchedules",
                        "shape": "PriceScheduleSpecificationList",
                        "locationName": "priceSchedules",
                        "documentation": "\u003cp\u003eA list specifying the price of the Reserved Instance for each month remaining in the Reserved Instance term.\u003c/p\u003e",
                        "typeExposed": "[PriceScheduleSpecification]",
                        "type": "[PriceScheduleSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crilrReservedInstancesId",
                        "name": "_crilrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe ID of the active Reserved Instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createRouteResponse",
                "wrapper": false,
                "required": [],
                "name": "CreateRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CreateRoute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateRoute",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a route in a route table within a VPC.\u003c/p\u003e \u003cp\u003eYou must specify one of the following targets: Internet gateway or virtual private gateway, NAT instance, VPC peering connection, or network interface.\u003c/p\u003e \u003cp\u003eWhen determining how to route traffic, we use the route with the most specific match. For example, let's say the traffic is destined for \u003ccode\u003e192.0.2.3\u003c/code\u003e, and the route table includes the following two routes:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003e192.0.2.0/24\u003c/code\u003e (goes to some target A)\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003e192.0.2.0/28\u003c/code\u003e (goes to some target B)\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eBoth routes apply to the traffic destined for \u003ccode\u003e192.0.2.3\u003c/code\u003e. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.\u003c/p\u003e \u003cp\u003eFor more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "createRoute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "crrDryRun",
                    "name": "_crrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrRouteTableId",
                        "name": "_crrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table for the route.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrDestinationCidrBlock",
                        "name": "_crrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR address block used for the destination match. Routing decisions are based on the most specific match.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateRoute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrDryRun",
                        "name": "_crrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrGatewayId",
                        "name": "_crrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of an Internet gateway or virtual private gateway attached to your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrInstanceId",
                        "name": "_crrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrNetworkInterfaceId",
                        "name": "_crrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of a network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrVpcPeeringConnectionId",
                        "name": "_crrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of a VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrDestinationCidrBlock",
                        "name": "_crrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR address block used for the destination match. Routing decisions are based on the most specific match.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrDryRun",
                        "name": "_crrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrGatewayId",
                        "name": "_crrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of an Internet gateway or virtual private gateway attached to your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrInstanceId",
                        "name": "_crrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrNetworkInterfaceId",
                        "name": "_crrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of a network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrRouteTableId",
                        "name": "_crrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table for the route.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crrVpcPeeringConnectionId",
                        "name": "_crrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of a VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createRouteTableResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "crtrRouteTable",
                    "name": "_crtrRouteTable",
                    "shape": "RouteTable",
                    "locationName": "routeTable",
                    "documentation": "\u003cp\u003eInformation about the route table.\u003c/p\u003e",
                    "typeExposed": "Maybe RouteTable",
                    "type": "Maybe RouteTable"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "crtrRouteTable",
                    "name": "_crtrRouteTable",
                    "shape": "RouteTable",
                    "locationName": "routeTable",
                    "documentation": "\u003cp\u003eInformation about the route table.\u003c/p\u003e",
                    "typeExposed": "Maybe RouteTable",
                    "type": "Maybe RouteTable"
                },
                "required": [],
                "name": "CreateRouteTableResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crtrRouteTable",
                        "name": "_crtrRouteTable",
                        "shape": "RouteTable",
                        "locationName": "routeTable",
                        "documentation": "\u003cp\u003eInformation about the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe RouteTable",
                        "type": "Maybe RouteTable"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crtrRouteTable",
                        "name": "_crtrRouteTable",
                        "shape": "RouteTable",
                        "locationName": "routeTable",
                        "documentation": "\u003cp\u003eInformation about the route table.\u003c/p\u003e",
                        "typeExposed": "Maybe RouteTable",
                        "type": "Maybe RouteTable"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateRouteTable",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateRouteTable",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a route table for the specified VPC. After you create a route table, you can add routes and associate the table with a subnet.\u003c/p\u003e \u003cp\u003eFor more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "createRouteTable",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "crtrDryRun",
                    "name": "_crtrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crtrVpcId",
                        "name": "_crtrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateRouteTable",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crtrDryRun",
                        "name": "_crtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crtrDryRun",
                        "name": "_crtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crtrVpcId",
                        "name": "_crtrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createSecurityGroupResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csgrGroupId",
                    "name": "_csgrGroupId",
                    "shape": "String",
                    "locationName": "groupId",
                    "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csgrGroupId",
                    "name": "_csgrGroupId",
                    "shape": "String",
                    "locationName": "groupId",
                    "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "CreateSecurityGroupResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrGroupId",
                        "name": "_csgrGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrGroupId",
                        "name": "_csgrGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateSecurityGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a security group.\u003c/p\u003e \u003cp\u003eA security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\"\u003eAmazon EC2 Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e and \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html\"\u003eSecurity Groups for Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eEC2-Classic: You can have up to 500 security groups.\u003c/p\u003e \u003cp\u003eEC2-VPC: You can create up to 100 security groups per VPC.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eWhen you create a security group, you specify a friendly name of your choice. You can have a security group for use in EC2-Classic with the same name as a security group for use in a VPC. However, you can't have two security groups for use in EC2-Classic with the same name or two security groups for use in a VPC with the same name.\u003c/p\u003e \u003cp\u003eYou have a default security group for use in EC2-Classic and a default security group for use in your VPC. If you don't specify a security group when you launch an instance, the instance is launched into the appropriate default security group. A default security group includes a default rule that grants instances unrestricted network access to each other.\u003c/p\u003e \u003cp\u003eYou can add or remove rules from your security groups using \u003ca\u003eAuthorizeSecurityGroupIngress\u003c/a\u003e, \u003ca\u003eAuthorizeSecurityGroupEgress\u003c/a\u003e, \u003ca\u003eRevokeSecurityGroupIngress\u003c/a\u003e, and \u003ca\u003eRevokeSecurityGroupEgress\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "createSecurityGroup",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csgrDryRun",
                    "name": "_csgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csgrGroupName",
                        "name": "_csgrGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 characters in length\u003c/p\u003e \u003cp\u003eConstraints for EC2-Classic: ASCII characters\u003c/p\u003e \u003cp\u003eConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csgrDescription",
                        "name": "_csgrDescription",
                        "shape": "String",
                        "locationName": "GroupDescription",
                        "documentation": "\u003cp\u003eA description for the security group. This is informational only.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 characters in length\u003c/p\u003e \u003cp\u003eConstraints for EC2-Classic: ASCII characters\u003c/p\u003e \u003cp\u003eConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateSecurityGroup",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrDryRun",
                        "name": "_csgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrVpcId",
                        "name": "_csgrVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the VPC. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csgrDescription",
                        "name": "_csgrDescription",
                        "shape": "String",
                        "locationName": "GroupDescription",
                        "documentation": "\u003cp\u003eA description for the security group. This is informational only.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 characters in length\u003c/p\u003e \u003cp\u003eConstraints for EC2-Classic: ASCII characters\u003c/p\u003e \u003cp\u003eConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrDryRun",
                        "name": "_csgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csgrGroupName",
                        "name": "_csgrGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the security group.\u003c/p\u003e \u003cp\u003eConstraints: Up to 255 characters in length\u003c/p\u003e \u003cp\u003eConstraints for EC2-Classic: ASCII characters\u003c/p\u003e \u003cp\u003eConstraints for EC2-VPC: a-z, A-Z, 0-9, spaces, and ._-:/()#,@[]+=&amp;;{}!$*\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csgrVpcId",
                        "name": "_csgrVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the VPC. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "snapshot",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sSnapshotId",
                    "name": "_sSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Snapshot",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sSnapshotId",
                        "name": "_sSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sVolumeId",
                        "name": "_sVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sState",
                        "name": "_sState",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe snapshot state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sStartTime",
                        "name": "_sStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time stamp when the snapshot was initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sProgress",
                        "name": "_sProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "\u003cp\u003eThe progress of the snapshot, as a percentage.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwnerId",
                        "name": "_sOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the Amazon EBS snapshot owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sDescription",
                        "name": "_sDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description for the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sVolumeSize",
                        "name": "_sVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwnerAlias",
                        "name": "_sOwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "\u003cp\u003eThe AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e, \u003ccode\u003eself\u003c/code\u003e) or AWS account ID that owns the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the snapshot is encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sDescription",
                        "name": "_sDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description for the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sEncrypted",
                        "name": "_sEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the snapshot is encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwnerAlias",
                        "name": "_sOwnerAlias",
                        "shape": "String",
                        "locationName": "ownerAlias",
                        "documentation": "\u003cp\u003eThe AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e, \u003ccode\u003eself\u003c/code\u003e) or AWS account ID that owns the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sOwnerId",
                        "name": "_sOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the Amazon EBS snapshot owner.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sProgress",
                        "name": "_sProgress",
                        "shape": "String",
                        "locationName": "progress",
                        "documentation": "\u003cp\u003eThe progress of the snapshot, as a percentage.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sSnapshotId",
                        "name": "_sSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sStartTime",
                        "name": "_sStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time stamp when the snapshot was initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sState",
                        "name": "_sState",
                        "shape": "SnapshotState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe snapshot state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sTags",
                        "name": "_sTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sVolumeId",
                        "name": "_sVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sVolumeSize",
                        "name": "_sVolumeSize",
                        "shape": "Integer",
                        "locationName": "volumeSize",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiB.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a snapshot of an Amazon EBS volume and stores it in Amazon S3. You can use snapshots for backups, to make copies of Amazon EBS volumes, and to save data before shutting down an instance.\u003c/p\u003e \u003cp\u003eWhen a snapshot is created, any AWS Marketplace product codes that are associated with the source volume are propagated to the snapshot.\u003c/p\u003e \u003cp\u003eYou can take a snapshot of an attached volume that is in use. However, snapshots only capture data that has been written to your Amazon EBS volume at the time the snapshot command is issued; this may exclude any data that has been cached by any applications or the operating system. If you can pause any file systems on the volume long enough to take a snapshot, your snapshot should be complete. However, if you cannot pause all file writes to the volume, you should unmount the volume from within the instance, issue the snapshot command, and then remount the volume to ensure a consistent and complete snapshot. You may remount and use your volume while the snapshot status is \u003ccode\u003epending\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eTo create a snapshot for Amazon EBS volumes that serve as root devices, you should stop the instance before taking the snapshot.\u003c/p\u003e \u003cp\u003eSnapshots that are taken from encrypted volumes are automatically encrypted. Volumes that are created from encrypted snapshots are also automatically encrypted. Your encrypted volumes and any associated snapshots always remain protected.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AmazonEBS.html\"\u003eAmazon Elastic Block Store\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\"\u003eAmazon EBS Encryption\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "createSnapshot",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csr2DryRun",
                    "name": "_csr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr2VolumeId",
                        "name": "_csr2VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateSnapshot",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr2DryRun",
                        "name": "_csr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr2Description",
                        "name": "_csr2Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr2Description",
                        "name": "_csr2Description",
                        "shape": "String",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr2DryRun",
                        "name": "_csr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr2VolumeId",
                        "name": "_csr2VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createSpotDatafeedSubscriptionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csdsrSpotDatafeedSubscription",
                    "name": "_csdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csdsrSpotDatafeedSubscription",
                    "name": "_csdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "required": [],
                "name": "CreateSpotDatafeedSubscriptionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrSpotDatafeedSubscription",
                        "name": "_csdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrSpotDatafeedSubscription",
                        "name": "_csdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateSpotDatafeedSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateSpotDatafeedSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a datafeed for Spot Instances, enabling you to view Spot Instance usage logs. You can create one data feed per AWS account. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "createSpotDatafeedSubscription",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csdsrDryRun",
                    "name": "_csdsrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csdsrBucket",
                        "name": "_csdsrBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which to store the Spot Instance datafeed.\u003c/p\u003e \u003cp\u003eConstraints: Must be a valid bucket associated with your AWS account.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateSpotDatafeedSubscription",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrDryRun",
                        "name": "_csdsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrPrefix",
                        "name": "_csdsrPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eA prefix for the datafeed file names.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csdsrBucket",
                        "name": "_csdsrBucket",
                        "shape": "String",
                        "locationName": "bucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which to store the Spot Instance datafeed.\u003c/p\u003e \u003cp\u003eConstraints: Must be a valid bucket associated with your AWS account.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrDryRun",
                        "name": "_csdsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csdsrPrefix",
                        "name": "_csdsrPrefix",
                        "shape": "String",
                        "locationName": "prefix",
                        "documentation": "\u003cp\u003eA prefix for the datafeed file names.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createSubnetResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrSubnet",
                    "name": "_csrSubnet",
                    "shape": "Subnet",
                    "locationName": "subnet",
                    "documentation": "\u003cp\u003eInformation about the subnet.\u003c/p\u003e",
                    "typeExposed": "Maybe Subnet",
                    "type": "Maybe Subnet"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csrSubnet",
                    "name": "_csrSubnet",
                    "shape": "Subnet",
                    "locationName": "subnet",
                    "documentation": "\u003cp\u003eInformation about the subnet.\u003c/p\u003e",
                    "typeExposed": "Maybe Subnet",
                    "type": "Maybe Subnet"
                },
                "required": [],
                "name": "CreateSubnetResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSubnet",
                        "name": "_csrSubnet",
                        "shape": "Subnet",
                        "locationName": "subnet",
                        "documentation": "\u003cp\u003eInformation about the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Subnet",
                        "type": "Maybe Subnet"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csrSubnet",
                        "name": "_csrSubnet",
                        "shape": "Subnet",
                        "locationName": "subnet",
                        "documentation": "\u003cp\u003eInformation about the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Subnet",
                        "type": "Maybe Subnet"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateSubnet",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateSubnet",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a subnet in an existing VPC.\u003c/p\u003e \u003cp\u003eWhen you create each subnet, you provide the VPC ID and the CIDR block you want for the subnet. After you create a subnet, you can't change its CIDR block. The subnet's CIDR block can be the same as the VPC's CIDR block (assuming you want only a single subnet in the VPC), or a subset of the VPC's CIDR block. If you create more than one subnet in a VPC, the subnets' CIDR blocks must not overlap. The smallest subnet (and VPC) you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16 netmask (65,536 IP addresses).\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAWS reserves both the first four and the last IP address in each subnet's CIDR block. They're not available for use.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf you add more than one subnet to a VPC, they're set up in a star topology with a logical router in the middle.\u003c/p\u003e \u003cp\u003eIf you launch an instance in a VPC using an Amazon EBS-backed AMI, the IP address doesn't change if you stop and restart the instance (unlike a similar instance launched outside a VPC, which gets a new IP address when restarted). It's therefore possible to have a subnet with no running instances (they're all stopped), but no remaining IP addresses available.\u003c/p\u003e \u003cp\u003eFor more information about subnets, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\"\u003eYour VPC and Subnets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "createSubnet",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csr1DryRun",
                    "name": "_csr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr1VpcId",
                        "name": "_csr1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr1CidrBlock",
                        "name": "_csr1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "\u003cp\u003eThe network range for the subnet, in CIDR notation. For example, \u003ccode\u003e10.0.0.0/24\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateSubnet",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr1DryRun",
                        "name": "_csr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr1AvailabilityZone",
                        "name": "_csr1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the subnet.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 selects one for you (recommended).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr1AvailabilityZone",
                        "name": "_csr1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the subnet.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 selects one for you (recommended).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr1CidrBlock",
                        "name": "_csr1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "\u003cp\u003eThe network range for the subnet, in CIDR notation. For example, \u003ccode\u003e10.0.0.0/24\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csr1DryRun",
                        "name": "_csr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csr1VpcId",
                        "name": "_csr1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createTagsResponse",
                "wrapper": false,
                "required": [],
                "name": "CreateTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CreateTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateTags",
            "method": "post",
            "documentation": "\u003cp\u003eAdds or overwrites one or more tags for the specified EC2 resource or resources. Each resource can have a maximum of 10 tags. Each tag consists of a key and optional value. Tag keys must be unique per resource.\u003c/p\u003e \u003cp\u003eFor more information about tags, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\"\u003eTagging Your Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "createTags",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ctrDryRun",
                    "name": "_ctrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "CreateTags",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctrDryRun",
                        "name": "_ctrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctrResources",
                        "name": "_ctrResources",
                        "shape": "ResourceIdList",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe IDs of one or more resources to tag. For example, ami-1a2b3c4d.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctrTags",
                        "name": "_ctrTags",
                        "shape": "TagList",
                        "locationName": "Tag",
                        "documentation": "\u003cp\u003eOne or more tags. The \u003ccode\u003evalue\u003c/code\u003e parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. \u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ctrDryRun",
                        "name": "_ctrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctrResources",
                        "name": "_ctrResources",
                        "shape": "ResourceIdList",
                        "locationName": "ResourceId",
                        "documentation": "\u003cp\u003eThe IDs of one or more resources to tag. For example, ami-1a2b3c4d.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ctrTags",
                        "name": "_ctrTags",
                        "shape": "TagList",
                        "locationName": "Tag",
                        "documentation": "\u003cp\u003eOne or more tags. The \u003ccode\u003evalue\u003c/code\u003e parameter is required, but if you don't want the tag to have a value, specify the parameter with no value, and we set the value to an empty string. \u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "volume",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vVolumeId",
                    "name": "_vVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Volume",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vVolumeId",
                        "name": "_vVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vSize",
                        "name": "_vSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiBs.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vSnapshotId",
                        "name": "_vSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe snapshot from which the volume was created, if applicable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vAvailabilityZone",
                        "name": "_vAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vState",
                        "name": "_vState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe volume state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vCreateTime",
                        "name": "_vCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "\u003cp\u003eThe time stamp when volume creation was initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vAttachments",
                        "name": "_vAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "[VolumeAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vTags",
                        "name": "_vTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the volume.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vVolumeType",
                        "name": "_vVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "\u003cp\u003eThe volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vIops",
                        "name": "_vIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "\u003cp\u003eThe number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\"\u003eAmazon EBS Volume Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD) volumes.\u003c/p\u003e \u003cp\u003eCondition: This parameter is required for requests to create \u003ccode\u003eio1\u003c/code\u003e volumes; it is not used in requests to create \u003ccode\u003estandard\u003c/code\u003e or \u003ccode\u003egp2\u003c/code\u003e volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vEncrypted",
                        "name": "_vEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the volume is encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vAttachments",
                        "name": "_vAttachments",
                        "shape": "VolumeAttachmentList",
                        "locationName": "attachmentSet",
                        "documentation": null,
                        "typeExposed": "[VolumeAttachment]",
                        "type": "[VolumeAttachment]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vAvailabilityZone",
                        "name": "_vAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vCreateTime",
                        "name": "_vCreateTime",
                        "shape": "DateTime",
                        "locationName": "createTime",
                        "documentation": "\u003cp\u003eThe time stamp when volume creation was initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vEncrypted",
                        "name": "_vEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eIndicates whether the volume is encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vIops",
                        "name": "_vIops",
                        "shape": "Integer",
                        "locationName": "iops",
                        "documentation": "\u003cp\u003eThe number of I/O operations per second (IOPS) that the volume supports. For Provisioned IOPS (SSD) volumes, this represents the number of IOPS that are provisioned for the volume. For General Purpose (SSD) volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting. For more information on General Purpose (SSD) baseline performance, I/O credits, and bursting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html\"\u003eAmazon EBS Volume Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraint: Range is 100 to 4000 for Provisioned IOPS (SSD) volumes and 3 to 3072 for General Purpose (SSD) volumes.\u003c/p\u003e \u003cp\u003eCondition: This parameter is required for requests to create \u003ccode\u003eio1\u003c/code\u003e volumes; it is not used in requests to create \u003ccode\u003estandard\u003c/code\u003e or \u003ccode\u003egp2\u003c/code\u003e volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vSize",
                        "name": "_vSize",
                        "shape": "Integer",
                        "locationName": "size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiBs.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vSnapshotId",
                        "name": "_vSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe snapshot from which the volume was created, if applicable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vState",
                        "name": "_vState",
                        "shape": "VolumeState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe volume state.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vTags",
                        "name": "_vTags",
                        "shape": "TagList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eAny tags assigned to the volume.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vVolumeId",
                        "name": "_vVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vVolumeType",
                        "name": "_vVolumeType",
                        "shape": "VolumeType",
                        "locationName": "volumeType",
                        "documentation": "\u003cp\u003eThe volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateVolume",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVolume",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an Amazon EBS volume that can be attached to an instance in the same Availability Zone. The volume is created in the specified region.\u003c/p\u003e \u003cp\u003eYou can create a new empty volume or restore a volume from an Amazon EBS snapshot. Any AWS Marketplace product codes from the snapshot are propagated to the volume.\u003c/p\u003e \u003cp\u003eYou can create encrypted volumes with the \u003ccode\u003eEncrypted\u003c/code\u003e parameter. Encrypted volumes may only be attached to instances that support Amazon EBS encryption. Volumes that are created from encrypted snapshots are also automatically encrypted. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html\"\u003eAmazon EBS Encryption\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html\"\u003eCreating or Restoring an Amazon EBS Volume\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "createVolume",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvrDryRun",
                    "name": "_cvrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvrAvailabilityZone",
                        "name": "_cvrAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which to create the volume. Use \u003ca\u003eDescribeAvailabilityZones\u003c/a\u003e to list the Availability Zones that are currently available to you.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVolume",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrDryRun",
                        "name": "_cvrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrSize",
                        "name": "_cvrSize",
                        "shape": "Integer",
                        "locationName": "Size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiBs.\u003c/p\u003e \u003cp\u003eConstraints: If the volume type is \u003ccode\u003eio1\u003c/code\u003e, the minimum size of the volume is 10 GiB.\u003c/p\u003e \u003cp\u003eDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrSnapshotId",
                        "name": "_cvrSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe snapshot from which to create the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrVolumeType",
                        "name": "_cvrVolumeType",
                        "shape": "VolumeType",
                        "locationName": "VolumeType",
                        "documentation": "\u003cp\u003eThe volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estandard\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrIops",
                        "name": "_cvrIops",
                        "shape": "Integer",
                        "locationName": "Iops",
                        "documentation": "\u003cp\u003eOnly valid for Provisioned IOPS (SSD) volumes. The number of I/O operations per second (IOPS) to provision for the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrEncrypted",
                        "name": "_cvrEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eSpecifies whether the volume should be encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvrAvailabilityZone",
                        "name": "_cvrAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which to create the volume. Use \u003ca\u003eDescribeAvailabilityZones\u003c/a\u003e to list the Availability Zones that are currently available to you.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrDryRun",
                        "name": "_cvrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrEncrypted",
                        "name": "_cvrEncrypted",
                        "shape": "Boolean",
                        "locationName": "encrypted",
                        "documentation": "\u003cp\u003eSpecifies whether the volume should be encrypted.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrIops",
                        "name": "_cvrIops",
                        "shape": "Integer",
                        "locationName": "Iops",
                        "documentation": "\u003cp\u003eOnly valid for Provisioned IOPS (SSD) volumes. The number of I/O operations per second (IOPS) to provision for the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrSize",
                        "name": "_cvrSize",
                        "shape": "Integer",
                        "locationName": "Size",
                        "documentation": "\u003cp\u003eThe size of the volume, in GiBs.\u003c/p\u003e \u003cp\u003eConstraints: If the volume type is \u003ccode\u003eio1\u003c/code\u003e, the minimum size of the volume is 10 GiB.\u003c/p\u003e \u003cp\u003eDefault: If you're creating the volume from a snapshot and don't specify a volume size, the default is the snapshot size.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrSnapshotId",
                        "name": "_cvrSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe snapshot from which to create the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrVolumeType",
                        "name": "_cvrVolumeType",
                        "shape": "VolumeType",
                        "locationName": "VolumeType",
                        "documentation": "\u003cp\u003eThe volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estandard\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createVpcResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvrVpc",
                    "name": "_cvrVpc",
                    "shape": "Vpc",
                    "locationName": "vpc",
                    "documentation": "\u003cp\u003eInformation about the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Vpc",
                    "type": "Maybe Vpc"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvrVpc",
                    "name": "_cvrVpc",
                    "shape": "Vpc",
                    "locationName": "vpc",
                    "documentation": "\u003cp\u003eInformation about the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Vpc",
                    "type": "Maybe Vpc"
                },
                "required": [],
                "name": "CreateVpcResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrVpc",
                        "name": "_cvrVpc",
                        "shape": "Vpc",
                        "locationName": "vpc",
                        "documentation": "\u003cp\u003eInformation about the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Vpc",
                        "type": "Maybe Vpc"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvrVpc",
                        "name": "_cvrVpc",
                        "shape": "Vpc",
                        "locationName": "vpc",
                        "documentation": "\u003cp\u003eInformation about the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Vpc",
                        "type": "Maybe Vpc"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateVpc",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVpc",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a VPC with the specified CIDR block.\u003c/p\u003e \u003cp\u003eThe smallest VPC you can create uses a /28 netmask (16 IP addresses), and the largest uses a /16 netmask (65,536 IP addresses). To help you decide how big to make your VPC, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\"\u003eYour VPC and Subnets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eBy default, each instance you launch in the VPC has the default DHCP options, which includes only a default DNS server that we provide (AmazonProvidedDNS). For more information about DHCP options, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html\"\u003eDHCP Options Sets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "createVpc",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvr1DryRun",
                    "name": "_cvr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvr1CidrBlock",
                        "name": "_cvr1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "\u003cp\u003eThe network range for the VPC, in CIDR notation. For example, \u003ccode\u003e10.0.0.0/16\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVpc",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvr1DryRun",
                        "name": "_cvr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvr1InstanceTenancy",
                        "name": "_cvr1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe supported tenancy options for instances launched into the VPC. A value of \u003ccode\u003edefault\u003c/code\u003e means that instances can be launched with any tenancy; a value of \u003ccode\u003ededicated\u003c/code\u003e means all instances launched into the VPC are launched as dedicated tenancy instances regardless of the tenancy assigned to the instance at launch. Dedicated tenancy instances run on single-tenant hardware.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvr1CidrBlock",
                        "name": "_cvr1CidrBlock",
                        "shape": "String",
                        "locationName": "CidrBlock",
                        "documentation": "\u003cp\u003eThe network range for the VPC, in CIDR notation. For example, \u003ccode\u003e10.0.0.0/16\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvr1DryRun",
                        "name": "_cvr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvr1InstanceTenancy",
                        "name": "_cvr1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe supported tenancy options for instances launched into the VPC. A value of \u003ccode\u003edefault\u003c/code\u003e means that instances can be launched with any tenancy; a value of \u003ccode\u003ededicated\u003c/code\u003e means all instances launched into the VPC are launched as dedicated tenancy instances regardless of the tenancy assigned to the instance at launch. Dedicated tenancy instances run on single-tenant hardware.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createVpcPeeringConnectionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvpcrVpcPeeringConnection",
                    "name": "_cvpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvpcrVpcPeeringConnection",
                    "name": "_cvpcrVpcPeeringConnection",
                    "shape": "VpcPeeringConnection",
                    "locationName": "vpcPeeringConnection",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpcPeeringConnection",
                    "type": "Maybe VpcPeeringConnection"
                },
                "required": [],
                "name": "CreateVpcPeeringConnectionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrVpcPeeringConnection",
                        "name": "_cvpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrVpcPeeringConnection",
                        "name": "_cvpcrVpcPeeringConnection",
                        "shape": "VpcPeeringConnection",
                        "locationName": "vpcPeeringConnection",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpcPeeringConnection",
                        "type": "Maybe VpcPeeringConnection"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateVpcPeeringConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVpcPeeringConnection",
            "method": "post",
            "documentation": "\u003cp\u003eRequests a VPC peering connection between two VPCs: a requester VPC that you own and a peer VPC with which to create the connection. The peer VPC can belong to another AWS account. The requester VPC and peer VPC cannot have overlapping CIDR blocks.\u003c/p\u003e \u003cp\u003eThe owner of the peer VPC must accept the peering request to activate the peering connection. The VPC peering connection request expires after 7 days, after which it cannot be accepted or rejected.\u003c/p\u003e \u003cp\u003eA \u003ccode\u003eCreateVpcPeeringConnection\u003c/code\u003e request between VPCs with overlapping CIDR blocks results in the VPC peering connection having a status of \u003ccode\u003efailed\u003c/code\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "createVpcPeeringConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvpcrDryRun",
                    "name": "_cvpcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVpcPeeringConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrDryRun",
                        "name": "_cvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrVpcId",
                        "name": "_cvpcrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the requester VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrPeerVpcId",
                        "name": "_cvpcrPeerVpcId",
                        "shape": "String",
                        "locationName": "peerVpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC with which you are creating the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrPeerOwnerId",
                        "name": "_cvpcrPeerOwnerId",
                        "shape": "String",
                        "locationName": "peerOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the peer VPC.\u003c/p\u003e \u003cp\u003eDefault: Your AWS account ID\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrDryRun",
                        "name": "_cvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrPeerOwnerId",
                        "name": "_cvpcrPeerOwnerId",
                        "shape": "String",
                        "locationName": "peerOwnerId",
                        "documentation": "\u003cp\u003eThe AWS account ID of the owner of the peer VPC.\u003c/p\u003e \u003cp\u003eDefault: Your AWS account ID\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrPeerVpcId",
                        "name": "_cvpcrPeerVpcId",
                        "shape": "String",
                        "locationName": "peerVpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC with which you are creating the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvpcrVpcId",
                        "name": "_cvpcrVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the requester VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createVpnConnectionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvcrVpnConnection",
                    "name": "_cvcrVpnConnection",
                    "shape": "VpnConnection",
                    "locationName": "vpnConnection",
                    "documentation": "\u003cp\u003eInformation about the VPN connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpnConnection",
                    "type": "Maybe VpnConnection"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvcrVpnConnection",
                    "name": "_cvcrVpnConnection",
                    "shape": "VpnConnection",
                    "locationName": "vpnConnection",
                    "documentation": "\u003cp\u003eInformation about the VPN connection.\u003c/p\u003e",
                    "typeExposed": "Maybe VpnConnection",
                    "type": "Maybe VpnConnection"
                },
                "required": [],
                "name": "CreateVpnConnectionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrVpnConnection",
                        "name": "_cvcrVpnConnection",
                        "shape": "VpnConnection",
                        "locationName": "vpnConnection",
                        "documentation": "\u003cp\u003eInformation about the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnection",
                        "type": "Maybe VpnConnection"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrVpnConnection",
                        "name": "_cvcrVpnConnection",
                        "shape": "VpnConnection",
                        "locationName": "vpnConnection",
                        "documentation": "\u003cp\u003eInformation about the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnection",
                        "type": "Maybe VpnConnection"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateVpnConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVpnConnection",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a VPN connection between an existing virtual private gateway and a VPN customer gateway. The only supported connection type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eThe response includes information that you need to give to your network administrator to configure your customer gateway.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe strongly recommend that you use HTTPS when calling this operation because the response contains sensitive cryptographic information for configuring your customer gateway.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eIf you decide to shut down your VPN connection for any reason and later create a new VPN connection, you must reconfigure your customer gateway with the new information returned from this call.\u003c/p\u003e \u003cp\u003eFor more information about VPN connections, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "createVpnConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvcrDryRun",
                    "name": "_cvcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrType",
                        "name": "_cvcrType",
                        "shape": "String",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrCustomerGatewayId",
                        "name": "_cvcrCustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrVpnGatewayId",
                        "name": "_cvcrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVpnConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrDryRun",
                        "name": "_cvcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrOptions",
                        "name": "_cvcrOptions",
                        "shape": "VpnConnectionOptionsSpecification",
                        "locationName": "options",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection requires static routes. If you are creating a VPN connection for a device that does not support BGP, you must specify \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnectionOptionsSpecification",
                        "type": "Maybe VpnConnectionOptionsSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrCustomerGatewayId",
                        "name": "_cvcrCustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrDryRun",
                        "name": "_cvcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvcrOptions",
                        "name": "_cvcrOptions",
                        "shape": "VpnConnectionOptionsSpecification",
                        "locationName": "options",
                        "documentation": "\u003cp\u003eIndicates whether the VPN connection requires static routes. If you are creating a VPN connection for a device that does not support BGP, you must specify \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe VpnConnectionOptionsSpecification",
                        "type": "Maybe VpnConnectionOptionsSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrType",
                        "name": "_cvcrType",
                        "shape": "String",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection (\u003ccode\u003eipsec.1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrVpnGatewayId",
                        "name": "_cvcrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createVpnConnectionRouteResponse",
                "wrapper": false,
                "required": [],
                "name": "CreateVpnConnectionRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.CreateVpnConnectionRoute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVpnConnectionRoute",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.\u003c/p\u003e \u003cp\u003eFor more information about VPN connections, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "createVpnConnectionRoute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cvcrrVpnConnectionId",
                    "name": "_cvcrrVpnConnectionId",
                    "shape": "String",
                    "locationName": "VpnConnectionId",
                    "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrrVpnConnectionId",
                        "name": "_cvcrrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrrDestinationCidrBlock",
                        "name": "_cvcrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer network.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVpnConnectionRoute",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrrDestinationCidrBlock",
                        "name": "_cvcrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer network.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvcrrVpnConnectionId",
                        "name": "_cvcrrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "createVpnGatewayResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvgrVpnGateway",
                    "name": "_cvgrVpnGateway",
                    "shape": "VpnGateway",
                    "locationName": "vpnGateway",
                    "documentation": "\u003cp\u003eInformation about the virtual private gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe VpnGateway",
                    "type": "Maybe VpnGateway"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvgrVpnGateway",
                    "name": "_cvgrVpnGateway",
                    "shape": "VpnGateway",
                    "locationName": "vpnGateway",
                    "documentation": "\u003cp\u003eInformation about the virtual private gateway.\u003c/p\u003e",
                    "typeExposed": "Maybe VpnGateway",
                    "type": "Maybe VpnGateway"
                },
                "required": [],
                "name": "CreateVpnGatewayResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrVpnGateway",
                        "name": "_cvgrVpnGateway",
                        "shape": "VpnGateway",
                        "locationName": "vpnGateway",
                        "documentation": "\u003cp\u003eInformation about the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnGateway",
                        "type": "Maybe VpnGateway"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrVpnGateway",
                        "name": "_cvgrVpnGateway",
                        "shape": "VpnGateway",
                        "locationName": "vpnGateway",
                        "documentation": "\u003cp\u003eInformation about the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe VpnGateway",
                        "type": "Maybe VpnGateway"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.CreateVpnGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "CreateVpnGateway",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a virtual private gateway. A virtual private gateway is the endpoint on the VPC side of your VPN connection. You can create a virtual private gateway before creating the VPC itself.\u003c/p\u003e \u003cp\u003eFor more information about virtual private gateways, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "createVpnGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cvgrDryRun",
                    "name": "_cvgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvgrType",
                        "name": "_cvgrType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection this virtual private gateway supports.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "CreateVpnGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrDryRun",
                        "name": "_cvgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrAvailabilityZone",
                        "name": "_cvgrAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrAvailabilityZone",
                        "name": "_cvgrAvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvgrDryRun",
                        "name": "_cvgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvgrType",
                        "name": "_cvgrType",
                        "shape": "GatewayType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eThe type of VPN connection this virtual private gateway supports.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteCustomerGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteCustomerGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteCustomerGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteCustomerGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified customer gateway. You must delete the VPN connection before you can delete the customer gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "deleteCustomerGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dcgr1DryRun",
                    "name": "_dcgr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dcgr1CustomerGatewayId",
                        "name": "_dcgr1CustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteCustomerGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcgr1DryRun",
                        "name": "_dcgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dcgr1CustomerGatewayId",
                        "name": "_dcgr1CustomerGatewayId",
                        "shape": "String",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the customer gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcgr1DryRun",
                        "name": "_dcgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteDhcpOptionsResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteDhcpOptionsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteDhcpOptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteDhcpOptions",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified set of DHCP options. You must disassociate the set of DHCP options before you can delete it. You can disassociate the set of DHCP options by associating either a new set of options or the default set of options with the VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "deleteDhcpOptions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ddorDryRun",
                    "name": "_ddorDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ddorDhcpOptionsId",
                        "name": "_ddorDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the DHCP options set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteDhcpOptions",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ddorDryRun",
                        "name": "_ddorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ddorDhcpOptionsId",
                        "name": "_ddorDhcpOptionsId",
                        "shape": "String",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe ID of the DHCP options set.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ddorDryRun",
                        "name": "_ddorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteInternetGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteInternetGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteInternetGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified Internet gateway. You must detach the Internet gateway from the VPC before you can delete it.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "deleteInternetGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "digr1DryRun",
                    "name": "_digr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr1InternetGatewayId",
                        "name": "_digr1InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteInternetGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digr1DryRun",
                        "name": "_digr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digr1DryRun",
                        "name": "_digr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr1InternetGatewayId",
                        "name": "_digr1InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteKeyPairResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteKeyPairResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteKeyPair",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteKeyPair",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified key pair, by removing the public key from Amazon EC2.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "deleteKeyPair",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dkpr1DryRun",
                    "name": "_dkpr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dkpr1KeyName",
                        "name": "_dkpr1KeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteKeyPair",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dkpr1DryRun",
                        "name": "_dkpr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dkpr1DryRun",
                        "name": "_dkpr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dkpr1KeyName",
                        "name": "_dkpr1KeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eThe name of the key pair.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteNetworkAclResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteNetworkAclResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteNetworkAcl",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteNetworkAcl",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified network ACL. You can't delete the ACL if it's associated with any subnets. You can't delete the default network ACL.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "deleteNetworkAcl",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnarDryRun",
                    "name": "_dnarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnarNetworkAclId",
                        "name": "_dnarNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteNetworkAcl",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnarDryRun",
                        "name": "_dnarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnarDryRun",
                        "name": "_dnarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnarNetworkAclId",
                        "name": "_dnarNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteNetworkAclEntryResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteNetworkAclEntry",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteNetworkAclEntry",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified ingress or egress entry (rule) from the specified network ACL.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "deleteNetworkAclEntry",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnaerDryRun",
                    "name": "_dnaerDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerNetworkAclId",
                        "name": "_dnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerRuleNumber",
                        "name": "_dnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number of the entry to delete.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerEgress",
                        "name": "_dnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether the rule is an egress rule.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteNetworkAclEntry",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnaerDryRun",
                        "name": "_dnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnaerDryRun",
                        "name": "_dnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerEgress",
                        "name": "_dnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether the rule is an egress rule.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerNetworkAclId",
                        "name": "_dnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the network ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnaerRuleNumber",
                        "name": "_dnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number of the entry to delete.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteNetworkInterfaceResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteNetworkInterfaceResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteNetworkInterface",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteNetworkInterface",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified network interface. You must detach the network interface before you can delete it.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "deleteNetworkInterface",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnir1DryRun",
                    "name": "_dnir1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnir1NetworkInterfaceId",
                        "name": "_dnir1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteNetworkInterface",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir1DryRun",
                        "name": "_dnir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir1DryRun",
                        "name": "_dnir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnir1NetworkInterfaceId",
                        "name": "_dnir1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deletePlacementGroupResponse",
                "wrapper": false,
                "required": [],
                "name": "DeletePlacementGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeletePlacementGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeletePlacementGroup",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified placement group. You must terminate all instances in the placement group before you can delete the placement group. For more information about placement groups and cluster instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html\"\u003eCluster Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "deletePlacementGroup",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dpgrDryRun",
                    "name": "_dpgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpgrGroupName",
                        "name": "_dpgrGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeletePlacementGroup",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dpgrDryRun",
                        "name": "_dpgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dpgrDryRun",
                        "name": "_dpgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpgrGroupName",
                        "name": "_dpgrGroupName",
                        "shape": "String",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eThe name of the placement group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteRouteResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteRoute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteRoute",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified route from the specified route table.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "deleteRoute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drr1DryRun",
                    "name": "_drr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drr1RouteTableId",
                        "name": "_drr1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drr1DestinationCidrBlock",
                        "name": "_drr1DestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR range for the route. The value you specify must match the CIDR for the route exactly.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteRoute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drr1DryRun",
                        "name": "_drr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drr1DestinationCidrBlock",
                        "name": "_drr1DestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR range for the route. The value you specify must match the CIDR for the route exactly.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drr1DryRun",
                        "name": "_drr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drr1RouteTableId",
                        "name": "_drr1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteRouteTableResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteRouteTableResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteRouteTable",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteRouteTable",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified route table. You must disassociate the route table from any subnets before you can delete it. You can't delete the main route table.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "deleteRouteTable",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drtr1DryRun",
                    "name": "_drtr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drtr1RouteTableId",
                        "name": "_drtr1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteRouteTable",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtr1DryRun",
                        "name": "_drtr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtr1DryRun",
                        "name": "_drtr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drtr1RouteTableId",
                        "name": "_drtr1RouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteSecurityGroupResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteSecurityGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteSecurityGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a security group.\u003c/p\u003e \u003cp\u003eIf you attempt to delete a security group that is associated with an instance, or is referenced by another security group, the operation fails with \u003ccode\u003eInvalidGroup.InUse\u003c/code\u003e in EC2-Classic or \u003ccode\u003eDependencyViolation\u003c/code\u003e in EC2-VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "deleteSecurityGroup",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsgr1DryRun",
                    "name": "_dsgr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteSecurityGroup",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1DryRun",
                        "name": "_dsgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1GroupName",
                        "name": "_dsgr1GroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1GroupId",
                        "name": "_dsgr1GroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group. Required for a nondefault VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1DryRun",
                        "name": "_dsgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1GroupId",
                        "name": "_dsgr1GroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group. Required for a nondefault VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgr1GroupName",
                        "name": "_dsgr1GroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group. You can specify either the security group name or the security group ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteSnapshotResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteSnapshotResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteSnapshot",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified snapshot.\u003c/p\u003e \u003cp\u003eWhen you make periodic snapshots of a volume, the snapshots are incremental, and only the blocks on the device that have changed since your last snapshot are saved in the new snapshot. When you delete a snapshot, only the data not needed for any other snapshot is removed. So regardless of which prior snapshots have been deleted, all active snapshots will have access to all the information needed to restore the volume.\u003c/p\u003e \u003cp\u003eYou cannot delete a snapshot of the root device of an Amazon EBS volume used by a registered AMI. You must first de-register the AMI before you can delete the snapshot.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-snapshot.html\"\u003eDeleting an Amazon EBS Snapshot\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "deleteSnapshot",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsr3DryRun",
                    "name": "_dsr3DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsr3SnapshotId",
                        "name": "_dsr3SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteSnapshot",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr3DryRun",
                        "name": "_dsr3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr3DryRun",
                        "name": "_dsr3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsr3SnapshotId",
                        "name": "_dsr3SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteSpotDatafeedSubscriptionResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteSpotDatafeedSubscriptionResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteSpotDatafeedSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteSpotDatafeedSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the datafeed for Spot Instances. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteSpotDatafeedSubscription",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsr1DryRun",
                    "name": "_dsdsr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsr1DryRun",
                    "name": "_dsdsr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteSpotDatafeedSubscription",
                "query": [],
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsr1DryRun",
                        "name": "_dsdsr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsr1DryRun",
                        "name": "_dsdsr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteSubnetResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteSubnetResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteSubnet",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteSubnet",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified subnet. You must terminate all running instances in the subnet before you can delete the subnet.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "deleteSubnet",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsr2DryRun",
                    "name": "_dsr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsr2SubnetId",
                        "name": "_dsr2SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteSubnet",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr2DryRun",
                        "name": "_dsr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr2DryRun",
                        "name": "_dsr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsr2SubnetId",
                        "name": "_dsr2SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteTagsResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteTagsResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteTags",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified set of tags from the specified set of resources. This call is designed to follow a \u003ccode\u003eDescribeTags\u003c/code\u003e request.\u003c/p\u003e \u003cp\u003eFor more information about tags, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\"\u003eTagging Your Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "deleteTags",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dtr2DryRun",
                    "name": "_dtr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteTags",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr2DryRun",
                        "name": "_dtr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr2Resources",
                        "name": "_dtr2Resources",
                        "shape": "ResourceIdList",
                        "locationName": "resourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr2Tags",
                        "name": "_dtr2Tags",
                        "shape": "TagList",
                        "locationName": "tag",
                        "documentation": "\u003cp\u003eOne or more tags to delete. If you omit the \u003ccode\u003evalue\u003c/code\u003e parameter, we delete the tag regardless of its value. If you specify this parameter with an empty string as the value, we delete the key only if its value is an empty string.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr2DryRun",
                        "name": "_dtr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr2Resources",
                        "name": "_dtr2Resources",
                        "shape": "ResourceIdList",
                        "locationName": "resourceId",
                        "documentation": "\u003cp\u003eThe ID of the resource. For example, ami-1a2b3c4d. You can specify more than one resource ID.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr2Tags",
                        "name": "_dtr2Tags",
                        "shape": "TagList",
                        "locationName": "tag",
                        "documentation": "\u003cp\u003eOne or more tags to delete. If you omit the \u003ccode\u003evalue\u003c/code\u003e parameter, we delete the tag regardless of its value. If you specify this parameter with an empty string as the value, we delete the key only if its value is an empty string.\u003c/p\u003e",
                        "typeExposed": "[Tag]",
                        "type": "[Tag]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVolumeResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteVolumeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteVolume",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVolume",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified Amazon EBS volume. The volume must be in the \u003ccode\u003eavailable\u003c/code\u003e state (not attached to an instance).\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-deleting-volume.html\"\u003eDeleting an Amazon EBS Volume\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "deleteVolume",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvr3DryRun",
                    "name": "_dvr3DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr3VolumeId",
                        "name": "_dvr3VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVolume",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr3DryRun",
                        "name": "_dvr3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr3DryRun",
                        "name": "_dvr3DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr3VolumeId",
                        "name": "_dvr3VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVpcResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteVpcResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteVpc",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVpc",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified VPC. You must detach or delete all gateways and resources that are associated with the VPC before you can delete it. For example, you must terminate all instances running in the VPC, delete all security groups associated with the VPC (except the default one), delete all route tables associated with the VPC (except the default one), and so on.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 11,
                "ctor": "deleteVpc",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvr2DryRun",
                    "name": "_dvr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr2VpcId",
                        "name": "_dvr2VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVpc",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr2DryRun",
                        "name": "_dvr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr2DryRun",
                        "name": "_dvr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr2VpcId",
                        "name": "_dvr2VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVpcPeeringConnectionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvpcrReturn",
                    "name": "_dvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvpcrReturn",
                    "name": "_dvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "DeleteVpcPeeringConnectionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcrReturn",
                        "name": "_dvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcrReturn",
                        "name": "_dvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DeleteVpcPeeringConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVpcPeeringConnection",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a VPC peering connection. Either the owner of the requester VPC or the owner of the peer VPC can delete the VPC peering connection if it's in the \u003ccode\u003eactive\u003c/code\u003e state. The owner of the requester VPC can delete a VPC peering connection in the \u003ccode\u003epending-acceptance\u003c/code\u003e state. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "deleteVpcPeeringConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvpcr1DryRun",
                    "name": "_dvpcr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcr1VpcPeeringConnectionId",
                        "name": "_dvpcr1VpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVpcPeeringConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcr1DryRun",
                        "name": "_dvpcr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcr1DryRun",
                        "name": "_dvpcr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvpcr1VpcPeeringConnectionId",
                        "name": "_dvpcr1VpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVpnConnectionResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteVpnConnectionResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteVpnConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVpnConnection",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified VPN connection.\u003c/p\u003e \u003cp\u003eIf you're deleting the VPC and its associated components, we recommend that you detach the virtual private gateway from the VPC and delete the VPC before deleting the VPN connection. If you believe that the tunnel credentials for your VPN connection have been compromised, you can delete the VPN connection and create a new one that has new keys, without needing to delete the VPC or virtual private gateway. If you create a new VPN connection, you must reconfigure the customer gateway using the new configuration information returned with the new VPN connection ID.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "deleteVpnConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvcrDryRun",
                    "name": "_dvcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrVpnConnectionId",
                        "name": "_dvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVpnConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvcrDryRun",
                        "name": "_dvcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvcrDryRun",
                        "name": "_dvcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrVpnConnectionId",
                        "name": "_dvcrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVpnConnectionRouteResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteVpnConnectionRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteVpnConnectionRoute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVpnConnectionRoute",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified static route associated with a VPN connection between an existing virtual private gateway and a VPN customer gateway. The static route allows traffic to be routed from the virtual private gateway to the VPN customer gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "deleteVpnConnectionRoute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvcrrVpnConnectionId",
                    "name": "_dvcrrVpnConnectionId",
                    "shape": "String",
                    "locationName": "VpnConnectionId",
                    "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrrVpnConnectionId",
                        "name": "_dvcrrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrrDestinationCidrBlock",
                        "name": "_dvcrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer network.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVpnConnectionRoute",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrrDestinationCidrBlock",
                        "name": "_dvcrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "DestinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR block associated with the local subnet of the customer network.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvcrrVpnConnectionId",
                        "name": "_dvcrrVpnConnectionId",
                        "shape": "String",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPN connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deleteVpnGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "DeleteVpnGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeleteVpnGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeleteVpnGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified virtual private gateway. We recommend that before you delete a virtual private gateway, you detach it from the VPC and delete the VPN connection. Note that you don't need to delete the virtual private gateway if you plan to delete and recreate the VPN connection between your VPC and your network.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "deleteVpnGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvgrDryRun",
                    "name": "_dvgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgrVpnGatewayId",
                        "name": "_dvgrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeleteVpnGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgrDryRun",
                        "name": "_dvgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgrDryRun",
                        "name": "_dvgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgrVpnGatewayId",
                        "name": "_dvgrVpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "deregisterImageResponse",
                "wrapper": false,
                "required": [],
                "name": "DeregisterImageResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DeregisterImage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DeregisterImage",
            "method": "post",
            "documentation": "\u003cp\u003eDeregisters the specified AMI. After you deregister an AMI, it can't be used to launch new instances.\u003c/p\u003e \u003cp\u003eThis command does not delete the AMI.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "deregisterImage",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dir2DryRun",
                    "name": "_dir2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dir2ImageId",
                        "name": "_dir2ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DeregisterImage",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir2DryRun",
                        "name": "_dir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir2DryRun",
                        "name": "_dir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dir2ImageId",
                        "name": "_dir2ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeAccountAttributesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "daarAccountAttributes",
                    "name": "_daarAccountAttributes",
                    "shape": "AccountAttributeList",
                    "locationName": "accountAttributeSet",
                    "documentation": "\u003cp\u003eInformation about one or more account attributes.\u003c/p\u003e",
                    "typeExposed": "[AccountAttribute]",
                    "type": "[AccountAttribute]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "daarAccountAttributes",
                    "name": "_daarAccountAttributes",
                    "shape": "AccountAttributeList",
                    "locationName": "accountAttributeSet",
                    "documentation": "\u003cp\u003eInformation about one or more account attributes.\u003c/p\u003e",
                    "typeExposed": "[AccountAttribute]",
                    "type": "[AccountAttribute]"
                },
                "required": [],
                "name": "DescribeAccountAttributesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "daarAccountAttributes",
                        "name": "_daarAccountAttributes",
                        "shape": "AccountAttributeList",
                        "locationName": "accountAttributeSet",
                        "documentation": "\u003cp\u003eInformation about one or more account attributes.\u003c/p\u003e",
                        "typeExposed": "[AccountAttribute]",
                        "type": "[AccountAttribute]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "daarAccountAttributes",
                        "name": "_daarAccountAttributes",
                        "shape": "AccountAttributeList",
                        "locationName": "accountAttributeSet",
                        "documentation": "\u003cp\u003eInformation about one or more account attributes.\u003c/p\u003e",
                        "typeExposed": "[AccountAttribute]",
                        "type": "[AccountAttribute]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeAccountAttributes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeAccountAttributes",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of your AWS account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "describeAccountAttributes",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "daarDryRun",
                    "name": "_daarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeAccountAttributes",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "daarDryRun",
                        "name": "_daarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "daarAttributeNames",
                        "name": "_daarAttributeNames",
                        "shape": "AccountAttributeNameStringList",
                        "locationName": "attributeName",
                        "documentation": "\u003cp\u003eOne or more account attribute names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "daarAttributeNames",
                        "name": "_daarAttributeNames",
                        "shape": "AccountAttributeNameStringList",
                        "locationName": "attributeName",
                        "documentation": "\u003cp\u003eOne or more account attribute names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "daarDryRun",
                        "name": "_daarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeAddressesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "darAddresses",
                    "name": "_darAddresses",
                    "shape": "AddressList",
                    "locationName": "addressesSet",
                    "documentation": "\u003cp\u003eInformation about one or more Elastic IP addresses.\u003c/p\u003e",
                    "typeExposed": "[Address]",
                    "type": "[Address]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "darAddresses",
                    "name": "_darAddresses",
                    "shape": "AddressList",
                    "locationName": "addressesSet",
                    "documentation": "\u003cp\u003eInformation about one or more Elastic IP addresses.\u003c/p\u003e",
                    "typeExposed": "[Address]",
                    "type": "[Address]"
                },
                "required": [],
                "name": "DescribeAddressesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darAddresses",
                        "name": "_darAddresses",
                        "shape": "AddressList",
                        "locationName": "addressesSet",
                        "documentation": "\u003cp\u003eInformation about one or more Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Address]",
                        "type": "[Address]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darAddresses",
                        "name": "_darAddresses",
                        "shape": "AddressList",
                        "locationName": "addressesSet",
                        "documentation": "\u003cp\u003eInformation about one or more Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Address]",
                        "type": "[Address]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeAddresses",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeAddresses",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your Elastic IP addresses.\u003c/p\u003e \u003cp\u003eAn Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\"\u003eElastic IP Addresses\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "describeAddresses",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "darDryRun",
                    "name": "_darDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeAddresses",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "darDryRun",
                        "name": "_darDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darPublicIps",
                        "name": "_darPublicIps",
                        "shape": "PublicIpStringList",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] One or more Elastic IP addresses.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darFilters",
                        "name": "_darFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters. Filter names and values are case-sensitive.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eallocation-id\u003c/code\u003e - [EC2-VPC] The allocation ID for the address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation-id\u003c/code\u003e - [EC2-VPC] The association ID for the address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edomain\u003c/code\u003e - Indicates whether the address is for use in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance the address is associated with, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-id\u003c/code\u003e - [EC2-VPC] The ID of the network interface that the address is associated with, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-owner-id\u003c/code\u003e - The AWS account ID of the owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - [EC2-VPC] The private IP address associated with the Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003epublic-ip\u003c/code\u003e - The Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darAllocationIds",
                        "name": "_darAllocationIds",
                        "shape": "AllocationIdList",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more allocation IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darAllocationIds",
                        "name": "_darAllocationIds",
                        "shape": "AllocationIdList",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] One or more allocation IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "darDryRun",
                        "name": "_darDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darFilters",
                        "name": "_darFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters. Filter names and values are case-sensitive.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eallocation-id\u003c/code\u003e - [EC2-VPC] The allocation ID for the address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation-id\u003c/code\u003e - [EC2-VPC] The association ID for the address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edomain\u003c/code\u003e - Indicates whether the address is for use in EC2-Classic (\u003ccode\u003estandard\u003c/code\u003e) or in a VPC (\u003ccode\u003evpc\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance the address is associated with, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-id\u003c/code\u003e - [EC2-VPC] The ID of the network interface that the address is associated with, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-owner-id\u003c/code\u003e - The AWS account ID of the owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - [EC2-VPC] The private IP address associated with the Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003epublic-ip\u003c/code\u003e - The Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "darPublicIps",
                        "name": "_darPublicIps",
                        "shape": "PublicIpStringList",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] One or more Elastic IP addresses.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Elastic IP addresses.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeAvailabilityZonesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dazrAvailabilityZones",
                    "name": "_dazrAvailabilityZones",
                    "shape": "AvailabilityZoneList",
                    "locationName": "availabilityZoneInfo",
                    "documentation": "\u003cp\u003eInformation about one or more Availability Zones.\u003c/p\u003e",
                    "typeExposed": "[AvailabilityZone]",
                    "type": "[AvailabilityZone]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dazrAvailabilityZones",
                    "name": "_dazrAvailabilityZones",
                    "shape": "AvailabilityZoneList",
                    "locationName": "availabilityZoneInfo",
                    "documentation": "\u003cp\u003eInformation about one or more Availability Zones.\u003c/p\u003e",
                    "typeExposed": "[AvailabilityZone]",
                    "type": "[AvailabilityZone]"
                },
                "required": [],
                "name": "DescribeAvailabilityZonesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrAvailabilityZones",
                        "name": "_dazrAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "availabilityZoneInfo",
                        "documentation": "\u003cp\u003eInformation about one or more Availability Zones.\u003c/p\u003e",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "[AvailabilityZone]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrAvailabilityZones",
                        "name": "_dazrAvailabilityZones",
                        "shape": "AvailabilityZoneList",
                        "locationName": "availabilityZoneInfo",
                        "documentation": "\u003cp\u003eInformation about one or more Availability Zones.\u003c/p\u003e",
                        "typeExposed": "[AvailabilityZone]",
                        "type": "[AvailabilityZone]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeAvailabilityZones",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeAvailabilityZones",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of the Availability Zones that are available to you. The results include zones only for the region you're currently using. If there is an event impacting an Availability Zone, you can use this request to view the state and any provided message for that Availability Zone.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html\"\u003eRegions and Availability Zones\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeAvailabilityZones",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dazrDryRun",
                    "name": "_dazrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeAvailabilityZones",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dazrDryRun",
                        "name": "_dazrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrZoneNames",
                        "name": "_dazrZoneNames",
                        "shape": "ZoneNameStringList",
                        "locationName": "ZoneName",
                        "documentation": "\u003cp\u003eThe names of one or more Availability Zones.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrFilters",
                        "name": "_dazrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emessage\u003c/code\u003e - Information about the Availability Zone.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eregion-name\u003c/code\u003e - The name of the region for the Availability Zone (for example, \u003ccode\u003eus-east-1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Availability Zone (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003eunavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ezone-name\u003c/code\u003e - The name of the Availability Zone (for example, \u003ccode\u003eus-east-1a\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dazrDryRun",
                        "name": "_dazrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrFilters",
                        "name": "_dazrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emessage\u003c/code\u003e - Information about the Availability Zone.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eregion-name\u003c/code\u003e - The name of the region for the Availability Zone (for example, \u003ccode\u003eus-east-1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Availability Zone (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003eunavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ezone-name\u003c/code\u003e - The name of the Availability Zone (for example, \u003ccode\u003eus-east-1a\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dazrZoneNames",
                        "name": "_dazrZoneNames",
                        "shape": "ZoneNameStringList",
                        "locationName": "ZoneName",
                        "documentation": "\u003cp\u003eThe names of one or more Availability Zones.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeBundleTasksResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dbtrBundleTasks",
                    "name": "_dbtrBundleTasks",
                    "shape": "BundleTaskList",
                    "locationName": "bundleInstanceTasksSet",
                    "documentation": "\u003cp\u003eInformation about one or more bundle tasks.\u003c/p\u003e",
                    "typeExposed": "[BundleTask]",
                    "type": "[BundleTask]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dbtrBundleTasks",
                    "name": "_dbtrBundleTasks",
                    "shape": "BundleTaskList",
                    "locationName": "bundleInstanceTasksSet",
                    "documentation": "\u003cp\u003eInformation about one or more bundle tasks.\u003c/p\u003e",
                    "typeExposed": "[BundleTask]",
                    "type": "[BundleTask]"
                },
                "required": [],
                "name": "DescribeBundleTasksResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrBundleTasks",
                        "name": "_dbtrBundleTasks",
                        "shape": "BundleTaskList",
                        "locationName": "bundleInstanceTasksSet",
                        "documentation": "\u003cp\u003eInformation about one or more bundle tasks.\u003c/p\u003e",
                        "typeExposed": "[BundleTask]",
                        "type": "[BundleTask]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrBundleTasks",
                        "name": "_dbtrBundleTasks",
                        "shape": "BundleTaskList",
                        "locationName": "bundleInstanceTasksSet",
                        "documentation": "\u003cp\u003eInformation about one or more bundle tasks.\u003c/p\u003e",
                        "typeExposed": "[BundleTask]",
                        "type": "[BundleTask]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeBundleTasks",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeBundleTasks",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your bundling tasks.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeBundleTasks",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dbtrDryRun",
                    "name": "_dbtrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeBundleTasks",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dbtrDryRun",
                        "name": "_dbtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrBundleIds",
                        "name": "_dbtrBundleIds",
                        "shape": "BundleIdStringList",
                        "locationName": "BundleId",
                        "documentation": "\u003cp\u003eOne or more bundle task IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your bundle tasks.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrFilters",
                        "name": "_dbtrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebundle-id\u003c/code\u003e - The ID of the bundle task.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eerror-code\u003c/code\u003e - If the task failed, the error code returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eerror-message\u003c/code\u003e - If the task failed, the error message returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprogress\u003c/code\u003e - The level of task completion, as a percentage (for example, 20%).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003es3-bucket\u003c/code\u003e - The Amazon S3 bucket to store the AMI.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003es3-prefix\u003c/code\u003e - The beginning of the AMI name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart-time\u003c/code\u003e - The time the task started (for example, 2013-09-15T17:15:20.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the task (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003ewaiting-for-shutdown\u003c/code\u003e | \u003ccode\u003ebundling\u003c/code\u003e | \u003ccode\u003estoring\u003c/code\u003e | \u003ccode\u003ecancelling\u003c/code\u003e | \u003ccode\u003ecomplete\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eupdate-time\u003c/code\u003e - The time of the most recent update for the task.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrBundleIds",
                        "name": "_dbtrBundleIds",
                        "shape": "BundleIdStringList",
                        "locationName": "BundleId",
                        "documentation": "\u003cp\u003eOne or more bundle task IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your bundle tasks.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dbtrDryRun",
                        "name": "_dbtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dbtrFilters",
                        "name": "_dbtrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebundle-id\u003c/code\u003e - The ID of the bundle task.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eerror-code\u003c/code\u003e - If the task failed, the error code returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eerror-message\u003c/code\u003e - If the task failed, the error message returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprogress\u003c/code\u003e - The level of task completion, as a percentage (for example, 20%).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003es3-bucket\u003c/code\u003e - The Amazon S3 bucket to store the AMI.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003es3-prefix\u003c/code\u003e - The beginning of the AMI name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart-time\u003c/code\u003e - The time the task started (for example, 2013-09-15T17:15:20.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the task (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003ewaiting-for-shutdown\u003c/code\u003e | \u003ccode\u003ebundling\u003c/code\u003e | \u003ccode\u003estoring\u003c/code\u003e | \u003ccode\u003ecancelling\u003c/code\u003e | \u003ccode\u003ecomplete\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eupdate-time\u003c/code\u003e - The time of the most recent update for the task.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeConversionTasksResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dctrConversionTasks",
                    "name": "_dctrConversionTasks",
                    "shape": "DescribeConversionTaskList",
                    "locationName": "conversionTasks",
                    "documentation": null,
                    "typeExposed": "[ConversionTask]",
                    "type": "[ConversionTask]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dctrConversionTasks",
                    "name": "_dctrConversionTasks",
                    "shape": "DescribeConversionTaskList",
                    "locationName": "conversionTasks",
                    "documentation": null,
                    "typeExposed": "[ConversionTask]",
                    "type": "[ConversionTask]"
                },
                "required": [],
                "name": "DescribeConversionTasksResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrConversionTasks",
                        "name": "_dctrConversionTasks",
                        "shape": "DescribeConversionTaskList",
                        "locationName": "conversionTasks",
                        "documentation": null,
                        "typeExposed": "[ConversionTask]",
                        "type": "[ConversionTask]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrConversionTasks",
                        "name": "_dctrConversionTasks",
                        "shape": "DescribeConversionTaskList",
                        "locationName": "conversionTasks",
                        "documentation": null,
                        "typeExposed": "[ConversionTask]",
                        "type": "[ConversionTask]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeConversionTasks",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeConversionTasks",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your conversion tasks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html\"\u003eUsing the Command Line Tools to Import Your Virtual Machine to Amazon EC2\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "describeConversionTasks",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dctrDryRun",
                    "name": "_dctrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeConversionTasks",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dctrDryRun",
                        "name": "_dctrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrFilters",
                        "name": "_dctrFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": null,
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrConversionTaskIds",
                        "name": "_dctrConversionTaskIds",
                        "shape": "ConversionIdStringList",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eOne or more conversion task IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrConversionTaskIds",
                        "name": "_dctrConversionTaskIds",
                        "shape": "ConversionIdStringList",
                        "locationName": "conversionTaskId",
                        "documentation": "\u003cp\u003eOne or more conversion task IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dctrDryRun",
                        "name": "_dctrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dctrFilters",
                        "name": "_dctrFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": null,
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeCustomerGatewaysResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dcgrCustomerGateways",
                    "name": "_dcgrCustomerGateways",
                    "shape": "CustomerGatewayList",
                    "locationName": "customerGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more customer gateways.\u003c/p\u003e",
                    "typeExposed": "[CustomerGateway]",
                    "type": "[CustomerGateway]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dcgrCustomerGateways",
                    "name": "_dcgrCustomerGateways",
                    "shape": "CustomerGatewayList",
                    "locationName": "customerGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more customer gateways.\u003c/p\u003e",
                    "typeExposed": "[CustomerGateway]",
                    "type": "[CustomerGateway]"
                },
                "required": [],
                "name": "DescribeCustomerGatewaysResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrCustomerGateways",
                        "name": "_dcgrCustomerGateways",
                        "shape": "CustomerGatewayList",
                        "locationName": "customerGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more customer gateways.\u003c/p\u003e",
                        "typeExposed": "[CustomerGateway]",
                        "type": "[CustomerGateway]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrCustomerGateways",
                        "name": "_dcgrCustomerGateways",
                        "shape": "CustomerGatewayList",
                        "locationName": "customerGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more customer gateways.\u003c/p\u003e",
                        "typeExposed": "[CustomerGateway]",
                        "type": "[CustomerGateway]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeCustomerGateways",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeCustomerGateways",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your VPN customer gateways.\u003c/p\u003e \u003cp\u003eFor more information about VPN customer gateways, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "describeCustomerGateways",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dcgrDryRun",
                    "name": "_dcgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeCustomerGateways",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcgrDryRun",
                        "name": "_dcgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrCustomerGatewayIds",
                        "name": "_dcgrCustomerGatewayIds",
                        "shape": "CustomerGatewayIdStringList",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eOne or more customer gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your customer gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrFilters",
                        "name": "_dcgrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebgp-asn\u003c/code\u003e - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-id\u003c/code\u003e - The ID of the customer gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-address\u003c/code\u003e - The IP address of the customer gateway's Internet-routable external interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the customer gateway (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of customer gateway. Currently, the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrCustomerGatewayIds",
                        "name": "_dcgrCustomerGatewayIds",
                        "shape": "CustomerGatewayIdStringList",
                        "locationName": "CustomerGatewayId",
                        "documentation": "\u003cp\u003eOne or more customer gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your customer gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dcgrDryRun",
                        "name": "_dcgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dcgrFilters",
                        "name": "_dcgrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebgp-asn\u003c/code\u003e - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-id\u003c/code\u003e - The ID of the customer gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-address\u003c/code\u003e - The IP address of the customer gateway's Internet-routable external interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the customer gateway (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of customer gateway. Currently, the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeDhcpOptionsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ddorDhcpOptions",
                    "name": "_ddorDhcpOptions",
                    "shape": "DhcpOptionsList",
                    "locationName": "dhcpOptionsSet",
                    "documentation": "\u003cp\u003eInformation about one or more DHCP options sets.\u003c/p\u003e",
                    "typeExposed": "[DhcpOptions]",
                    "type": "[DhcpOptions]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "ddorDhcpOptions",
                    "name": "_ddorDhcpOptions",
                    "shape": "DhcpOptionsList",
                    "locationName": "dhcpOptionsSet",
                    "documentation": "\u003cp\u003eInformation about one or more DHCP options sets.\u003c/p\u003e",
                    "typeExposed": "[DhcpOptions]",
                    "type": "[DhcpOptions]"
                },
                "required": [],
                "name": "DescribeDhcpOptionsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddorDhcpOptions",
                        "name": "_ddorDhcpOptions",
                        "shape": "DhcpOptionsList",
                        "locationName": "dhcpOptionsSet",
                        "documentation": "\u003cp\u003eInformation about one or more DHCP options sets.\u003c/p\u003e",
                        "typeExposed": "[DhcpOptions]",
                        "type": "[DhcpOptions]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddorDhcpOptions",
                        "name": "_ddorDhcpOptions",
                        "shape": "DhcpOptionsList",
                        "locationName": "dhcpOptionsSet",
                        "documentation": "\u003cp\u003eInformation about one or more DHCP options sets.\u003c/p\u003e",
                        "typeExposed": "[DhcpOptions]",
                        "type": "[DhcpOptions]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeDhcpOptions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeDhcpOptions",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your DHCP options sets.\u003c/p\u003e \u003cp\u003eFor more information about DHCP options sets, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_DHCP_Options.html\"\u003eDHCP Options Sets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "describeDhcpOptions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ddor1DryRun",
                    "name": "_ddor1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeDhcpOptions",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ddor1DryRun",
                        "name": "_ddor1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddor1DhcpOptionsIds",
                        "name": "_ddor1DhcpOptionsIds",
                        "shape": "DhcpOptionsIdStringList",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe IDs of one or more DHCP options sets.\u003c/p\u003e \u003cp\u003eDefault: Describes all your DHCP options sets.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddor1Filters",
                        "name": "_ddor1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edhcp-options-id\u003c/code\u003e - The ID of a set of DHCP options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey\u003c/code\u003e - The key for one of the options (for example, \u003ccode\u003edomain-name\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalue\u003c/code\u003e - The value for one of the options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddor1DhcpOptionsIds",
                        "name": "_ddor1DhcpOptionsIds",
                        "shape": "DhcpOptionsIdStringList",
                        "locationName": "DhcpOptionsId",
                        "documentation": "\u003cp\u003eThe IDs of one or more DHCP options sets.\u003c/p\u003e \u003cp\u003eDefault: Describes all your DHCP options sets.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ddor1DryRun",
                        "name": "_ddor1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ddor1Filters",
                        "name": "_ddor1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edhcp-options-id\u003c/code\u003e - The ID of a set of DHCP options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey\u003c/code\u003e - The key for one of the options (for example, \u003ccode\u003edomain-name\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalue\u003c/code\u003e - The value for one of the options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeExportTasksResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "detrExportTasks",
                    "name": "_detrExportTasks",
                    "shape": "ExportTaskList",
                    "locationName": "exportTaskSet",
                    "documentation": null,
                    "typeExposed": "[ExportTask]",
                    "type": "[ExportTask]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "detrExportTasks",
                    "name": "_detrExportTasks",
                    "shape": "ExportTaskList",
                    "locationName": "exportTaskSet",
                    "documentation": null,
                    "typeExposed": "[ExportTask]",
                    "type": "[ExportTask]"
                },
                "required": [],
                "name": "DescribeExportTasksResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "detrExportTasks",
                        "name": "_detrExportTasks",
                        "shape": "ExportTaskList",
                        "locationName": "exportTaskSet",
                        "documentation": null,
                        "typeExposed": "[ExportTask]",
                        "type": "[ExportTask]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "detrExportTasks",
                        "name": "_detrExportTasks",
                        "shape": "ExportTaskList",
                        "locationName": "exportTaskSet",
                        "documentation": null,
                        "typeExposed": "[ExportTask]",
                        "type": "[ExportTask]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeExportTasks",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeExportTasks",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your export tasks.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeExportTasks",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "detrExportTaskIds",
                    "name": "_detrExportTaskIds",
                    "shape": "ExportTaskIdStringList",
                    "locationName": "exportTaskId",
                    "documentation": "\u003cp\u003eOne or more export task IDs.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "detrExportTaskIds",
                    "name": "_detrExportTaskIds",
                    "shape": "ExportTaskIdStringList",
                    "locationName": "exportTaskId",
                    "documentation": "\u003cp\u003eOne or more export task IDs.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeExportTasks",
                "query": [],
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "detrExportTaskIds",
                        "name": "_detrExportTaskIds",
                        "shape": "ExportTaskIdStringList",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eOne or more export task IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "detrExportTaskIds",
                        "name": "_detrExportTaskIds",
                        "shape": "ExportTaskIdStringList",
                        "locationName": "exportTaskId",
                        "documentation": "\u003cp\u003eOne or more export task IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "imageAttribute",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ia1ImageId",
                    "name": "_ia1ImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ImageAttribute",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1ImageId",
                        "name": "_ia1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1LaunchPermissions",
                        "name": "_ia1LaunchPermissions",
                        "shape": "LaunchPermissionList",
                        "locationName": "launchPermission",
                        "documentation": "\u003cp\u003eOne or more launch permissions.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1ProductCodes",
                        "name": "_ia1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eOne or more product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1KernelId",
                        "name": "_ia1KernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eThe kernel ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1RamdiskId",
                        "name": "_ia1RamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eThe RAM disk ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1Description",
                        "name": "_ia1Description",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1SriovNetSupport",
                        "name": "_ia1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1BlockDeviceMappings",
                        "name": "_ia1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1BlockDeviceMappings",
                        "name": "_ia1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1Description",
                        "name": "_ia1Description",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1ImageId",
                        "name": "_ia1ImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1KernelId",
                        "name": "_ia1KernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eThe kernel ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1LaunchPermissions",
                        "name": "_ia1LaunchPermissions",
                        "shape": "LaunchPermissionList",
                        "locationName": "launchPermission",
                        "documentation": "\u003cp\u003eOne or more launch permissions.\u003c/p\u003e",
                        "typeExposed": "[LaunchPermission]",
                        "type": "[LaunchPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ia1ProductCodes",
                        "name": "_ia1ProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eOne or more product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1RamdiskId",
                        "name": "_ia1RamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eThe RAM disk ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ia1SriovNetSupport",
                        "name": "_ia1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeImageAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeImageAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of the specified AMI. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeImageAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "diarDryRun",
                    "name": "_diarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diarImageId",
                        "name": "_diarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diarAttribute",
                        "name": "_diarAttribute",
                        "shape": "ImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe AMI attribute.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeImageAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diarDryRun",
                        "name": "_diarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diarAttribute",
                        "name": "_diarAttribute",
                        "shape": "ImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe AMI attribute.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diarDryRun",
                        "name": "_diarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diarImageId",
                        "name": "_diarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeImagesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dirImages",
                    "name": "_dirImages",
                    "shape": "ImageList",
                    "locationName": "imagesSet",
                    "documentation": "\u003cp\u003eInformation about one or more images.\u003c/p\u003e",
                    "typeExposed": "[Image]",
                    "type": "[Image]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dirImages",
                    "name": "_dirImages",
                    "shape": "ImageList",
                    "locationName": "imagesSet",
                    "documentation": "\u003cp\u003eInformation about one or more images.\u003c/p\u003e",
                    "typeExposed": "[Image]",
                    "type": "[Image]"
                },
                "required": [],
                "name": "DescribeImagesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirImages",
                        "name": "_dirImages",
                        "shape": "ImageList",
                        "locationName": "imagesSet",
                        "documentation": "\u003cp\u003eInformation about one or more images.\u003c/p\u003e",
                        "typeExposed": "[Image]",
                        "type": "[Image]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirImages",
                        "name": "_dirImages",
                        "shape": "ImageList",
                        "locationName": "imagesSet",
                        "documentation": "\u003cp\u003eInformation about one or more images.\u003c/p\u003e",
                        "typeExposed": "[Image]",
                        "type": "[Image]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeImages",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeImages",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of the images (AMIs, AKIs, and ARIs) available to you. Images available to you include public images, private images that you own, and private images owned by other AWS accounts but for which you have explicit launch permissions.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "describeImages",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dirDryRun",
                    "name": "_dirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeImages",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dirDryRun",
                        "name": "_dirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirImageIds",
                        "name": "_dirImageIds",
                        "shape": "ImageIdStringList",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eOne or more image IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all images available to you.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirOwners",
                        "name": "_dirOwners",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eFilters the images by the owner. Specify an AWS account ID, \u003ccode\u003eamazon\u003c/code\u003e (owner is Amazon), \u003ccode\u003eaws-marketplace\u003c/code\u003e (owner is AWS Marketplace), \u003ccode\u003eself\u003c/code\u003e (owner is the sender of the request), or \u003ccode\u003eall\u003c/code\u003e (all owners).\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirExecutableUsers",
                        "name": "_dirExecutableUsers",
                        "shape": "ExecutableByStringList",
                        "locationName": "ExecutableBy",
                        "documentation": "\u003cp\u003eScopes the images by users with explicit launch permissions. Specify an AWS account ID, \u003ccode\u003eself\u003c/code\u003e (the sender of the request), or \u003ccode\u003eall\u003c/code\u003e (public AMIs).\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirFilters",
                        "name": "_dirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003earchitecture\u003c/code\u003e - The image architecture (\u003ccode\u003ei386\u003c/code\u003e | \u003ccode\u003ex86_64\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.delete-on-termination\u003c/code\u003e - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.snapshot-id\u003c/code\u003e - The ID of the snapshot used for the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-size\u003c/code\u003e - The volume size of the Amazon EBS volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-type\u003c/code\u003e - The volume type of the Amazon EBS volume (\u003ccode\u003egp2\u003c/code\u003e | \u003ccode\u003estandard\u003c/code\u003e | \u003ccode\u003eio1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the image (provided during image creation).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ehypervisor\u003c/code\u003e - The hypervisor type (\u003ccode\u003eovm\u003c/code\u003e | \u003ccode\u003exen\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-id\u003c/code\u003e - The ID of the image.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-type\u003c/code\u003e - The image type (\u003ccode\u003emachine\u003c/code\u003e | \u003ccode\u003ekernel\u003c/code\u003e | \u003ccode\u003eramdisk\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eis-public\u003c/code\u003e - A Boolean that indicates whether the image is public.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emanifest-location\u003c/code\u003e - The location of the image manifest.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ename\u003c/code\u003e - The name of the AMI (provided during image creation).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-alias\u003c/code\u003e - The AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the image owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplatform\u003c/code\u003e - The platform. To only list Windows-based AMIs, use \u003ccode\u003ewindows\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code\u003c/code\u003e - The product code.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code.type\u003c/code\u003e - The type of the product code (\u003ccode\u003edevpay\u003c/code\u003e | \u003ccode\u003emarketplace\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-name\u003c/code\u003e - The name of the root device volume (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-type\u003c/code\u003e - The type of the root device volume (\u003ccode\u003eebs\u003c/code\u003e | \u003ccode\u003einstance-store\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the image (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-code\u003c/code\u003e - The reason code for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-message\u003c/code\u003e - The message for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evirtualization-type\u003c/code\u003e - The virtualization type (\u003ccode\u003eparavirtual\u003c/code\u003e | \u003ccode\u003ehvm\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dirDryRun",
                        "name": "_dirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirExecutableUsers",
                        "name": "_dirExecutableUsers",
                        "shape": "ExecutableByStringList",
                        "locationName": "ExecutableBy",
                        "documentation": "\u003cp\u003eScopes the images by users with explicit launch permissions. Specify an AWS account ID, \u003ccode\u003eself\u003c/code\u003e (the sender of the request), or \u003ccode\u003eall\u003c/code\u003e (public AMIs).\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirFilters",
                        "name": "_dirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003earchitecture\u003c/code\u003e - The image architecture (\u003ccode\u003ei386\u003c/code\u003e | \u003ccode\u003ex86_64\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.delete-on-termination\u003c/code\u003e - A Boolean value that indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.snapshot-id\u003c/code\u003e - The ID of the snapshot used for the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-size\u003c/code\u003e - The volume size of the Amazon EBS volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-type\u003c/code\u003e - The volume type of the Amazon EBS volume (\u003ccode\u003egp2\u003c/code\u003e | \u003ccode\u003estandard\u003c/code\u003e | \u003ccode\u003eio1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the image (provided during image creation).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ehypervisor\u003c/code\u003e - The hypervisor type (\u003ccode\u003eovm\u003c/code\u003e | \u003ccode\u003exen\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-id\u003c/code\u003e - The ID of the image.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-type\u003c/code\u003e - The image type (\u003ccode\u003emachine\u003c/code\u003e | \u003ccode\u003ekernel\u003c/code\u003e | \u003ccode\u003eramdisk\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eis-public\u003c/code\u003e - A Boolean that indicates whether the image is public.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emanifest-location\u003c/code\u003e - The location of the image manifest.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ename\u003c/code\u003e - The name of the AMI (provided during image creation).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-alias\u003c/code\u003e - The AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the image owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplatform\u003c/code\u003e - The platform. To only list Windows-based AMIs, use \u003ccode\u003ewindows\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code\u003c/code\u003e - The product code.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code.type\u003c/code\u003e - The type of the product code (\u003ccode\u003edevpay\u003c/code\u003e | \u003ccode\u003emarketplace\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-name\u003c/code\u003e - The name of the root device volume (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-type\u003c/code\u003e - The type of the root device volume (\u003ccode\u003eebs\u003c/code\u003e | \u003ccode\u003einstance-store\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the image (\u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-code\u003c/code\u003e - The reason code for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-message\u003c/code\u003e - The message for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the tag-value filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evirtualization-type\u003c/code\u003e - The virtualization type (\u003ccode\u003eparavirtual\u003c/code\u003e | \u003ccode\u003ehvm\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirImageIds",
                        "name": "_dirImageIds",
                        "shape": "ImageIdStringList",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eOne or more image IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all images available to you.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirOwners",
                        "name": "_dirOwners",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eFilters the images by the owner. Specify an AWS account ID, \u003ccode\u003eamazon\u003c/code\u003e (owner is Amazon), \u003ccode\u003eaws-marketplace\u003c/code\u003e (owner is AWS Marketplace), \u003ccode\u003eself\u003c/code\u003e (owner is the sender of the request), or \u003ccode\u003eall\u003c/code\u003e (all owners).\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 36,
                "ctor": "instanceAttribute",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iaInstanceId",
                    "name": "_iaInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "InstanceAttribute",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceId",
                        "name": "_iaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceType",
                        "name": "_iaInstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaKernelId",
                        "name": "_iaKernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eThe kernel ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaRamdiskId",
                        "name": "_iaRamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eThe RAM disk ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaUserData",
                        "name": "_iaUserData",
                        "shape": "AttributeValue",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaDisableApiTermination",
                        "name": "_iaDisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf the value is \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceInitiatedShutdownBehavior",
                        "name": "_iaInstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaRootDeviceName",
                        "name": "_iaRootDeviceName",
                        "shape": "AttributeValue",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe name of the root device (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaBlockDeviceMappings",
                        "name": "_iaBlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eThe block device mapping of the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "[InstanceBlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaProductCodes",
                        "name": "_iaProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaEbsOptimized",
                        "name": "_iaEbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaSriovNetSupport",
                        "name": "_iaSriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaSourceDestCheck",
                        "name": "_iaSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaGroups",
                        "name": "_iaGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eThe security groups associated with the instance.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaBlockDeviceMappings",
                        "name": "_iaBlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eThe block device mapping of the instance.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMapping]",
                        "type": "[InstanceBlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaDisableApiTermination",
                        "name": "_iaDisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf the value is \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance through the Amazon EC2 console, CLI, or API; otherwise, you can.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaEbsOptimized",
                        "name": "_iaEbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaGroups",
                        "name": "_iaGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eThe security groups associated with the instance.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceId",
                        "name": "_iaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceInitiatedShutdownBehavior",
                        "name": "_iaInstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaInstanceType",
                        "name": "_iaInstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eThe instance type.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaKernelId",
                        "name": "_iaKernelId",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eThe kernel ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iaProductCodes",
                        "name": "_iaProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaRamdiskId",
                        "name": "_iaRamdiskId",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eThe RAM disk ID.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaRootDeviceName",
                        "name": "_iaRootDeviceName",
                        "shape": "AttributeValue",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe name of the root device (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaSourceDestCheck",
                        "name": "_iaSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaSriovNetSupport",
                        "name": "_iaSriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iaUserData",
                        "name": "_iaUserData",
                        "shape": "AttributeValue",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeInstanceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeInstanceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of the specified instance. You can specify only one attribute at a time. Valid attribute values are: \u003ccode\u003einstanceType\u003c/code\u003e | \u003ccode\u003ekernel\u003c/code\u003e | \u003ccode\u003eramdisk\u003c/code\u003e | \u003ccode\u003euserData\u003c/code\u003e | \u003ccode\u003edisableApiTermination\u003c/code\u003e | \u003ccode\u003einstanceInitiatedShutdownBehavior\u003c/code\u003e | \u003ccode\u003erootDeviceName\u003c/code\u003e | \u003ccode\u003eblockDeviceMapping\u003c/code\u003e | \u003ccode\u003eproductCodes\u003c/code\u003e | \u003ccode\u003esourceDestCheck\u003c/code\u003e | \u003ccode\u003egroupSet\u003c/code\u003e | \u003ccode\u003eebsOptimized\u003c/code\u003e | \u003ccode\u003esriovNetSupport\u003c/code\u003e\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "describeInstanceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "diar1DryRun",
                    "name": "_diar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diar1InstanceId",
                        "name": "_diar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diar1Attribute",
                        "name": "_diar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe instance attribute.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeInstanceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diar1DryRun",
                        "name": "_diar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diar1Attribute",
                        "name": "_diar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe instance attribute.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "diar1DryRun",
                        "name": "_diar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "diar1InstanceId",
                        "name": "_diar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "describeInstanceStatusResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "disrInstanceStatuses",
                    "name": "_disrInstanceStatuses",
                    "shape": "InstanceStatusList",
                    "locationName": "instanceStatusSet",
                    "documentation": "\u003cp\u003eOne or more instance status descriptions.\u003c/p\u003e",
                    "typeExposed": "[InstanceStatus]",
                    "type": "[InstanceStatus]"
                },
                "required": [],
                "name": "DescribeInstanceStatusResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disrInstanceStatuses",
                        "name": "_disrInstanceStatuses",
                        "shape": "InstanceStatusList",
                        "locationName": "instanceStatusSet",
                        "documentation": "\u003cp\u003eOne or more instance status descriptions.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatus]",
                        "type": "[InstanceStatus]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disrNextToken",
                        "name": "_disrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disrInstanceStatuses",
                        "name": "_disrInstanceStatuses",
                        "shape": "InstanceStatusList",
                        "locationName": "instanceStatusSet",
                        "documentation": "\u003cp\u003eOne or more instance status descriptions.\u003c/p\u003e",
                        "typeExposed": "[InstanceStatus]",
                        "type": "[InstanceStatus]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disrNextToken",
                        "name": "_disrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeInstanceStatus",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeInstanceStatus",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the status of one or more instances, including any scheduled events.\u003c/p\u003e \u003cp\u003eInstance status has two main components:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eSystem Status reports impaired functionality that stems from issues related to the systems that support an instance, such as such as hardware failures and network connectivity problems. This call reports such problems as impaired reachability.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eInstance Status reports impaired functionality that arises from problems internal to the instance. This call reports such problems as impaired reachability.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eInstance status provides information about four types of scheduled events for an instance that may require your attention:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eScheduled Reboot: When Amazon EC2 determines that an instance must be rebooted, the instances status returns one of two event codes: \u003ccode\u003esystem-reboot\u003c/code\u003e or \u003ccode\u003einstance-reboot\u003c/code\u003e. System reboot commonly occurs if certain maintenance or upgrade operations require a reboot of the underlying host that supports an instance. Instance reboot commonly occurs if the instance must be rebooted, rather than the underlying host. Rebooting events include a scheduled start and end time.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eSystem Maintenance: When Amazon EC2 determines that an instance requires maintenance that requires power or network impact, the instance status is the event code \u003ccode\u003esystem-maintenance\u003c/code\u003e. System maintenance is either power maintenance or network maintenance. For power maintenance, your instance will be unavailable for a brief period of time and then rebooted. For network maintenance, your instance will experience a brief loss of network connectivity. System maintenance events include a scheduled start and end time. You will also be notified by email if one of your instances is set for system maintenance. The email message indicates when your instance is scheduled for maintenance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScheduled Retirement: When Amazon EC2 determines that an instance must be shut down, the instance status is the event code \u003ccode\u003einstance-retirement\u003c/code\u003e. Retirement commonly occurs when the underlying host is degraded and must be replaced. Retirement events include a scheduled start and end time. You will also be notified by email if one of your instances is set to retiring. The email message indicates when your instance will be permanently retired.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eScheduled Stop: When Amazon EC2 determines that an instance must be shut down, the instances status returns an event code called \u003ccode\u003einstance-stop\u003c/code\u003e. Stop events include a scheduled start and end time. You will also be notified by email if one of your instances is set to stop. The email message indicates when your instance will be stopped.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen your instance is retired, it will either be terminated (if its root device type is the instance-store) or stopped (if its root device type is an EBS volume). Instances stopped due to retirement will not be restarted, but you can do so manually. You can also avoid retirement of EBS-backed instances by manually restarting your instance when its event code is \u003ccode\u003einstance-retirement\u003c/code\u003e. This ensures that your instance is started on a different underlying host.\u003c/p\u003e \u003cp\u003eFor more information about failed status checks, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstances.html\"\u003eTroubleshooting Instances with Failed Status Checks\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e. For more information about working with scheduled events, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-instances-status-check_sched.html#schedevents_actions\"\u003eWorking with an Instance That Has a Scheduled Event\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "describeInstanceStatus",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "disr1DryRun",
                    "name": "_disr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeInstanceStatus",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1DryRun",
                        "name": "_disr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disr1InstanceIds",
                        "name": "_disr1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your instances.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 100 explicitly specified instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disr1Filters",
                        "name": "_disr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.code\u003c/code\u003e - The code identifying the type of event (\u003ccode\u003einstance-reboot\u003c/code\u003e | \u003ccode\u003esystem-reboot\u003c/code\u003e | \u003ccode\u003esystem-maintenance\u003c/code\u003e | \u003ccode\u003einstance-retirement\u003c/code\u003e | \u003ccode\u003einstance-stop\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.description\u003c/code\u003e - A description of the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-after\u003c/code\u003e - The latest end time for the scheduled event, for example: \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-before\u003c/code\u003e - The earliest start time for the scheduled event, for example: \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-code\u003c/code\u003e - A code representing the state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-name\u003c/code\u003e - The state of the instance (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003erunning\u003c/code\u003e | \u003ccode\u003eshutting-down\u003c/code\u003e | \u003ccode\u003eterminated\u003c/code\u003e | \u003ccode\u003estopping\u003c/code\u003e | \u003ccode\u003estopped\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-status.reachability\u003c/code\u003e - Filters on instance status where the name is \u003ccode\u003ereachability\u003c/code\u003e (\u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-status.status\u003c/code\u003e - The status of the instance (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e | \u003ccode\u003enot-applicable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esystem-status.reachability\u003c/code\u003e - Filters on system status where the name is \u003ccode\u003ereachability\u003c/code\u003e (\u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esystem-status.status\u003c/code\u003e - The system status of the instance (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e | \u003ccode\u003enot-applicable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1NextToken",
                        "name": "_disr1NextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1MaxResults",
                        "name": "_disr1MaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "\u003cp\u003eThe maximum number of paginated instance items per response. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e \u003cp\u003eDefault: 1000\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1IncludeAllInstances",
                        "name": "_disr1IncludeAllInstances",
                        "shape": "Boolean",
                        "locationName": "includeAllInstances",
                        "documentation": "\u003cp\u003eWhen \u003ccode\u003etrue\u003c/code\u003e, includes the health status for all instances. When \u003ccode\u003efalse\u003c/code\u003e, includes the health status for running instances only.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1DryRun",
                        "name": "_disr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disr1Filters",
                        "name": "_disr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.code\u003c/code\u003e - The code identifying the type of event (\u003ccode\u003einstance-reboot\u003c/code\u003e | \u003ccode\u003esystem-reboot\u003c/code\u003e | \u003ccode\u003esystem-maintenance\u003c/code\u003e | \u003ccode\u003einstance-retirement\u003c/code\u003e | \u003ccode\u003einstance-stop\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.description\u003c/code\u003e - A description of the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-after\u003c/code\u003e - The latest end time for the scheduled event, for example: \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-before\u003c/code\u003e - The earliest start time for the scheduled event, for example: \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-code\u003c/code\u003e - A code representing the state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-name\u003c/code\u003e - The state of the instance (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003erunning\u003c/code\u003e | \u003ccode\u003eshutting-down\u003c/code\u003e | \u003ccode\u003eterminated\u003c/code\u003e | \u003ccode\u003estopping\u003c/code\u003e | \u003ccode\u003estopped\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-status.reachability\u003c/code\u003e - Filters on instance status where the name is \u003ccode\u003ereachability\u003c/code\u003e (\u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-status.status\u003c/code\u003e - The status of the instance (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e | \u003ccode\u003enot-applicable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esystem-status.reachability\u003c/code\u003e - Filters on system status where the name is \u003ccode\u003ereachability\u003c/code\u003e (\u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esystem-status.status\u003c/code\u003e - The system status of the instance (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003einitializing\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e | \u003ccode\u003enot-applicable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1IncludeAllInstances",
                        "name": "_disr1IncludeAllInstances",
                        "shape": "Boolean",
                        "locationName": "includeAllInstances",
                        "documentation": "\u003cp\u003eWhen \u003ccode\u003etrue\u003c/code\u003e, includes the health status for all instances. When \u003ccode\u003efalse\u003c/code\u003e, includes the health status for running instances only.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "disr1InstanceIds",
                        "name": "_disr1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your instances.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 100 explicitly specified instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1MaxResults",
                        "name": "_disr1MaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "\u003cp\u003eThe maximum number of paginated instance items per response. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e \u003cp\u003eDefault: 1000\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "disr1NextToken",
                        "name": "_disr1NextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "describeInstancesResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dirReservations",
                    "name": "_dirReservations",
                    "shape": "ReservationList",
                    "locationName": "reservationSet",
                    "documentation": "\u003cp\u003eOne or more reservations.\u003c/p\u003e",
                    "typeExposed": "[Reservation]",
                    "type": "[Reservation]"
                },
                "required": [],
                "name": "DescribeInstancesResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirReservations",
                        "name": "_dirReservations",
                        "shape": "ReservationList",
                        "locationName": "reservationSet",
                        "documentation": "\u003cp\u003eOne or more reservations.\u003c/p\u003e",
                        "typeExposed": "[Reservation]",
                        "type": "[Reservation]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dirNextToken",
                        "name": "_dirNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next set of items. If there are no additional items to return, the string is empty.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dirNextToken",
                        "name": "_dirNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next set of items. If there are no additional items to return, the string is empty.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dirReservations",
                        "name": "_dirReservations",
                        "shape": "ReservationList",
                        "locationName": "reservationSet",
                        "documentation": "\u003cp\u003eOne or more reservations.\u003c/p\u003e",
                        "typeExposed": "[Reservation]",
                        "type": "[Reservation]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeInstances",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your instances.\u003c/p\u003e \u003cp\u003eIf you specify one or more instance IDs, Amazon EC2 returns information for those instances. If you do not specify instance IDs, Amazon EC2 returns information for all relevant instances. If you specify an instance ID that is not valid, an error is returned. If you specify an instance that you do not own, it is not included in the returned results.\u003c/p\u003e \u003cp\u003eRecently terminated instances might appear in the returned results. This interval is usually less than one hour.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "describeInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dir1DryRun",
                    "name": "_dir1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1DryRun",
                        "name": "_dir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dir1InstanceIds",
                        "name": "_dir1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your instances.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dir1Filters",
                        "name": "_dir1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003earchitecture\u003c/code\u003e - The instance architecture (\u003ccode\u003ei386\u003c/code\u003e | \u003ccode\u003ex86_64\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.attach-time\u003c/code\u003e - The attach time for an Amazon EBS volume mapped to the instance, for example, \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.delete-on-termination\u003c/code\u003e - A Boolean that indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.status\u003c/code\u003e - The status for the Amazon EBS volume (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-id\u003c/code\u003e - The volume ID of the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eclient-token\u003c/code\u003e - The idempotency token you provided when you launched the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edns-name\u003c/code\u003e - The public DNS name of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of the security group for the instance. If the instance is in EC2-Classic or a default VPC, you can use \u003ccode\u003egroup-name\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the security group for the instance. If the instance is in a nondefault VPC, you must use \u003ccode\u003egroup-id\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ehypervisor\u003c/code\u003e - The hypervisor type of the instance (\u003ccode\u003eovm\u003c/code\u003e | \u003ccode\u003exen\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eiam-instance-profile.arn\u003c/code\u003e - The instance profile associated with the instance. Specified as an ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-id\u003c/code\u003e - The ID of the image used to launch the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-lifecycle\u003c/code\u003e - Indicates whether this is a Spot Instance (\u003ccode\u003espot\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-code\u003c/code\u003e - The state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-name\u003c/code\u003e - The state of the instance (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003erunning\u003c/code\u003e | \u003ccode\u003eshutting-down\u003c/code\u003e | \u003ccode\u003eterminated\u003c/code\u003e | \u003ccode\u003estopping\u003c/code\u003e | \u003ccode\u003estopped\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance.group-id\u003c/code\u003e - The ID of the security group for the instance. If the instance is in EC2-Classic or a default VPC, you can use \u003ccode\u003einstance.group-name\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance.group-name\u003c/code\u003e - The name of the security group for the instance. If the instance is in a nondefault VPC, you must use \u003ccode\u003einstance.group-id\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-address\u003c/code\u003e - The public IP address of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey-name\u003c/code\u003e - The name of the key pair used when the instance was launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-index\u003c/code\u003e - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-time\u003c/code\u003e - The time when the instance was launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emonitoring-state\u003c/code\u003e - Indicates whether monitoring is enabled for the instance (\u003ccode\u003edisabled\u003c/code\u003e | \u003ccode\u003eenabled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the instance owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplacement-group-name\u003c/code\u003e - The name of the placement group for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplatform\u003c/code\u003e - The platform. Use \u003ccode\u003ewindows\u003c/code\u003e if you have Windows instances; otherwise, leave blank.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-dns-name\u003c/code\u003e - The private DNS name of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - The private IP address of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code\u003c/code\u003e - The product code associated with the AMI used to launch the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code.type\u003c/code\u003e - The type of product code (\u003ccode\u003edevpay\u003c/code\u003e | \u003ccode\u003emarketplace\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereason\u003c/code\u003e - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-id\u003c/code\u003e - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereservation-id\u003c/code\u003e - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you'll get one reservation ID. If you launch ten instances using the same launch request, you'll also get one reservation ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-name\u003c/code\u003e - The name of the root device for the instance (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-type\u003c/code\u003e - The type of root device that the instance uses (\u003ccode\u003eebs\u003c/code\u003e | \u003ccode\u003einstance-store\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esource-dest-check\u003c/code\u003e - Indicates whether the instance performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means that checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the instance to perform network address translation (NAT) in your VPC. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-instance-request-id\u003c/code\u003e - The ID of the Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-code\u003c/code\u003e - The reason code for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-message\u003c/code\u003e - A message that describes the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource, where \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e is the tag's key. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etenancy\u003c/code\u003e - The tenancy of an instance (\u003ccode\u003ededicated\u003c/code\u003e | \u003ccode\u003edefault\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evirtualization-type\u003c/code\u003e - The virtualization type of the instance (\u003ccode\u003eparavirtual\u003c/code\u003e | \u003ccode\u003ehvm\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC that the instance is running in.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.description\u003c/code\u003e - The description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.subnet-id\u003c/code\u003e - The ID of the subnet for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.vpc-id\u003c/code\u003e - The ID of the VPC for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.network-interface.id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.owner-id\u003c/code\u003e - The ID of the owner of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.availability-zone\u003c/code\u003e - The Availability Zone for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.requester-id\u003c/code\u003e - The requester ID for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.requester-managed\u003c/code\u003e - Indicates whether the network interface is being managed by AWS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.status\u003c/code\u003e - The status of the network interface (\u003ccode\u003eavailable\u003c/code\u003e) | \u003ccode\u003ein-use\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.mac-address\u003c/code\u003e - The MAC address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-private-dns-name\u003c/code\u003e - The private DNS name of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.source-destination-check\u003c/code\u003e - Whether the network interface performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the network interface to perform network address translation (NAT) in your VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-id\u003c/code\u003e - The ID of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-name\u003c/code\u003e - The name of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.attachment-id\u003c/code\u003e - The ID of the interface attachment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.instance-id\u003c/code\u003e - The ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.instance-owner-id\u003c/code\u003e - The owner ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.private-ip-address\u003c/code\u003e - The private IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.device-index\u003c/code\u003e - The device index to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.status\u003c/code\u003e - The status of the attachment (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.attach-time\u003c/code\u003e - The time that the network interface was attached to an instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.delete-on-termination\u003c/code\u003e - Specifies whether the attachment is deleted when an instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.primary\u003c/code\u003e - Specifies whether the IP address of the network interface is the primary private IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.association.public-ip\u003c/code\u003e - The ID of the association of an Elastic IP address with a network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.association.ip-owner-id\u003c/code\u003e - The owner ID of the private IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-ip\u003c/code\u003e - The address of the Elastic IP address bound to the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.ip-owner-id\u003c/code\u003e - The owner of the Elastic IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.allocation-id\u003c/code\u003e - The allocation ID returned when you allocated the Elastic IP address for your network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The association ID returned when the network interface was associated with an IP address.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1NextToken",
                        "name": "_dir1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next set of items to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1MaxResults",
                        "name": "_dir1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1DryRun",
                        "name": "_dir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dir1Filters",
                        "name": "_dir1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003earchitecture\u003c/code\u003e - The instance architecture (\u003ccode\u003ei386\u003c/code\u003e | \u003ccode\u003ex86_64\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.attach-time\u003c/code\u003e - The attach time for an Amazon EBS volume mapped to the instance, for example, \u003ccode\u003e2010-09-15T17:15:20.000Z\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.delete-on-termination\u003c/code\u003e - A Boolean that indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.status\u003c/code\u003e - The status for the Amazon EBS volume (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eblock-device-mapping.volume-id\u003c/code\u003e - The volume ID of the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eclient-token\u003c/code\u003e - The idempotency token you provided when you launched the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edns-name\u003c/code\u003e - The public DNS name of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of the security group for the instance. If the instance is in EC2-Classic or a default VPC, you can use \u003ccode\u003egroup-name\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the security group for the instance. If the instance is in a nondefault VPC, you must use \u003ccode\u003egroup-id\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ehypervisor\u003c/code\u003e - The hypervisor type of the instance (\u003ccode\u003eovm\u003c/code\u003e | \u003ccode\u003exen\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eiam-instance-profile.arn\u003c/code\u003e - The instance profile associated with the instance. Specified as an ARN.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eimage-id\u003c/code\u003e - The ID of the image used to launch the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-lifecycle\u003c/code\u003e - Indicates whether this is a Spot Instance (\u003ccode\u003espot\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-code\u003c/code\u003e - The state of the instance, as a 16-bit unsigned integer. The high byte is an opaque internal value and should be ignored. The low byte is set based on the state represented. The valid values are: 0 (pending), 16 (running), 32 (shutting-down), 48 (terminated), 64 (stopping), and 80 (stopped).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-state-name\u003c/code\u003e - The state of the instance (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003erunning\u003c/code\u003e | \u003ccode\u003eshutting-down\u003c/code\u003e | \u003ccode\u003eterminated\u003c/code\u003e | \u003ccode\u003estopping\u003c/code\u003e | \u003ccode\u003estopped\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance.group-id\u003c/code\u003e - The ID of the security group for the instance. If the instance is in EC2-Classic or a default VPC, you can use \u003ccode\u003einstance.group-name\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance.group-name\u003c/code\u003e - The name of the security group for the instance. If the instance is in a nondefault VPC, you must use \u003ccode\u003einstance.group-id\u003c/code\u003e instead.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-address\u003c/code\u003e - The public IP address of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey-name\u003c/code\u003e - The name of the key pair used when the instance was launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-index\u003c/code\u003e - When launching multiple instances, this is the index for the instance in the launch group (for example, 0, 1, 2, and so on). \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-time\u003c/code\u003e - The time when the instance was launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emonitoring-state\u003c/code\u003e - Indicates whether monitoring is enabled for the instance (\u003ccode\u003edisabled\u003c/code\u003e | \u003ccode\u003eenabled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the instance owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplacement-group-name\u003c/code\u003e - The name of the placement group for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eplatform\u003c/code\u003e - The platform. Use \u003ccode\u003ewindows\u003c/code\u003e if you have Windows instances; otherwise, leave blank.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-dns-name\u003c/code\u003e - The private DNS name of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - The private IP address of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code\u003c/code\u003e - The product code associated with the AMI used to launch the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-code.type\u003c/code\u003e - The type of product code (\u003ccode\u003edevpay\u003c/code\u003e | \u003ccode\u003emarketplace\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereason\u003c/code\u003e - The reason for the current state of the instance (for example, shows \"User Initiated [date]\" when you stop or terminate the instance). Similar to the state-reason-code filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-id\u003c/code\u003e - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereservation-id\u003c/code\u003e - The ID of the instance's reservation. A reservation ID is created any time you launch an instance. A reservation ID has a one-to-one relationship with an instance launch request, but can be associated with more than one instance if you launch multiple instances using the same launch request. For example, if you launch one instance, you'll get one reservation ID. If you launch ten instances using the same launch request, you'll also get one reservation ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-name\u003c/code\u003e - The name of the root device for the instance (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroot-device-type\u003c/code\u003e - The type of root device that the instance uses (\u003ccode\u003eebs\u003c/code\u003e | \u003ccode\u003einstance-store\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esource-dest-check\u003c/code\u003e - Indicates whether the instance performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means that checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the instance to perform network address translation (NAT) in your VPC. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-instance-request-id\u003c/code\u003e - The ID of the Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-code\u003c/code\u003e - The reason code for the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate-reason-message\u003c/code\u003e - A message that describes the state change.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource, where \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e is the tag's key. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etenancy\u003c/code\u003e - The tenancy of an instance (\u003ccode\u003ededicated\u003c/code\u003e | \u003ccode\u003edefault\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evirtualization-type\u003c/code\u003e - The virtualization type of the instance (\u003ccode\u003eparavirtual\u003c/code\u003e | \u003ccode\u003ehvm\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC that the instance is running in.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.description\u003c/code\u003e - The description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.subnet-id\u003c/code\u003e - The ID of the subnet for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.vpc-id\u003c/code\u003e - The ID of the VPC for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.network-interface.id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.owner-id\u003c/code\u003e - The ID of the owner of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.availability-zone\u003c/code\u003e - The Availability Zone for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.requester-id\u003c/code\u003e - The requester ID for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.requester-managed\u003c/code\u003e - Indicates whether the network interface is being managed by AWS.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.status\u003c/code\u003e - The status of the network interface (\u003ccode\u003eavailable\u003c/code\u003e) | \u003ccode\u003ein-use\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.mac-address\u003c/code\u003e - The MAC address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-private-dns-name\u003c/code\u003e - The private DNS name of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.source-destination-check\u003c/code\u003e - Whether the network interface performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the network interface to perform network address translation (NAT) in your VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-id\u003c/code\u003e - The ID of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-name\u003c/code\u003e - The name of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.attachment-id\u003c/code\u003e - The ID of the interface attachment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.instance-id\u003c/code\u003e - The ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.instance-owner-id\u003c/code\u003e - The owner ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.private-ip-address\u003c/code\u003e - The private IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.device-index\u003c/code\u003e - The device index to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.status\u003c/code\u003e - The status of the attachment (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.attach-time\u003c/code\u003e - The time that the network interface was attached to an instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.attachment.delete-on-termination\u003c/code\u003e - Specifies whether the attachment is deleted when an instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.primary\u003c/code\u003e - Specifies whether the IP address of the network interface is the primary private IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.association.public-ip\u003c/code\u003e - The ID of the association of an Elastic IP address with a network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.association.ip-owner-id\u003c/code\u003e - The owner ID of the private IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-ip\u003c/code\u003e - The address of the Elastic IP address bound to the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.ip-owner-id\u003c/code\u003e - The owner of the Elastic IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.allocation-id\u003c/code\u003e - The allocation ID returned when you allocated the Elastic IP address for your network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The association ID returned when the network interface was associated with an IP address.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dir1InstanceIds",
                        "name": "_dir1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your instances.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1MaxResults",
                        "name": "_dir1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dir1NextToken",
                        "name": "_dir1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next set of items to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeInternetGatewaysResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "digrInternetGateways",
                    "name": "_digrInternetGateways",
                    "shape": "InternetGatewayList",
                    "locationName": "internetGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more Internet gateways.\u003c/p\u003e",
                    "typeExposed": "[InternetGateway]",
                    "type": "[InternetGateway]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "digrInternetGateways",
                    "name": "_digrInternetGateways",
                    "shape": "InternetGatewayList",
                    "locationName": "internetGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more Internet gateways.\u003c/p\u003e",
                    "typeExposed": "[InternetGateway]",
                    "type": "[InternetGateway]"
                },
                "required": [],
                "name": "DescribeInternetGatewaysResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrInternetGateways",
                        "name": "_digrInternetGateways",
                        "shape": "InternetGatewayList",
                        "locationName": "internetGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more Internet gateways.\u003c/p\u003e",
                        "typeExposed": "[InternetGateway]",
                        "type": "[InternetGateway]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrInternetGateways",
                        "name": "_digrInternetGateways",
                        "shape": "InternetGatewayList",
                        "locationName": "internetGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more Internet gateways.\u003c/p\u003e",
                        "typeExposed": "[InternetGateway]",
                        "type": "[InternetGateway]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeInternetGateways",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeInternetGateways",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your Internet gateways.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "describeInternetGateways",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "digrDryRun",
                    "name": "_digrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeInternetGateways",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digrDryRun",
                        "name": "_digrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrInternetGatewayIds",
                        "name": "_digrInternetGatewayIds",
                        "shape": "ValueStringList",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eOne or more Internet gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Internet gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrFilters",
                        "name": "_digrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.state\u003c/code\u003e - The current state of the attachment between the gateway and the VPC (\u003ccode\u003eavailable\u003c/code\u003e). Present only if a VPC is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.vpc-id\u003c/code\u003e - The ID of an attached VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einternet-gateway-id\u003c/code\u003e - The ID of the Internet gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digrDryRun",
                        "name": "_digrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrFilters",
                        "name": "_digrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.state\u003c/code\u003e - The current state of the attachment between the gateway and the VPC (\u003ccode\u003eavailable\u003c/code\u003e). Present only if a VPC is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.vpc-id\u003c/code\u003e - The ID of an attached VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einternet-gateway-id\u003c/code\u003e - The ID of the Internet gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "digrInternetGatewayIds",
                        "name": "_digrInternetGatewayIds",
                        "shape": "ValueStringList",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eOne or more Internet gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Internet gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeKeyPairsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dkprKeyPairs",
                    "name": "_dkprKeyPairs",
                    "shape": "KeyPairList",
                    "locationName": "keySet",
                    "documentation": "\u003cp\u003eInformation about one or more key pairs.\u003c/p\u003e",
                    "typeExposed": "[KeyPairInfo]",
                    "type": "[KeyPairInfo]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dkprKeyPairs",
                    "name": "_dkprKeyPairs",
                    "shape": "KeyPairList",
                    "locationName": "keySet",
                    "documentation": "\u003cp\u003eInformation about one or more key pairs.\u003c/p\u003e",
                    "typeExposed": "[KeyPairInfo]",
                    "type": "[KeyPairInfo]"
                },
                "required": [],
                "name": "DescribeKeyPairsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprKeyPairs",
                        "name": "_dkprKeyPairs",
                        "shape": "KeyPairList",
                        "locationName": "keySet",
                        "documentation": "\u003cp\u003eInformation about one or more key pairs.\u003c/p\u003e",
                        "typeExposed": "[KeyPairInfo]",
                        "type": "[KeyPairInfo]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprKeyPairs",
                        "name": "_dkprKeyPairs",
                        "shape": "KeyPairList",
                        "locationName": "keySet",
                        "documentation": "\u003cp\u003eInformation about one or more key pairs.\u003c/p\u003e",
                        "typeExposed": "[KeyPairInfo]",
                        "type": "[KeyPairInfo]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeKeyPairs",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeKeyPairs",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your key pairs.\u003c/p\u003e \u003cp\u003eFor more information about key pairs, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\"\u003eKey Pairs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "describeKeyPairs",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dkprDryRun",
                    "name": "_dkprDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeKeyPairs",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dkprDryRun",
                        "name": "_dkprDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprKeyNames",
                        "name": "_dkprKeyNames",
                        "shape": "KeyNameStringList",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eOne or more key pair names.\u003c/p\u003e \u003cp\u003eDefault: Describes all your key pairs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprFilters",
                        "name": "_dkprFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efingerprint\u003c/code\u003e - The fingerprint of the key pair.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey-name\u003c/code\u003e - The name of the key pair.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dkprDryRun",
                        "name": "_dkprDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprFilters",
                        "name": "_dkprFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efingerprint\u003c/code\u003e - The fingerprint of the key pair.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey-name\u003c/code\u003e - The name of the key pair.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dkprKeyNames",
                        "name": "_dkprKeyNames",
                        "shape": "KeyNameStringList",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eOne or more key pair names.\u003c/p\u003e \u003cp\u003eDefault: Describes all your key pairs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeNetworkAclsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dnarNetworkAcls",
                    "name": "_dnarNetworkAcls",
                    "shape": "NetworkAclList",
                    "locationName": "networkAclSet",
                    "documentation": "\u003cp\u003eInformation about one or more network ACLs.\u003c/p\u003e",
                    "typeExposed": "[NetworkAcl]",
                    "type": "[NetworkAcl]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dnarNetworkAcls",
                    "name": "_dnarNetworkAcls",
                    "shape": "NetworkAclList",
                    "locationName": "networkAclSet",
                    "documentation": "\u003cp\u003eInformation about one or more network ACLs.\u003c/p\u003e",
                    "typeExposed": "[NetworkAcl]",
                    "type": "[NetworkAcl]"
                },
                "required": [],
                "name": "DescribeNetworkAclsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnarNetworkAcls",
                        "name": "_dnarNetworkAcls",
                        "shape": "NetworkAclList",
                        "locationName": "networkAclSet",
                        "documentation": "\u003cp\u003eInformation about one or more network ACLs.\u003c/p\u003e",
                        "typeExposed": "[NetworkAcl]",
                        "type": "[NetworkAcl]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnarNetworkAcls",
                        "name": "_dnarNetworkAcls",
                        "shape": "NetworkAclList",
                        "locationName": "networkAclSet",
                        "documentation": "\u003cp\u003eInformation about one or more network ACLs.\u003c/p\u003e",
                        "typeExposed": "[NetworkAcl]",
                        "type": "[NetworkAcl]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeNetworkAcls",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeNetworkAcls",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your network ACLs.\u003c/p\u003e \u003cp\u003eFor more information about network ACLs, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html\"\u003eNetwork ACLs\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "describeNetworkAcls",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnar1DryRun",
                    "name": "_dnar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeNetworkAcls",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnar1DryRun",
                        "name": "_dnar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnar1NetworkAclIds",
                        "name": "_dnar1NetworkAclIds",
                        "shape": "ValueStringList",
                        "locationName": "NetworkAclId",
                        "documentation": "\u003cp\u003eOne or more network ACL IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your network ACLs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnar1Filters",
                        "name": "_dnar1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The ID of an association ID for the ACL.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.network-acl-id\u003c/code\u003e - The ID of the network ACL involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.subnet-id\u003c/code\u003e - The ID of the subnet involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e - Indicates whether the ACL is the default network ACL for the VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.cidr\u003c/code\u003e - The CIDR range specified in the entry.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.egress\u003c/code\u003e - Indicates whether the entry applies to egress traffic.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.icmp.code\u003c/code\u003e - The ICMP code specified in the entry, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.icmp.type\u003c/code\u003e - The ICMP type specified in the entry, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.port-range.from\u003c/code\u003e - The start of the port range specified in the entry. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.port-range.to\u003c/code\u003e - The end of the port range specified in the entry. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.protocol\u003c/code\u003e - The protocol specified in the entry (\u003ccode\u003etcp\u003c/code\u003e | \u003ccode\u003eudp\u003c/code\u003e | \u003ccode\u003eicmp\u003c/code\u003e or a protocol number).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.rule-action\u003c/code\u003e - Allows or denies the matching traffic (\u003ccode\u003eallow\u003c/code\u003e | \u003ccode\u003edeny\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.rule-number\u003c/code\u003e - The number of an entry (in other words, rule) in the ACL's set of entries.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-acl-id\u003c/code\u003e - The ID of the network ACL.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the network ACL.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnar1DryRun",
                        "name": "_dnar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnar1Filters",
                        "name": "_dnar1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The ID of an association ID for the ACL.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.network-acl-id\u003c/code\u003e - The ID of the network ACL involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.subnet-id\u003c/code\u003e - The ID of the subnet involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edefault\u003c/code\u003e - Indicates whether the ACL is the default network ACL for the VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.cidr\u003c/code\u003e - The CIDR range specified in the entry.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.egress\u003c/code\u003e - Indicates whether the entry applies to egress traffic.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.icmp.code\u003c/code\u003e - The ICMP code specified in the entry, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.icmp.type\u003c/code\u003e - The ICMP type specified in the entry, if any.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.port-range.from\u003c/code\u003e - The start of the port range specified in the entry. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.port-range.to\u003c/code\u003e - The end of the port range specified in the entry. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.protocol\u003c/code\u003e - The protocol specified in the entry (\u003ccode\u003etcp\u003c/code\u003e | \u003ccode\u003eudp\u003c/code\u003e | \u003ccode\u003eicmp\u003c/code\u003e or a protocol number).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.rule-action\u003c/code\u003e - Allows or denies the matching traffic (\u003ccode\u003eallow\u003c/code\u003e | \u003ccode\u003edeny\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eentry.rule-number\u003c/code\u003e - The number of an entry (in other words, rule) in the ACL's set of entries.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-acl-id\u003c/code\u003e - The ID of the network ACL.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the network ACL.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnar1NetworkAclIds",
                        "name": "_dnar1NetworkAclIds",
                        "shape": "ValueStringList",
                        "locationName": "NetworkAclId",
                        "documentation": "\u003cp\u003eOne or more network ACL IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your network ACLs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "describeNetworkInterfaceAttributeResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dniar1NetworkInterfaceId",
                    "name": "_dniar1NetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DescribeNetworkInterfaceAttributeResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1NetworkInterfaceId",
                        "name": "_dniar1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1Description",
                        "name": "_dniar1Description",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1SourceDestCheck",
                        "name": "_dniar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dniar1Groups",
                        "name": "_dniar1Groups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eThe security groups associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1Attachment",
                        "name": "_dniar1Attachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe attachment (if any) of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1Attachment",
                        "name": "_dniar1Attachment",
                        "shape": "NetworkInterfaceAttachment",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eThe attachment (if any) of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachment",
                        "type": "Maybe NetworkInterfaceAttachment"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1Description",
                        "name": "_dniar1Description",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eThe description of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dniar1Groups",
                        "name": "_dniar1Groups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eThe security groups associated with the network interface.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1NetworkInterfaceId",
                        "name": "_dniar1NetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniar1SourceDestCheck",
                        "name": "_dniar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeNetworkInterfaceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes a network interface attribute. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "describeNetworkInterfaceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dniarDryRun",
                    "name": "_dniarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dniarNetworkInterfaceId",
                        "name": "_dniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeNetworkInterfaceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniarDryRun",
                        "name": "_dniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniarAttribute",
                        "name": "_dniarAttribute",
                        "shape": "NetworkInterfaceAttribute",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe attribute of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniarAttribute",
                        "name": "_dniarAttribute",
                        "shape": "NetworkInterfaceAttribute",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe attribute of the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dniarDryRun",
                        "name": "_dniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dniarNetworkInterfaceId",
                        "name": "_dniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeNetworkInterfacesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dnirNetworkInterfaces",
                    "name": "_dnirNetworkInterfaces",
                    "shape": "NetworkInterfaceList",
                    "locationName": "networkInterfaceSet",
                    "documentation": "\u003cp\u003eInformation about one or more network interfaces.\u003c/p\u003e",
                    "typeExposed": "[NetworkInterface]",
                    "type": "[NetworkInterface]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dnirNetworkInterfaces",
                    "name": "_dnirNetworkInterfaces",
                    "shape": "NetworkInterfaceList",
                    "locationName": "networkInterfaceSet",
                    "documentation": "\u003cp\u003eInformation about one or more network interfaces.\u003c/p\u003e",
                    "typeExposed": "[NetworkInterface]",
                    "type": "[NetworkInterface]"
                },
                "required": [],
                "name": "DescribeNetworkInterfacesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirNetworkInterfaces",
                        "name": "_dnirNetworkInterfaces",
                        "shape": "NetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003eInformation about one or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[NetworkInterface]",
                        "type": "[NetworkInterface]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirNetworkInterfaces",
                        "name": "_dnirNetworkInterfaces",
                        "shape": "NetworkInterfaceList",
                        "locationName": "networkInterfaceSet",
                        "documentation": "\u003cp\u003eInformation about one or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[NetworkInterface]",
                        "type": "[NetworkInterface]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeNetworkInterfaces",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeNetworkInterfaces",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your network interfaces.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "describeNetworkInterfaces",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnirDryRun",
                    "name": "_dnirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeNetworkInterfaces",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnirDryRun",
                        "name": "_dnirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirNetworkInterfaceIds",
                        "name": "_dnirNetworkInterfaceIds",
                        "shape": "NetworkInterfaceIdList",
                        "locationName": "NetworkInterfaceId",
                        "documentation": "\u003cp\u003eOne or more network interface IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your network interfaces.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirFilters",
                        "name": "_dnirFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.private-ip-address\u003c/code\u003e - The private IP addresses associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.primary\u003c/code\u003e - Whether the private IP address is the primary IP address associated with the network interface. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.association.public-ip\u003c/code\u003e - The association ID returned when the network interface was associated with the Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.association.owner-id\u003c/code\u003e - The owner ID of the addresses associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The association ID returned when the network interface was associated with an IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.allocation-id\u003c/code\u003e - The allocation ID returned when you allocated the Elastic IP address for your network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.ip-owner-id\u003c/code\u003e - The owner of the Elastic IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-ip\u003c/code\u003e - The address of the Elastic IP address bound to the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-dns-name\u003c/code\u003e - The public DNS name for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attachment-id\u003c/code\u003e - The ID of the interface attachment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-id\u003c/code\u003e - The ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-owner-id\u003c/code\u003e - The owner ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.device-index\u003c/code\u003e - The device index to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.status\u003c/code\u003e - The status of the attachment (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attach.time\u003c/code\u003e - The time that the network interface was attached to an instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.delete-on-termination\u003c/code\u003e - Indicates whether the attachment is deleted when an instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emac-address\u003c/code\u003e - The MAC address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the network interface owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - The private IP address or addresses of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-dns-name\u003c/code\u003e - The private DNS name of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-id\u003c/code\u003e - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-managed\u003c/code\u003e - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esource-desk-check\u003c/code\u003e - Indicates whether the network interface performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the network interface to perform Network Address Translation (NAT) in your VPC. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the network interface. If the network interface is not attached to an instance, the status is \u003ccode\u003eavailable\u003c/code\u003e; if a network interface is attached to an instance the status is \u003ccode\u003ein-use\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the network interface.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnirDryRun",
                        "name": "_dnirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirFilters",
                        "name": "_dnirFilters",
                        "shape": "FilterList",
                        "locationName": "filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.private-ip-address\u003c/code\u003e - The private IP addresses associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.primary\u003c/code\u003e - Whether the private IP address is the primary IP address associated with the network interface. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.association.public-ip\u003c/code\u003e - The association ID returned when the network interface was associated with the Elastic IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaddresses.association.owner-id\u003c/code\u003e - The owner ID of the addresses associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.association-id\u003c/code\u003e - The association ID returned when the network interface was associated with an IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.allocation-id\u003c/code\u003e - The allocation ID returned when you allocated the Elastic IP address for your network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.ip-owner-id\u003c/code\u003e - The owner of the Elastic IP address associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-ip\u003c/code\u003e - The address of the Elastic IP address bound to the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.public-dns-name\u003c/code\u003e - The public DNS name for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attachment-id\u003c/code\u003e - The ID of the interface attachment.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-id\u003c/code\u003e - The ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-owner-id\u003c/code\u003e - The owner ID of the instance to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.device-index\u003c/code\u003e - The device index to which the network interface is attached.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.status\u003c/code\u003e - The status of the attachment (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attach.time\u003c/code\u003e - The time that the network interface was attached to an instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.delete-on-termination\u003c/code\u003e - Indicates whether the attachment is deleted when an instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of a security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emac-address\u003c/code\u003e - The MAC address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface-id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the network interface owner.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-ip-address\u003c/code\u003e - The private IP address or addresses of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprivate-dns-name\u003c/code\u003e - The private DNS name of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-id\u003c/code\u003e - The ID of the entity that launched the instance on your behalf (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-managed\u003c/code\u003e - Indicates whether the network interface is being managed by an AWS service (for example, AWS Management Console, Auto Scaling, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esource-desk-check\u003c/code\u003e - Indicates whether the network interface performs source/destination checking. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. The value must be \u003ccode\u003efalse\u003c/code\u003e for the network interface to perform Network Address Translation (NAT) in your VPC. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the network interface. If the network interface is not attached to an instance, the status is \u003ccode\u003eavailable\u003c/code\u003e; if a network interface is attached to an instance the status is \u003ccode\u003ein-use\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet for the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the network interface.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dnirNetworkInterfaceIds",
                        "name": "_dnirNetworkInterfaceIds",
                        "shape": "NetworkInterfaceIdList",
                        "locationName": "NetworkInterfaceId",
                        "documentation": "\u003cp\u003eOne or more network interface IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your network interfaces.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describePlacementGroupsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dpgrPlacementGroups",
                    "name": "_dpgrPlacementGroups",
                    "shape": "PlacementGroupList",
                    "locationName": "placementGroupSet",
                    "documentation": "\u003cp\u003eOne or more placement groups.\u003c/p\u003e",
                    "typeExposed": "[PlacementGroup]",
                    "type": "[PlacementGroup]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dpgrPlacementGroups",
                    "name": "_dpgrPlacementGroups",
                    "shape": "PlacementGroupList",
                    "locationName": "placementGroupSet",
                    "documentation": "\u003cp\u003eOne or more placement groups.\u003c/p\u003e",
                    "typeExposed": "[PlacementGroup]",
                    "type": "[PlacementGroup]"
                },
                "required": [],
                "name": "DescribePlacementGroupsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgrPlacementGroups",
                        "name": "_dpgrPlacementGroups",
                        "shape": "PlacementGroupList",
                        "locationName": "placementGroupSet",
                        "documentation": "\u003cp\u003eOne or more placement groups.\u003c/p\u003e",
                        "typeExposed": "[PlacementGroup]",
                        "type": "[PlacementGroup]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgrPlacementGroups",
                        "name": "_dpgrPlacementGroups",
                        "shape": "PlacementGroupList",
                        "locationName": "placementGroupSet",
                        "documentation": "\u003cp\u003eOne or more placement groups.\u003c/p\u003e",
                        "typeExposed": "[PlacementGroup]",
                        "type": "[PlacementGroup]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribePlacementGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribePlacementGroups",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your placement groups. For more information about placement groups and cluster instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using_cluster_computing.html\"\u003eCluster Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "describePlacementGroups",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dpgr1DryRun",
                    "name": "_dpgr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribePlacementGroups",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dpgr1DryRun",
                        "name": "_dpgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgr1GroupNames",
                        "name": "_dpgr1GroupNames",
                        "shape": "PlacementGroupStringList",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eOne or more placement group names.\u003c/p\u003e \u003cp\u003eDefault: Describes all your placement groups, or only those otherwise specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgr1Filters",
                        "name": "_dpgr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the placement group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the placement group (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estrategy\u003c/code\u003e - The strategy of the placement group (\u003ccode\u003ecluster\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dpgr1DryRun",
                        "name": "_dpgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgr1Filters",
                        "name": "_dpgr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the placement group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the placement group (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estrategy\u003c/code\u003e - The strategy of the placement group (\u003ccode\u003ecluster\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dpgr1GroupNames",
                        "name": "_dpgr1GroupNames",
                        "shape": "PlacementGroupStringList",
                        "locationName": "groupName",
                        "documentation": "\u003cp\u003eOne or more placement group names.\u003c/p\u003e \u003cp\u003eDefault: Describes all your placement groups, or only those otherwise specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeRegionsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drrRegions",
                    "name": "_drrRegions",
                    "shape": "RegionList",
                    "locationName": "regionInfo",
                    "documentation": "\u003cp\u003eInformation about one or more regions.\u003c/p\u003e",
                    "typeExposed": "[Region]",
                    "type": "[Region]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drrRegions",
                    "name": "_drrRegions",
                    "shape": "RegionList",
                    "locationName": "regionInfo",
                    "documentation": "\u003cp\u003eInformation about one or more regions.\u003c/p\u003e",
                    "typeExposed": "[Region]",
                    "type": "[Region]"
                },
                "required": [],
                "name": "DescribeRegionsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrRegions",
                        "name": "_drrRegions",
                        "shape": "RegionList",
                        "locationName": "regionInfo",
                        "documentation": "\u003cp\u003eInformation about one or more regions.\u003c/p\u003e",
                        "typeExposed": "[Region]",
                        "type": "[Region]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrRegions",
                        "name": "_drrRegions",
                        "shape": "RegionList",
                        "locationName": "regionInfo",
                        "documentation": "\u003cp\u003eInformation about one or more regions.\u003c/p\u003e",
                        "typeExposed": "[Region]",
                        "type": "[Region]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeRegions",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeRegions",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more regions that are currently available to you.\u003c/p\u003e \u003cp\u003eFor a list of the regions supported by Amazon EC2, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#ec2_region\"\u003eRegions and Endpoints\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "describeRegions",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drrDryRun",
                    "name": "_drrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeRegions",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drrDryRun",
                        "name": "_drrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrRegionNames",
                        "name": "_drrRegionNames",
                        "shape": "RegionNameStringList",
                        "locationName": "RegionName",
                        "documentation": "\u003cp\u003eThe names of one or more regions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrFilters",
                        "name": "_drrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eendpoint\u003c/code\u003e - The endpoint of the region (for example, \u003ccode\u003eec2.us-east-1.amazonaws.com\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eregion-name\u003c/code\u003e - The name of the region (for example, \u003ccode\u003eus-east-1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drrDryRun",
                        "name": "_drrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrFilters",
                        "name": "_drrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eendpoint\u003c/code\u003e - The endpoint of the region (for example, \u003ccode\u003eec2.us-east-1.amazonaws.com\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eregion-name\u003c/code\u003e - The name of the region (for example, \u003ccode\u003eus-east-1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drrRegionNames",
                        "name": "_drrRegionNames",
                        "shape": "RegionNameStringList",
                        "locationName": "RegionName",
                        "documentation": "\u003cp\u003eThe names of one or more regions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeReservedInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drirReservedInstances",
                    "name": "_drirReservedInstances",
                    "shape": "ReservedInstancesList",
                    "locationName": "reservedInstancesSet",
                    "documentation": "\u003cp\u003eA list of Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstances]",
                    "type": "[ReservedInstances]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drirReservedInstances",
                    "name": "_drirReservedInstances",
                    "shape": "ReservedInstancesList",
                    "locationName": "reservedInstancesSet",
                    "documentation": "\u003cp\u003eA list of Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstances]",
                    "type": "[ReservedInstances]"
                },
                "required": [],
                "name": "DescribeReservedInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirReservedInstances",
                        "name": "_drirReservedInstances",
                        "shape": "ReservedInstancesList",
                        "locationName": "reservedInstancesSet",
                        "documentation": "\u003cp\u003eA list of Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstances]",
                        "type": "[ReservedInstances]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirReservedInstances",
                        "name": "_drirReservedInstances",
                        "shape": "ReservedInstancesList",
                        "locationName": "reservedInstancesSet",
                        "documentation": "\u003cp\u003eA list of Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstances]",
                        "type": "[ReservedInstances]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeReservedInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeReservedInstances",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of the Reserved Instances that you purchased.\u003c/p\u003e \u003cp\u003eFor more information about Reserved Instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html\"\u003eReserved Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "describeReservedInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drirDryRun",
                    "name": "_drirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeReservedInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drirDryRun",
                        "name": "_drirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirReservedInstancesIds",
                        "name": "_drirReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Reserved Instances, or only those otherwise specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirFilters",
                        "name": "_drirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone where the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eduration\u003c/code\u003e - The duration of the Reserved Instance (one year or three years), in seconds (\u003ccode\u003e31536000\u003c/code\u003e | \u003ccode\u003e94608000\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eend\u003c/code\u003e - The time when the Reserved Instance expires (for example, 2014-08-07T11:54:42.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efixed-price\u003c/code\u003e - The purchase price of the Reserved Instance (for example, 9800.0).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The instance type on which the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description of the Reserved Instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart\u003c/code\u003e - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Reserved Instance (\u003ccode\u003epending-payment\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003epayment-failed\u003c/code\u003e | \u003ccode\u003eretired\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eusage-price\u003c/code\u003e - The usage price of the Reserved Instance, per hour (for example, 0.84).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drirOfferingType",
                        "name": "_drirOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the \u003ccode\u003eMedium Utilization\u003c/code\u003e Reserved Instance offering type. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drirDryRun",
                        "name": "_drirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirFilters",
                        "name": "_drirFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone where the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eduration\u003c/code\u003e - The duration of the Reserved Instance (one year or three years), in seconds (\u003ccode\u003e31536000\u003c/code\u003e | \u003ccode\u003e94608000\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eend\u003c/code\u003e - The time when the Reserved Instance expires (for example, 2014-08-07T11:54:42.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efixed-price\u003c/code\u003e - The purchase price of the Reserved Instance (for example, 9800.0).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The instance type on which the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description of the Reserved Instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart\u003c/code\u003e - The time at which the Reserved Instance purchase request was placed (for example, 2014-08-07T11:54:42.000Z).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Reserved Instance (\u003ccode\u003epending-payment\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003epayment-failed\u003c/code\u003e | \u003ccode\u003eretired\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eusage-price\u003c/code\u003e - The usage price of the Reserved Instance, per hour (for example, 0.84).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drirOfferingType",
                        "name": "_drirOfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the \u003ccode\u003eMedium Utilization\u003c/code\u003e Reserved Instance offering type. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drirReservedInstancesIds",
                        "name": "_drirReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your Reserved Instances, or only those otherwise specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeReservedInstancesListingsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drilrReservedInstancesListings",
                    "name": "_drilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eInformation about the Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drilrReservedInstancesListings",
                    "name": "_drilrReservedInstancesListings",
                    "shape": "ReservedInstancesListingList",
                    "locationName": "reservedInstancesListingsSet",
                    "documentation": "\u003cp\u003eInformation about the Reserved Instance listing.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesListing]",
                    "type": "[ReservedInstancesListing]"
                },
                "required": [],
                "name": "DescribeReservedInstancesListingsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drilrReservedInstancesListings",
                        "name": "_drilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eInformation about the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drilrReservedInstancesListings",
                        "name": "_drilrReservedInstancesListings",
                        "shape": "ReservedInstancesListingList",
                        "locationName": "reservedInstancesListingsSet",
                        "documentation": "\u003cp\u003eInformation about the Reserved Instance listing.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesListing]",
                        "type": "[ReservedInstancesListing]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesListings",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeReservedInstancesListings",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes your account's Reserved Instance listings in the Reserved Instance Marketplace.\u003c/p\u003e \u003cp\u003eThe Reserved Instance Marketplace matches sellers who want to resell Reserved Instance capacity that they no longer need with buyers who want to purchase additional capacity. Reserved Instances bought and sold through the Reserved Instance Marketplace work like any other Reserved Instances. \u003c/p\u003e \u003cp\u003eAs a seller, you choose to list some or all of your Reserved Instances, and you specify the upfront price to receive for them. Your Reserved Instances are then listed in the Reserved Instance Marketplace and are available for purchase. \u003c/p\u003e \u003cp\u003eAs a buyer, you specify the configuration of the Reserved Instance to purchase, and the Marketplace matches what you're searching for with what's available. The Marketplace first sells the lowest priced Reserved Instances to you, and continues to sell available Reserved Instance listings to you until your demand is met. You are charged based on the total price of all of the listings that you purchase.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html\"\u003eReserved Instance Marketplace\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "describeReservedInstancesListings",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drilrReservedInstancesId",
                    "name": "_drilrReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eOne or more Reserved Instance IDs.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeReservedInstancesListings",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drilrReservedInstancesId",
                        "name": "_drilrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance IDs.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drilrReservedInstancesListingId",
                        "name": "_drilrReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance Listing IDs.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drilrFilters",
                        "name": "_drilrFilters",
                        "shape": "FilterList",
                        "locationName": "filters",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-listing-id\u003c/code\u003e - The ID of the Reserved Instances listing.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the Reserved Instance listing (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003ecancelled\u003c/code\u003e | \u003ccode\u003eclosed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The reason for the status.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drilrFilters",
                        "name": "_drilrFilters",
                        "shape": "FilterList",
                        "locationName": "filters",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-listing-id\u003c/code\u003e - The ID of the Reserved Instances listing.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the Reserved Instance listing (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003ecancelled\u003c/code\u003e | \u003ccode\u003eclosed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The reason for the status.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drilrReservedInstancesId",
                        "name": "_drilrReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance IDs.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drilrReservedInstancesListingId",
                        "name": "_drilrReservedInstancesListingId",
                        "shape": "String",
                        "locationName": "reservedInstancesListingId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instance Listing IDs.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 36,
                "ctor": "describeReservedInstancesModificationsResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drimrReservedInstancesModifications",
                    "name": "_drimrReservedInstancesModifications",
                    "shape": "ReservedInstancesModificationList",
                    "locationName": "reservedInstancesModificationsSet",
                    "documentation": "\u003cp\u003eThe Reserved Instance modification information.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesModification]",
                    "type": "[ReservedInstancesModification]"
                },
                "required": [],
                "name": "DescribeReservedInstancesModificationsResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimrReservedInstancesModifications",
                        "name": "_drimrReservedInstancesModifications",
                        "shape": "ReservedInstancesModificationList",
                        "locationName": "reservedInstancesModificationsSet",
                        "documentation": "\u003cp\u003eThe Reserved Instance modification information.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesModification]",
                        "type": "[ReservedInstancesModification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drimrNextToken",
                        "name": "_drimrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next page of data.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drimrNextToken",
                        "name": "_drimrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next page of data.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimrReservedInstancesModifications",
                        "name": "_drimrReservedInstancesModifications",
                        "shape": "ReservedInstancesModificationList",
                        "locationName": "reservedInstancesModificationsSet",
                        "documentation": "\u003cp\u003eThe Reserved Instance modification information.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesModification]",
                        "type": "[ReservedInstancesModification]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesModifications",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeReservedInstancesModifications",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the modifications made to your Reserved Instances. If no parameter is specified, information about all your Reserved Instances modification requests is returned. If a modification ID is specified, only information about the specific modification is returned.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html\"\u003eModifying Reserved Instances\u003c/a\u003e in the Amazon Elastic Compute Cloud User Guide.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 39,
                "ctor": "describeReservedInstancesModifications",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drimr1ReservedInstancesModificationIds",
                    "name": "_drimr1ReservedInstancesModificationIds",
                    "shape": "ReservedInstancesModificationIdStringList",
                    "locationName": "ReservedInstancesModificationId",
                    "documentation": "\u003cp\u003eIDs for the submitted modification request.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeReservedInstancesModifications",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimr1ReservedInstancesModificationIds",
                        "name": "_drimr1ReservedInstancesModificationIds",
                        "shape": "ReservedInstancesModificationIdStringList",
                        "locationName": "ReservedInstancesModificationId",
                        "documentation": "\u003cp\u003eIDs for the submitted modification request.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drimr1NextToken",
                        "name": "_drimr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next page of data.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimr1Filters",
                        "name": "_drimr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eclient-token\u003c/code\u003e - The idempotency token for the modification request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-date\u003c/code\u003e - The time when the modification request was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eeffective-date\u003c/code\u003e - The time when the modification becomes effective.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.reserved-instances-id\u003c/code\u003e - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is \u003ccode\u003efulfilled\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.availability-zone\u003c/code\u003e - The Availability Zone for the new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.instance-count \u003c/code\u003e - The number of new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.instance-type\u003c/code\u003e - The instance type of the new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.platform\u003c/code\u003e - The network platform of the new Reserved Instances (\u003ccode\u003eEC2-Classic\u003c/code\u003e | \u003ccode\u003eEC2-VPC\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instances modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-modification-id\u003c/code\u003e - The ID of the modification request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the Reserved Instances modification request (\u003ccode\u003eprocessing\u003c/code\u003e | \u003ccode\u003efulfilled\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The reason for the status.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eupdate-date\u003c/code\u003e - The time when the modification request was last updated.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimr1Filters",
                        "name": "_drimr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eclient-token\u003c/code\u003e - The idempotency token for the modification request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-date\u003c/code\u003e - The time when the modification request was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eeffective-date\u003c/code\u003e - The time when the modification becomes effective.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.reserved-instances-id\u003c/code\u003e - The ID for the Reserved Instances created as part of the modification request. This ID is only available when the status of the modification is \u003ccode\u003efulfilled\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.availability-zone\u003c/code\u003e - The Availability Zone for the new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.instance-count \u003c/code\u003e - The number of new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.instance-type\u003c/code\u003e - The instance type of the new Reserved Instances.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emodification-result.target-configuration.platform\u003c/code\u003e - The network platform of the new Reserved Instances (\u003ccode\u003eEC2-Classic\u003c/code\u003e | \u003ccode\u003eEC2-VPC\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-id\u003c/code\u003e - The ID of the Reserved Instances modified.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-modification-id\u003c/code\u003e - The ID of the modification request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the Reserved Instances modification request (\u003ccode\u003eprocessing\u003c/code\u003e | \u003ccode\u003efulfilled\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The reason for the status.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eupdate-date\u003c/code\u003e - The time when the modification request was last updated.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drimr1NextToken",
                        "name": "_drimr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next page of data.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drimr1ReservedInstancesModificationIds",
                        "name": "_drimr1ReservedInstancesModificationIds",
                        "shape": "ReservedInstancesModificationIdStringList",
                        "locationName": "ReservedInstancesModificationId",
                        "documentation": "\u003cp\u003eIDs for the submitted modification request.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "describeReservedInstancesOfferingsResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "driorReservedInstancesOfferings",
                    "name": "_driorReservedInstancesOfferings",
                    "shape": "ReservedInstancesOfferingList",
                    "locationName": "reservedInstancesOfferingsSet",
                    "documentation": "\u003cp\u003eA list of Reserved Instances offerings.\u003c/p\u003e",
                    "typeExposed": "[ReservedInstancesOffering]",
                    "type": "[ReservedInstancesOffering]"
                },
                "required": [],
                "name": "DescribeReservedInstancesOfferingsResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "driorReservedInstancesOfferings",
                        "name": "_driorReservedInstancesOfferings",
                        "shape": "ReservedInstancesOfferingList",
                        "locationName": "reservedInstancesOfferingsSet",
                        "documentation": "\u003cp\u003eA list of Reserved Instances offerings.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesOffering]",
                        "type": "[ReservedInstancesOffering]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "driorNextToken",
                        "name": "_driorNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "driorNextToken",
                        "name": "_driorNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "driorReservedInstancesOfferings",
                        "name": "_driorReservedInstancesOfferings",
                        "shape": "ReservedInstancesOfferingList",
                        "locationName": "reservedInstancesOfferingsSet",
                        "documentation": "\u003cp\u003eA list of Reserved Instances offerings.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesOffering]",
                        "type": "[ReservedInstancesOffering]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeReservedInstancesOfferings",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeReservedInstancesOfferings",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes Reserved Instance offerings that are available for purchase. With Reserved Instances, you purchase the right to launch instances for a period of time. During that time period, you do not receive insufficient capacity errors, and you pay a lower usage rate than the rate charged for On-Demand instances for the actual time used.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html\"\u003eReserved Instance Marketplace\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 35,
                "ctor": "describeReservedInstancesOfferings",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drior1DryRun",
                    "name": "_drior1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeReservedInstancesOfferings",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1DryRun",
                        "name": "_drior1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drior1ReservedInstancesOfferingIds",
                        "name": "_drior1ReservedInstancesOfferingIds",
                        "shape": "ReservedInstancesOfferingIdStringList",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instances offering IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1InstanceType",
                        "name": "_drior1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1AvailabilityZone",
                        "name": "_drior1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1ProductDescription",
                        "name": "_drior1ProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "ProductDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description. Instances that include \u003ccode\u003e(Amazon VPC)\u003c/code\u003e in the description are for use with Amazon VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drior1Filters",
                        "name": "_drior1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone where the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eduration\u003c/code\u003e - The duration of the Reserved Instance (for example, one year or three years), in seconds (\u003ccode\u003e31536000\u003c/code\u003e | \u003ccode\u003e94608000\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efixed-price\u003c/code\u003e - The purchase price of the Reserved Instance (for example, 9800.0).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The instance type on which the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emarketplace\u003c/code\u003e - Set to \u003ccode\u003etrue\u003c/code\u003e to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from AWS and Reserved Instance Marketplace are listed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The description of the Reserved Instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-offering-id\u003c/code\u003e - The Reserved Instances offering ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eusage-price\u003c/code\u003e - The usage price of the Reserved Instance, per hour (for example, 0.84).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1InstanceTenancy",
                        "name": "_drior1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the Reserved Instance offering. A Reserved Instance with \u003ccode\u003ededicated\u003c/code\u003e tenancy runs on single-tenant hardware and can only be launched within a VPC.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1OfferingType",
                        "name": "_drior1OfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the \u003ccode\u003eMedium Utilization\u003c/code\u003e Reserved Instance offering type. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1NextToken",
                        "name": "_drior1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next paginated set of offerings.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxResults",
                        "name": "_drior1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of offerings to return. The maximum is 100.\u003c/p\u003e \u003cp\u003eDefault: 100\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1IncludeMarketplace",
                        "name": "_drior1IncludeMarketplace",
                        "shape": "Boolean",
                        "locationName": "IncludeMarketplace",
                        "documentation": "\u003cp\u003eInclude Marketplace offerings in the response.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MinDuration",
                        "name": "_drior1MinDuration",
                        "shape": "Long",
                        "locationName": "MinDuration",
                        "documentation": "\u003cp\u003eThe minimum duration (in seconds) to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 2592000 (1 month)\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxDuration",
                        "name": "_drior1MaxDuration",
                        "shape": "Long",
                        "locationName": "MaxDuration",
                        "documentation": "\u003cp\u003eThe maximum duration (in seconds) to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 94608000 (3 years)\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxInstanceCount",
                        "name": "_drior1MaxInstanceCount",
                        "shape": "Integer",
                        "locationName": "MaxInstanceCount",
                        "documentation": "\u003cp\u003eThe maximum number of instances to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 20\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1AvailabilityZone",
                        "name": "_drior1AvailabilityZone",
                        "shape": "String",
                        "locationName": "AvailabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone in which the Reserved Instance can be used.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1DryRun",
                        "name": "_drior1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drior1Filters",
                        "name": "_drior1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone where the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eduration\u003c/code\u003e - The duration of the Reserved Instance (for example, one year or three years), in seconds (\u003ccode\u003e31536000\u003c/code\u003e | \u003ccode\u003e94608000\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efixed-price\u003c/code\u003e - The purchase price of the Reserved Instance (for example, 9800.0).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The instance type on which the Reserved Instance can be used.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003emarketplace\u003c/code\u003e - Set to \u003ccode\u003etrue\u003c/code\u003e to show only Reserved Instance Marketplace offerings. When this filter is not used, which is the default behavior, all offerings from AWS and Reserved Instance Marketplace are listed.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The description of the Reserved Instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ereserved-instances-offering-id\u003c/code\u003e - The Reserved Instances offering ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eusage-price\u003c/code\u003e - The usage price of the Reserved Instance, per hour (for example, 0.84).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1IncludeMarketplace",
                        "name": "_drior1IncludeMarketplace",
                        "shape": "Boolean",
                        "locationName": "IncludeMarketplace",
                        "documentation": "\u003cp\u003eInclude Marketplace offerings in the response.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1InstanceTenancy",
                        "name": "_drior1InstanceTenancy",
                        "shape": "Tenancy",
                        "locationName": "instanceTenancy",
                        "documentation": "\u003cp\u003eThe tenancy of the Reserved Instance offering. A Reserved Instance with \u003ccode\u003ededicated\u003c/code\u003e tenancy runs on single-tenant hardware and can only be launched within a VPC.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003edefault\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1InstanceType",
                        "name": "_drior1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eThe instance type on which the Reserved Instance can be used. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxDuration",
                        "name": "_drior1MaxDuration",
                        "shape": "Long",
                        "locationName": "MaxDuration",
                        "documentation": "\u003cp\u003eThe maximum duration (in seconds) to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 94608000 (3 years)\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxInstanceCount",
                        "name": "_drior1MaxInstanceCount",
                        "shape": "Integer",
                        "locationName": "MaxInstanceCount",
                        "documentation": "\u003cp\u003eThe maximum number of instances to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 20\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MaxResults",
                        "name": "_drior1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of offerings to return. The maximum is 100.\u003c/p\u003e \u003cp\u003eDefault: 100\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1MinDuration",
                        "name": "_drior1MinDuration",
                        "shape": "Long",
                        "locationName": "MinDuration",
                        "documentation": "\u003cp\u003eThe minimum duration (in seconds) to filter when searching for offerings.\u003c/p\u003e \u003cp\u003eDefault: 2592000 (1 month)\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1NextToken",
                        "name": "_drior1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next paginated set of offerings.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1OfferingType",
                        "name": "_drior1OfferingType",
                        "shape": "OfferingTypeValues",
                        "locationName": "offeringType",
                        "documentation": "\u003cp\u003eThe Reserved Instance offering type. If you are using tools that predate the 2011-11-01 API version, you only have access to the \u003ccode\u003eMedium Utilization\u003c/code\u003e Reserved Instance offering type. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drior1ProductDescription",
                        "name": "_drior1ProductDescription",
                        "shape": "RIProductDescription",
                        "locationName": "ProductDescription",
                        "documentation": "\u003cp\u003eThe Reserved Instance description. Instances that include \u003ccode\u003e(Amazon VPC)\u003c/code\u003e in the description are for use with Amazon VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drior1ReservedInstancesOfferingIds",
                        "name": "_drior1ReservedInstancesOfferingIds",
                        "shape": "ReservedInstancesOfferingIdStringList",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eOne or more Reserved Instances offering IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeRouteTablesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drtrRouteTables",
                    "name": "_drtrRouteTables",
                    "shape": "RouteTableList",
                    "locationName": "routeTableSet",
                    "documentation": "\u003cp\u003eInformation about one or more route tables.\u003c/p\u003e",
                    "typeExposed": "[RouteTable]",
                    "type": "[RouteTable]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "drtrRouteTables",
                    "name": "_drtrRouteTables",
                    "shape": "RouteTableList",
                    "locationName": "routeTableSet",
                    "documentation": "\u003cp\u003eInformation about one or more route tables.\u003c/p\u003e",
                    "typeExposed": "[RouteTable]",
                    "type": "[RouteTable]"
                },
                "required": [],
                "name": "DescribeRouteTablesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtrRouteTables",
                        "name": "_drtrRouteTables",
                        "shape": "RouteTableList",
                        "locationName": "routeTableSet",
                        "documentation": "\u003cp\u003eInformation about one or more route tables.\u003c/p\u003e",
                        "typeExposed": "[RouteTable]",
                        "type": "[RouteTable]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtrRouteTables",
                        "name": "_drtrRouteTables",
                        "shape": "RouteTableList",
                        "locationName": "routeTableSet",
                        "documentation": "\u003cp\u003eInformation about one or more route tables.\u003c/p\u003e",
                        "typeExposed": "[RouteTable]",
                        "type": "[RouteTable]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeRouteTables",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeRouteTables",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your route tables.\u003c/p\u003e \u003cp\u003eFor more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "describeRouteTables",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drtr2DryRun",
                    "name": "_drtr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeRouteTables",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtr2DryRun",
                        "name": "_drtr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtr2RouteTableIds",
                        "name": "_drtr2RouteTableIds",
                        "shape": "ValueStringList",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eOne or more route table IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your route tables.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtr2Filters",
                        "name": "_drtr2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.route-table-association-id\u003c/code\u003e - The ID of an association ID for the route table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.route-table-id\u003c/code\u003e - The ID of the route table involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.subnet-id\u003c/code\u003e - The ID of the subnet involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.main\u003c/code\u003e - Indicates whether the route table is the main route table for the VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute-table-id\u003c/code\u003e - The ID of the route table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.destination-cidr-block\u003c/code\u003e - The CIDR range specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.gateway-id\u003c/code\u003e - The ID of a gateway specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.instance-id\u003c/code\u003e - The ID of an instance specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.origin\u003c/code\u003e - Describes how the route was created. \u003ccode\u003eCreateRouteTable\u003c/code\u003e indicates that the route was automatically created when the route table was created; \u003ccode\u003eCreateRoute\u003c/code\u003e indicates that the route was manually added to the route table; \u003ccode\u003eEnableVgwRoutePropagation\u003c/code\u003e indicates that the route was propagated by route propagation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.state\u003c/code\u003e - The state of a route in the route table (\u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003eblackhole\u003c/code\u003e). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.vpc-peering-connection-id\u003c/code\u003e - The ID of a VPC peering connection specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the route table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtr2DryRun",
                        "name": "_drtr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtr2Filters",
                        "name": "_drtr2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.route-table-association-id\u003c/code\u003e - The ID of an association ID for the route table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.route-table-id\u003c/code\u003e - The ID of the route table involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.subnet-id\u003c/code\u003e - The ID of the subnet involved in the association.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eassociation.main\u003c/code\u003e - Indicates whether the route table is the main route table for the VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute-table-id\u003c/code\u003e - The ID of the route table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.destination-cidr-block\u003c/code\u003e - The CIDR range specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.gateway-id\u003c/code\u003e - The ID of a gateway specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.instance-id\u003c/code\u003e - The ID of an instance specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.origin\u003c/code\u003e - Describes how the route was created. \u003ccode\u003eCreateRouteTable\u003c/code\u003e indicates that the route was automatically created when the route table was created; \u003ccode\u003eCreateRoute\u003c/code\u003e indicates that the route was manually added to the route table; \u003ccode\u003eEnableVgwRoutePropagation\u003c/code\u003e indicates that the route was propagated by route propagation.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.state\u003c/code\u003e - The state of a route in the route table (\u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003eblackhole\u003c/code\u003e). The blackhole state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, the specified NAT instance has been terminated, and so on).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.vpc-peering-connection-id\u003c/code\u003e - The ID of a VPC peering connection specified in a route in the table.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the route table.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "drtr2RouteTableIds",
                        "name": "_drtr2RouteTableIds",
                        "shape": "ValueStringList",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eOne or more route table IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your route tables.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSecurityGroupsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsgrSecurityGroups",
                    "name": "_dsgrSecurityGroups",
                    "shape": "SecurityGroupList",
                    "locationName": "securityGroupInfo",
                    "documentation": "\u003cp\u003eInformation about one or more security groups.\u003c/p\u003e",
                    "typeExposed": "[SecurityGroup]",
                    "type": "[SecurityGroup]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsgrSecurityGroups",
                    "name": "_dsgrSecurityGroups",
                    "shape": "SecurityGroupList",
                    "locationName": "securityGroupInfo",
                    "documentation": "\u003cp\u003eInformation about one or more security groups.\u003c/p\u003e",
                    "typeExposed": "[SecurityGroup]",
                    "type": "[SecurityGroup]"
                },
                "required": [],
                "name": "DescribeSecurityGroupsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrSecurityGroups",
                        "name": "_dsgrSecurityGroups",
                        "shape": "SecurityGroupList",
                        "locationName": "securityGroupInfo",
                        "documentation": "\u003cp\u003eInformation about one or more security groups.\u003c/p\u003e",
                        "typeExposed": "[SecurityGroup]",
                        "type": "[SecurityGroup]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrSecurityGroups",
                        "name": "_dsgrSecurityGroups",
                        "shape": "SecurityGroupList",
                        "locationName": "securityGroupInfo",
                        "documentation": "\u003cp\u003eInformation about one or more security groups.\u003c/p\u003e",
                        "typeExposed": "[SecurityGroup]",
                        "type": "[SecurityGroup]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSecurityGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSecurityGroups",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your security groups.\u003c/p\u003e \u003cp\u003eA security group is for use with instances either in the EC2-Classic platform or in a specific VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\"\u003eAmazon EC2 Security Groups\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e and \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_SecurityGroups.html\"\u003eSecurity Groups for Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "describeSecurityGroups",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsgrDryRun",
                    "name": "_dsgrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSecurityGroups",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgrDryRun",
                        "name": "_dsgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrGroupNames",
                        "name": "_dsgrGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] One or more security group names. You can specify either the security group name or the security group ID.\u003c/p\u003e \u003cp\u003eDefault: Describes all your security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrGroupIds",
                        "name": "_dsgrGroupIds",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eOne or more security group IDs. Required for nondefault VPCs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrFilters",
                        "name": "_dsgrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.cidr\u003c/code\u003e - A CIDR range that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.from-port\u003c/code\u003e - The start of port range for the TCP and UDP protocols, or an ICMP type number.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.group-id\u003c/code\u003e - The ID of a security group that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.group-name\u003c/code\u003e - The name of a security group that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.protocol\u003c/code\u003e - The IP protocol for the permission (\u003ccode\u003etcp\u003c/code\u003e | \u003ccode\u003eudp\u003c/code\u003e | \u003ccode\u003eicmp\u003c/code\u003e or a protocol number).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.to-port\u003c/code\u003e - The end of port range for the TCP and UDP protocols, or an ICMP code.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.user-id\u003c/code\u003e - The ID of an AWS account that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the owner of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC specified when the security group was created.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsgrDryRun",
                        "name": "_dsgrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrFilters",
                        "name": "_dsgrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - The description of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-id\u003c/code\u003e - The ID of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003egroup-name\u003c/code\u003e - The name of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.cidr\u003c/code\u003e - A CIDR range that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.from-port\u003c/code\u003e - The start of port range for the TCP and UDP protocols, or an ICMP type number.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.group-id\u003c/code\u003e - The ID of a security group that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.group-name\u003c/code\u003e - The name of a security group that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.protocol\u003c/code\u003e - The IP protocol for the permission (\u003ccode\u003etcp\u003c/code\u003e | \u003ccode\u003eudp\u003c/code\u003e | \u003ccode\u003eicmp\u003c/code\u003e or a protocol number).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.to-port\u003c/code\u003e - The end of port range for the TCP and UDP protocols, or an ICMP code.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eip-permission.user-id\u003c/code\u003e - The ID of an AWS account that has been granted permission.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The AWS account ID of the owner of the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the security group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC specified when the security group was created.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrGroupIds",
                        "name": "_dsgrGroupIds",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eOne or more security group IDs. Required for nondefault VPCs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsgrGroupNames",
                        "name": "_dsgrGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] One or more security group names. You can specify either the security group name or the security group ID.\u003c/p\u003e \u003cp\u003eDefault: Describes all your security groups.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "describeSnapshotAttributeResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsarSnapshotId",
                    "name": "_dsarSnapshotId",
                    "shape": "String",
                    "locationName": "snapshotId",
                    "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DescribeSnapshotAttributeResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsarSnapshotId",
                        "name": "_dsarSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsarCreateVolumePermissions",
                        "name": "_dsarCreateVolumePermissions",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "createVolumePermission",
                        "documentation": "\u003cp\u003eA list of permissions for creating volumes from the snapshot.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsarProductCodes",
                        "name": "_dsarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsarCreateVolumePermissions",
                        "name": "_dsarCreateVolumePermissions",
                        "shape": "CreateVolumePermissionList",
                        "locationName": "createVolumePermission",
                        "documentation": "\u003cp\u003eA list of permissions for creating volumes from the snapshot.\u003c/p\u003e",
                        "typeExposed": "[CreateVolumePermission]",
                        "type": "[CreateVolumePermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsarProductCodes",
                        "name": "_dsarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsarSnapshotId",
                        "name": "_dsarSnapshotId",
                        "shape": "String",
                        "locationName": "snapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSnapshotAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSnapshotAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of the specified snapshot. You can specify only one attribute at a time.\u003c/p\u003e \u003cp\u003eFor more information about Amazon EBS snapshots, see \u003ca href='http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html'\u003eAmazon EBS Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "describeSnapshotAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsar1DryRun",
                    "name": "_dsar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsar1SnapshotId",
                        "name": "_dsar1SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsar1Attribute",
                        "name": "_dsar1Attribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe snapshot attribute you would like to view.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSnapshotAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsar1DryRun",
                        "name": "_dsar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsar1Attribute",
                        "name": "_dsar1Attribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe snapshot attribute you would like to view.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsar1DryRun",
                        "name": "_dsar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsar1SnapshotId",
                        "name": "_dsar1SnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the Amazon EBS snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSnapshotsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsrSnapshots",
                    "name": "_dsrSnapshots",
                    "shape": "SnapshotList",
                    "locationName": "snapshotSet",
                    "documentation": null,
                    "typeExposed": "[Snapshot]",
                    "type": "[Snapshot]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsrSnapshots",
                    "name": "_dsrSnapshots",
                    "shape": "SnapshotList",
                    "locationName": "snapshotSet",
                    "documentation": null,
                    "typeExposed": "[Snapshot]",
                    "type": "[Snapshot]"
                },
                "required": [],
                "name": "DescribeSnapshotsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSnapshots",
                        "name": "_dsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "snapshotSet",
                        "documentation": null,
                        "typeExposed": "[Snapshot]",
                        "type": "[Snapshot]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSnapshots",
                        "name": "_dsrSnapshots",
                        "shape": "SnapshotList",
                        "locationName": "snapshotSet",
                        "documentation": null,
                        "typeExposed": "[Snapshot]",
                        "type": "[Snapshot]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSnapshots",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSnapshots",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of the Amazon EBS snapshots available to you. Available snapshots include public snapshots available for any AWS account to launch, private snapshots that you own, and private snapshots owned by another AWS account but for which you've been given explicit create volume permissions.\u003c/p\u003e \u003cp\u003eThe create volume permissions fall into the following categories:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003epublic\u003c/i\u003e: The owner of the snapshot granted create volume permissions for the snapshot to the \u003ccode\u003eall\u003c/code\u003e group. All AWS accounts have create volume permissions for these snapshots.\u003c/li\u003e \u003cli\u003e \u003ci\u003eexplicit\u003c/i\u003e: The owner of the snapshot granted create volume permissions to a specific AWS account.\u003c/li\u003e \u003cli\u003e \u003ci\u003eimplicit\u003c/i\u003e: An AWS account has implicit create volume permissions for all snapshots it owns.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe list of snapshots returned can be modified by specifying snapshot IDs, snapshot owners, or AWS accounts with create volume permissions. If no options are specified, Amazon EC2 returns all snapshots for which you have create volume permissions.\u003c/p\u003e \u003cp\u003eIf you specify one or more snapshot IDs, only snapshots that have the specified IDs are returned. If you specify an invalid snapshot ID, an error is returned. If you specify a snapshot ID for which you do not have access, it is not included in the returned results.\u003c/p\u003e \u003cp\u003eIf you specify one or more snapshot owners, only snapshots from the specified owners and for which you have access are returned. The results can include the AWS account IDs of the specified owners, \u003ccode\u003eamazon\u003c/code\u003e for snapshots owned by Amazon, or \u003ccode\u003eself\u003c/code\u003e for snapshots that you own.\u003c/p\u003e \u003cp\u003eIf you specify a list of restorable users, only snapshots with create snapshot permissions for those users are returned. You can specify AWS account IDs (if you own the snapshots), \u003ccode\u003eself\u003c/code\u003e for snapshots for which you own or have explicit permissions, or \u003ccode\u003eall\u003c/code\u003e for public snapshots.\u003c/p\u003e \u003cp\u003eFor more information about Amazon EBS snapshots, see \u003ca href='http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSSnapshots.html'\u003eAmazon EBS Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "describeSnapshots",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsr1DryRun",
                    "name": "_dsr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSnapshots",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr1DryRun",
                        "name": "_dsr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1SnapshotIds",
                        "name": "_dsr1SnapshotIds",
                        "shape": "SnapshotIdStringList",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eOne or more snapshot IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes snapshots for which you have launch permissions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1OwnerIds",
                        "name": "_dsr1OwnerIds",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eReturns the snapshots owned by the specified owner. Multiple owners can be specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1RestorableByUserIds",
                        "name": "_dsr1RestorableByUserIds",
                        "shape": "RestorableByStringList",
                        "locationName": "RestorableBy",
                        "documentation": "\u003cp\u003eOne or more AWS accounts IDs that can create volumes from the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1Filters",
                        "name": "_dsr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - A description of the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-alias\u003c/code\u003e - The AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e) that owns the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The ID of the AWS account that owns the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprogress\u003c/code\u003e - The progress of the snapshot, as a percentage (for example, 80%).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esnapshot-id\u003c/code\u003e - The snapshot ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart-time\u003c/code\u003e - The time stamp when the snapshot was initiated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the snapshot (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003ecompleted\u003c/code\u003e | \u003ccode\u003eerror\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-id\u003c/code\u003e - The ID of the volume the snapshot is for.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-size\u003c/code\u003e - The size of the volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsr1DryRun",
                        "name": "_dsr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1Filters",
                        "name": "_dsr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edescription\u003c/code\u003e - A description of the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-alias\u003c/code\u003e - The AWS account alias (for example, \u003ccode\u003eamazon\u003c/code\u003e) that owns the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eowner-id\u003c/code\u003e - The ID of the AWS account that owns the snapshot.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eprogress\u003c/code\u003e - The progress of the snapshot, as a percentage (for example, 80%).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esnapshot-id\u003c/code\u003e - The snapshot ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estart-time\u003c/code\u003e - The time stamp when the snapshot was initiated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the snapshot (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003ecompleted\u003c/code\u003e | \u003ccode\u003eerror\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-id\u003c/code\u003e - The ID of the volume the snapshot is for.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-size\u003c/code\u003e - The size of the volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1OwnerIds",
                        "name": "_dsr1OwnerIds",
                        "shape": "OwnerStringList",
                        "locationName": "Owner",
                        "documentation": "\u003cp\u003eReturns the snapshots owned by the specified owner. Multiple owners can be specified.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1RestorableByUserIds",
                        "name": "_dsr1RestorableByUserIds",
                        "shape": "RestorableByStringList",
                        "locationName": "RestorableBy",
                        "documentation": "\u003cp\u003eOne or more AWS accounts IDs that can create volumes from the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsr1SnapshotIds",
                        "name": "_dsr1SnapshotIds",
                        "shape": "SnapshotIdStringList",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eOne or more snapshot IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes snapshots for which you have launch permissions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSpotDatafeedSubscriptionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsrSpotDatafeedSubscription",
                    "name": "_dsdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsrSpotDatafeedSubscription",
                    "name": "_dsdsrSpotDatafeedSubscription",
                    "shape": "SpotDatafeedSubscription",
                    "locationName": "spotDatafeedSubscription",
                    "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                    "typeExposed": "Maybe SpotDatafeedSubscription",
                    "type": "Maybe SpotDatafeedSubscription"
                },
                "required": [],
                "name": "DescribeSpotDatafeedSubscriptionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsrSpotDatafeedSubscription",
                        "name": "_dsdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsrSpotDatafeedSubscription",
                        "name": "_dsdsrSpotDatafeedSubscription",
                        "shape": "SpotDatafeedSubscription",
                        "locationName": "spotDatafeedSubscription",
                        "documentation": "\u003cp\u003eThe Spot Instance datafeed subscription.\u003c/p\u003e",
                        "typeExposed": "Maybe SpotDatafeedSubscription",
                        "type": "Maybe SpotDatafeedSubscription"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSpotDatafeedSubscription",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSpotDatafeedSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the datafeed for Spot Instances. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSpotDatafeedSubscription",
                "headerPad": 0,
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsrDryRun",
                    "name": "_dsdsrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsdsrDryRun",
                    "name": "_dsdsrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSpotDatafeedSubscription",
                "query": [],
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsrDryRun",
                        "name": "_dsdsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsdsrDryRun",
                        "name": "_dsdsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSpotInstanceRequestsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsirrSpotInstanceRequests",
                    "name": "_dsirrSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "[SpotInstanceRequest]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsirrSpotInstanceRequests",
                    "name": "_dsirrSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "[SpotInstanceRequest]"
                },
                "required": [],
                "name": "DescribeSpotInstanceRequestsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrSpotInstanceRequests",
                        "name": "_dsirrSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "[SpotInstanceRequest]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrSpotInstanceRequests",
                        "name": "_dsirrSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eOne or more Spot Instance requests.\u003c/p\u003e",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "[SpotInstanceRequest]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSpotInstanceRequests",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSpotInstanceRequests",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the Spot Instance requests that belong to your account. Spot Instances are instances that Amazon EC2 starts on your behalf when the maximum price that you specify exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity and current Spot Instance requests. For more information about Spot Instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can use \u003ccode\u003eDescribeSpotInstanceRequests\u003c/code\u003e to find a running Spot Instance by examining the response. If the status of the Spot Instance is \u003ccode\u003efulfilled\u003c/code\u003e, the instance ID appears in the response and contains the identifier of the instance. Alternatively, you can use \u003ca\u003eDescribeInstances\u003c/a\u003e with a filter to look for instances where the instance lifecycle is \u003ccode\u003espot\u003c/code\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "describeSpotInstanceRequests",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsirrDryRun",
                    "name": "_dsirrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSpotInstanceRequests",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsirrDryRun",
                        "name": "_dsirrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrSpotInstanceRequestIds",
                        "name": "_dsirrSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "\u003cp\u003eOne or more Spot Instance request IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrFilters",
                        "name": "_dsirrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone-group\u003c/code\u003e - The Availability Zone group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-time\u003c/code\u003e - The time stamp when the Spot Instance request was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efault-code\u003c/code\u003e - The fault code related to the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efault-message\u003c/code\u003e - The fault message related to the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance that fulfilled the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-group\u003c/code\u003e - The Spot Instance launch group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.delete-on-termination\u003c/code\u003e - Indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.snapshot-id\u003c/code\u003e - The ID of the snapshot used for the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.volume-size\u003c/code\u003e - The size of the Amazon EBS volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.volume-type\u003c/code\u003e - The type of the Amazon EBS volume (\u003ccode\u003egp2\u003c/code\u003e | \u003ccode\u003estandard\u003c/code\u003e | \u003ccode\u003eio1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.group-id\u003c/code\u003e - The security group for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.image-id\u003c/code\u003e - The ID of the AMI.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.instance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.kernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.key-name\u003c/code\u003e - The name of the key pair the instance launched with.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.monitoring-enabled\u003c/code\u003e - Whether monitoring is enabled for the Spot Instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.ramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.network-interface-id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.device-index\u003c/code\u003e - The index of the device for the network interface attachment on the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.subnet-id\u003c/code\u003e - The ID of the subnet for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.description\u003c/code\u003e - A description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.private-ip-address\u003c/code\u003e - The primary private IP address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.delete-on-termination\u003c/code\u003e - Indicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-id\u003c/code\u003e - The ID of the security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-name\u003c/code\u003e - The name of the security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.primary\u003c/code\u003e - Indicates whether the IP address is the primary private IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description associated with the instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-instance-request-id\u003c/code\u003e - The Spot Instance request ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-price\u003c/code\u003e - The maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Spot Instance request (\u003ccode\u003eopen\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003eclosed\u003c/code\u003e | \u003ccode\u003ecancelled\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e). Spot bid status information can help you track your Amazon EC2 Spot Instance requests. For information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html\"\u003eTracking Spot Requests with Bid Status Codes\u003c/a\u003e in the Amazon Elastic Compute Cloud User Guide.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-code\u003c/code\u003e - The short code describing the most recent evaluation of your Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The message explaining the status of the Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of Spot Instance request (\u003ccode\u003eone-time\u003c/code\u003e | \u003ccode\u003epersistent\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunched-availability-zone\u003c/code\u003e - The Availability Zone in which the bid is launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalid-from\u003c/code\u003e - The start date of the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalid-until\u003c/code\u003e - The end date of the request.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsirrDryRun",
                        "name": "_dsirrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrFilters",
                        "name": "_dsirrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone-group\u003c/code\u003e - The Availability Zone group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-time\u003c/code\u003e - The time stamp when the Spot Instance request was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efault-code\u003c/code\u003e - The fault code related to the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003efault-message\u003c/code\u003e - The fault message related to the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-id\u003c/code\u003e - The ID of the instance that fulfilled the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch-group\u003c/code\u003e - The Spot Instance launch group.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.delete-on-termination\u003c/code\u003e - Indicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.device-name\u003c/code\u003e - The device name for the Amazon EBS volume (for example, \u003ccode\u003e/dev/sdh\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.snapshot-id\u003c/code\u003e - The ID of the snapshot used for the Amazon EBS volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.volume-size\u003c/code\u003e - The size of the Amazon EBS volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.block-device-mapping.volume-type\u003c/code\u003e - The type of the Amazon EBS volume (\u003ccode\u003egp2\u003c/code\u003e | \u003ccode\u003estandard\u003c/code\u003e | \u003ccode\u003eio1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.group-id\u003c/code\u003e - The security group for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.image-id\u003c/code\u003e - The ID of the AMI.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.instance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.kernel-id\u003c/code\u003e - The kernel ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.key-name\u003c/code\u003e - The name of the key pair the instance launched with.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.monitoring-enabled\u003c/code\u003e - Whether monitoring is enabled for the Spot Instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunch.ramdisk-id\u003c/code\u003e - The RAM disk ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.network-interface-id\u003c/code\u003e - The ID of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.device-index\u003c/code\u003e - The index of the device for the network interface attachment on the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.subnet-id\u003c/code\u003e - The ID of the subnet for the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.description\u003c/code\u003e - A description of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.private-ip-address\u003c/code\u003e - The primary private IP address of the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.delete-on-termination\u003c/code\u003e - Indicates whether the network interface is deleted when the instance is terminated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-id\u003c/code\u003e - The ID of the security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.group-name\u003c/code\u003e - The name of the security group associated with the network interface.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003enetwork-interface.addresses.primary\u003c/code\u003e - Indicates whether the IP address is the primary private IP address.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description associated with the instance (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-instance-request-id\u003c/code\u003e - The Spot Instance request ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-price\u003c/code\u003e - The maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the Spot Instance request (\u003ccode\u003eopen\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003eclosed\u003c/code\u003e | \u003ccode\u003ecancelled\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e). Spot bid status information can help you track your Amazon EC2 Spot Instance requests. For information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances-bid-status.html\"\u003eTracking Spot Requests with Bid Status Codes\u003c/a\u003e in the Amazon Elastic Compute Cloud User Guide.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-code\u003c/code\u003e - The short code describing the most recent evaluation of your Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - The message explaining the status of the Spot Instance request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of Spot Instance request (\u003ccode\u003eone-time\u003c/code\u003e | \u003ccode\u003epersistent\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003elaunched-availability-zone\u003c/code\u003e - The Availability Zone in which the bid is launched.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalid-from\u003c/code\u003e - The start date of the request.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalid-until\u003c/code\u003e - The end date of the request.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsirrSpotInstanceRequestIds",
                        "name": "_dsirrSpotInstanceRequestIds",
                        "shape": "SpotInstanceRequestIdList",
                        "locationName": "SpotInstanceRequestId",
                        "documentation": "\u003cp\u003eOne or more Spot Instance request IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "describeSpotPriceHistoryResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsphrSpotPriceHistory",
                    "name": "_dsphrSpotPriceHistory",
                    "shape": "SpotPriceHistoryList",
                    "locationName": "spotPriceHistorySet",
                    "documentation": "\u003cp\u003eThe historical Spot Prices.\u003c/p\u003e",
                    "typeExposed": "[SpotPrice]",
                    "type": "[SpotPrice]"
                },
                "required": [],
                "name": "DescribeSpotPriceHistoryResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphrSpotPriceHistory",
                        "name": "_dsphrSpotPriceHistory",
                        "shape": "SpotPriceHistoryList",
                        "locationName": "spotPriceHistorySet",
                        "documentation": "\u003cp\u003eThe historical Spot Prices.\u003c/p\u003e",
                        "typeExposed": "[SpotPrice]",
                        "type": "[SpotPrice]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphrNextToken",
                        "name": "_dsphrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe string marking the next set of results. This is empty if there are no more results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphrNextToken",
                        "name": "_dsphrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe string marking the next set of results. This is empty if there are no more results.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphrSpotPriceHistory",
                        "name": "_dsphrSpotPriceHistory",
                        "shape": "SpotPriceHistoryList",
                        "locationName": "spotPriceHistorySet",
                        "documentation": "\u003cp\u003eThe historical Spot Prices.\u003c/p\u003e",
                        "typeExposed": "[SpotPrice]",
                        "type": "[SpotPrice]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSpotPriceHistory",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSpotPriceHistory",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the Spot Price history. Spot Instances are instances that Amazon EC2 starts on your behalf when the maximum price that you specify exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity and current Spot Instance requests. For more information about Spot Instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eWhen you specify an Availability Zone, this operation describes the price history for the specified Availability Zone with the most recent set of prices listed first. If you don't specify an Availability Zone, you get the prices across all Availability Zones, starting with the most recent set. However, if you're using an API version earlier than 2011-05-15, you get the lowest price across the region for the specified time period. The prices returned are listed in chronological order, from the oldest to the most recent.\u003c/p\u003e \u003cp\u003eWhen you specify the start and end time options, this operation returns two pieces of data: the prices of the instance types within the time range that you specified and the time when the price changed. The price is valid within the time period that you specified; the response merely indicates the last time that the price changed.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "describeSpotPriceHistory",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsphr1DryRun",
                    "name": "_dsphr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSpotPriceHistory",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1DryRun",
                        "name": "_dsphr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1StartTime",
                        "name": "_dsphr1StartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe start date and time of the Spot Price history data.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1EndTime",
                        "name": "_dsphr1EndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "\u003cp\u003eThe end date and time of the Spot Price history data.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1InstanceTypes",
                        "name": "_dsphr1InstanceTypes",
                        "shape": "InstanceTypeList",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eOne or more instance types.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1ProductDescriptions",
                        "name": "_dsphr1ProductDescriptions",
                        "shape": "ProductDescriptionList",
                        "locationName": "ProductDescription",
                        "documentation": "\u003cp\u003eOne or more basic product descriptions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1Filters",
                        "name": "_dsphr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone for which prices should be returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description for the Spot Price (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eSUSE Linux\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eSUSE Linux (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-price\u003c/code\u003e - The Spot Price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etimestamp\u003c/code\u003e - The timestamp of the Spot Price history (for example, 2010-08-16T05:06:11.000Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1AvailabilityZone",
                        "name": "_dsphr1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1MaxResults",
                        "name": "_dsphr1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe number of rows to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1NextToken",
                        "name": "_dsphr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next set of rows to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1AvailabilityZone",
                        "name": "_dsphr1AvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1DryRun",
                        "name": "_dsphr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1EndTime",
                        "name": "_dsphr1EndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "\u003cp\u003eThe end date and time of the Spot Price history data.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1Filters",
                        "name": "_dsphr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone for which prices should be returned.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003einstance-type\u003c/code\u003e - The type of instance (for example, \u003ccode\u003em1.small\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eproduct-description\u003c/code\u003e - The product description for the Spot Price (\u003ccode\u003eLinux/UNIX\u003c/code\u003e | \u003ccode\u003eSUSE Linux\u003c/code\u003e | \u003ccode\u003eWindows\u003c/code\u003e | \u003ccode\u003eLinux/UNIX (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eSUSE Linux (Amazon VPC)\u003c/code\u003e | \u003ccode\u003eWindows (Amazon VPC)\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003espot-price\u003c/code\u003e - The Spot Price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etimestamp\u003c/code\u003e - The timestamp of the Spot Price history (for example, 2010-08-16T05:06:11.000Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1InstanceTypes",
                        "name": "_dsphr1InstanceTypes",
                        "shape": "InstanceTypeList",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eOne or more instance types.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1MaxResults",
                        "name": "_dsphr1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe number of rows to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1NextToken",
                        "name": "_dsphr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next set of rows to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsphr1ProductDescriptions",
                        "name": "_dsphr1ProductDescriptions",
                        "shape": "ProductDescriptionList",
                        "locationName": "ProductDescription",
                        "documentation": "\u003cp\u003eOne or more basic product descriptions.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsphr1StartTime",
                        "name": "_dsphr1StartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe start date and time of the Spot Price history data.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeSubnetsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsrSubnets",
                    "name": "_dsrSubnets",
                    "shape": "SubnetList",
                    "locationName": "subnetSet",
                    "documentation": "\u003cp\u003eInformation about one or more subnets.\u003c/p\u003e",
                    "typeExposed": "[Subnet]",
                    "type": "[Subnet]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dsrSubnets",
                    "name": "_dsrSubnets",
                    "shape": "SubnetList",
                    "locationName": "subnetSet",
                    "documentation": "\u003cp\u003eInformation about one or more subnets.\u003c/p\u003e",
                    "typeExposed": "[Subnet]",
                    "type": "[Subnet]"
                },
                "required": [],
                "name": "DescribeSubnetsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSubnets",
                        "name": "_dsrSubnets",
                        "shape": "SubnetList",
                        "locationName": "subnetSet",
                        "documentation": "\u003cp\u003eInformation about one or more subnets.\u003c/p\u003e",
                        "typeExposed": "[Subnet]",
                        "type": "[Subnet]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSubnets",
                        "name": "_dsrSubnets",
                        "shape": "SubnetList",
                        "locationName": "subnetSet",
                        "documentation": "\u003cp\u003eInformation about one or more subnets.\u003c/p\u003e",
                        "typeExposed": "[Subnet]",
                        "type": "[Subnet]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeSubnets",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeSubnets",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your subnets.\u003c/p\u003e \u003cp\u003eFor more information about subnets, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html\"\u003eYour VPC and Subnets\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "describeSubnets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dsrDryRun",
                    "name": "_dsrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeSubnets",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsrDryRun",
                        "name": "_dsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSubnetIds",
                        "name": "_dsrSubnetIds",
                        "shape": "SubnetIdStringList",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003eOne or more subnet IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your subnets.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrFilters",
                        "name": "_dsrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailabilityZone\u003c/code\u003e - The Availability Zone for the subnet. You can also use \u003ccode\u003eavailability-zone\u003c/code\u003e as the filter name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailable-ip-address-count\u003c/code\u003e - The number of IP addresses in the subnet that are available.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecidrBlock\u003c/code\u003e - The CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use \u003ccode\u003ecidr\u003c/code\u003e or \u003ccode\u003ecidr-block\u003c/code\u003e as the filter names.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edefaultForAz\u003c/code\u003e - Indicates whether this is the default subnet for the Availability Zone. You can also use \u003ccode\u003edefault-for-az\u003c/code\u003e as the filter name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the subnet (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the subnet.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dsrDryRun",
                        "name": "_dsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrFilters",
                        "name": "_dsrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailabilityZone\u003c/code\u003e - The Availability Zone for the subnet. You can also use \u003ccode\u003eavailability-zone\u003c/code\u003e as the filter name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailable-ip-address-count\u003c/code\u003e - The number of IP addresses in the subnet that are available.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecidrBlock\u003c/code\u003e - The CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use \u003ccode\u003ecidr\u003c/code\u003e or \u003ccode\u003ecidr-block\u003c/code\u003e as the filter names.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edefaultForAz\u003c/code\u003e - Indicates whether this is the default subnet for the Availability Zone. You can also use \u003ccode\u003edefault-for-az\u003c/code\u003e as the filter name.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the subnet (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esubnet-id\u003c/code\u003e - The ID of the subnet.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC for the subnet.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dsrSubnetIds",
                        "name": "_dsrSubnetIds",
                        "shape": "SubnetIdStringList",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003eOne or more subnet IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your subnets.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 13,
                "ctor": "describeTagsResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dtrTags",
                    "name": "_dtrTags",
                    "shape": "TagDescriptionList",
                    "locationName": "tagSet",
                    "documentation": "\u003cp\u003eA list of tags.\u003c/p\u003e",
                    "typeExposed": "[TagDescription]",
                    "type": "[TagDescription]"
                },
                "required": [],
                "name": "DescribeTagsResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtrTags",
                        "name": "_dtrTags",
                        "shape": "TagDescriptionList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eA list of tags.\u003c/p\u003e",
                        "typeExposed": "[TagDescription]",
                        "type": "[TagDescription]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtrNextToken",
                        "name": "_dtrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next set of items. If there are no additional items to return, the string is empty.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtrNextToken",
                        "name": "_dtrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token to use when requesting the next set of items. If there are no additional items to return, the string is empty.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtrTags",
                        "name": "_dtrTags",
                        "shape": "TagDescriptionList",
                        "locationName": "tagSet",
                        "documentation": "\u003cp\u003eA list of tags.\u003c/p\u003e",
                        "typeExposed": "[TagDescription]",
                        "type": "[TagDescription]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeTags",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeTags",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of the tags for your EC2 resources.\u003c/p\u003e \u003cp\u003eFor more information about tags, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html\"\u003eTagging Your Resources\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "describeTags",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dtr1DryRun",
                    "name": "_dtr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeTags",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1DryRun",
                        "name": "_dtr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr1Filters",
                        "name": "_dtr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey\u003c/code\u003e - The tag key.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eresource-id\u003c/code\u003e - The resource ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eresource-type\u003c/code\u003e - The resource type (\u003ccode\u003ecustomer-gateway\u003c/code\u003e | \u003ccode\u003edhcp-options\u003c/code\u003e | \u003ccode\u003eimage\u003c/code\u003e | \u003ccode\u003einstance\u003c/code\u003e | \u003ccode\u003einternet-gateway\u003c/code\u003e | \u003ccode\u003enetwork-acl\u003c/code\u003e | \u003ccode\u003enetwork-interface\u003c/code\u003e | \u003ccode\u003ereserved-instances\u003c/code\u003e | \u003ccode\u003eroute-table\u003c/code\u003e | \u003ccode\u003esecurity-group\u003c/code\u003e | \u003ccode\u003esnapshot\u003c/code\u003e | \u003ccode\u003espot-instances-request\u003c/code\u003e | \u003ccode\u003esubnet\u003c/code\u003e | \u003ccode\u003evolume\u003c/code\u003e | \u003ccode\u003evpc\u003c/code\u003e | \u003ccode\u003evpn-connection\u003c/code\u003e | \u003ccode\u003evpn-gateway\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalue\u003c/code\u003e - The tag value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1MaxResults",
                        "name": "_dtr1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1NextToken",
                        "name": "_dtr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next set of items to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1DryRun",
                        "name": "_dtr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dtr1Filters",
                        "name": "_dtr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ekey\u003c/code\u003e - The tag key.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eresource-id\u003c/code\u003e - The resource ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eresource-type\u003c/code\u003e - The resource type (\u003ccode\u003ecustomer-gateway\u003c/code\u003e | \u003ccode\u003edhcp-options\u003c/code\u003e | \u003ccode\u003eimage\u003c/code\u003e | \u003ccode\u003einstance\u003c/code\u003e | \u003ccode\u003einternet-gateway\u003c/code\u003e | \u003ccode\u003enetwork-acl\u003c/code\u003e | \u003ccode\u003enetwork-interface\u003c/code\u003e | \u003ccode\u003ereserved-instances\u003c/code\u003e | \u003ccode\u003eroute-table\u003c/code\u003e | \u003ccode\u003esecurity-group\u003c/code\u003e | \u003ccode\u003esnapshot\u003c/code\u003e | \u003ccode\u003espot-instances-request\u003c/code\u003e | \u003ccode\u003esubnet\u003c/code\u003e | \u003ccode\u003evolume\u003c/code\u003e | \u003ccode\u003evpc\u003c/code\u003e | \u003ccode\u003evpn-connection\u003c/code\u003e | \u003ccode\u003evpn-gateway\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evalue\u003c/code\u003e - The tag value.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1MaxResults",
                        "name": "_dtr1MaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of items to return for this call. The call also returns a token that you can specify in a subsequent call to get the next set of results. If the value is greater than 1000, we return only 1000 items.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dtr1NextToken",
                        "name": "_dtr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe token for the next set of items to return. (You received this token from a prior call.)\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "describeVolumeAttributeResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvarVolumeId",
                    "name": "_dvarVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DescribeVolumeAttributeResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarVolumeId",
                        "name": "_dvarVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarAutoEnableIO",
                        "name": "_dvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "autoEnableIO",
                        "documentation": "\u003cp\u003eThe state of \u003ccode\u003eautoEnableIO\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvarProductCodes",
                        "name": "_dvarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarAutoEnableIO",
                        "name": "_dvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "autoEnableIO",
                        "documentation": "\u003cp\u003eThe state of \u003ccode\u003eautoEnableIO\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvarProductCodes",
                        "name": "_dvarProductCodes",
                        "shape": "ProductCodeList",
                        "locationName": "productCodes",
                        "documentation": "\u003cp\u003eA list of product codes.\u003c/p\u003e",
                        "typeExposed": "[ProductCode]",
                        "type": "[ProductCode]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarVolumeId",
                        "name": "_dvarVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVolumeAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVolumeAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of the specified volume. You can specify only one attribute at a time.\u003c/p\u003e \u003cp\u003eFor more information about Amazon EBS volumes, see \u003ca href='http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html'\u003eAmazon EBS Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "describeVolumeAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvar1DryRun",
                    "name": "_dvar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvar1VolumeId",
                        "name": "_dvar1VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVolumeAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1DryRun",
                        "name": "_dvar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1Attribute",
                        "name": "_dvar1Attribute",
                        "shape": "VolumeAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe instance attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1Attribute",
                        "name": "_dvar1Attribute",
                        "shape": "VolumeAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe instance attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1DryRun",
                        "name": "_dvar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvar1VolumeId",
                        "name": "_dvar1VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "describeVolumeStatusResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvsr1VolumeStatuses",
                    "name": "_dvsr1VolumeStatuses",
                    "shape": "VolumeStatusList",
                    "locationName": "volumeStatusSet",
                    "documentation": "\u003cp\u003eA list of volumes.\u003c/p\u003e",
                    "typeExposed": "[VolumeStatusItem]",
                    "type": "[VolumeStatusItem]"
                },
                "required": [],
                "name": "DescribeVolumeStatusResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsr1VolumeStatuses",
                        "name": "_dvsr1VolumeStatuses",
                        "shape": "VolumeStatusList",
                        "locationName": "volumeStatusSet",
                        "documentation": "\u003cp\u003eA list of volumes.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusItem]",
                        "type": "[VolumeStatusItem]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsr1NextToken",
                        "name": "_dvsr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsr1NextToken",
                        "name": "_dvsr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsr1VolumeStatuses",
                        "name": "_dvsr1VolumeStatuses",
                        "shape": "VolumeStatusList",
                        "locationName": "volumeStatusSet",
                        "documentation": "\u003cp\u003eA list of volumes.\u003c/p\u003e",
                        "typeExposed": "[VolumeStatusItem]",
                        "type": "[VolumeStatusItem]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVolumeStatus",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVolumeStatus",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the status of the specified volumes. Volume status provides the result of the checks performed on your volumes to determine events that can impair the performance of your volumes. The performance of a volume can be affected if an issue occurs on the volume's underlying host. If the volume's underlying host experiences a power outage or system issue, after the system is restored, there could be data inconsistencies on the volume. Volume events notify you if this occurs. Volume actions notify you if any action needs to be taken in response to the event.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eDescribeVolumeStatus\u003c/code\u003e operation provides the following information about the specified volumes:\u003c/p\u003e \u003cp\u003e\u003ci\u003eStatus\u003c/i\u003e: Reflects the current status of the volume. The possible values are \u003ccode\u003eok\u003c/code\u003e, \u003ccode\u003eimpaired\u003c/code\u003e , \u003ccode\u003ewarning\u003c/code\u003e, or \u003ccode\u003einsufficient-data\u003c/code\u003e. If all checks pass, the overall status of the volume is \u003ccode\u003eok\u003c/code\u003e. If the check fails, the overall status is \u003ccode\u003eimpaired\u003c/code\u003e. If the status is \u003ccode\u003einsufficient-data\u003c/code\u003e, then the checks may still be taking place on your volume at the time. We recommend that you retry the request. For more information on volume status, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/monitoring-volume-status.html\"\u003eMonitoring the Status of Your Volumes\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e\u003ci\u003eEvents\u003c/i\u003e: Reflect the cause of a volume status and may require you to take action. For example, if your volume returns an \u003ccode\u003eimpaired\u003c/code\u003e status, then the volume event might be \u003ccode\u003epotential-data-inconsistency\u003c/code\u003e. This means that your volume has been affected by an issue with the underlying host, has all I/O operations disabled, and may have inconsistent data.\u003c/p\u003e \u003cp\u003e\u003ci\u003eActions\u003c/i\u003e: Reflect the actions you may have to take in response to an event. For example, if the status of the volume is \u003ccode\u003eimpaired\u003c/code\u003e and the volume event shows \u003ccode\u003epotential-data-inconsistency\u003c/code\u003e, then the action shows \u003ccode\u003eenable-volume-io\u003c/code\u003e. This means that you may want to enable the I/O operations for the volume by calling the \u003ca\u003eEnableVolumeIO\u003c/a\u003e action and then check the volume for data consistency.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "describeVolumeStatus",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvsrDryRun",
                    "name": "_dvsrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVolumeStatus",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrDryRun",
                        "name": "_dvsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsrVolumeIds",
                        "name": "_dvsrVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eOne or more volume IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your volumes.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsrFilters",
                        "name": "_dvsrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.code\u003c/code\u003e - The action code for the event (for example, \u003ccode\u003eenable-volume-io\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.description\u003c/code\u003e - A description of the action.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.event-id\u003c/code\u003e - The event ID associated with the action.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.description\u003c/code\u003e - A description of the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.event-id\u003c/code\u003e - The event ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.event-type\u003c/code\u003e - The event type (for \u003ccode\u003eio-enabled\u003c/code\u003e: \u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e; for \u003ccode\u003eio-performance\u003c/code\u003e: \u003ccode\u003eio-performance:degraded\u003c/code\u003e | \u003ccode\u003eio-performance:severely-degraded\u003c/code\u003e | \u003ccode\u003eio-performance:stalled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-after\u003c/code\u003e - The latest end time for the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-before\u003c/code\u003e - The earliest start time for the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.details-name\u003c/code\u003e - The cause for \u003ccode\u003evolume-status.status\u003c/code\u003e (\u003ccode\u003eio-enabled\u003c/code\u003e | \u003ccode\u003eio-performance\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.details-status\u003c/code\u003e - The status of \u003ccode\u003evolume-status.details-name\u003c/code\u003e (for \u003ccode\u003eio-enabled\u003c/code\u003e: \u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e; for \u003ccode\u003eio-performance\u003c/code\u003e: \u003ccode\u003enormal\u003c/code\u003e | \u003ccode\u003edegraded\u003c/code\u003e | \u003ccode\u003eseverely-degraded\u003c/code\u003e | \u003ccode\u003estalled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.status\u003c/code\u003e - The status of the volume (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003ewarning\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrNextToken",
                        "name": "_dvsrNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return using the pagination token returned by a previous call.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrMaxResults",
                        "name": "_dvsrMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "\u003cp\u003eThe maximum number of paginated volume items per response.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrDryRun",
                        "name": "_dvsrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsrFilters",
                        "name": "_dvsrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.code\u003c/code\u003e - The action code for the event (for example, \u003ccode\u003eenable-volume-io\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.description\u003c/code\u003e - A description of the action.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaction.event-id\u003c/code\u003e - The event ID associated with the action.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone of the instance.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.description\u003c/code\u003e - A description of the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.event-id\u003c/code\u003e - The event ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.event-type\u003c/code\u003e - The event type (for \u003ccode\u003eio-enabled\u003c/code\u003e: \u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e; for \u003ccode\u003eio-performance\u003c/code\u003e: \u003ccode\u003eio-performance:degraded\u003c/code\u003e | \u003ccode\u003eio-performance:severely-degraded\u003c/code\u003e | \u003ccode\u003eio-performance:stalled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-after\u003c/code\u003e - The latest end time for the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eevent.not-before\u003c/code\u003e - The earliest start time for the event.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.details-name\u003c/code\u003e - The cause for \u003ccode\u003evolume-status.status\u003c/code\u003e (\u003ccode\u003eio-enabled\u003c/code\u003e | \u003ccode\u003eio-performance\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.details-status\u003c/code\u003e - The status of \u003ccode\u003evolume-status.details-name\u003c/code\u003e (for \u003ccode\u003eio-enabled\u003c/code\u003e: \u003ccode\u003epassed\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e; for \u003ccode\u003eio-performance\u003c/code\u003e: \u003ccode\u003enormal\u003c/code\u003e | \u003ccode\u003edegraded\u003c/code\u003e | \u003ccode\u003eseverely-degraded\u003c/code\u003e | \u003ccode\u003estalled\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-status.status\u003c/code\u003e - The status of the volume (\u003ccode\u003eok\u003c/code\u003e | \u003ccode\u003eimpaired\u003c/code\u003e | \u003ccode\u003ewarning\u003c/code\u003e | \u003ccode\u003einsufficient-data\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrMaxResults",
                        "name": "_dvsrMaxResults",
                        "shape": "Integer",
                        "locationName": "MaxResults",
                        "documentation": "\u003cp\u003eThe maximum number of paginated volume items per response.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvsrNextToken",
                        "name": "_dvsrNextToken",
                        "shape": "String",
                        "locationName": "NextToken",
                        "documentation": "\u003cp\u003eThe next paginated set of results to return using the pagination token returned by a previous call.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvsrVolumeIds",
                        "name": "_dvsrVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eOne or more volume IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your volumes.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeVolumesResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvr1Volumes",
                    "name": "_dvr1Volumes",
                    "shape": "VolumeList",
                    "locationName": "volumeSet",
                    "documentation": null,
                    "typeExposed": "[Volume]",
                    "type": "[Volume]"
                },
                "required": [],
                "name": "DescribeVolumesResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1Volumes",
                        "name": "_dvr1Volumes",
                        "shape": "VolumeList",
                        "locationName": "volumeSet",
                        "documentation": null,
                        "typeExposed": "[Volume]",
                        "type": "[Volume]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr1NextToken",
                        "name": "_dvr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eNextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeVolumes\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeVolumes\u003c/code\u003e request exceed \u003ccode\u003eMaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr1NextToken",
                        "name": "_dvr1NextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eNextToken\u003c/code\u003e value to include in a future \u003ccode\u003eDescribeVolumes\u003c/code\u003e request. When the results of a \u003ccode\u003eDescribeVolumes\u003c/code\u003e request exceed \u003ccode\u003eMaxResults\u003c/code\u003e, this value can be used to retrieve the next page of results. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1Volumes",
                        "name": "_dvr1Volumes",
                        "shape": "VolumeList",
                        "locationName": "volumeSet",
                        "documentation": null,
                        "typeExposed": "[Volume]",
                        "type": "[Volume]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVolumes",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVolumes",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified Amazon EBS volumes.\u003c/p\u003e \u003cp\u003eIf you are describing a long list of volumes, you can paginate the output to make the list more manageable. The \u003ccode\u003eMaxResults\u003c/code\u003e parameter sets the maximum number of results returned in a single page. If the list of results exceeds your \u003ccode\u003eMaxResults\u003c/code\u003e value, then that number of results is returned along with a \u003ccode\u003eNextToken\u003c/code\u003e value that can be passed to a subsequent \u003ccode\u003eDescribeVolumes\u003c/code\u003e request to retrieve the remaining results.\u003c/p\u003e \u003cp\u003eFor more information about Amazon EBS volumes, see \u003ca href='http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumes.html'\u003eAmazon EBS Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeVolumes",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvrDryRun",
                    "name": "_dvrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVolumes",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrDryRun",
                        "name": "_dvrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrVolumeIds",
                        "name": "_dvrVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eOne or more volume IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrFilters",
                        "name": "_dvrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attach-time\u003c/code\u003e - The time stamp when the attachment initiated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.delete-on-termination\u003c/code\u003e - Whether the volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.device\u003c/code\u003e - The device name that is exposed to the instance (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-id\u003c/code\u003e - The ID of the instance the volume is attached to.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.status\u003c/code\u003e - The attachment state (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone in which the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-time\u003c/code\u003e - The time stamp when the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eencrypted\u003c/code\u003e - The encryption status of the volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esize\u003c/code\u003e - The size of the volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esnapshot-id\u003c/code\u003e - The snapshot from which the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the volume (\u003ccode\u003ecreating\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003ein-use\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e | \u003ccode\u003eerror\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-id\u003c/code\u003e - The volume ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-type\u003c/code\u003e - The Amazon EBS volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrNextToken",
                        "name": "_dvrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eNextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeVolumes\u003c/code\u003e request where \u003ccode\u003eMaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003eNextToken\u003c/code\u003e value. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrMaxResults",
                        "name": "_dvrMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of volume results returned by \u003ccode\u003eDescribeVolumes\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeVolumes\u003c/code\u003e only returns \u003ccode\u003eMaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003eNextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeVolumes\u003c/code\u003e request with the returned \u003ccode\u003eNextToken\u003c/code\u003e value. This value can be between 5 and 1000; if \u003ccode\u003eMaxResults\u003c/code\u003e is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then \u003ccode\u003eDescribeVolumes\u003c/code\u003e returns all results.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrDryRun",
                        "name": "_dvrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrFilters",
                        "name": "_dvrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.attach-time\u003c/code\u003e - The time stamp when the attachment initiated.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.delete-on-termination\u003c/code\u003e - Whether the volume is deleted on instance termination.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.device\u003c/code\u003e - The device name that is exposed to the instance (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.instance-id\u003c/code\u003e - The ID of the instance the volume is attached to.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.status\u003c/code\u003e - The attachment state (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone in which the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecreate-time\u003c/code\u003e - The time stamp when the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eencrypted\u003c/code\u003e - The encryption status of the volume.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esize\u003c/code\u003e - The size of the volume, in GiB.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003esnapshot-id\u003c/code\u003e - The snapshot from which the volume was created.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus\u003c/code\u003e - The status of the volume (\u003ccode\u003ecreating\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003ein-use\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e | \u003ccode\u003eerror\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-id\u003c/code\u003e - The volume ID.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evolume-type\u003c/code\u003e - The Amazon EBS volume type. This can be \u003ccode\u003egp2\u003c/code\u003e for General Purpose (SSD) volumes, \u003ccode\u003eio1\u003c/code\u003e for Provisioned IOPS (SSD) volumes, or \u003ccode\u003estandard\u003c/code\u003e for Magnetic volumes.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrMaxResults",
                        "name": "_dvrMaxResults",
                        "shape": "Integer",
                        "locationName": "maxResults",
                        "documentation": "\u003cp\u003eThe maximum number of volume results returned by \u003ccode\u003eDescribeVolumes\u003c/code\u003e in paginated output. When this parameter is used, \u003ccode\u003eDescribeVolumes\u003c/code\u003e only returns \u003ccode\u003eMaxResults\u003c/code\u003e results in a single page along with a \u003ccode\u003eNextToken\u003c/code\u003e response element. The remaining results of the initial request can be seen by sending another \u003ccode\u003eDescribeVolumes\u003c/code\u003e request with the returned \u003ccode\u003eNextToken\u003c/code\u003e value. This value can be between 5 and 1000; if \u003ccode\u003eMaxResults\u003c/code\u003e is given a value larger than 1000, only 1000 results are returned. If this parameter is not used, then \u003ccode\u003eDescribeVolumes\u003c/code\u003e returns all results.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvrNextToken",
                        "name": "_dvrNextToken",
                        "shape": "String",
                        "locationName": "nextToken",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eNextToken\u003c/code\u003e value returned from a previous paginated \u003ccode\u003eDescribeVolumes\u003c/code\u003e request where \u003ccode\u003eMaxResults\u003c/code\u003e was used and the results exceeded the value of that parameter. Pagination continues from the end of the previous results that returned the \u003ccode\u003eNextToken\u003c/code\u003e value. This value is \u003ccode\u003enull\u003c/code\u003e when there are no more results to return.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrVolumeIds",
                        "name": "_dvrVolumeIds",
                        "shape": "VolumeIdStringList",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eOne or more volume IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "describeVpcAttributeResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvar1VpcId",
                    "name": "_dvar1VpcId",
                    "shape": "String",
                    "locationName": "vpcId",
                    "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "DescribeVpcAttributeResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1VpcId",
                        "name": "_dvar1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1EnableDnsSupport",
                        "name": "_dvar1EnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsSupport",
                        "documentation": "\u003cp\u003eIndicates whether DNS resolution is enabled for the VPC. If this attribute is \u003ccode\u003etrue\u003c/code\u003e, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1EnableDnsHostnames",
                        "name": "_dvar1EnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsHostnames",
                        "documentation": "\u003cp\u003eIndicates whether the instances launched in the VPC get DNS hostnames. If this attribute is \u003ccode\u003etrue\u003c/code\u003e, instances in the VPC get DNS hostnames; otherwise, they do not.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1EnableDnsHostnames",
                        "name": "_dvar1EnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsHostnames",
                        "documentation": "\u003cp\u003eIndicates whether the instances launched in the VPC get DNS hostnames. If this attribute is \u003ccode\u003etrue\u003c/code\u003e, instances in the VPC get DNS hostnames; otherwise, they do not.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1EnableDnsSupport",
                        "name": "_dvar1EnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "enableDnsSupport",
                        "documentation": "\u003cp\u003eIndicates whether DNS resolution is enabled for the VPC. If this attribute is \u003ccode\u003etrue\u003c/code\u003e, the Amazon DNS server resolves DNS hostnames for your instances to their corresponding IP addresses; otherwise, it does not.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvar1VpcId",
                        "name": "_dvar1VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVpcAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVpcAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the specified attribute of the specified VPC. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "describeVpcAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvarDryRun",
                    "name": "_dvarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvarVpcId",
                        "name": "_dvarVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVpcAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarDryRun",
                        "name": "_dvarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarAttribute",
                        "name": "_dvarAttribute",
                        "shape": "VpcAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe VPC attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarAttribute",
                        "name": "_dvarAttribute",
                        "shape": "VpcAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe VPC attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvarDryRun",
                        "name": "_dvarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvarVpcId",
                        "name": "_dvarVpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeVpcPeeringConnectionsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvpcrVpcPeeringConnections",
                    "name": "_dvpcrVpcPeeringConnections",
                    "shape": "VpcPeeringConnectionList",
                    "locationName": "vpcPeeringConnectionSet",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connections.\u003c/p\u003e",
                    "typeExposed": "[VpcPeeringConnection]",
                    "type": "[VpcPeeringConnection]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvpcrVpcPeeringConnections",
                    "name": "_dvpcrVpcPeeringConnections",
                    "shape": "VpcPeeringConnectionList",
                    "locationName": "vpcPeeringConnectionSet",
                    "documentation": "\u003cp\u003eInformation about the VPC peering connections.\u003c/p\u003e",
                    "typeExposed": "[VpcPeeringConnection]",
                    "type": "[VpcPeeringConnection]"
                },
                "required": [],
                "name": "DescribeVpcPeeringConnectionsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnections",
                        "name": "_dvpcrVpcPeeringConnections",
                        "shape": "VpcPeeringConnectionList",
                        "locationName": "vpcPeeringConnectionSet",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connections.\u003c/p\u003e",
                        "typeExposed": "[VpcPeeringConnection]",
                        "type": "[VpcPeeringConnection]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnections",
                        "name": "_dvpcrVpcPeeringConnections",
                        "shape": "VpcPeeringConnectionList",
                        "locationName": "vpcPeeringConnectionSet",
                        "documentation": "\u003cp\u003eInformation about the VPC peering connections.\u003c/p\u003e",
                        "typeExposed": "[VpcPeeringConnection]",
                        "type": "[VpcPeeringConnection]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVpcPeeringConnections",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVpcPeeringConnections",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your VPC peering connections.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 29,
                "ctor": "describeVpcPeeringConnections",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvpcrDryRun",
                    "name": "_dvpcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVpcPeeringConnections",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcrDryRun",
                        "name": "_dvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnectionIds",
                        "name": "_dvpcrVpcPeeringConnectionIds",
                        "shape": "ValueStringList",
                        "locationName": "VpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eOne or more VPC peering connection IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your VPC peering connections.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrFilters",
                        "name": "_dvpcrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.cidr-block\u003c/code\u003e - The CIDR block of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.owner-id\u003c/code\u003e - The AWS account ID of the owner of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.vpc-id\u003c/code\u003e - The ID of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eexpiration-time\u003c/code\u003e - The expiration date and time for the VPC peering connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.cidr-block\u003c/code\u003e - The CIDR block of the requester's VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.owner-id\u003c/code\u003e - The AWS account ID of the owner of the requester VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.vpc-id\u003c/code\u003e - The ID of the requester VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-code\u003c/code\u003e - The status of the VPC peering connection (\u003ccode\u003epending-acceptance\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003eexpired\u003c/code\u003e | \u003ccode\u003eprovisioning\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e | \u003ccode\u003erejected\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - A message that provides more information about the status of the VPC peering connection, if applicable.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-peering-connection-id\u003c/code\u003e - The ID of the VPC peering connection.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvpcrDryRun",
                        "name": "_dvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrFilters",
                        "name": "_dvpcrFilters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.cidr-block\u003c/code\u003e - The CIDR block of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.owner-id\u003c/code\u003e - The AWS account ID of the owner of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eaccepter-vpc-info.vpc-id\u003c/code\u003e - The ID of the peer VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eexpiration-time\u003c/code\u003e - The expiration date and time for the VPC peering connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.cidr-block\u003c/code\u003e - The CIDR block of the requester's VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.owner-id\u003c/code\u003e - The AWS account ID of the owner of the requester VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003erequester-vpc-info.vpc-id\u003c/code\u003e - The ID of the requester VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-code\u003c/code\u003e - The status of the VPC peering connection (\u003ccode\u003epending-acceptance\u003c/code\u003e | \u003ccode\u003efailed\u003c/code\u003e | \u003ccode\u003eexpired\u003c/code\u003e | \u003ccode\u003eprovisioning\u003c/code\u003e | \u003ccode\u003eactive\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e | \u003ccode\u003erejected\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estatus-message\u003c/code\u003e - A message that provides more information about the status of the VPC peering connection, if applicable.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-peering-connection-id\u003c/code\u003e - The ID of the VPC peering connection.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvpcrVpcPeeringConnectionIds",
                        "name": "_dvpcrVpcPeeringConnectionIds",
                        "shape": "ValueStringList",
                        "locationName": "VpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eOne or more VPC peering connection IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your VPC peering connections.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeVpcsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvrVpcs",
                    "name": "_dvrVpcs",
                    "shape": "VpcList",
                    "locationName": "vpcSet",
                    "documentation": "\u003cp\u003eInformation about one or more VPCs.\u003c/p\u003e",
                    "typeExposed": "[Vpc]",
                    "type": "[Vpc]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvrVpcs",
                    "name": "_dvrVpcs",
                    "shape": "VpcList",
                    "locationName": "vpcSet",
                    "documentation": "\u003cp\u003eInformation about one or more VPCs.\u003c/p\u003e",
                    "typeExposed": "[Vpc]",
                    "type": "[Vpc]"
                },
                "required": [],
                "name": "DescribeVpcsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrVpcs",
                        "name": "_dvrVpcs",
                        "shape": "VpcList",
                        "locationName": "vpcSet",
                        "documentation": "\u003cp\u003eInformation about one or more VPCs.\u003c/p\u003e",
                        "typeExposed": "[Vpc]",
                        "type": "[Vpc]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvrVpcs",
                        "name": "_dvrVpcs",
                        "shape": "VpcList",
                        "locationName": "vpcSet",
                        "documentation": "\u003cp\u003eInformation about one or more VPCs.\u003c/p\u003e",
                        "typeExposed": "[Vpc]",
                        "type": "[Vpc]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVpcs",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVpcs",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your VPCs.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 12,
                "ctor": "describeVpcs",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvr1DryRun",
                    "name": "_dvr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVpcs",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr1DryRun",
                        "name": "_dvr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1VpcIds",
                        "name": "_dvr1VpcIds",
                        "shape": "VpcIdStringList",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eOne or more VPC IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your VPCs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1Filters",
                        "name": "_dvr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecidr\u003c/code\u003e - The CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, \u003ccode\u003e/28\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edhcp-options-id\u003c/code\u003e - The ID of a set of DHCP options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eisDefault\u003c/code\u003e - Indicates whether the VPC is the default VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the VPC (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr1DryRun",
                        "name": "_dvr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1Filters",
                        "name": "_dvr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecidr\u003c/code\u003e - The CIDR block of the VPC. The CIDR block you specify must exactly match the VPC's CIDR block for information to be returned for the VPC. Must contain the slash followed by one or two digits (for example, \u003ccode\u003e/28\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003edhcp-options-id\u003c/code\u003e - The ID of a set of DHCP options.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eisDefault\u003c/code\u003e - Indicates whether the VPC is the default VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the VPC (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpc-id\u003c/code\u003e - The ID of the VPC.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvr1VpcIds",
                        "name": "_dvr1VpcIds",
                        "shape": "VpcIdStringList",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eOne or more VPC IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your VPCs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeVpnConnectionsResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvcrVpnConnections",
                    "name": "_dvcrVpnConnections",
                    "shape": "VpnConnectionList",
                    "locationName": "vpnConnectionSet",
                    "documentation": "\u003cp\u003eInformation about one or more VPN connections.\u003c/p\u003e",
                    "typeExposed": "[VpnConnection]",
                    "type": "[VpnConnection]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvcrVpnConnections",
                    "name": "_dvcrVpnConnections",
                    "shape": "VpnConnectionList",
                    "locationName": "vpnConnectionSet",
                    "documentation": "\u003cp\u003eInformation about one or more VPN connections.\u003c/p\u003e",
                    "typeExposed": "[VpnConnection]",
                    "type": "[VpnConnection]"
                },
                "required": [],
                "name": "DescribeVpnConnectionsResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcrVpnConnections",
                        "name": "_dvcrVpnConnections",
                        "shape": "VpnConnectionList",
                        "locationName": "vpnConnectionSet",
                        "documentation": "\u003cp\u003eInformation about one or more VPN connections.\u003c/p\u003e",
                        "typeExposed": "[VpnConnection]",
                        "type": "[VpnConnection]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcrVpnConnections",
                        "name": "_dvcrVpnConnections",
                        "shape": "VpnConnectionList",
                        "locationName": "vpnConnectionSet",
                        "documentation": "\u003cp\u003eInformation about one or more VPN connections.\u003c/p\u003e",
                        "typeExposed": "[VpnConnection]",
                        "type": "[VpnConnection]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVpnConnections",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVpnConnections",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your VPN connections.\u003c/p\u003e \u003cp\u003eFor more information about VPN connections, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding a Hardware Virtual Private Gateway to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "describeVpnConnections",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvcr1DryRun",
                    "name": "_dvcr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVpnConnections",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvcr1DryRun",
                        "name": "_dvcr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcr1VpnConnectionIds",
                        "name": "_dvcr1VpnConnectionIds",
                        "shape": "VpnConnectionIdStringList",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eOne or more VPN connection IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes your VPN connections.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcr1Filters",
                        "name": "_dvcr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-configuration\u003c/code\u003e - The configuration information for the customer gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-id\u003c/code\u003e - The ID of a customer gateway associated with the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the VPN connection (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eoption.static-routes-only\u003c/code\u003e - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.destination-cidr-block\u003c/code\u003e - The destination CIDR block. This corresponds to the subnet used in a customer data center.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebgp-asn\u003c/code\u003e - The BGP Autonomous System Number (ASN) associated with a BGP device.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of VPN connection. Currently the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-connection-id\u003c/code\u003e - The ID of the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-gateway-id\u003c/code\u003e - The ID of a virtual private gateway associated with the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvcr1DryRun",
                        "name": "_dvcr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcr1Filters",
                        "name": "_dvcr1Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-configuration\u003c/code\u003e - The configuration information for the customer gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ecustomer-gateway-id\u003c/code\u003e - The ID of a customer gateway associated with the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the VPN connection (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eoption.static-routes-only\u003c/code\u003e - Indicates whether the connection has static routes only. Used for devices that do not support Border Gateway Protocol (BGP).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eroute.destination-cidr-block\u003c/code\u003e - The destination CIDR block. This corresponds to the subnet used in a customer data center.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003ebgp-asn\u003c/code\u003e - The BGP Autonomous System Number (ASN) associated with a BGP device.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of VPN connection. Currently the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-connection-id\u003c/code\u003e - The ID of the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-gateway-id\u003c/code\u003e - The ID of a virtual private gateway associated with the VPN connection.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvcr1VpnConnectionIds",
                        "name": "_dvcr1VpnConnectionIds",
                        "shape": "VpnConnectionIdStringList",
                        "locationName": "VpnConnectionId",
                        "documentation": "\u003cp\u003eOne or more VPN connection IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes your VPN connections.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "describeVpnGatewaysResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvgrVpnGateways",
                    "name": "_dvgrVpnGateways",
                    "shape": "VpnGatewayList",
                    "locationName": "vpnGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more virtual private gateways.\u003c/p\u003e",
                    "typeExposed": "[VpnGateway]",
                    "type": "[VpnGateway]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "dvgrVpnGateways",
                    "name": "_dvgrVpnGateways",
                    "shape": "VpnGatewayList",
                    "locationName": "vpnGatewaySet",
                    "documentation": "\u003cp\u003eInformation about one or more virtual private gateways.\u003c/p\u003e",
                    "typeExposed": "[VpnGateway]",
                    "type": "[VpnGateway]"
                },
                "required": [],
                "name": "DescribeVpnGatewaysResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgrVpnGateways",
                        "name": "_dvgrVpnGateways",
                        "shape": "VpnGatewayList",
                        "locationName": "vpnGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more virtual private gateways.\u003c/p\u003e",
                        "typeExposed": "[VpnGateway]",
                        "type": "[VpnGateway]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgrVpnGateways",
                        "name": "_dvgrVpnGateways",
                        "shape": "VpnGatewayList",
                        "locationName": "vpnGatewaySet",
                        "documentation": "\u003cp\u003eInformation about one or more virtual private gateways.\u003c/p\u003e",
                        "typeExposed": "[VpnGateway]",
                        "type": "[VpnGateway]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DescribeVpnGateways",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DescribeVpnGateways",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes one or more of your virtual private gateways.\u003c/p\u003e \u003cp\u003eFor more information about virtual private gateways, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_VPN.html\"\u003eAdding an IPsec Hardware VPN to Your VPC\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "describeVpnGateways",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvgr2DryRun",
                    "name": "_dvgr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DescribeVpnGateways",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgr2DryRun",
                        "name": "_dvgr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgr2VpnGatewayIds",
                        "name": "_dvgr2VpnGatewayIds",
                        "shape": "VpnGatewayIdStringList",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eOne or more virtual private gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your virtual private gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgr2Filters",
                        "name": "_dvgr2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.state\u003c/code\u003e - The current state of the attachment between the gateway and the VPC (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.vpc-id\u003c/code\u003e - The ID of an attached VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone for the virtual private gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the virtual private gateway (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of virtual private gateway. Currently the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-gateway-id\u003c/code\u003e - The ID of the virtual private gateway.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgr2DryRun",
                        "name": "_dvgr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgr2Filters",
                        "name": "_dvgr2Filters",
                        "shape": "FilterList",
                        "locationName": "Filter",
                        "documentation": "\u003cp\u003eOne or more filters.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.state\u003c/code\u003e - The current state of the attachment between the gateway and the VPC (\u003ccode\u003eattaching\u003c/code\u003e | \u003ccode\u003eattached\u003c/code\u003e | \u003ccode\u003edetaching\u003c/code\u003e | \u003ccode\u003edetached\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eattachment.vpc-id\u003c/code\u003e - The ID of an attached VPC.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003eavailability-zone\u003c/code\u003e - The Availability Zone for the virtual private gateway.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003estate\u003c/code\u003e - The state of the virtual private gateway (\u003ccode\u003epending\u003c/code\u003e | \u003ccode\u003eavailable\u003c/code\u003e | \u003ccode\u003edeleting\u003c/code\u003e | \u003ccode\u003edeleted\u003c/code\u003e).\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e - The key/value combination of a tag assigned to the resource.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-key\u003c/code\u003e - The key of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-value\u003c/code\u003e filter. For example, if you use both the filter \"tag-key=Purpose\" and the filter \"tag-value=X\", you get any resources assigned both the tag key Purpose (regardless of what the tag's value is), and the tag value X (regardless of what the tag's key is). If you want to list only resources where Purpose is X, see the \u003ccode\u003etag\u003c/code\u003e:\u003ci\u003ekey\u003c/i\u003e=\u003ci\u003evalue\u003c/i\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etag-value\u003c/code\u003e - The value of a tag assigned to the resource. This filter is independent of the \u003ccode\u003etag-key\u003c/code\u003e filter.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003etype\u003c/code\u003e - The type of virtual private gateway. Currently the only supported type is \u003ccode\u003eipsec.1\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003ccode\u003evpn-gateway-id\u003c/code\u003e - The ID of the virtual private gateway.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Filter]",
                        "type": "[Filter]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "dvgr2VpnGatewayIds",
                        "name": "_dvgr2VpnGatewayIds",
                        "shape": "VpnGatewayIdStringList",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eOne or more virtual private gateway IDs.\u003c/p\u003e \u003cp\u003eDefault: Describes all your virtual private gateways.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "detachInternetGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "DetachInternetGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DetachInternetGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DetachInternetGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDetaches an Internet gateway from a VPC, disabling connectivity between the Internet and the VPC. The VPC must not contain any running instances with Elastic IP addresses.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "detachInternetGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "digr2DryRun",
                    "name": "_digr2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr2InternetGatewayId",
                        "name": "_digr2InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr2VpcId",
                        "name": "_digr2VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DetachInternetGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digr2DryRun",
                        "name": "_digr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "digr2DryRun",
                        "name": "_digr2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr2InternetGatewayId",
                        "name": "_digr2InternetGatewayId",
                        "shape": "String",
                        "locationName": "internetGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the Internet gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "digr2VpcId",
                        "name": "_digr2VpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "detachNetworkInterfaceResponse",
                "wrapper": false,
                "required": [],
                "name": "DetachNetworkInterfaceResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DetachNetworkInterface",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DetachNetworkInterface",
            "method": "post",
            "documentation": "\u003cp\u003eDetaches a network interface from an instance.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "detachNetworkInterface",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dnir2DryRun",
                    "name": "_dnir2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnir2AttachmentId",
                        "name": "_dnir2AttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the attachment.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DetachNetworkInterface",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir2DryRun",
                        "name": "_dnir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir2Force",
                        "name": "_dnir2Force",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "\u003cp\u003eSpecifies whether to force a detachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dnir2AttachmentId",
                        "name": "_dnir2AttachmentId",
                        "shape": "String",
                        "locationName": "attachmentId",
                        "documentation": "\u003cp\u003eThe ID of the attachment.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir2DryRun",
                        "name": "_dnir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dnir2Force",
                        "name": "_dnir2Force",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "\u003cp\u003eSpecifies whether to force a detachment.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 22,
                "ctor": "volumeAttachment",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "vaVolumeId",
                    "name": "_vaVolumeId",
                    "shape": "String",
                    "locationName": "volumeId",
                    "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "VolumeAttachment",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaVolumeId",
                        "name": "_vaVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaInstanceId",
                        "name": "_vaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaDevice",
                        "name": "_vaDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "\u003cp\u003eThe device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaState",
                        "name": "_vaState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaAttachTime",
                        "name": "_vaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaDeleteOnTermination",
                        "name": "_vaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaAttachTime",
                        "name": "_vaAttachTime",
                        "shape": "DateTime",
                        "locationName": "attachTime",
                        "documentation": "\u003cp\u003eThe time stamp when the attachment initiated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaDeleteOnTermination",
                        "name": "_vaDeleteOnTermination",
                        "shape": "Boolean",
                        "locationName": "deleteOnTermination",
                        "documentation": "\u003cp\u003eIndicates whether the Amazon EBS volume is deleted on instance termination.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaDevice",
                        "name": "_vaDevice",
                        "shape": "String",
                        "locationName": "device",
                        "documentation": "\u003cp\u003eThe device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaInstanceId",
                        "name": "_vaInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaState",
                        "name": "_vaState",
                        "shape": "VolumeAttachmentState",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe attachment state of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vaVolumeId",
                        "name": "_vaVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.DetachVolume",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DetachVolume",
            "method": "post",
            "documentation": "\u003cp\u003eDetaches an Amazon EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so results in the volume being stuck in a busy state while detaching.\u003c/p\u003e \u003cp\u003eIf an Amazon EBS volume is the root device of an instance, it can't be detached while the instance is running. To detach the root volume, stop the instance first.\u003c/p\u003e \u003cp\u003eIf the root volume is detached from an instance with an AWS Marketplace product code, then the AWS Marketplace product codes from that volume are no longer associated with the instance.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html\"\u003eDetaching an Amazon EBS Volume\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "detachVolume",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvr4DryRun",
                    "name": "_dvr4DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr4VolumeId",
                        "name": "_dvr4VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DetachVolume",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4DryRun",
                        "name": "_dvr4DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4InstanceId",
                        "name": "_dvr4InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4Device",
                        "name": "_dvr4Device",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "\u003cp\u003eThe device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4Force",
                        "name": "_dvr4Force",
                        "shape": "Boolean",
                        "locationName": "Force",
                        "documentation": "\u003cp\u003eForces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4Device",
                        "name": "_dvr4Device",
                        "shape": "String",
                        "locationName": "Device",
                        "documentation": "\u003cp\u003eThe device name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4DryRun",
                        "name": "_dvr4DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4Force",
                        "name": "_dvr4Force",
                        "shape": "Boolean",
                        "locationName": "Force",
                        "documentation": "\u003cp\u003eForces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvr4InstanceId",
                        "name": "_dvr4InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvr4VolumeId",
                        "name": "_dvr4VolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "detachVpnGatewayResponse",
                "wrapper": false,
                "required": [],
                "name": "DetachVpnGatewayResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DetachVpnGateway",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DetachVpnGateway",
            "method": "post",
            "documentation": "\u003cp\u003eDetaches a virtual private gateway from a VPC. You do this if you're planning to turn off the VPC and not use it anymore. You can confirm a virtual private gateway has been completely detached from a VPC by describing the virtual private gateway (any attachments to the virtual private gateway are also described).\u003c/p\u003e \u003cp\u003eYou must wait for the attachment's state to switch to \u003ccode\u003edetached\u003c/code\u003e before you can delete the VPC or attach a different VPC to the virtual private gateway.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "detachVpnGateway",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dvgr1DryRun",
                    "name": "_dvgr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgr1VpnGatewayId",
                        "name": "_dvgr1VpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgr1VpcId",
                        "name": "_dvgr1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DetachVpnGateway",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgr1DryRun",
                        "name": "_dvgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dvgr1DryRun",
                        "name": "_dvgr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgr1VpcId",
                        "name": "_dvgr1VpcId",
                        "shape": "String",
                        "locationName": "VpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvgr1VpnGatewayId",
                        "name": "_dvgr1VpnGatewayId",
                        "shape": "String",
                        "locationName": "VpnGatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "disableVgwRoutePropagationResponse",
                "wrapper": false,
                "required": [],
                "name": "DisableVgwRoutePropagationResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DisableVgwRoutePropagation",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DisableVgwRoutePropagation",
            "method": "post",
            "documentation": "\u003cp\u003eDisables a virtual private gateway (VGW) from propagating routes to a specified route table of a VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "disableVgwRoutePropagation",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvrprRouteTableId",
                    "name": "_dvrprRouteTableId",
                    "shape": "String",
                    "locationName": "RouteTableId",
                    "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvrprRouteTableId",
                        "name": "_dvrprRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvrprGatewayId",
                        "name": "_dvrprGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DisableVgwRoutePropagation",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvrprGatewayId",
                        "name": "_dvrprGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvrprRouteTableId",
                        "name": "_dvrprRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "disassociateAddressResponse",
                "wrapper": false,
                "required": [],
                "name": "DisassociateAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DisassociateAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DisassociateAddress",
            "method": "post",
            "documentation": "\u003cp\u003eDisassociates an Elastic IP address from the instance or network interface it's associated with.\u003c/p\u003e \u003cp\u003eAn Elastic IP address is for use in either the EC2-Classic platform or in a VPC. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/elastic-ip-addresses-eip.html\"\u003eElastic IP Addresses\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eThis is an idempotent operation. If you perform the operation more than once, Amazon EC2 doesn't return an error.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "disassociateAddress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "dar1DryRun",
                    "name": "_dar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "DisassociateAddress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1DryRun",
                        "name": "_dar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1PublicIp",
                        "name": "_dar1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] The Elastic IP address. Required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1AssociationId",
                        "name": "_dar1AssociationId",
                        "shape": "String",
                        "locationName": "AssociationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The association ID. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1AssociationId",
                        "name": "_dar1AssociationId",
                        "shape": "String",
                        "locationName": "AssociationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The association ID. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1DryRun",
                        "name": "_dar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dar1PublicIp",
                        "name": "_dar1PublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] The Elastic IP address. Required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "disassociateRouteTableResponse",
                "wrapper": false,
                "required": [],
                "name": "DisassociateRouteTableResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.DisassociateRouteTable",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "DisassociateRouteTable",
            "method": "post",
            "documentation": "\u003cp\u003eDisassociates a subnet from a route table.\u003c/p\u003e \u003cp\u003eAfter you perform this action, the subnet no longer uses the routes in the route table. Instead, it uses the routes in the VPC's main route table. For more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "disassociateRouteTable",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "drtrDryRun",
                    "name": "_drtrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drtrAssociationId",
                        "name": "_drtrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID representing the current association between the route table and subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "DisassociateRouteTable",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtrDryRun",
                        "name": "_drtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drtrAssociationId",
                        "name": "_drtrAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID representing the current association between the route table and subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "drtrDryRun",
                        "name": "_drtrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "enableVgwRoutePropagationResponse",
                "wrapper": false,
                "required": [],
                "name": "EnableVgwRoutePropagationResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.EnableVgwRoutePropagation",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "EnableVgwRoutePropagation",
            "method": "post",
            "documentation": "\u003cp\u003eEnables a virtual private gateway (VGW) to propagate routes to the specified route table of a VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "enableVgwRoutePropagation",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "evrprRouteTableId",
                    "name": "_evrprRouteTableId",
                    "shape": "String",
                    "locationName": "RouteTableId",
                    "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "evrprRouteTableId",
                        "name": "_evrprRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "evrprGatewayId",
                        "name": "_evrprGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "EnableVgwRoutePropagation",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "evrprGatewayId",
                        "name": "_evrprGatewayId",
                        "shape": "String",
                        "locationName": "GatewayId",
                        "documentation": "\u003cp\u003eThe ID of the virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "evrprRouteTableId",
                        "name": "_evrprRouteTableId",
                        "shape": "String",
                        "locationName": "RouteTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "enableVolumeIOResponse",
                "wrapper": false,
                "required": [],
                "name": "EnableVolumeIOResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.EnableVolumeIO",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "EnableVolumeIO",
            "method": "post",
            "documentation": "\u003cp\u003eEnables I/O operations for a volume that had I/O operations disabled because the data on the volume was potentially inconsistent.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "enableVolumeIO",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "eviorDryRun",
                    "name": "_eviorDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eviorVolumeId",
                        "name": "_eviorVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "EnableVolumeIO",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eviorDryRun",
                        "name": "_eviorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "eviorDryRun",
                        "name": "_eviorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "eviorVolumeId",
                        "name": "_eviorVolumeId",
                        "shape": "String",
                        "locationName": "volumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "getConsoleOutputResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gcorInstanceId",
                    "name": "_gcorInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetConsoleOutputResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorInstanceId",
                        "name": "_gcorInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorTimestamp",
                        "name": "_gcorTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe time the output was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorOutput",
                        "name": "_gcorOutput",
                        "shape": "String",
                        "locationName": "output",
                        "documentation": "\u003cp\u003eThe console output, Base64 encoded.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorInstanceId",
                        "name": "_gcorInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorOutput",
                        "name": "_gcorOutput",
                        "shape": "String",
                        "locationName": "output",
                        "documentation": "\u003cp\u003eThe console output, Base64 encoded.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcorTimestamp",
                        "name": "_gcorTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe time the output was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.GetConsoleOutput",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "GetConsoleOutput",
            "method": "post",
            "documentation": "\u003cp\u003eGets the console output for the specified instance.\u003c/p\u003e \u003cp\u003eInstances do not have a physical monitor through which you can view their console output. They also lack physical controls that allow you to power up, reboot, or shut them down. To allow these actions, we provide them through the Amazon EC2 API and command line interface.\u003c/p\u003e \u003cp\u003eInstance console output is buffered and posted shortly after instance boot, reboot, and termination. Amazon EC2 preserves the most recent 64 KB output which is available for at least one hour after the most recent post.\u003c/p\u003e \u003cp\u003eFor Linux/Unix instances, the instance console output displays the exact console output that would normally be displayed on a physical monitor attached to a machine. This output is buffered because the instance produces it and then posts it to a store where the instance's owner can retrieve it.\u003c/p\u003e \u003cp\u003eFor Windows instances, the instance console output displays the last three system event log errors.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "getConsoleOutput",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gcor1DryRun",
                    "name": "_gcor1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcor1InstanceId",
                        "name": "_gcor1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetConsoleOutput",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcor1DryRun",
                        "name": "_gcor1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcor1DryRun",
                        "name": "_gcor1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gcor1InstanceId",
                        "name": "_gcor1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "getPasswordDataResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gpdrInstanceId",
                    "name": "_gpdrInstanceId",
                    "shape": "String",
                    "locationName": "instanceId",
                    "documentation": "\u003cp\u003eThe ID of the Windows instance.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "GetPasswordDataResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrInstanceId",
                        "name": "_gpdrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the Windows instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrTimestamp",
                        "name": "_gpdrTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe time the data was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrPasswordData",
                        "name": "_gpdrPasswordData",
                        "shape": "String",
                        "locationName": "passwordData",
                        "documentation": "\u003cp\u003eThe password of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrInstanceId",
                        "name": "_gpdrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the Windows instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrPasswordData",
                        "name": "_gpdrPasswordData",
                        "shape": "String",
                        "locationName": "passwordData",
                        "documentation": "\u003cp\u003eThe password of the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdrTimestamp",
                        "name": "_gpdrTimestamp",
                        "shape": "DateTime",
                        "locationName": "timestamp",
                        "documentation": "\u003cp\u003eThe time the data was last updated.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.GetPasswordData",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "GetPasswordData",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves the encrypted administrator password for an instance running Windows.\u003c/p\u003e \u003cp\u003eThe Windows password is generated at boot if the \u003ccode\u003eEC2Config\u003c/code\u003e service plugin, \u003ccode\u003eEc2SetPassword\u003c/code\u003e, is enabled. This usually only happens the first time an AMI is launched, and then \u003ccode\u003eEc2SetPassword\u003c/code\u003e is automatically disabled. The password is not generated for rebundled AMIs unless \u003ccode\u003eEc2SetPassword\u003c/code\u003e is enabled before bundling.\u003c/p\u003e \u003cp\u003eThe password is encrypted using the key pair that you specified when you launched the instance. You must provide the corresponding key pair file.\u003c/p\u003e \u003cp\u003ePassword generation and encryption takes a few moments. We recommend that you wait up to 15 minutes after launching an instance before trying to retrieve the generated password.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "getPasswordData",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "gpdr1DryRun",
                    "name": "_gpdr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpdr1InstanceId",
                        "name": "_gpdr1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the Windows instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "GetPasswordData",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdr1DryRun",
                        "name": "_gpdr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gpdr1DryRun",
                        "name": "_gpdr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gpdr1InstanceId",
                        "name": "_gpdr1InstanceId",
                        "shape": "String",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eThe ID of the Windows instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "importInstanceResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iirConversionTask",
                    "name": "_iirConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iirConversionTask",
                    "name": "_iirConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "required": [],
                "name": "ImportInstanceResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirConversionTask",
                        "name": "_iirConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirConversionTask",
                        "name": "_iirConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ImportInstance",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ImportInstance",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an import instance task using metadata from the specified disk image. After importing the image, you then upload it using the \u003cfunction\u003eec2-import-volume\u003c/function\u003e command in the EC2 command line tools. For more information, see \u003culink url=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html\"\u003eUsing the Command Line Tools to Import Your Virtual Machine to Amazon EC2\u003c/ulink\u003e in the \u003cemphasis\u003eAmazon Elastic Compute Cloud User Guide\u003c/emphasis\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "importInstance",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "iirDryRun",
                    "name": "_iirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iirPlatform",
                        "name": "_iirPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe instance operating system.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ImportInstance",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirDryRun",
                        "name": "_iirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirDescription",
                        "name": "_iirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the instance being imported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirLaunchSpecification",
                        "name": "_iirLaunchSpecification",
                        "shape": "ImportInstanceLaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "\u003cp\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe ImportInstanceLaunchSpecification",
                        "type": "Maybe ImportInstanceLaunchSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iirDiskImages",
                        "name": "_iirDiskImages",
                        "shape": "DiskImageList",
                        "locationName": "diskImage",
                        "documentation": null,
                        "typeExposed": "[DiskImage]",
                        "type": "[DiskImage]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirDescription",
                        "name": "_iirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the instance being imported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "iirDiskImages",
                        "name": "_iirDiskImages",
                        "shape": "DiskImageList",
                        "locationName": "diskImage",
                        "documentation": null,
                        "typeExposed": "[DiskImage]",
                        "type": "[DiskImage]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirDryRun",
                        "name": "_iirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "iirLaunchSpecification",
                        "name": "_iirLaunchSpecification",
                        "shape": "ImportInstanceLaunchSpecification",
                        "locationName": "launchSpecification",
                        "documentation": "\u003cp\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe ImportInstanceLaunchSpecification",
                        "type": "Maybe ImportInstanceLaunchSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "iirPlatform",
                        "name": "_iirPlatform",
                        "shape": "PlatformValues",
                        "locationName": "platform",
                        "documentation": "\u003cp\u003eThe instance operating system.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "importKeyPairResult",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ikprKeyName",
                    "name": "_ikprKeyName",
                    "shape": "String",
                    "locationName": "keyName",
                    "documentation": "\u003cp\u003eThe key pair name you provided.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ImportKeyPairResult",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikprKeyName",
                        "name": "_ikprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe key pair name you provided.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikprKeyFingerprint",
                        "name": "_ikprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eThe MD5 public key fingerprint as specified in section 4 of RFC 4716.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikprKeyFingerprint",
                        "name": "_ikprKeyFingerprint",
                        "shape": "String",
                        "locationName": "keyFingerprint",
                        "documentation": "\u003cp\u003eThe MD5 public key fingerprint as specified in section 4 of RFC 4716.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikprKeyName",
                        "name": "_ikprKeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eThe key pair name you provided.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ImportKeyPair",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ImportKeyPair",
            "method": "post",
            "documentation": "\u003cp\u003eImports the public key from an RSA key pair that you created with a third-party tool. Compare this with \u003ca\u003eCreateKeyPair\u003c/a\u003e, in which AWS creates the key pair and gives the keys to you (AWS keeps a copy of the public key). With ImportKeyPair, you create the key pair and give AWS just the public key. The private key is never transferred between you and AWS.\u003c/p\u003e \u003cp\u003eFor more information about key pairs, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\"\u003eKey Pairs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "importKeyPair",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ikpr1DryRun",
                    "name": "_ikpr1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ikpr1KeyName",
                        "name": "_ikpr1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eA unique name for the key pair.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ikpr1PublicKeyMaterial",
                        "name": "_ikpr1PublicKeyMaterial",
                        "shape": "Blob",
                        "locationName": "publicKeyMaterial",
                        "documentation": "\u003cp\u003eThe public key. You must base64 encode the public key material before sending it to AWS.\u003c/p\u003e",
                        "typeExposed": "Blob",
                        "type": "Blob"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ImportKeyPair",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikpr1DryRun",
                        "name": "_ikpr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ikpr1DryRun",
                        "name": "_ikpr1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ikpr1KeyName",
                        "name": "_ikpr1KeyName",
                        "shape": "String",
                        "locationName": "keyName",
                        "documentation": "\u003cp\u003eA unique name for the key pair.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ikpr1PublicKeyMaterial",
                        "name": "_ikpr1PublicKeyMaterial",
                        "shape": "Blob",
                        "locationName": "publicKeyMaterial",
                        "documentation": "\u003cp\u003eThe public key. You must base64 encode the public key material before sending it to AWS.\u003c/p\u003e",
                        "typeExposed": "Blob",
                        "type": "Blob"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "importVolumeResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ivrConversionTask",
                    "name": "_ivrConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ivrConversionTask",
                    "name": "_ivrConversionTask",
                    "shape": "ConversionTask",
                    "locationName": "conversionTask",
                    "documentation": null,
                    "typeExposed": "Maybe ConversionTask",
                    "type": "Maybe ConversionTask"
                },
                "required": [],
                "name": "ImportVolumeResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrConversionTask",
                        "name": "_ivrConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrConversionTask",
                        "name": "_ivrConversionTask",
                        "shape": "ConversionTask",
                        "locationName": "conversionTask",
                        "documentation": null,
                        "typeExposed": "Maybe ConversionTask",
                        "type": "Maybe ConversionTask"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ImportVolume",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ImportVolume",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an import volume task using metadata from the specified disk image. After importing the image, you then upload it using the \u003cfunction\u003eec2-import-volume\u003c/function\u003e command in the Amazon EC2 command-line interface (CLI) tools. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UploadingYourInstancesandVolumes.html\"\u003eUsing the Command Line Tools to Import Your Virtual Machine to Amazon EC2\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 20,
                "ctor": "importVolume",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "ivrDryRun",
                    "name": "_ivrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrAvailabilityZone",
                        "name": "_ivrAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the resulting Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrImage",
                        "name": "_ivrImage",
                        "shape": "DiskImageDetail",
                        "locationName": "image",
                        "documentation": null,
                        "typeExposed": "DiskImageDetail",
                        "type": "DiskImageDetail"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrVolume",
                        "name": "_ivrVolume",
                        "shape": "VolumeDetail",
                        "locationName": "volume",
                        "documentation": null,
                        "typeExposed": "VolumeDetail",
                        "type": "VolumeDetail"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ImportVolume",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrDryRun",
                        "name": "_ivrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrDescription",
                        "name": "_ivrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eAn optional description for the volume being imported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrAvailabilityZone",
                        "name": "_ivrAvailabilityZone",
                        "shape": "String",
                        "locationName": "availabilityZone",
                        "documentation": "\u003cp\u003eThe Availability Zone for the resulting Amazon EBS volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrDescription",
                        "name": "_ivrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eAn optional description for the volume being imported.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ivrDryRun",
                        "name": "_ivrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrImage",
                        "name": "_ivrImage",
                        "shape": "DiskImageDetail",
                        "locationName": "image",
                        "documentation": null,
                        "typeExposed": "DiskImageDetail",
                        "type": "DiskImageDetail"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ivrVolume",
                        "name": "_ivrVolume",
                        "shape": "VolumeDetail",
                        "locationName": "volume",
                        "documentation": null,
                        "typeExposed": "VolumeDetail",
                        "type": "VolumeDetail"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyImageAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifyImageAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifyImageAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyImageAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies the specified attribute of the specified AMI. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 21,
                "ctor": "modifyImageAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "miarDryRun",
                    "name": "_miarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "miarImageId",
                        "name": "_miarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyImageAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarDryRun",
                        "name": "_miarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarAttribute",
                        "name": "_miarAttribute",
                        "shape": "String",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe name of the attribute to modify.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarOperationType",
                        "name": "_miarOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "\u003cp\u003eThe operation type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarUserIds",
                        "name": "_miarUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eOne or more AWS account IDs. This is only valid when modifying the \u003ccode\u003elaunchPermission\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarUserGroups",
                        "name": "_miarUserGroups",
                        "shape": "UserGroupStringList",
                        "locationName": "UserGroup",
                        "documentation": "\u003cp\u003eOne or more user groups. This is only valid when modifying the \u003ccode\u003elaunchPermission\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarProductCodes",
                        "name": "_miarProductCodes",
                        "shape": "ProductCodeStringList",
                        "locationName": "ProductCode",
                        "documentation": "\u003cp\u003eOne or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the \u003ccode\u003eproductCodes\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarValue",
                        "name": "_miarValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value of the attribute being modified. This is only valid when modifying the \u003ccode\u003edescription\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarLaunchPermission",
                        "name": "_miarLaunchPermission",
                        "shape": "LaunchPermissionModifications",
                        "locationName": "LaunchPermission",
                        "documentation": "\u003cp\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe LaunchPermissionModifications",
                        "type": "Maybe LaunchPermissionModifications"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarDescription",
                        "name": "_miarDescription",
                        "shape": "AttributeValue",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarAttribute",
                        "name": "_miarAttribute",
                        "shape": "String",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe name of the attribute to modify.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarDescription",
                        "name": "_miarDescription",
                        "shape": "AttributeValue",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description for the AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarDryRun",
                        "name": "_miarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "miarImageId",
                        "name": "_miarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarLaunchPermission",
                        "name": "_miarLaunchPermission",
                        "shape": "LaunchPermissionModifications",
                        "locationName": "LaunchPermission",
                        "documentation": "\u003cp\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe LaunchPermissionModifications",
                        "type": "Maybe LaunchPermissionModifications"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarOperationType",
                        "name": "_miarOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "\u003cp\u003eThe operation type.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarProductCodes",
                        "name": "_miarProductCodes",
                        "shape": "ProductCodeStringList",
                        "locationName": "ProductCode",
                        "documentation": "\u003cp\u003eOne or more product codes. After you add a product code to an AMI, it can't be removed. This is only valid when modifying the \u003ccode\u003eproductCodes\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarUserGroups",
                        "name": "_miarUserGroups",
                        "shape": "UserGroupStringList",
                        "locationName": "UserGroup",
                        "documentation": "\u003cp\u003eOne or more user groups. This is only valid when modifying the \u003ccode\u003elaunchPermission\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miarUserIds",
                        "name": "_miarUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eOne or more AWS account IDs. This is only valid when modifying the \u003ccode\u003elaunchPermission\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miarValue",
                        "name": "_miarValue",
                        "shape": "String",
                        "locationName": "Value",
                        "documentation": "\u003cp\u003eThe value of the attribute being modified. This is only valid when modifying the \u003ccode\u003edescription\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyInstanceAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifyInstanceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifyInstanceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyInstanceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies the specified attribute of the specified instance. You can specify only one attribute at a time.\u003c/p\u003e \u003cp\u003eTo modify some attributes, the instance must be stopped. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_ChangingAttributesWhileInstanceStopped.html\"\u003eModifying Attributes of a Stopped Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 39,
                "ctor": "modifyInstanceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "miar1DryRun",
                    "name": "_miar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "miar1InstanceId",
                        "name": "_miar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyInstanceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1DryRun",
                        "name": "_miar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Attribute",
                        "name": "_miar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe name of the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Value",
                        "name": "_miar1Value",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eA new value for the attribute. Use only with the \u003ccode\u003ekernel\u003c/code\u003e, \u003ccode\u003eramdisk\u003c/code\u003e, \u003ccode\u003euserData\u003c/code\u003e, \u003ccode\u003edisableApiTermination\u003c/code\u003e, or \u003ccode\u003eintanceInitiateShutdownBehavior\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miar1BlockDeviceMappings",
                        "name": "_miar1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingSpecificationList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eModifies the \u003ccode\u003eDeleteOnTermination\u003c/code\u003e attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for \u003ccode\u003eDeleteOnTermination\u003c/code\u003e, the default is \u003ccode\u003etrue\u003c/code\u003e and the volume is deleted when the instance is terminated.\u003c/p\u003e \u003cp\u003eTo add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM\"\u003eUpdating the Block Device Mapping when Launching an Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMappingSpecification]",
                        "type": "[InstanceBlockDeviceMappingSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1SourceDestCheck",
                        "name": "_miar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "SourceDestCheck",
                        "documentation": "\u003cp\u003eSpecifies whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means that checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1DisableApiTermination",
                        "name": "_miar1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf the value is \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1InstanceType",
                        "name": "_miar1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eChanges the instance type to the specified value. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e. If the instance type is not valid, the error returned is \u003ccode\u003eInvalidInstanceAttributeValue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Kernel",
                        "name": "_miar1Kernel",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eChanges the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\"\u003ePV-GRUB\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Ramdisk",
                        "name": "_miar1Ramdisk",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eChanges the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\"\u003ePV-GRUB\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1UserData",
                        "name": "_miar1UserData",
                        "shape": "BlobAttributeValue",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eChanges the instance's user data to the specified value.\u003c/p\u003e",
                        "typeExposed": "Maybe BlobAttributeValue",
                        "type": "Maybe BlobAttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1InstanceInitiatedShutdownBehavior",
                        "name": "_miar1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eSpecifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miar1Groups",
                        "name": "_miar1Groups",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003e[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.\u003c/p\u003e \u003cp\u003eFor example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b, specify \u003ccode\u003eGroupId.1=sg-1a1a1a1a\u003c/code\u003e and \u003ccode\u003eGroupId.2=sg-9b9b9b9b\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1EbsOptimized",
                        "name": "_miar1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eSpecifies whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1SriovNetSupport",
                        "name": "_miar1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003esimple\u003c/code\u003e to enable enhanced networking for the instance.\u003c/p\u003e \u003cp\u003eThere is no way to disable enhanced networking at this time.\u003c/p\u003e \u003cp\u003eThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Attribute",
                        "name": "_miar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe name of the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miar1BlockDeviceMappings",
                        "name": "_miar1BlockDeviceMappings",
                        "shape": "InstanceBlockDeviceMappingSpecificationList",
                        "locationName": "blockDeviceMapping",
                        "documentation": "\u003cp\u003eModifies the \u003ccode\u003eDeleteOnTermination\u003c/code\u003e attribute for volumes that are currently attached. The volume must be owned by the caller. If no value is specified for \u003ccode\u003eDeleteOnTermination\u003c/code\u003e, the default is \u003ccode\u003etrue\u003c/code\u003e and the volume is deleted when the instance is terminated.\u003c/p\u003e \u003cp\u003eTo add instance store volumes to an Amazon EBS-backed instance, you must add them when you launch the instance. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html#Using_OverridingAMIBDM\"\u003eUpdating the Block Device Mapping when Launching an Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "[InstanceBlockDeviceMappingSpecification]",
                        "type": "[InstanceBlockDeviceMappingSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1DisableApiTermination",
                        "name": "_miar1DisableApiTermination",
                        "shape": "AttributeBooleanValue",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf the value is \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1DryRun",
                        "name": "_miar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1EbsOptimized",
                        "name": "_miar1EbsOptimized",
                        "shape": "AttributeBooleanValue",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eSpecifies whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "miar1Groups",
                        "name": "_miar1Groups",
                        "shape": "GroupIdStringList",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003e[EC2-VPC] Changes the security groups of the instance. You must specify at least one security group, even if it's just the default security group for the VPC. You must specify the security group ID, not the security group name.\u003c/p\u003e \u003cp\u003eFor example, if you want the instance to be in sg-1a1a1a1a and sg-9b9b9b9b, specify \u003ccode\u003eGroupId.1=sg-1a1a1a1a\u003c/code\u003e and \u003ccode\u003eGroupId.2=sg-9b9b9b9b\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "miar1InstanceId",
                        "name": "_miar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1InstanceInitiatedShutdownBehavior",
                        "name": "_miar1InstanceInitiatedShutdownBehavior",
                        "shape": "AttributeValue",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eSpecifies whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1InstanceType",
                        "name": "_miar1InstanceType",
                        "shape": "AttributeValue",
                        "locationName": "instanceType",
                        "documentation": "\u003cp\u003eChanges the instance type to the specified value. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e. If the instance type is not valid, the error returned is \u003ccode\u003eInvalidInstanceAttributeValue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Kernel",
                        "name": "_miar1Kernel",
                        "shape": "AttributeValue",
                        "locationName": "kernel",
                        "documentation": "\u003cp\u003eChanges the instance's kernel to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\"\u003ePV-GRUB\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Ramdisk",
                        "name": "_miar1Ramdisk",
                        "shape": "AttributeValue",
                        "locationName": "ramdisk",
                        "documentation": "\u003cp\u003eChanges the instance's RAM disk to the specified value. We recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedKernels.html\"\u003ePV-GRUB\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1SourceDestCheck",
                        "name": "_miar1SourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "SourceDestCheck",
                        "documentation": "\u003cp\u003eSpecifies whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means that checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1SriovNetSupport",
                        "name": "_miar1SriovNetSupport",
                        "shape": "AttributeValue",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003esimple\u003c/code\u003e to enable enhanced networking for the instance.\u003c/p\u003e \u003cp\u003eThere is no way to disable enhanced networking at this time.\u003c/p\u003e \u003cp\u003eThis option is supported only for HVM instances. Specifying this option with a PV instance can make it unreachable.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1UserData",
                        "name": "_miar1UserData",
                        "shape": "BlobAttributeValue",
                        "locationName": "userData",
                        "documentation": "\u003cp\u003eChanges the instance's user data to the specified value.\u003c/p\u003e",
                        "typeExposed": "Maybe BlobAttributeValue",
                        "type": "Maybe BlobAttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "miar1Value",
                        "name": "_miar1Value",
                        "shape": "String",
                        "locationName": "value",
                        "documentation": "\u003cp\u003eA new value for the attribute. Use only with the \u003ccode\u003ekernel\u003c/code\u003e, \u003ccode\u003eramdisk\u003c/code\u003e, \u003ccode\u003euserData\u003c/code\u003e, \u003ccode\u003edisableApiTermination\u003c/code\u003e, or \u003ccode\u003eintanceInitiateShutdownBehavior\u003c/code\u003e attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyNetworkInterfaceAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifyNetworkInterfaceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifyNetworkInterfaceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies the specified network interface attribute. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "modifyNetworkInterfaceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mniarDryRun",
                    "name": "_mniarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mniarNetworkInterfaceId",
                        "name": "_mniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyNetworkInterfaceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarDryRun",
                        "name": "_mniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarDescription",
                        "name": "_mniarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarSourceDestCheck",
                        "name": "_mniarSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\"\u003eNAT Instances\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mniarGroups",
                        "name": "_mniarGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eChanges the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarAttachment",
                        "name": "_mniarAttachment",
                        "shape": "NetworkInterfaceAttachmentChanges",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eInformation about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachmentChanges",
                        "type": "Maybe NetworkInterfaceAttachmentChanges"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarAttachment",
                        "name": "_mniarAttachment",
                        "shape": "NetworkInterfaceAttachmentChanges",
                        "locationName": "attachment",
                        "documentation": "\u003cp\u003eInformation about the interface attachment. If modifying the 'delete on termination' attribute, you must specify the ID of the interface attachment.\u003c/p\u003e",
                        "typeExposed": "Maybe NetworkInterfaceAttachmentChanges",
                        "type": "Maybe NetworkInterfaceAttachmentChanges"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarDescription",
                        "name": "_mniarDescription",
                        "shape": "AttributeValue",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for the network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeValue",
                        "type": "Maybe AttributeValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarDryRun",
                        "name": "_mniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mniarGroups",
                        "name": "_mniarGroups",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eChanges the security groups for the network interface. The new set of groups you specify replaces the current set. You must specify at least one group, even if it's just the default security group in the VPC. You must specify the ID of the security group, not the name.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mniarNetworkInterfaceId",
                        "name": "_mniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mniarSourceDestCheck",
                        "name": "_mniarSourceDestCheck",
                        "shape": "AttributeBooleanValue",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eIndicates whether source/destination checking is enabled. A value of \u003ccode\u003etrue\u003c/code\u003e means checking is enabled, and \u003ccode\u003efalse\u003c/code\u003e means checking is disabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\"\u003eNAT Instances\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyReservedInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mrirReservedInstancesModificationId",
                    "name": "_mrirReservedInstancesModificationId",
                    "shape": "String",
                    "locationName": "reservedInstancesModificationId",
                    "documentation": "\u003cp\u003eThe ID for the modification.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mrirReservedInstancesModificationId",
                    "name": "_mrirReservedInstancesModificationId",
                    "shape": "String",
                    "locationName": "reservedInstancesModificationId",
                    "documentation": "\u003cp\u003eThe ID for the modification.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ModifyReservedInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mrirReservedInstancesModificationId",
                        "name": "_mrirReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "\u003cp\u003eThe ID for the modification.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mrirReservedInstancesModificationId",
                        "name": "_mrirReservedInstancesModificationId",
                        "shape": "String",
                        "locationName": "reservedInstancesModificationId",
                        "documentation": "\u003cp\u003eThe ID for the modification.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ModifyReservedInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyReservedInstances",
            "method": "post",
            "documentation": "\u003cp\u003eModifies the Availability Zone, instance count, instance type, or network platform (EC2-Classic or EC2-VPC) of your Reserved Instances. The Reserved Instances to be modified must be identical, except for Availability Zone, network platform, and instance type.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-modifying.html\"\u003eModifying Reserved Instances\u003c/a\u003e in the Amazon Elastic Compute Cloud User Guide.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 25,
                "ctor": "modifyReservedInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mrirClientToken",
                    "name": "_mrirClientToken",
                    "shape": "String",
                    "locationName": "clientToken",
                    "documentation": "\u003cp\u003eA unique, case-sensitive token you provide to ensure idempotency of your modification request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyReservedInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mrirClientToken",
                        "name": "_mrirClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eA unique, case-sensitive token you provide to ensure idempotency of your modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mrirReservedInstancesIds",
                        "name": "_mrirReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "\u003cp\u003eThe IDs of the Reserved Instances to modify.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mrirTargetConfigurations",
                        "name": "_mrirTargetConfigurations",
                        "shape": "ReservedInstancesConfigurationList",
                        "locationName": "ReservedInstancesConfigurationSetItemType",
                        "documentation": "\u003cp\u003eThe configuration settings for the Reserved Instances to modify.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesConfiguration]",
                        "type": "[ReservedInstancesConfiguration]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mrirClientToken",
                        "name": "_mrirClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eA unique, case-sensitive token you provide to ensure idempotency of your modification request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mrirReservedInstancesIds",
                        "name": "_mrirReservedInstancesIds",
                        "shape": "ReservedInstancesIdStringList",
                        "locationName": "ReservedInstancesId",
                        "documentation": "\u003cp\u003eThe IDs of the Reserved Instances to modify.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mrirTargetConfigurations",
                        "name": "_mrirTargetConfigurations",
                        "shape": "ReservedInstancesConfigurationList",
                        "locationName": "ReservedInstancesConfigurationSetItemType",
                        "documentation": "\u003cp\u003eThe configuration settings for the Reserved Instances to modify.\u003c/p\u003e",
                        "typeExposed": "[ReservedInstancesConfiguration]",
                        "type": "[ReservedInstancesConfiguration]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifySnapshotAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifySnapshotAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifySnapshotAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifySnapshotAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eAdds or removes permission settings for the specified snapshot. You may add or remove specified AWS account IDs from a snapshot's list of create volume permissions, but you cannot do both in a single API call. If you need to both add and remove account IDs for a snapshot, you must use multiple API calls.\u003c/p\u003e \u003cp\u003eFor more information on modifying snapshot permissions, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html\"\u003eSharing Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 27,
                "ctor": "modifySnapshotAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "msarDryRun",
                    "name": "_msarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "msarSnapshotId",
                        "name": "_msarSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifySnapshotAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarDryRun",
                        "name": "_msarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarAttribute",
                        "name": "_msarAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe snapshot attribute to modify.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarOperationType",
                        "name": "_msarOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "\u003cp\u003eThe type of operation to perform to the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "msarUserIds",
                        "name": "_msarUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eThe account ID to modify for the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "msarGroupNames",
                        "name": "_msarGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "UserGroup",
                        "documentation": "\u003cp\u003eThe group to modify for the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarCreateVolumePermission",
                        "name": "_msarCreateVolumePermission",
                        "shape": "CreateVolumePermissionModifications",
                        "locationName": "CreateVolumePermission",
                        "documentation": "\u003cp\u003eA JSON representation of the snapshot attribute modification.\u003c/p\u003e",
                        "typeExposed": "Maybe CreateVolumePermissionModifications",
                        "type": "Maybe CreateVolumePermissionModifications"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarAttribute",
                        "name": "_msarAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe snapshot attribute to modify.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarCreateVolumePermission",
                        "name": "_msarCreateVolumePermission",
                        "shape": "CreateVolumePermissionModifications",
                        "locationName": "CreateVolumePermission",
                        "documentation": "\u003cp\u003eA JSON representation of the snapshot attribute modification.\u003c/p\u003e",
                        "typeExposed": "Maybe CreateVolumePermissionModifications",
                        "type": "Maybe CreateVolumePermissionModifications"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarDryRun",
                        "name": "_msarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "msarGroupNames",
                        "name": "_msarGroupNames",
                        "shape": "GroupNameStringList",
                        "locationName": "UserGroup",
                        "documentation": "\u003cp\u003eThe group to modify for the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarOperationType",
                        "name": "_msarOperationType",
                        "shape": "String",
                        "locationName": "OperationType",
                        "documentation": "\u003cp\u003eThe type of operation to perform to the attribute.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "msarSnapshotId",
                        "name": "_msarSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "msarUserIds",
                        "name": "_msarUserIds",
                        "shape": "UserIdStringList",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eThe account ID to modify for the snapshot.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifySubnetAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifySubnetAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifySubnetAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifySubnetAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies a subnet attribute.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "modifySubnetAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "msarSubnetId",
                    "name": "_msarSubnetId",
                    "shape": "String",
                    "locationName": "subnetId",
                    "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "msarSubnetId",
                        "name": "_msarSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifySubnetAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarMapPublicIpOnLaunch",
                        "name": "_msarMapPublicIpOnLaunch",
                        "shape": "AttributeBooleanValue",
                        "locationName": "MapPublicIpOnLaunch",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "msarMapPublicIpOnLaunch",
                        "name": "_msarMapPublicIpOnLaunch",
                        "shape": "AttributeBooleanValue",
                        "locationName": "MapPublicIpOnLaunch",
                        "documentation": null,
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "msarSubnetId",
                        "name": "_msarSubnetId",
                        "shape": "String",
                        "locationName": "subnetId",
                        "documentation": "\u003cp\u003eThe ID of the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyVolumeAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifyVolumeAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifyVolumeAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyVolumeAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies a volume attribute.\u003c/p\u003e \u003cp\u003eBy default, all I/O operations for the volume are suspended when the data on the volume is determined to be potentially inconsistent, to prevent undetectable, latent data corruption. The I/O access to the volume can be resumed by first enabling I/O access and then checking the data consistency on your volume.\u003c/p\u003e \u003cp\u003eYou can change the default behavior to resume I/O operations. We recommend that you change this only for boot volumes or for volumes that are stateless or disposable.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 17,
                "ctor": "modifyVolumeAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mvarDryRun",
                    "name": "_mvarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mvarVolumeId",
                        "name": "_mvarVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyVolumeAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarDryRun",
                        "name": "_mvarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarAutoEnableIO",
                        "name": "_mvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "AutoEnableIO",
                        "documentation": "\u003cp\u003eIndicates whether the volume should be auto-enabled for I/O operations.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarAutoEnableIO",
                        "name": "_mvarAutoEnableIO",
                        "shape": "AttributeBooleanValue",
                        "locationName": "AutoEnableIO",
                        "documentation": "\u003cp\u003eIndicates whether the volume should be auto-enabled for I/O operations.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarDryRun",
                        "name": "_mvarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mvarVolumeId",
                        "name": "_mvarVolumeId",
                        "shape": "String",
                        "locationName": "VolumeId",
                        "documentation": "\u003cp\u003eThe ID of the volume.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "modifyVpcAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ModifyVpcAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ModifyVpcAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ModifyVpcAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eModifies the specified attribute of the specified VPC.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "modifyVpcAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "mvarVpcId",
                    "name": "_mvarVpcId",
                    "shape": "String",
                    "locationName": "vpcId",
                    "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mvarVpcId",
                        "name": "_mvarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ModifyVpcAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarEnableDnsSupport",
                        "name": "_mvarEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsSupport",
                        "documentation": "\u003cp\u003eIndicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarEnableDnsHostnames",
                        "name": "_mvarEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsHostnames",
                        "documentation": "\u003cp\u003eIndicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\u003c/p\u003e \u003cp\u003eYou can only enable DNS hostnames if you also enable DNS support.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarEnableDnsHostnames",
                        "name": "_mvarEnableDnsHostnames",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsHostnames",
                        "documentation": "\u003cp\u003eIndicates whether the instances launched in the VPC get DNS hostnames. If enabled, instances in the VPC get DNS hostnames; otherwise, they do not.\u003c/p\u003e \u003cp\u003eYou can only enable DNS hostnames if you also enable DNS support.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mvarEnableDnsSupport",
                        "name": "_mvarEnableDnsSupport",
                        "shape": "AttributeBooleanValue",
                        "locationName": "EnableDnsSupport",
                        "documentation": "\u003cp\u003eIndicates whether the DNS resolution is supported for the VPC. If enabled, queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC network range \"plus two\" will succeed. If disabled, the Amazon provided DNS service in the VPC that resolves public DNS hostnames to IP addresses is not enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe AttributeBooleanValue",
                        "type": "Maybe AttributeBooleanValue"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mvarVpcId",
                        "name": "_mvarVpcId",
                        "shape": "String",
                        "locationName": "vpcId",
                        "documentation": "\u003cp\u003eThe ID of the VPC.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "monitorInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "mirInstanceMonitorings",
                    "name": "_mirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "[InstanceMonitoring]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "mirInstanceMonitorings",
                    "name": "_mirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "[InstanceMonitoring]"
                },
                "required": [],
                "name": "MonitorInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mirInstanceMonitorings",
                        "name": "_mirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "[InstanceMonitoring]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mirInstanceMonitorings",
                        "name": "_mirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "[InstanceMonitoring]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.MonitorInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "MonitorInstances",
            "method": "post",
            "documentation": "\u003cp\u003eEnables monitoring for a running instance. For more information about monitoring instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html\"\u003eMonitoring Your Instances and Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "monitorInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "mirDryRun",
                    "name": "_mirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "MonitorInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mirDryRun",
                        "name": "_mirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mirInstanceIds",
                        "name": "_mirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "mirDryRun",
                        "name": "_mirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "mirInstanceIds",
                        "name": "_mirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "purchaseReservedInstancesOfferingResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "priorReservedInstancesId",
                    "name": "_priorReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe IDs of the purchased Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "priorReservedInstancesId",
                    "name": "_priorReservedInstancesId",
                    "shape": "String",
                    "locationName": "reservedInstancesId",
                    "documentation": "\u003cp\u003eThe IDs of the purchased Reserved Instances.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "PurchaseReservedInstancesOfferingResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorReservedInstancesId",
                        "name": "_priorReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe IDs of the purchased Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorReservedInstancesId",
                        "name": "_priorReservedInstancesId",
                        "shape": "String",
                        "locationName": "reservedInstancesId",
                        "documentation": "\u003cp\u003eThe IDs of the purchased Reserved Instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.PurchaseReservedInstancesOffering",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "PurchaseReservedInstancesOffering",
            "method": "post",
            "documentation": "\u003cp\u003ePurchases a Reserved Instance for use with your account. With Amazon EC2 Reserved Instances, you obtain a capacity reservation for a certain instance configuration over a specified period of time. You pay a lower usage rate than with On-Demand instances for the time that you actually use the capacity reservation.\u003c/p\u003e \u003cp\u003eUse \u003ca\u003eDescribeReservedInstancesOfferings\u003c/a\u003e to get a list of Reserved Instance offerings that match your specifications. After you've purchased a Reserved Instance, you can check for your new Reserved Instance with \u003ca\u003eDescribeReservedInstances\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts-on-demand-reserved-instances.html\"\u003eReserved Instances\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ri-market-general.html\"\u003eReserved Instance Marketplace\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 33,
                "ctor": "purchaseReservedInstancesOffering",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "priorDryRun",
                    "name": "_priorDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "priorReservedInstancesOfferingId",
                        "name": "_priorReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance offering to purchase.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "priorInstanceCount",
                        "name": "_priorInstanceCount",
                        "shape": "Integer",
                        "locationName": "InstanceCount",
                        "documentation": "\u003cp\u003eThe number of Reserved Instances to purchase.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "PurchaseReservedInstancesOffering",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorDryRun",
                        "name": "_priorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorLimitPrice",
                        "name": "_priorLimitPrice",
                        "shape": "ReservedInstanceLimitPrice",
                        "locationName": "limitPrice",
                        "documentation": "\u003cp\u003eSpecified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.\u003c/p\u003e",
                        "typeExposed": "Maybe ReservedInstanceLimitPrice",
                        "type": "Maybe ReservedInstanceLimitPrice"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorDryRun",
                        "name": "_priorDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "priorInstanceCount",
                        "name": "_priorInstanceCount",
                        "shape": "Integer",
                        "locationName": "InstanceCount",
                        "documentation": "\u003cp\u003eThe number of Reserved Instances to purchase.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "priorLimitPrice",
                        "name": "_priorLimitPrice",
                        "shape": "ReservedInstanceLimitPrice",
                        "locationName": "limitPrice",
                        "documentation": "\u003cp\u003eSpecified for Reserved Instance Marketplace offerings to limit the total order and ensure that the Reserved Instances are not purchased at unexpected prices.\u003c/p\u003e",
                        "typeExposed": "Maybe ReservedInstanceLimitPrice",
                        "type": "Maybe ReservedInstanceLimitPrice"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "priorReservedInstancesOfferingId",
                        "name": "_priorReservedInstancesOfferingId",
                        "shape": "String",
                        "locationName": "ReservedInstancesOfferingId",
                        "documentation": "\u003cp\u003eThe ID of the Reserved Instance offering to purchase.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "rebootInstancesResponse",
                "wrapper": false,
                "required": [],
                "name": "RebootInstancesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.RebootInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RebootInstances",
            "method": "post",
            "documentation": "\u003cp\u003eRequests a reboot of one or more instances. This operation is asynchronous; it only queues a request to reboot the specified instances. The operation succeeds if the instances are valid and belong to you. Requests to reboot terminated instances are ignored.\u003c/p\u003e \u003cp\u003eIf a Linux/Unix instance does not cleanly shut down within four minutes, Amazon EC2 performs a hard reboot.\u003c/p\u003e \u003cp\u003eFor more information about troubleshooting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-console.html\"\u003eGetting Console Output and Rebooting Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "rebootInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rir2DryRun",
                    "name": "_rir2DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "RebootInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir2DryRun",
                        "name": "_rir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir2InstanceIds",
                        "name": "_rir2InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir2DryRun",
                        "name": "_rir2DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir2InstanceIds",
                        "name": "_rir2InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "registerImageResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rirImageId",
                    "name": "_rirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the newly registered AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rirImageId",
                    "name": "_rirImageId",
                    "shape": "String",
                    "locationName": "imageId",
                    "documentation": "\u003cp\u003eThe ID of the newly registered AMI.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "RegisterImageResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirImageId",
                        "name": "_rirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the newly registered AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirImageId",
                        "name": "_rirImageId",
                        "shape": "String",
                        "locationName": "imageId",
                        "documentation": "\u003cp\u003eThe ID of the newly registered AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.RegisterImage",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RegisterImage",
            "method": "post",
            "documentation": "\u003cp\u003eRegisters an AMI. When you're creating an AMI, this is the final step you must complete before you can launch an instance from the AMI. For more information about creating AMIs, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/creating-an-ami.html\"\u003eCreating Your Own AMIs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can also use \u003ccode\u003eRegisterImage\u003c/code\u003e to create an Amazon EBS-backed AMI from a snapshot of a root device volume. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_LaunchingInstanceFromSnapshot.html\"\u003eLaunching an Instance from a Snapshot\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf needed, you can deregister an AMI at any time. Any modifications you make to an AMI backed by an instance store volume invalidates its registration. If you make changes to an image, deregister the previous image and register the new image.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 23,
                "ctor": "registerImage",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rirDryRun",
                    "name": "_rirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rirName",
                        "name": "_rirName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eA name for your AMI.\u003c/p\u003e \u003cp\u003eConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "RegisterImage",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirDryRun",
                        "name": "_rirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirImageLocation",
                        "name": "_rirImageLocation",
                        "shape": "String",
                        "locationName": "ImageLocation",
                        "documentation": "\u003cp\u003eThe full path to your AMI manifest in Amazon S3 storage.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirDescription",
                        "name": "_rirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for your AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirArchitecture",
                        "name": "_rirArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the AMI.\u003c/p\u003e \u003cp\u003eDefault: For Amazon EBS-backed AMIs, \u003ccode\u003ei386\u003c/code\u003e. For instance store-backed AMIs, the architecture specified in the manifest file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirKernelId",
                        "name": "_rirKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirRamdiskId",
                        "name": "_rirRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirRootDeviceName",
                        "name": "_rirRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe name of the root device (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e, or \u003ccode\u003exvda\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rirBlockDeviceMappings",
                        "name": "_rirBlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirVirtualizationType",
                        "name": "_rirVirtualizationType",
                        "shape": "String",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe type of virtualization.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003eparavirtual\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirSriovNetSupport",
                        "name": "_rirSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003esimple\u003c/code\u003e to enable enhanced networking for the AMI and any instances that you launch from the AMI.\u003c/p\u003e \u003cp\u003eThere is no way to disable enhanced networking at this time.\u003c/p\u003e \u003cp\u003eThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirArchitecture",
                        "name": "_rirArchitecture",
                        "shape": "ArchitectureValues",
                        "locationName": "architecture",
                        "documentation": "\u003cp\u003eThe architecture of the AMI.\u003c/p\u003e \u003cp\u003eDefault: For Amazon EBS-backed AMIs, \u003ccode\u003ei386\u003c/code\u003e. For instance store-backed AMIs, the architecture specified in the manifest file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rirBlockDeviceMappings",
                        "name": "_rirBlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "\u003cp\u003eOne or more block device mapping entries.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirDescription",
                        "name": "_rirDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eA description for your AMI.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirDryRun",
                        "name": "_rirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirImageLocation",
                        "name": "_rirImageLocation",
                        "shape": "String",
                        "locationName": "ImageLocation",
                        "documentation": "\u003cp\u003eThe full path to your AMI manifest in Amazon S3 storage.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirKernelId",
                        "name": "_rirKernelId",
                        "shape": "String",
                        "locationName": "kernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rirName",
                        "name": "_rirName",
                        "shape": "String",
                        "locationName": "name",
                        "documentation": "\u003cp\u003eA name for your AMI.\u003c/p\u003e \u003cp\u003eConstraints: 3-128 alphanumeric characters, parentheses (()), square brackets ([]), spaces ( ), periods (.), slashes (/), dashes (-), single quotes ('), at-signs (@), or underscores(_)\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirRamdiskId",
                        "name": "_rirRamdiskId",
                        "shape": "String",
                        "locationName": "ramdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirRootDeviceName",
                        "name": "_rirRootDeviceName",
                        "shape": "String",
                        "locationName": "rootDeviceName",
                        "documentation": "\u003cp\u003eThe name of the root device (for example, \u003ccode\u003e/dev/sda1\u003c/code\u003e, or \u003ccode\u003exvda\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirSriovNetSupport",
                        "name": "_rirSriovNetSupport",
                        "shape": "String",
                        "locationName": "sriovNetSupport",
                        "documentation": "\u003cp\u003eSet to \u003ccode\u003esimple\u003c/code\u003e to enable enhanced networking for the AMI and any instances that you launch from the AMI.\u003c/p\u003e \u003cp\u003eThere is no way to disable enhanced networking at this time.\u003c/p\u003e \u003cp\u003eThis option is supported only for HVM AMIs. Specifying this option with a PV AMI can make instances launched from the AMI unreachable.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rirVirtualizationType",
                        "name": "_rirVirtualizationType",
                        "shape": "String",
                        "locationName": "virtualizationType",
                        "documentation": "\u003cp\u003eThe type of virtualization.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003eparavirtual\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "rejectVpcPeeringConnectionResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rvpcrReturn",
                    "name": "_rvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rvpcrReturn",
                    "name": "_rvpcrReturn",
                    "shape": "Boolean",
                    "locationName": "return",
                    "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "name": "RejectVpcPeeringConnectionResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rvpcrReturn",
                        "name": "_rvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rvpcrReturn",
                        "name": "_rvpcrReturn",
                        "shape": "Boolean",
                        "locationName": "return",
                        "documentation": "\u003cp\u003eReturns \u003ccode\u003etrue\u003c/code\u003e if the request succeeds; otherwise, it returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.RejectVpcPeeringConnection",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RejectVpcPeeringConnection",
            "method": "post",
            "documentation": "\u003cp\u003eRejects a VPC peering connection request. The VPC peering connection must be in the \u003ccode\u003epending-acceptance\u003c/code\u003e state. Use the \u003ca\u003eDescribeVpcPeeringConnections\u003c/a\u003e request to view your outstanding VPC peering connection requests. To delete an active VPC peering connection, or to delete a VPC peering connection request that you initiated, use \u003ca\u003eDeleteVpcPeeringConnection\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 28,
                "ctor": "rejectVpcPeeringConnection",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rvpcrDryRun",
                    "name": "_rvpcrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rvpcrVpcPeeringConnectionId",
                        "name": "_rvpcrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "RejectVpcPeeringConnection",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rvpcrDryRun",
                        "name": "_rvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rvpcrDryRun",
                        "name": "_rvpcrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rvpcrVpcPeeringConnectionId",
                        "name": "_rvpcrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of the VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "releaseAddressResponse",
                "wrapper": false,
                "required": [],
                "name": "ReleaseAddressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ReleaseAddress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReleaseAddress",
            "method": "post",
            "documentation": "\u003cp\u003eReleases the specified Elastic IP address.\u003c/p\u003e \u003cp\u003eAfter releasing an Elastic IP address, it is released to the IP address pool and might be unavailable to you. Be sure to update your DNS records and any servers or devices that communicate with the address. If you attempt to release an Elastic IP address that you already released, you'll get an \u003ccode\u003eAuthFailure\u003c/code\u003e error if the address is already allocated to another AWS account.\u003c/p\u003e \u003cp\u003e[EC2-Classic, default VPC] Releasing an Elastic IP address automatically disassociates it from any instance that it's associated with. To disassociate an Elastic IP address without releasing it, use \u003ca\u003eDisassociateAddress\u003c/a\u003e.\u003c/p\u003e \u003cp\u003e[Nondefault VPC] You must use \u003ca\u003eDisassociateAddress\u003c/a\u003e to disassociate the Elastic IP address before you try to release it. Otherwise, Amazon EC2 returns an error (\u003ccode\u003eInvalidIPAddress.InUse\u003c/code\u003e).\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "releaseAddress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rarDryRun",
                    "name": "_rarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "ReleaseAddress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarDryRun",
                        "name": "_rarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarPublicIp",
                        "name": "_rarPublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] The Elastic IP address. Required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarAllocationId",
                        "name": "_rarAllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The allocation ID. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarAllocationId",
                        "name": "_rarAllocationId",
                        "shape": "String",
                        "locationName": "AllocationId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The allocation ID. Required for EC2-VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarDryRun",
                        "name": "_rarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rarPublicIp",
                        "name": "_rarPublicIp",
                        "shape": "String",
                        "locationName": "PublicIp",
                        "documentation": "\u003cp\u003e[EC2-Classic] The Elastic IP address. Required for EC2-Classic.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "replaceNetworkAclAssociationResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rnaarNewAssociationId",
                    "name": "_rnaarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rnaarNewAssociationId",
                    "name": "_rnaarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReplaceNetworkAclAssociationResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaarNewAssociationId",
                        "name": "_rnaarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaarNewAssociationId",
                        "name": "_rnaarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ReplaceNetworkAclAssociation",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReplaceNetworkAclAssociation",
            "method": "post",
            "documentation": "\u003cp\u003eChanges which network ACL a subnet is associated with. By default when you create a subnet, it's automatically associated with the default network ACL. For more information about network ACLs, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html\"\u003eNetwork ACLs\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "replaceNetworkAclAssociation",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rnaarDryRun",
                    "name": "_rnaarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaarAssociationId",
                        "name": "_rnaarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe ID of the current association between the original network ACL and the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaarNetworkAclId",
                        "name": "_rnaarNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the new network ACL to associate with the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ReplaceNetworkAclAssociation",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaarDryRun",
                        "name": "_rnaarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaarAssociationId",
                        "name": "_rnaarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe ID of the current association between the original network ACL and the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaarDryRun",
                        "name": "_rnaarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaarNetworkAclId",
                        "name": "_rnaarNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the new network ACL to associate with the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "replaceNetworkAclEntryResponse",
                "wrapper": false,
                "required": [],
                "name": "ReplaceNetworkAclEntryResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ReplaceNetworkAclEntry",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReplaceNetworkAclEntry",
            "method": "post",
            "documentation": "\u003cp\u003eReplaces an entry (rule) in a network ACL. For more information about network ACLs, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html\"\u003eNetwork ACLs\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "replaceNetworkAclEntry",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rnaerDryRun",
                    "name": "_rnaerDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerNetworkAclId",
                        "name": "_rnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerRuleNumber",
                        "name": "_rnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number of the entry to replace.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerProtocol",
                        "name": "_rnaerProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe IP protocol. You can specify \u003ccode\u003eall\u003c/code\u003e or \u003ccode\u003e-1\u003c/code\u003e to mean all protocols.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerRuleAction",
                        "name": "_rnaerRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerEgress",
                        "name": "_rnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether to replace the egress rule.\u003c/p\u003e \u003cp\u003eDefault: If no value is specified, we replace the ingress rule.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerCidrBlock",
                        "name": "_rnaerCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ReplaceNetworkAclEntry",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerDryRun",
                        "name": "_rnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerIcmpTypeCode",
                        "name": "_rnaerIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerPortRange",
                        "name": "_rnaerPortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerCidrBlock",
                        "name": "_rnaerCidrBlock",
                        "shape": "String",
                        "locationName": "cidrBlock",
                        "documentation": "\u003cp\u003eThe network range to allow or deny, in CIDR notation.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerDryRun",
                        "name": "_rnaerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerEgress",
                        "name": "_rnaerEgress",
                        "shape": "Boolean",
                        "locationName": "egress",
                        "documentation": "\u003cp\u003eIndicates whether to replace the egress rule.\u003c/p\u003e \u003cp\u003eDefault: If no value is specified, we replace the ingress rule.\u003c/p\u003e",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerIcmpTypeCode",
                        "name": "_rnaerIcmpTypeCode",
                        "shape": "IcmpTypeCode",
                        "locationName": "Icmp",
                        "documentation": "\u003cp\u003eICMP protocol: The ICMP type and code. Required if specifying 1 (ICMP) for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe IcmpTypeCode",
                        "type": "Maybe IcmpTypeCode"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerNetworkAclId",
                        "name": "_rnaerNetworkAclId",
                        "shape": "String",
                        "locationName": "networkAclId",
                        "documentation": "\u003cp\u003eThe ID of the ACL.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rnaerPortRange",
                        "name": "_rnaerPortRange",
                        "shape": "PortRange",
                        "locationName": "portRange",
                        "documentation": "\u003cp\u003eTCP or UDP protocols: The range of ports the rule applies to. Required if specifying 6 (TCP) or 17 (UDP) for the protocol.\u003c/p\u003e",
                        "typeExposed": "Maybe PortRange",
                        "type": "Maybe PortRange"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerProtocol",
                        "name": "_rnaerProtocol",
                        "shape": "String",
                        "locationName": "protocol",
                        "documentation": "\u003cp\u003eThe IP protocol. You can specify \u003ccode\u003eall\u003c/code\u003e or \u003ccode\u003e-1\u003c/code\u003e to mean all protocols.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerRuleAction",
                        "name": "_rnaerRuleAction",
                        "shape": "RuleAction",
                        "locationName": "ruleAction",
                        "documentation": "\u003cp\u003eIndicates whether to allow or deny the traffic that matches the rule.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rnaerRuleNumber",
                        "name": "_rnaerRuleNumber",
                        "shape": "Integer",
                        "locationName": "ruleNumber",
                        "documentation": "\u003cp\u003eThe rule number of the entry to replace.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "replaceRouteResponse",
                "wrapper": false,
                "required": [],
                "name": "ReplaceRouteResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ReplaceRoute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReplaceRoute",
            "method": "post",
            "documentation": "\u003cp\u003eReplaces an existing route within a route table in a VPC. You must provide only one of the following: Internet gateway or virtual private gateway, NAT instance, VPC peering connection, or network interface.\u003c/p\u003e \u003cp\u003eFor more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "replaceRoute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rrrDryRun",
                    "name": "_rrrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrrRouteTableId",
                        "name": "_rrrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrrDestinationCidrBlock",
                        "name": "_rrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ReplaceRoute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrDryRun",
                        "name": "_rrrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrGatewayId",
                        "name": "_rrrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of an Internet gateway or virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrInstanceId",
                        "name": "_rrrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrNetworkInterfaceId",
                        "name": "_rrrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of a network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrVpcPeeringConnectionId",
                        "name": "_rrrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of a VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrrDestinationCidrBlock",
                        "name": "_rrrDestinationCidrBlock",
                        "shape": "String",
                        "locationName": "destinationCidrBlock",
                        "documentation": "\u003cp\u003eThe CIDR address block used for the destination match. The value you provide must match the CIDR of an existing route in the table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrDryRun",
                        "name": "_rrrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrGatewayId",
                        "name": "_rrrGatewayId",
                        "shape": "String",
                        "locationName": "gatewayId",
                        "documentation": "\u003cp\u003eThe ID of an Internet gateway or virtual private gateway.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrInstanceId",
                        "name": "_rrrInstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of a NAT instance in your VPC.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrNetworkInterfaceId",
                        "name": "_rrrNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of a network interface.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrrRouteTableId",
                        "name": "_rrrRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the route table.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrrVpcPeeringConnectionId",
                        "name": "_rrrVpcPeeringConnectionId",
                        "shape": "String",
                        "locationName": "vpcPeeringConnectionId",
                        "documentation": "\u003cp\u003eThe ID of a VPC peering connection.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "replaceRouteTableAssociationResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rrtarNewAssociationId",
                    "name": "_rrtarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rrtarNewAssociationId",
                    "name": "_rrtarNewAssociationId",
                    "shape": "String",
                    "locationName": "newAssociationId",
                    "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "ReplaceRouteTableAssociationResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrtarNewAssociationId",
                        "name": "_rrtarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrtarNewAssociationId",
                        "name": "_rrtarNewAssociationId",
                        "shape": "String",
                        "locationName": "newAssociationId",
                        "documentation": "\u003cp\u003eThe ID of the new association.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.ReplaceRouteTableAssociation",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReplaceRouteTableAssociation",
            "method": "post",
            "documentation": "\u003cp\u003eChanges the route table associated with a given subnet in a VPC. After the operation completes, the subnet uses the routes in the new route table it's associated with. For more information about route tables, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html\"\u003eRoute Tables\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can also use ReplaceRouteTableAssociation to change which table is the main route table in the VPC. You just specify the main route table's association ID and the route table to be the new main route table.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 19,
                "ctor": "replaceRouteTableAssociation",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rrtarDryRun",
                    "name": "_rrtarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrtarAssociationId",
                        "name": "_rrtarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrtarRouteTableId",
                        "name": "_rrtarRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the new route table to associate with the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ReplaceRouteTableAssociation",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrtarDryRun",
                        "name": "_rrtarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrtarAssociationId",
                        "name": "_rrtarAssociationId",
                        "shape": "String",
                        "locationName": "associationId",
                        "documentation": "\u003cp\u003eThe association ID.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rrtarDryRun",
                        "name": "_rrtarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrtarRouteTableId",
                        "name": "_rrtarRouteTableId",
                        "shape": "String",
                        "locationName": "routeTableId",
                        "documentation": "\u003cp\u003eThe ID of the new route table to associate with the subnet.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "reportInstanceStatusResponse",
                "wrapper": false,
                "required": [],
                "name": "ReportInstanceStatusResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ReportInstanceStatus",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ReportInstanceStatus",
            "method": "post",
            "documentation": "\u003cp\u003eSubmits feedback about the status of an instance. The instance must be in the \u003ccode\u003erunning\u003c/code\u003e state. If your experience with the instance differs from the instance status returned by \u003ca\u003eDescribeInstanceStatus\u003c/a\u003e, use \u003ca\u003eReportInstanceStatus\u003c/a\u003e to report your experience with the instance. Amazon EC2 collects this information to improve the accuracy of status checks.\u003c/p\u003e \u003cp\u003eUse of this action does not change the value returned by \u003ca\u003eDescribeInstanceStatus\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "reportInstanceStatus",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "risrDryRun",
                    "name": "_risrDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "risrStatus",
                        "name": "_risrStatus",
                        "shape": "ReportStatusType",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of all instances listed.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ReportInstanceStatus",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrDryRun",
                        "name": "_risrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "risrInstances",
                        "name": "_risrInstances",
                        "shape": "InstanceIdStringList",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eOne or more instances.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrStartTime",
                        "name": "_risrStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time at which the reported instance health state began.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrEndTime",
                        "name": "_risrEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "\u003cp\u003eThe time at which the reported instance health state ended.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "risrReasonCodes",
                        "name": "_risrReasonCodes",
                        "shape": "ReasonCodesList",
                        "locationName": "reasonCode",
                        "documentation": "\u003cp\u003eOne or more reason codes that describes the health state of your instance.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003einstance-stuck-in-state\u003c/code\u003e: My instance is stuck in a state.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eunresponsive\u003c/code\u003e: My instance is unresponsive.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003enot-accepting-credentials\u003c/code\u003e: My instance is not accepting my credentials.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003epassword-not-available\u003c/code\u003e: A password is not available for my instance.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-network\u003c/code\u003e: My instance is experiencing performance problems which I believe are network related.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-instance-store\u003c/code\u003e: My instance is experiencing performance problems which I believe are related to the instance stores.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-ebs-volume\u003c/code\u003e: My instance is experiencing performance problems which I believe are related to an EBS volume.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-other\u003c/code\u003e: My instance is experiencing performance problems.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eother\u003c/code\u003e: [explain using the description parameter]\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrDescription",
                        "name": "_risrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eDescriptive text about the health state of your instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrDescription",
                        "name": "_risrDescription",
                        "shape": "String",
                        "locationName": "description",
                        "documentation": "\u003cp\u003eDescriptive text about the health state of your instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrDryRun",
                        "name": "_risrDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrEndTime",
                        "name": "_risrEndTime",
                        "shape": "DateTime",
                        "locationName": "endTime",
                        "documentation": "\u003cp\u003eThe time at which the reported instance health state ended.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "risrInstances",
                        "name": "_risrInstances",
                        "shape": "InstanceIdStringList",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eOne or more instances.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "risrReasonCodes",
                        "name": "_risrReasonCodes",
                        "shape": "ReasonCodesList",
                        "locationName": "reasonCode",
                        "documentation": "\u003cp\u003eOne or more reason codes that describes the health state of your instance.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003einstance-stuck-in-state\u003c/code\u003e: My instance is stuck in a state.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eunresponsive\u003c/code\u003e: My instance is unresponsive.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003enot-accepting-credentials\u003c/code\u003e: My instance is not accepting my credentials.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003epassword-not-available\u003c/code\u003e: A password is not available for my instance.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-network\u003c/code\u003e: My instance is experiencing performance problems which I believe are network related.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-instance-store\u003c/code\u003e: My instance is experiencing performance problems which I believe are related to the instance stores.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-ebs-volume\u003c/code\u003e: My instance is experiencing performance problems which I believe are related to an EBS volume.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eperformance-other\u003c/code\u003e: My instance is experiencing performance problems.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eother\u003c/code\u003e: [explain using the description parameter]\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "risrStartTime",
                        "name": "_risrStartTime",
                        "shape": "DateTime",
                        "locationName": "startTime",
                        "documentation": "\u003cp\u003eThe time at which the reported instance health state began.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "risrStatus",
                        "name": "_risrStatus",
                        "shape": "ReportStatusType",
                        "locationName": "status",
                        "documentation": "\u003cp\u003eThe status of all instances listed.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "requestSpotInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "rsirSpotInstanceRequests",
                    "name": "_rsirSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eInformation about the Spot Instance request.\u003c/p\u003e",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "[SpotInstanceRequest]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "rsirSpotInstanceRequests",
                    "name": "_rsirSpotInstanceRequests",
                    "shape": "SpotInstanceRequestList",
                    "locationName": "spotInstanceRequestSet",
                    "documentation": "\u003cp\u003eInformation about the Spot Instance request.\u003c/p\u003e",
                    "typeExposed": "[SpotInstanceRequest]",
                    "type": "[SpotInstanceRequest]"
                },
                "required": [],
                "name": "RequestSpotInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsirSpotInstanceRequests",
                        "name": "_rsirSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eInformation about the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "[SpotInstanceRequest]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsirSpotInstanceRequests",
                        "name": "_rsirSpotInstanceRequests",
                        "shape": "SpotInstanceRequestList",
                        "locationName": "spotInstanceRequestSet",
                        "documentation": "\u003cp\u003eInformation about the Spot Instance request.\u003c/p\u003e",
                        "typeExposed": "[SpotInstanceRequest]",
                        "type": "[SpotInstanceRequest]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.RequestSpotInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RequestSpotInstances",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a Spot Instance request. Spot Instances are instances that Amazon EC2 starts on your behalf when the maximum price that you specify exceeds the current Spot Price. Amazon EC2 periodically sets the Spot Price based on available Spot Instance capacity and current Spot Instance requests. For more information about Spot Instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-spot-instances.html\"\u003eSpot Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eUsers must be subscribed to the required product to run an instance with AWS Marketplace product codes.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 26,
                "ctor": "requestSpotInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rsirDryRun",
                    "name": "_rsirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsirSpotPrice",
                        "name": "_rsirSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "RequestSpotInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirDryRun",
                        "name": "_rsirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirInstanceCount",
                        "name": "_rsirInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe maximum number of Spot Instances to launch.\u003c/p\u003e \u003cp\u003eDefault: 1\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirType",
                        "name": "_rsirType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe Spot Instance request type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003eone-time\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirValidFrom",
                        "name": "_rsirValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "\u003cp\u003eThe start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\u003c/p\u003e \u003cp\u003eDefault: The request is effective indefinitely.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirValidUntil",
                        "name": "_rsirValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "\u003cp\u003eThe end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.\u003c/p\u003e \u003cp\u003eDefault: The request is effective indefinitely.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirLaunchGroup",
                        "name": "_rsirLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "\u003cp\u003eThe instance launch group. Launch groups are Spot Instances that launch together and terminate together.\u003c/p\u003e \u003cp\u003eDefault: Instances are launched and terminated individually\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirAvailabilityZoneGroup",
                        "name": "_rsirAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "\u003cp\u003eThe user-specified name for a logical grouping of bids.\u003c/p\u003e \u003cp\u003eWhen you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to bids for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.\u003c/p\u003e \u003cp\u003eIf there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the bid is expired, or the bid falls below current market), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.\u003c/p\u003e \u003cp\u003eDefault: Instances are launched in any available Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirLaunchSpecification",
                        "name": "_rsirLaunchSpecification",
                        "shape": "RequestSpotLaunchSpecification",
                        "locationName": "LaunchSpecification",
                        "documentation": null,
                        "typeExposed": "Maybe RequestSpotLaunchSpecification",
                        "type": "Maybe RequestSpotLaunchSpecification"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirAvailabilityZoneGroup",
                        "name": "_rsirAvailabilityZoneGroup",
                        "shape": "String",
                        "locationName": "availabilityZoneGroup",
                        "documentation": "\u003cp\u003eThe user-specified name for a logical grouping of bids.\u003c/p\u003e \u003cp\u003eWhen you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to bids for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.\u003c/p\u003e \u003cp\u003eIf there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the bid is expired, or the bid falls below current market), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.\u003c/p\u003e \u003cp\u003eDefault: Instances are launched in any available Availability Zone.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirDryRun",
                        "name": "_rsirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirInstanceCount",
                        "name": "_rsirInstanceCount",
                        "shape": "Integer",
                        "locationName": "instanceCount",
                        "documentation": "\u003cp\u003eThe maximum number of Spot Instances to launch.\u003c/p\u003e \u003cp\u003eDefault: 1\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirLaunchGroup",
                        "name": "_rsirLaunchGroup",
                        "shape": "String",
                        "locationName": "launchGroup",
                        "documentation": "\u003cp\u003eThe instance launch group. Launch groups are Spot Instances that launch together and terminate together.\u003c/p\u003e \u003cp\u003eDefault: Instances are launched and terminated individually\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirLaunchSpecification",
                        "name": "_rsirLaunchSpecification",
                        "shape": "RequestSpotLaunchSpecification",
                        "locationName": "LaunchSpecification",
                        "documentation": null,
                        "typeExposed": "Maybe RequestSpotLaunchSpecification",
                        "type": "Maybe RequestSpotLaunchSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsirSpotPrice",
                        "name": "_rsirSpotPrice",
                        "shape": "String",
                        "locationName": "spotPrice",
                        "documentation": "\u003cp\u003eThe maximum hourly price for any Spot Instance launched to fulfill the request.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirType",
                        "name": "_rsirType",
                        "shape": "SpotInstanceType",
                        "locationName": "type",
                        "documentation": "\u003cp\u003eThe Spot Instance request type.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003eone-time\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirValidFrom",
                        "name": "_rsirValidFrom",
                        "shape": "DateTime",
                        "locationName": "validFrom",
                        "documentation": "\u003cp\u003eThe start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.\u003c/p\u003e \u003cp\u003eDefault: The request is effective indefinitely.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsirValidUntil",
                        "name": "_rsirValidUntil",
                        "shape": "DateTime",
                        "locationName": "validUntil",
                        "documentation": "\u003cp\u003eThe end date of the request. If this is a one-time request, the request remains active until all instances launch, the request is canceled, or this date is reached. If the request is persistent, it remains active until it is canceled or this date and time is reached.\u003c/p\u003e \u003cp\u003eDefault: The request is effective indefinitely.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "resetImageAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ResetImageAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ResetImageAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ResetImageAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eResets an attribute of an AMI to its default value.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 14,
                "ctor": "resetImageAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "riarDryRun",
                    "name": "_riarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riarImageId",
                        "name": "_riarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riarAttribute",
                        "name": "_riarAttribute",
                        "shape": "ResetImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset (currently you can only reset the launch permission attribute).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ResetImageAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riarDryRun",
                        "name": "_riarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riarAttribute",
                        "name": "_riarAttribute",
                        "shape": "ResetImageAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset (currently you can only reset the launch permission attribute).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riarDryRun",
                        "name": "_riarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riarImageId",
                        "name": "_riarImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "resetInstanceAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ResetInstanceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ResetInstanceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ResetInstanceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eResets an attribute of an instance to its default value. To reset the \u003ccode\u003ekernel\u003c/code\u003e or \u003ccode\u003eramdisk\u003c/code\u003e, the instance must be in a stopped state. To reset the \u003ccode\u003eSourceDestCheck\u003c/code\u003e, the instance can be either running or stopped.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eSourceDestCheck\u003c/code\u003e attribute controls whether source/destination checking is enabled. The default value is \u003ccode\u003etrue\u003c/code\u003e, which means checking is enabled. This value must be \u003ccode\u003efalse\u003c/code\u003e for a NAT instance to perform NAT. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_NAT_Instance.html\"\u003eNAT Instances\u003c/a\u003e in the \u003ci\u003eAmazon Virtual Private Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "resetInstanceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "riar1DryRun",
                    "name": "_riar1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riar1InstanceId",
                        "name": "_riar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riar1Attribute",
                        "name": "_riar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ResetInstanceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riar1DryRun",
                        "name": "_riar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riar1Attribute",
                        "name": "_riar1Attribute",
                        "shape": "InstanceAttributeName",
                        "locationName": "attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "riar1DryRun",
                        "name": "_riar1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "riar1InstanceId",
                        "name": "_riar1InstanceId",
                        "shape": "String",
                        "locationName": "instanceId",
                        "documentation": "\u003cp\u003eThe ID of the instance.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "resetNetworkInterfaceAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ResetNetworkInterfaceAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ResetNetworkInterfaceAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ResetNetworkInterfaceAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eResets a network interface attribute. You can specify only one attribute at a time.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "resetNetworkInterfaceAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rniarDryRun",
                    "name": "_rniarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rniarNetworkInterfaceId",
                        "name": "_rniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ResetNetworkInterfaceAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rniarDryRun",
                        "name": "_rniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rniarSourceDestCheck",
                        "name": "_rniarSourceDestCheck",
                        "shape": "String",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eThe source/destination checking attribute. Resets the value to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rniarDryRun",
                        "name": "_rniarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rniarNetworkInterfaceId",
                        "name": "_rniarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rniarSourceDestCheck",
                        "name": "_rniarSourceDestCheck",
                        "shape": "String",
                        "locationName": "sourceDestCheck",
                        "documentation": "\u003cp\u003eThe source/destination checking attribute. Resets the value to \u003ccode\u003etrue\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "resetSnapshotAttributeResponse",
                "wrapper": false,
                "required": [],
                "name": "ResetSnapshotAttributeResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.ResetSnapshotAttribute",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "ResetSnapshotAttribute",
            "method": "post",
            "documentation": "\u003cp\u003eResets permission settings for the specified snapshot.\u003c/p\u003e \u003cp\u003eFor more information on modifying snapshot permissions, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html\"\u003eSharing Snapshots\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "resetSnapshotAttribute",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rsarDryRun",
                    "name": "_rsarDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsarSnapshotId",
                        "name": "_rsarSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsarAttribute",
                        "name": "_rsarAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset (currently only the attribute for permission to create volumes can be reset).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "ResetSnapshotAttribute",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsarDryRun",
                        "name": "_rsarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsarAttribute",
                        "name": "_rsarAttribute",
                        "shape": "SnapshotAttributeName",
                        "locationName": "Attribute",
                        "documentation": "\u003cp\u003eThe attribute to reset (currently only the attribute for permission to create volumes can be reset).\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsarDryRun",
                        "name": "_rsarDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsarSnapshotId",
                        "name": "_rsarSnapshotId",
                        "shape": "String",
                        "locationName": "SnapshotId",
                        "documentation": "\u003cp\u003eThe ID of the snapshot.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "revokeSecurityGroupEgressResponse",
                "wrapper": false,
                "required": [],
                "name": "RevokeSecurityGroupEgressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.RevokeSecurityGroupEgress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RevokeSecurityGroupEgress",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves one or more egress rules from a security group for EC2-VPC. The values that you specify in the revoke request (for example, ports) must match the existing rule's values for the rule to be revoked.\u003c/p\u003e \u003cp\u003eEach rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code.\u003c/p\u003e \u003cp\u003eRule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "revokeSecurityGroupEgress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rsgerDryRun",
                    "name": "_rsgerDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsgerGroupId",
                        "name": "_rsgerGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "RevokeSecurityGroupEgress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerDryRun",
                        "name": "_rsgerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerSourceSecurityGroupName",
                        "name": "_rsgerSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerSourceSecurityGroupOwnerId",
                        "name": "_rsgerSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerIpProtocol",
                        "name": "_rsgerIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerFromPort",
                        "name": "_rsgerFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerToPort",
                        "name": "_rsgerToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerCidrIp",
                        "name": "_rsgerCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsgerIpPermissions",
                        "name": "_rsgerIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerCidrIp",
                        "name": "_rsgerCidrIp",
                        "shape": "String",
                        "locationName": "cidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerDryRun",
                        "name": "_rsgerDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerFromPort",
                        "name": "_rsgerFromPort",
                        "shape": "Integer",
                        "locationName": "fromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rsgerGroupId",
                        "name": "_rsgerGroupId",
                        "shape": "String",
                        "locationName": "groupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsgerIpPermissions",
                        "name": "_rsgerIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "ipPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerIpProtocol",
                        "name": "_rsgerIpProtocol",
                        "shape": "String",
                        "locationName": "ipProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerSourceSecurityGroupName",
                        "name": "_rsgerSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerSourceSecurityGroupOwnerId",
                        "name": "_rsgerSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "sourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the destination security group. You can't specify a destination security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgerToPort",
                        "name": "_rsgerToPort",
                        "shape": "Integer",
                        "locationName": "toPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "revokeSecurityGroupIngressResponse",
                "wrapper": false,
                "required": [],
                "name": "RevokeSecurityGroupIngressResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.RevokeSecurityGroupIngress",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RevokeSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves one or more ingress rules from a security group. The values that you specify in the revoke request (for example, ports) must match the existing rule's values for the rule to be removed.\u003c/p\u003e \u003cp\u003eEach rule consists of the protocol and the CIDR range or source security group. For the TCP and UDP protocols, you must also specify the destination port or range of ports. For the ICMP protocol, you must also specify the ICMP type and code.\u003c/p\u003e \u003cp\u003eRule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 32,
                "ctor": "revokeSecurityGroupIngress",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rsgirDryRun",
                    "name": "_rsgirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "RevokeSecurityGroupIngress",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirDryRun",
                        "name": "_rsgirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirGroupName",
                        "name": "_rsgirGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirGroupId",
                        "name": "_rsgirGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirSourceSecurityGroupName",
                        "name": "_rsgirSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirSourceSecurityGroupOwnerId",
                        "name": "_rsgirSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirIpProtocol",
                        "name": "_rsgirIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirFromPort",
                        "name": "_rsgirFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirToPort",
                        "name": "_rsgirToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirCidrIp",
                        "name": "_rsgirCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsgirIpPermissions",
                        "name": "_rsgirIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirCidrIp",
                        "name": "_rsgirCidrIp",
                        "shape": "String",
                        "locationName": "CidrIp",
                        "documentation": "\u003cp\u003eThe CIDR IP address range. You can't specify this parameter when specifying a source security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirDryRun",
                        "name": "_rsgirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirFromPort",
                        "name": "_rsgirFromPort",
                        "shape": "Integer",
                        "locationName": "FromPort",
                        "documentation": "\u003cp\u003eThe start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP types.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirGroupId",
                        "name": "_rsgirGroupId",
                        "shape": "String",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003eThe ID of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirGroupName",
                        "name": "_rsgirGroupName",
                        "shape": "String",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the security group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rsgirIpPermissions",
                        "name": "_rsgirIpPermissions",
                        "shape": "IpPermissionList",
                        "locationName": "IpPermissions",
                        "documentation": "\u003cp\u003eA set of IP permissions. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "[IpPermission]",
                        "type": "[IpPermission]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirIpProtocol",
                        "name": "_rsgirIpProtocol",
                        "shape": "String",
                        "locationName": "IpProtocol",
                        "documentation": "\u003cp\u003eThe IP protocol name (\u003ccode\u003etcp\u003c/code\u003e, \u003ccode\u003eudp\u003c/code\u003e, \u003ccode\u003eicmp\u003c/code\u003e) or number (see \u003ca href=\"http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml\"\u003eProtocol Numbers\u003c/a\u003e). Use \u003ccode\u003e-1\u003c/code\u003e to specify all.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirSourceSecurityGroupName",
                        "name": "_rsgirSourceSecurityGroupName",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupName",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] The name of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirSourceSecurityGroupOwnerId",
                        "name": "_rsgirSourceSecurityGroupOwnerId",
                        "shape": "String",
                        "locationName": "SourceSecurityGroupOwnerId",
                        "documentation": "\u003cp\u003eThe ID of the source security group. You can't specify a source security group and a CIDR IP address range.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rsgirToPort",
                        "name": "_rsgirToPort",
                        "shape": "Integer",
                        "locationName": "ToPort",
                        "documentation": "\u003cp\u003eThe end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use \u003ccode\u003e-1\u003c/code\u003e to specify all ICMP codes for the ICMP type.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "reservation",
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rReservationId",
                    "name": "_rReservationId",
                    "shape": "String",
                    "locationName": "reservationId",
                    "documentation": "\u003cp\u003eThe ID of the reservation.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "required": [],
                "name": "Reservation",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReservationId",
                        "name": "_rReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "\u003cp\u003eThe ID of the reservation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rOwnerId",
                        "name": "_rOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that owns the reservation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rRequesterId",
                        "name": "_rRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "\u003cp\u003eThe ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rGroups",
                        "name": "_rGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rInstances",
                        "name": "_rInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eOne or more instances.\u003c/p\u003e",
                        "typeExposed": "[Instance]",
                        "type": "[Instance]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rGroups",
                        "name": "_rGroups",
                        "shape": "GroupIdentifierList",
                        "locationName": "groupSet",
                        "documentation": "\u003cp\u003eOne or more security groups.\u003c/p\u003e",
                        "typeExposed": "[GroupIdentifier]",
                        "type": "[GroupIdentifier]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rInstances",
                        "name": "_rInstances",
                        "shape": "InstanceList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eOne or more instances.\u003c/p\u003e",
                        "typeExposed": "[Instance]",
                        "type": "[Instance]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rOwnerId",
                        "name": "_rOwnerId",
                        "shape": "String",
                        "locationName": "ownerId",
                        "documentation": "\u003cp\u003eThe ID of the AWS account that owns the reservation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rRequesterId",
                        "name": "_rRequesterId",
                        "shape": "String",
                        "locationName": "requesterId",
                        "documentation": "\u003cp\u003eThe ID of the requester that launched the instances on your behalf (for example, AWS Management Console or Auto Scaling).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rReservationId",
                        "name": "_rReservationId",
                        "shape": "String",
                        "locationName": "reservationId",
                        "documentation": "\u003cp\u003eThe ID of the reservation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.RunInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "RunInstances",
            "method": "post",
            "documentation": "\u003cp\u003eLaunches the specified number of instances using an AMI for which you have permissions.\u003c/p\u003e \u003cp\u003eWhen you launch an instance, it enters the \u003ccode\u003epending\u003c/code\u003e state. After the instance is ready for you, it enters the \u003ccode\u003erunning\u003c/code\u003e state. To check the state of your instance, call \u003ca\u003eDescribeInstances\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eIf you don't specify a security group when launching an instance, Amazon EC2 uses the default security group. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html\"\u003eSecurity Groups\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eLinux instances have access to the public key of the key pair at boot. You can use this key to provide secure access to the instance. Amazon EC2 public images use this feature to provide secure access without passwords. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html\"\u003eKey Pairs\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eYou can provide optional user data when launching an instance. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AESDG-chapter-instancedata.html\"\u003eInstance Metadata\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eIf any of the AMIs have a product code attached for which the user has not subscribed, \u003ccode\u003eRunInstances\u003c/code\u003e fails.\u003c/p\u003e \u003cp\u003eT2 instance types can only be launched into a VPC. If you do not have a default VPC, or if you do not specify a subnet ID in the request, \u003ccode\u003eRunInstances\u003c/code\u003e fails.\u003c/p\u003e \u003cp\u003eFor more information about troubleshooting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_InstanceStraightToTerminated.html\"\u003eWhat To Do If An Instance Immediately Terminates\u003c/a\u003e, and \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesConnecting.html\"\u003eTroubleshooting Connecting to Your Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 38,
                "ctor": "runInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rir1DryRun",
                    "name": "_rir1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1ImageId",
                        "name": "_rir1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI, which you can get by calling \u003ca\u003eDescribeImages\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1MinCount",
                        "name": "_rir1MinCount",
                        "shape": "Integer",
                        "locationName": "MinCount",
                        "documentation": "\u003cp\u003eThe minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.\u003c/p\u003e \u003cp\u003eConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see \u003ca href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\"\u003eHow many instances can I run in Amazon EC2\u003c/a\u003e in the Amazon EC2 General FAQ.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1MaxCount",
                        "name": "_rir1MaxCount",
                        "shape": "Integer",
                        "locationName": "MaxCount",
                        "documentation": "\u003cp\u003eThe maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above \u003ccode\u003eMinCount\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see \u003ca href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\"\u003eHow many instances can I run in Amazon EC2\u003c/a\u003e in the Amazon EC2 General FAQ.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "RunInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1DryRun",
                        "name": "_rir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1KeyName",
                        "name": "_rir1KeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eThe name of the key pair. You can create a key pair using \u003ca\u003eCreateKeyPair\u003c/a\u003e or \u003ca\u003eImportKeyPair\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf you launch an instance without specifying a key pair, you can't connect to the instance.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1SecurityGroups",
                        "name": "_rir1SecurityGroups",
                        "shape": "SecurityGroupStringList",
                        "locationName": "SecurityGroup",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 uses the default security group.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1SecurityGroupIds",
                        "name": "_rir1SecurityGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eOne or more security group IDs. You can create a security group using \u003ca\u003eCreateSecurityGroup\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 uses the default security group.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1UserData",
                        "name": "_rir1UserData",
                        "shape": "String",
                        "locationName": "UserData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data for the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1InstanceType",
                        "name": "_rir1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eThe instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1Placement",
                        "name": "_rir1Placement",
                        "shape": "Placement",
                        "locationName": "Placement",
                        "documentation": "\u003cp\u003eThe placement for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1KernelId",
                        "name": "_rir1KernelId",
                        "shape": "String",
                        "locationName": "KernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"\u003e PV-GRUB\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1RamdiskId",
                        "name": "_rir1RamdiskId",
                        "shape": "String",
                        "locationName": "RamdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"\u003e PV-GRUB\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1BlockDeviceMappings",
                        "name": "_rir1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "\u003cp\u003eThe block device mapping.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1Monitoring",
                        "name": "_rir1Monitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "Monitoring",
                        "documentation": "\u003cp\u003eThe monitoring for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1SubnetId",
                        "name": "_rir1SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the subnet to launch the instance into.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1DisableApiTermination",
                        "name": "_rir1DisableApiTermination",
                        "shape": "Boolean",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf you set this parameter to \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter to \u003ccode\u003etrue\u003c/code\u003e and then later want to be able to terminate the instance, you must first change the value of the \u003ccode\u003edisableApiTermination\u003c/code\u003e attribute to \u003ccode\u003efalse\u003c/code\u003e using \u003ca\u003eModifyInstanceAttribute\u003c/a\u003e. Alternatively, if you set \u003ccode\u003eInstanceInitiatedShutdownBehavior\u003c/code\u003e to \u003ccode\u003eterminate\u003c/code\u003e, you can terminate the instance by running the shutdown command from the instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1InstanceInitiatedShutdownBehavior",
                        "name": "_rir1InstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estop\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1PrivateIpAddress",
                        "name": "_rir1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] The primary IP address. You must specify a value from the IP address range of the subnet.\u003c/p\u003e \u003cp\u003eOnly one private IP address can be designated as primary. Therefore, you can't specify this parameter if \u003ccode\u003ePrivateIpAddresses.n.Primary\u003c/code\u003e is set to \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003ePrivateIpAddresses.n.PrivateIpAddress\u003c/code\u003e is set to an IP address. \u003c/p\u003e \u003cp\u003eDefault: We select an IP address from the IP address range of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1ClientToken",
                        "name": "_rir1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eHow to Ensure Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 64 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1AdditionalInfo",
                        "name": "_rir1AdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "\u003cp\u003eReserved.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1NetworkInterfaces",
                        "name": "_rir1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterface",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1IamInstanceProfile",
                        "name": "_rir1IamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1EbsOptimized",
                        "name": "_rir1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1AdditionalInfo",
                        "name": "_rir1AdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "\u003cp\u003eReserved.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1BlockDeviceMappings",
                        "name": "_rir1BlockDeviceMappings",
                        "shape": "BlockDeviceMappingRequestList",
                        "locationName": "BlockDeviceMapping",
                        "documentation": "\u003cp\u003eThe block device mapping.\u003c/p\u003e",
                        "typeExposed": "[BlockDeviceMapping]",
                        "type": "[BlockDeviceMapping]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1ClientToken",
                        "name": "_rir1ClientToken",
                        "shape": "String",
                        "locationName": "clientToken",
                        "documentation": "\u003cp\u003eUnique, case-sensitive identifier you provide to ensure the idempotency of the request. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html\"\u003eHow to Ensure Idempotency\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 64 ASCII characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1DisableApiTermination",
                        "name": "_rir1DisableApiTermination",
                        "shape": "Boolean",
                        "locationName": "disableApiTermination",
                        "documentation": "\u003cp\u003eIf you set this parameter to \u003ccode\u003etrue\u003c/code\u003e, you can't terminate the instance using the Amazon EC2 console, CLI, or API; otherwise, you can. If you set this parameter to \u003ccode\u003etrue\u003c/code\u003e and then later want to be able to terminate the instance, you must first change the value of the \u003ccode\u003edisableApiTermination\u003c/code\u003e attribute to \u003ccode\u003efalse\u003c/code\u003e using \u003ca\u003eModifyInstanceAttribute\u003c/a\u003e. Alternatively, if you set \u003ccode\u003eInstanceInitiatedShutdownBehavior\u003c/code\u003e to \u003ccode\u003eterminate\u003c/code\u003e, you can terminate the instance by running the shutdown command from the instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1DryRun",
                        "name": "_rir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1EbsOptimized",
                        "name": "_rir1EbsOptimized",
                        "shape": "Boolean",
                        "locationName": "ebsOptimized",
                        "documentation": "\u003cp\u003eIndicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal Amazon EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS-optimized instance.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1IamInstanceProfile",
                        "name": "_rir1IamInstanceProfile",
                        "shape": "IamInstanceProfileSpecification",
                        "locationName": "iamInstanceProfile",
                        "documentation": "\u003cp\u003eThe IAM instance profile.\u003c/p\u003e",
                        "typeExposed": "Maybe IamInstanceProfileSpecification",
                        "type": "Maybe IamInstanceProfileSpecification"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1ImageId",
                        "name": "_rir1ImageId",
                        "shape": "String",
                        "locationName": "ImageId",
                        "documentation": "\u003cp\u003eThe ID of the AMI, which you can get by calling \u003ca\u003eDescribeImages\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1InstanceInitiatedShutdownBehavior",
                        "name": "_rir1InstanceInitiatedShutdownBehavior",
                        "shape": "ShutdownBehavior",
                        "locationName": "instanceInitiatedShutdownBehavior",
                        "documentation": "\u003cp\u003eIndicates whether an instance stops or terminates when you initiate shutdown from the instance (using the operating system command for system shutdown).\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003estop\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1InstanceType",
                        "name": "_rir1InstanceType",
                        "shape": "InstanceType",
                        "locationName": "InstanceType",
                        "documentation": "\u003cp\u003eThe instance type. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\"\u003eInstance Types\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003em1.small\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1KernelId",
                        "name": "_rir1KernelId",
                        "shape": "String",
                        "locationName": "KernelId",
                        "documentation": "\u003cp\u003eThe ID of the kernel.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"\u003e PV-GRUB\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1KeyName",
                        "name": "_rir1KeyName",
                        "shape": "String",
                        "locationName": "KeyName",
                        "documentation": "\u003cp\u003eThe name of the key pair. You can create a key pair using \u003ca\u003eCreateKeyPair\u003c/a\u003e or \u003ca\u003eImportKeyPair\u003c/a\u003e.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eIf you launch an instance without specifying a key pair, you can't connect to the instance.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1MaxCount",
                        "name": "_rir1MaxCount",
                        "shape": "Integer",
                        "locationName": "MaxCount",
                        "documentation": "\u003cp\u003eThe maximum number of instances to launch. If you specify more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches the largest possible number of instances above \u003ccode\u003eMinCount\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see \u003ca href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\"\u003eHow many instances can I run in Amazon EC2\u003c/a\u003e in the Amazon EC2 General FAQ.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rir1MinCount",
                        "name": "_rir1MinCount",
                        "shape": "Integer",
                        "locationName": "MinCount",
                        "documentation": "\u003cp\u003eThe minimum number of instances to launch. If you specify a minimum that is more instances than Amazon EC2 can launch in the target Availability Zone, Amazon EC2 launches no instances.\u003c/p\u003e \u003cp\u003eConstraints: Between 1 and the maximum number you're allowed for the specified instance type. For more information about the default limits, and how to request an increase, see \u003ca href=\"http://aws.amazon.com/ec2/faqs/#How_many_instances_can_I_run_in_Amazon_EC2\"\u003eHow many instances can I run in Amazon EC2\u003c/a\u003e in the Amazon EC2 General FAQ.\u003c/p\u003e",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1Monitoring",
                        "name": "_rir1Monitoring",
                        "shape": "RunInstancesMonitoringEnabled",
                        "locationName": "Monitoring",
                        "documentation": "\u003cp\u003eThe monitoring for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe RunInstancesMonitoringEnabled",
                        "type": "Maybe RunInstancesMonitoringEnabled"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1NetworkInterfaces",
                        "name": "_rir1NetworkInterfaces",
                        "shape": "InstanceNetworkInterfaceSpecificationList",
                        "locationName": "networkInterface",
                        "documentation": "\u003cp\u003eOne or more network interfaces.\u003c/p\u003e",
                        "typeExposed": "[InstanceNetworkInterfaceSpecification]",
                        "type": "[InstanceNetworkInterfaceSpecification]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1Placement",
                        "name": "_rir1Placement",
                        "shape": "Placement",
                        "locationName": "Placement",
                        "documentation": "\u003cp\u003eThe placement for the instance.\u003c/p\u003e",
                        "typeExposed": "Maybe Placement",
                        "type": "Maybe Placement"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1PrivateIpAddress",
                        "name": "_rir1PrivateIpAddress",
                        "shape": "String",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003e[EC2-VPC] The primary IP address. You must specify a value from the IP address range of the subnet.\u003c/p\u003e \u003cp\u003eOnly one private IP address can be designated as primary. Therefore, you can't specify this parameter if \u003ccode\u003ePrivateIpAddresses.n.Primary\u003c/code\u003e is set to \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003ePrivateIpAddresses.n.PrivateIpAddress\u003c/code\u003e is set to an IP address. \u003c/p\u003e \u003cp\u003eDefault: We select an IP address from the IP address range of the subnet.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1RamdiskId",
                        "name": "_rir1RamdiskId",
                        "shape": "String",
                        "locationName": "RamdiskId",
                        "documentation": "\u003cp\u003eThe ID of the RAM disk.\u003c/p\u003e \u003cimportant\u003e \u003cp\u003eWe recommend that you use PV-GRUB instead of kernels and RAM disks. For more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/UserProvidedkernels.html\"\u003e PV-GRUB\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1SecurityGroupIds",
                        "name": "_rir1SecurityGroupIds",
                        "shape": "SecurityGroupIdStringList",
                        "locationName": "SecurityGroupId",
                        "documentation": "\u003cp\u003eOne or more security group IDs. You can create a security group using \u003ca\u003eCreateSecurityGroup\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 uses the default security group.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "rir1SecurityGroups",
                        "name": "_rir1SecurityGroups",
                        "shape": "SecurityGroupStringList",
                        "locationName": "SecurityGroup",
                        "documentation": "\u003cp\u003e[EC2-Classic, default VPC] One or more security group names. For a nondefault VPC, you must use security group IDs instead.\u003c/p\u003e \u003cp\u003eDefault: Amazon EC2 uses the default security group.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1SubnetId",
                        "name": "_rir1SubnetId",
                        "shape": "String",
                        "locationName": "SubnetId",
                        "documentation": "\u003cp\u003e[EC2-VPC] The ID of the subnet to launch the instance into.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rir1UserData",
                        "name": "_rir1UserData",
                        "shape": "String",
                        "locationName": "UserData",
                        "documentation": "\u003cp\u003eThe Base64-encoded MIME user data for the instances.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "startInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "sirStartingInstances",
                    "name": "_sirStartingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more started instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "sirStartingInstances",
                    "name": "_sirStartingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more started instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "required": [],
                "name": "StartInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirStartingInstances",
                        "name": "_sirStartingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more started instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirStartingInstances",
                        "name": "_sirStartingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more started instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.StartInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "StartInstances",
            "method": "post",
            "documentation": "\u003cp\u003eStarts an Amazon EBS-backed AMI that you've previously stopped.\u003c/p\u003e \u003cp\u003eInstances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for hourly instance usage. However, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time. Each time you transition an instance from stopped to started, Amazon EC2 charges a full instance hour, even if transitions happen multiple times within a single hour.\u003c/p\u003e \u003cp\u003eBefore stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.\u003c/p\u003e \u003cp\u003ePerforming this operation on an instance that uses an instance store as its root device returns an error.\u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html\"\u003eStopping Instances\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 18,
                "ctor": "startInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "sirInstanceIds",
                    "name": "_sirInstanceIds",
                    "shape": "InstanceIdStringList",
                    "locationName": "InstanceId",
                    "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                    "typeExposed": "[Text]",
                    "type": "[Text]"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "StartInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirInstanceIds",
                        "name": "_sirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirAdditionalInfo",
                        "name": "_sirAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "\u003cp\u003eReserved.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirDryRun",
                        "name": "_sirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirAdditionalInfo",
                        "name": "_sirAdditionalInfo",
                        "shape": "String",
                        "locationName": "additionalInfo",
                        "documentation": "\u003cp\u003eReserved.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sirDryRun",
                        "name": "_sirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirInstanceIds",
                        "name": "_sirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "stopInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "sirStoppingInstances",
                    "name": "_sirStoppingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more stopped instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "sirStoppingInstances",
                    "name": "_sirStoppingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more stopped instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "required": [],
                "name": "StopInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirStoppingInstances",
                        "name": "_sirStoppingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more stopped instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sirStoppingInstances",
                        "name": "_sirStoppingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more stopped instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.StopInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "StopInstances",
            "method": "post",
            "documentation": "\u003cp\u003eStops an Amazon EBS-backed instance. Each time you transition an instance from stopped to started, Amazon EC2 charges a full instance hour, even if transitions happen multiple times within a single hour.\u003c/p\u003e \u003cp\u003eYou can't start or stop Spot Instances.\u003c/p\u003e \u003cp\u003eInstances that use Amazon EBS volumes as their root devices can be quickly stopped and started. When an instance is stopped, the compute resources are released and you are not billed for hourly instance usage. However, your root partition Amazon EBS volume remains, continues to persist your data, and you are charged for Amazon EBS volume usage. You can restart your instance at any time.\u003c/p\u003e \u003cp\u003eBefore stopping an instance, make sure it is in a state from which it can be restarted. Stopping an instance does not preserve data stored in RAM.\u003c/p\u003e \u003cp\u003ePerforming this operation on an instance that uses an instance store as its root device returns an error.\u003c/p\u003e \u003cp\u003eYou can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between stopping and terminating instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html\"\u003eInstance Lifecycle\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information about troubleshooting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesStopping.html\"\u003eTroubleshooting Stopping Your Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 16,
                "ctor": "stopInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "sir1DryRun",
                    "name": "_sir1DryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "StopInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sir1DryRun",
                        "name": "_sir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sir1InstanceIds",
                        "name": "_sir1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sir1Force",
                        "name": "_sir1Force",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "\u003cp\u003eForces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sir1DryRun",
                        "name": "_sir1DryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "sir1Force",
                        "name": "_sir1Force",
                        "shape": "Boolean",
                        "locationName": "force",
                        "documentation": "\u003cp\u003eForces the instances to stop. The instances do not have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures. This option is not recommended for Windows instances.\u003c/p\u003e \u003cp\u003eDefault: \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "sir1InstanceIds",
                        "name": "_sir1InstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "terminateInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "tirTerminatingInstances",
                    "name": "_tirTerminatingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more terminated instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "tirTerminatingInstances",
                    "name": "_tirTerminatingInstances",
                    "shape": "InstanceStateChangeList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eInformation about one or more terminated instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceStateChange]",
                    "type": "[InstanceStateChange]"
                },
                "required": [],
                "name": "TerminateInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tirTerminatingInstances",
                        "name": "_tirTerminatingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more terminated instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tirTerminatingInstances",
                        "name": "_tirTerminatingInstances",
                        "shape": "InstanceStateChangeList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eInformation about one or more terminated instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceStateChange]",
                        "type": "[InstanceStateChange]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.TerminateInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "TerminateInstances",
            "method": "post",
            "documentation": "\u003cp\u003eShuts down one or more instances. This operation is idempotent; if you terminate an instance more than once, each call succeeds.\u003c/p\u003e \u003cp\u003eTerminated instances remain visible after termination (for approximately one hour).\u003c/p\u003e \u003cp\u003eBy default, Amazon EC2 deletes all Amazon EBS volumes that were attached when the instance launched. Volumes attached after instance launch continue running.\u003c/p\u003e \u003cp\u003eYou can stop, start, and terminate EBS-backed instances. You can only terminate instance store-backed instances. What happens to an instance differs if you stop it or terminate it. For example, when you stop an instance, the root device and any other devices attached to the instance persist. When you terminate an instance, the root device and any other devices attached during the instance launch are automatically deleted. For more information about the differences between stopping and terminating instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html\"\u003eInstance Lifecycle\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e \u003cp\u003eFor more information about troubleshooting, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/TroubleshootingInstancesShuttingDown.html\"\u003eTroubleshooting Terminating Your Instance\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "terminateInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "tirDryRun",
                    "name": "_tirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "TerminateInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tirDryRun",
                        "name": "_tirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tirInstanceIds",
                        "name": "_tirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tirDryRun",
                        "name": "_tirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "tirInstanceIds",
                        "name": "_tirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "unassignPrivateIpAddressesResponse",
                "wrapper": false,
                "required": [],
                "name": "UnassignPrivateIpAddressesResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.EC2.UnassignPrivateIpAddresses",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "UnassignPrivateIpAddresses",
            "method": "post",
            "documentation": "\u003cp\u003eUnassigns one or more secondary private IP addresses from a network interface.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 24,
                "ctor": "unassignPrivateIpAddresses",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "upiarNetworkInterfaceId",
                    "name": "_upiarNetworkInterfaceId",
                    "shape": "String",
                    "locationName": "networkInterfaceId",
                    "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "required": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upiarNetworkInterfaceId",
                        "name": "_upiarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "headers": [],
                "queryPad": 0,
                "name": "UnassignPrivateIpAddresses",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "upiarPrivateIpAddresses",
                        "name": "_upiarPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upiarNetworkInterfaceId",
                        "name": "_upiarNetworkInterfaceId",
                        "shape": "String",
                        "locationName": "networkInterfaceId",
                        "documentation": "\u003cp\u003eThe ID of the network interface.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "upiarPrivateIpAddresses",
                        "name": "_upiarPrivateIpAddresses",
                        "shape": "PrivateIpAddressStringList",
                        "locationName": "privateIpAddress",
                        "documentation": "\u003cp\u003eThe secondary private IP addresses to unassign from the network interface. You can specify this option multiple times to unassign more than one IP address.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "EC2",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "fieldPad": 0,
                "ctor": "unmonitorInstancesResult",
                "field": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "uirInstanceMonitorings",
                    "name": "_uirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "[InstanceMonitoring]"
                },
                "wrapper": false,
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "uirInstanceMonitorings",
                    "name": "_uirInstanceMonitorings",
                    "shape": "InstanceMonitoringList",
                    "locationName": "instancesSet",
                    "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                    "typeExposed": "[InstanceMonitoring]",
                    "type": "[InstanceMonitoring]"
                },
                "required": [],
                "name": "UnmonitorInstancesResult",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uirInstanceMonitorings",
                        "name": "_uirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "[InstanceMonitoring]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uirInstanceMonitorings",
                        "name": "_uirInstanceMonitorings",
                        "shape": "InstanceMonitoringList",
                        "locationName": "instancesSet",
                        "documentation": "\u003cp\u003eMonitoring information for one or more instances.\u003c/p\u003e",
                        "typeExposed": "[InstanceMonitoring]",
                        "type": "[InstanceMonitoring]"
                    }
                ]
            },
            "namespace": "Network.AWS.EC2.UnmonitorInstances",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.EC2.Types"
            ],
            "name": "UnmonitorInstances",
            "method": "post",
            "documentation": "\u003cp\u003eDisables monitoring for a running instance. For more information about monitoring instances, see \u003ca href=\"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch.html\"\u003eMonitoring Your Instances and Volumes\u003c/a\u003e in the \u003ci\u003eAmazon Elastic Compute Cloud User Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "fieldPad": 15,
                "ctor": "unmonitorInstances",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "payload": {
                    "location": "body-xml",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "uirDryRun",
                    "name": "_uirDryRun",
                    "shape": "Boolean",
                    "locationName": "dryRun",
                    "documentation": null,
                    "typeExposed": "Maybe Bool",
                    "type": "Maybe Bool"
                },
                "required": [],
                "headers": [],
                "queryPad": 0,
                "name": "UnmonitorInstances",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uirDryRun",
                        "name": "_uirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uirInstanceIds",
                        "name": "_uirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uirDryRun",
                        "name": "_uirDryRun",
                        "shape": "Boolean",
                        "locationName": "dryRun",
                        "documentation": null,
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "body-xml",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uirInstanceIds",
                        "name": "_uirInstanceIds",
                        "shape": "InstanceIdStringList",
                        "locationName": "InstanceId",
                        "documentation": "\u003cp\u003eOne or more instance IDs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        }
    ]
}