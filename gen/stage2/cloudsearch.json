{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "CloudSearch",
        "error": "CloudSearchError",
        "namespace": "Network.AWS.CloudSearch",
        "protocol": "query",
        "imports": [
            "Network.AWS.CloudSearch.BuildSuggesters",
            "Network.AWS.CloudSearch.CreateDomain",
            "Network.AWS.CloudSearch.DefineAnalysisScheme",
            "Network.AWS.CloudSearch.DefineExpression",
            "Network.AWS.CloudSearch.DefineIndexField",
            "Network.AWS.CloudSearch.DefineSuggester",
            "Network.AWS.CloudSearch.DeleteAnalysisScheme",
            "Network.AWS.CloudSearch.DeleteDomain",
            "Network.AWS.CloudSearch.DeleteExpression",
            "Network.AWS.CloudSearch.DeleteIndexField",
            "Network.AWS.CloudSearch.DeleteSuggester",
            "Network.AWS.CloudSearch.DescribeAnalysisSchemes",
            "Network.AWS.CloudSearch.DescribeAvailabilityOptions",
            "Network.AWS.CloudSearch.DescribeDomains",
            "Network.AWS.CloudSearch.DescribeExpressions",
            "Network.AWS.CloudSearch.DescribeIndexFields",
            "Network.AWS.CloudSearch.DescribeScalingParameters",
            "Network.AWS.CloudSearch.DescribeServiceAccessPolicies",
            "Network.AWS.CloudSearch.DescribeSuggesters",
            "Network.AWS.CloudSearch.IndexDocuments",
            "Network.AWS.CloudSearch.ListDomainNames",
            "Network.AWS.CloudSearch.Types",
            "Network.AWS.CloudSearch.UpdateAvailabilityOptions",
            "Network.AWS.CloudSearch.UpdateScalingParameters",
            "Network.AWS.CloudSearch.UpdateServiceAccessPolicies"
        ],
        "name": "Amazon CloudSearch",
        "version": "2013-01-01",
        "documentation": "\u003cfullname\u003eAmazon CloudSearch Configuration Service\u003c/fullname\u003e \u003cp\u003eYou use the Amazon CloudSearch configuration service to create, configure, and manage search domains. Configuration service requests are submitted using the AWS Query protocol. AWS Query requests are HTTP or HTTPS requests submitted via HTTP GET or POST with a query parameter named Action.\u003c/p\u003e \u003cp\u003eThe endpoint for configuration service requests is region-specific: cloudsearch.\u003ci\u003eregion\u003c/i\u003e.amazonaws.com. For example, cloudsearch.us-east-1.amazonaws.com. For a current list of supported regions and endpoints, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#cloudsearch_region\" target=\"_blank\"\u003eRegions and Endpoints\u003c/a\u003e.\u003c/p\u003e",
        "xmlNamespace": "http://cloudsearch.amazonaws.com/doc/2013-01-01/",
        "endpoint": "regional",
        "endpointPrefix": "cloudsearch"
    },
    "cabal": {
        "library": "amazonka-cloudsearch",
        "modules": [
            "Network.AWS.CloudSearch",
            "Network.AWS.CloudSearch.BuildSuggesters",
            "Network.AWS.CloudSearch.CreateDomain",
            "Network.AWS.CloudSearch.DefineAnalysisScheme",
            "Network.AWS.CloudSearch.DefineExpression",
            "Network.AWS.CloudSearch.DefineIndexField",
            "Network.AWS.CloudSearch.DefineSuggester",
            "Network.AWS.CloudSearch.DeleteAnalysisScheme",
            "Network.AWS.CloudSearch.DeleteDomain",
            "Network.AWS.CloudSearch.DeleteExpression",
            "Network.AWS.CloudSearch.DeleteIndexField",
            "Network.AWS.CloudSearch.DeleteSuggester",
            "Network.AWS.CloudSearch.DescribeAnalysisSchemes",
            "Network.AWS.CloudSearch.DescribeAvailabilityOptions",
            "Network.AWS.CloudSearch.DescribeDomains",
            "Network.AWS.CloudSearch.DescribeExpressions",
            "Network.AWS.CloudSearch.DescribeIndexFields",
            "Network.AWS.CloudSearch.DescribeScalingParameters",
            "Network.AWS.CloudSearch.DescribeServiceAccessPolicies",
            "Network.AWS.CloudSearch.DescribeSuggesters",
            "Network.AWS.CloudSearch.IndexDocuments",
            "Network.AWS.CloudSearch.ListDomainNames",
            "Network.AWS.CloudSearch.Types",
            "Network.AWS.CloudSearch.UpdateAvailabilityOptions",
            "Network.AWS.CloudSearch.UpdateScalingParameters",
            "Network.AWS.CloudSearch.UpdateServiceAccessPolicies"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "DomainStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsDomainId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsDomainName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsRequiresIndexDocuments",
                    "type": "Bool"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsCreated",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsDeleted",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsDocService",
                    "type": "Maybe ServiceEndpoint"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsSearchService",
                    "type": "Maybe ServiceEndpoint"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsProcessing",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsSearchInstanceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsSearchPartitionCount",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsSearchInstanceCount",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsLimits",
                    "type": "Maybe Limits"
                }
            ]
        },
        "DocumentSuggesterOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsoSourceField",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsoFuzzyMatching",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsoSortExpression",
                    "type": "Maybe Text"
                }
            ]
        },
        "DoubleArrayOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "daoDefaultValue",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "daoSourceFields",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "daoFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "daoSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "daoReturnEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "IndexField": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifIndexFieldName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifIndexFieldType",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifIntOptions",
                    "type": "Maybe IntOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifDoubleOptions",
                    "type": "Maybe DoubleOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifLiteralOptions",
                    "type": "Maybe LiteralOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifTextOptions",
                    "type": "Maybe TextOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifDateOptions",
                    "type": "Maybe DateOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifLatLonOptions",
                    "type": "Maybe LatLonOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifIntArrayOptions",
                    "type": "Maybe IntArrayOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifDoubleArrayOptions",
                    "type": "Maybe DoubleArrayOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifLiteralArrayOptions",
                    "type": "Maybe LiteralArrayOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifTextArrayOptions",
                    "type": "Maybe TextArrayOptions"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifDateArrayOptions",
                    "type": "Maybe DateArrayOptions"
                }
            ]
        },
        "DateOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doSourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "doSortEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "TextArrayOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taoDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taoSourceFields",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taoReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taoHighlightEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "taoAnalysisScheme",
                    "type": "Maybe Text"
                }
            ]
        },
        "AnalysisScheme": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asAnalysisSchemeName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asAnalysisSchemeLanguage",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asAnalysisOptions",
                    "type": "Maybe AnalysisOptions"
                }
            ]
        },
        "ScalingParameters": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spDesiredInstanceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spDesiredReplicationCount",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spDesiredPartitionCount",
                    "type": "Maybe Int"
                }
            ]
        },
        "AnalysisOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aoSynonyms",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aoStopwords",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aoStemmingDictionary",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aoJapaneseTokenizationDictionary",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aoAlgorithmicStemming",
                    "type": "Maybe Text"
                }
            ]
        },
        "DoubleOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1DefaultValue",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1SourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1FacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1SearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1ReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "do1SortEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "TextOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toSourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toSortEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toHighlightEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "toAnalysisScheme",
                    "type": "Maybe Text"
                }
            ]
        },
        "AvailabilityOptionsStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aosOptions",
                    "type": "Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "aosStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "IndexFieldStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifsOptions",
                    "type": "IndexField"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ifsStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ScalingParametersStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spsOptions",
                    "type": "ScalingParameters"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spsStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "AnalysisSchemeStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "assOptions",
                    "type": "AnalysisScheme"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "assStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "namespace": "Network.AWS.CloudSearch.Types",
        "ServiceEndpoint": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "seEndpoint",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "Limits": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "enum",
                "num"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "limMaximumReplicationCount",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "limMaximumPartitionCount",
                    "type": "Int"
                }
            ],
            "type": "record",
            "optional": []
        },
        "ExpressionStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esOptions",
                    "type": "Expression"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "imports": [],
        "LatLonOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloSourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lloSortEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "SuggesterStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ssOptions",
                    "type": "Suggester"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ssStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        },
        "OptionStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osCreationDate",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osUpdateDate",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osState",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osUpdateVersion",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osPendingDeletion",
                    "type": "Maybe Bool"
                }
            ]
        },
        "LiteralArrayOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "laoDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "laoSourceFields",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "laoFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "laoSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "laoReturnEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "BaseException": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "beCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "beMessage",
                    "type": "Maybe Text"
                }
            ]
        },
        "IntArrayOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iaoDefaultValue",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iaoSourceFields",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iaoFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iaoSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iaoReturnEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "Expression": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "expExpressionName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "expExpressionValue",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "DateArrayOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dao1DefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dao1SourceFields",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dao1FacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dao1SearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dao1ReturnEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "Suggester": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugSuggesterName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugDocumentSuggesterOptions",
                    "type": "DocumentSuggesterOptions"
                }
            ],
            "type": "record",
            "optional": []
        },
        "IntOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioDefaultValue",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioSourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ioSortEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "LiteralOptions": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loSourceField",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loFacetEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loSearchEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loReturnEnabled",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "loSortEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "AccessPoliciesStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "apsOptions",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "apsStatus",
                    "type": "OptionStatus"
                }
            ],
            "type": "record",
            "optional": []
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "daorAvailabilityOptions",
                    "type": "Maybe AvailabilityOptionsStatus"
                },
                "wrapper": false,
                "name": "DescribeAvailabilityOptionsResponse",
                "resultWrapper": "DescribeAvailabilityOptionsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeAvailabilityOptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeAvailabilityOptions",
            "method": "post",
            "documentation": "\u003cp\u003eGets the availability options configured for a domain. By default, shows the configuration with any pending changes. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\" target=\"_blank\"\u003eConfiguring Availability Options\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "daorDomainName",
                        "type": "Text"
                    }
                ],
                "name": "DescribeAvailabilityOptionsRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "daorDeployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "derExpressions",
                    "type": "List ExpressionStatus"
                },
                "wrapper": false,
                "name": "DescribeExpressionsResponse",
                "resultWrapper": "DescribeExpressionsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeExpressions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeExpressions",
            "method": "post",
            "documentation": "\u003cp\u003eGets the expressions configured for the search domain. Can be limited to specific expressions by name. By default, shows all expressions and includes any pending changes to the configuration. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html\" target=\"_blank\"\u003eConfiguring Expressions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "der1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "der1ExpressionNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeExpressionsRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "der1Deployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "derExpression",
                    "type": "ExpressionStatus"
                },
                "wrapper": false,
                "name": "DefineExpressionResponse",
                "resultWrapper": "DefineExpressionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DefineExpression",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DefineExpression",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures an \u003ccode\u003e\u003ca\u003eExpression\u003c/a\u003e\u003c/code\u003e for the search domain. Used to create new expressions and modify existing ones. If the expression exists, the new configuration replaces the old one. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html\" target=\"_blank\"\u003eConfiguring Expressions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "der2DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "der2Expression",
                        "type": "Expression"
                    }
                ],
                "name": "DefineExpressionRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsprScalingParameters",
                    "type": "ScalingParametersStatus"
                },
                "wrapper": false,
                "name": "DescribeScalingParametersResponse",
                "resultWrapper": "DescribeScalingParametersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeScalingParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeScalingParameters",
            "method": "post",
            "documentation": "\u003cp\u003eGets the scaling parameters configured for a domain. A domain's scaling parameters specify the desired search instance type and replication count. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html\" target=\"_blank\"\u003eConfiguring Scaling Options\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsprDomainName",
                    "type": "Text"
                },
                "name": "DescribeScalingParametersRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsaprAccessPolicies",
                    "type": "AccessPoliciesStatus"
                },
                "wrapper": false,
                "name": "DescribeServiceAccessPoliciesResponse",
                "resultWrapper": "DescribeServiceAccessPoliciesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeServiceAccessPolicies",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeServiceAccessPolicies",
            "method": "post",
            "documentation": "\u003cp\u003eGets information about the access policies that control access to the domain's document and search endpoints. By default, shows the configuration with any pending changes. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html\" target=\"_blank\"\u003eConfiguring Access for a Search Domain\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsaprDomainName",
                        "type": "Text"
                    }
                ],
                "name": "DescribeServiceAccessPoliciesRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsaprDeployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsrSuggesters",
                    "type": "List SuggesterStatus"
                },
                "wrapper": false,
                "name": "DescribeSuggestersResponse",
                "resultWrapper": "DescribeSuggestersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeSuggesters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeSuggesters",
            "method": "post",
            "documentation": "\u003cp\u003eGets the suggesters configured for a domain. A suggester enables you to display possible matches before users finish typing their queries. Can be limited to specific suggesters by name. By default, shows all suggesters and includes any pending changes to the configuration. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html\" target=\"_blank\"\u003eGetting Search Suggestions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsrSuggesterNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeSuggestersRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsrDeployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "uaorAvailabilityOptions",
                    "type": "Maybe AvailabilityOptionsStatus"
                },
                "wrapper": false,
                "name": "UpdateAvailabilityOptionsResponse",
                "resultWrapper": "UpdateAvailabilityOptionsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.UpdateAvailabilityOptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "UpdateAvailabilityOptions",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures the availability options for a domain. Enabling the Multi-AZ option expands an Amazon CloudSearch domain to an additional Availability Zone in the same Region to increase fault tolerance in the event of a service disruption. Changes to the Multi-AZ option can take about half an hour to become active. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-availability-options.html\" target=\"_blank\"\u003eConfiguring Availability Options\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uaorDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uaorMultiAZ",
                        "type": "Bool"
                    }
                ],
                "name": "UpdateAvailabilityOptionsRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "der1Expression",
                    "type": "ExpressionStatus"
                },
                "wrapper": false,
                "name": "DeleteExpressionResponse",
                "resultWrapper": "DeleteExpressionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DeleteExpression",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DeleteExpression",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves an \u003ccode\u003e\u003ca\u003eExpression\u003c/a\u003e\u003c/code\u003e from the search domain. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-expressions.html\" target=\"_blank\"\u003eConfiguring Expressions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "derDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "derExpressionName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteExpressionRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ldnrDomainNames",
                    "type": "Map Text Text"
                },
                "wrapper": false,
                "name": "ListDomainNamesResponse",
                "resultWrapper": "ListDomainNamesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.ListDomainNames",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "ListDomainNames",
            "method": "post",
            "documentation": "\u003cp\u003eLists all search domains owned by an account.\u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsrSuggester",
                    "type": "SuggesterStatus"
                },
                "wrapper": false,
                "name": "DefineSuggesterResponse",
                "resultWrapper": "DefineSuggesterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DefineSuggester",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DefineSuggester",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures a suggester for a domain. A suggester enables you to display possible matches before users finish typing their queries. When you configure a suggester, you must specify the name of the text field you want to search for possible matches and a unique name for the suggester. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html\" target=\"_blank\"\u003eGetting Search Suggestions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsr1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsr1Suggester",
                        "type": "Suggester"
                    }
                ],
                "name": "DefineSuggesterRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddrDomainStatusList",
                    "type": "List DomainStatus"
                },
                "wrapper": false,
                "name": "DescribeDomainsResponse",
                "resultWrapper": "DescribeDomainsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeDomains",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeDomains",
            "method": "post",
            "documentation": "\u003cp\u003eGets information about the search domains owned by this account. Can be limited to specific domains. Shows all domains by default. To get the number of searchable documents in a domain, use the console or submit a \u003ccode\u003ematchall\u003c/code\u003e request to your domain's search endpoint: \u003ccode\u003eq=matchall&amp;amp;q.parser=structured&amp;amp;size=0\u003c/code\u003e. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html\" target=\"_blank\"\u003eGetting Information about a Search Domain\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddrDomainNames",
                    "type": "List Text"
                },
                "name": "DescribeDomainsRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dasrAnalysisScheme",
                    "type": "AnalysisSchemeStatus"
                },
                "wrapper": false,
                "name": "DeleteAnalysisSchemeResponse",
                "resultWrapper": "DeleteAnalysisSchemeResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DeleteAnalysisScheme",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DeleteAnalysisScheme",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes an analysis scheme. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html\" target=\"_blank\"\u003eConfiguring Analysis Schemes\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasrAnalysisSchemeName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteAnalysisSchemeRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dasrAnalysisSchemes",
                    "type": "List AnalysisSchemeStatus"
                },
                "wrapper": false,
                "name": "DescribeAnalysisSchemesResponse",
                "resultWrapper": "DescribeAnalysisSchemesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeAnalysisSchemes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeAnalysisSchemes",
            "method": "post",
            "documentation": "\u003cp\u003eGets the analysis schemes configured for a domain. An analysis scheme defines language-specific text processing options for a \u003ccode\u003etext\u003c/code\u003e field. Can be limited to specific analysis schemes by name. By default, shows all analysis schemes and includes any pending changes to the configuration. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html\" target=\"_blank\"\u003eConfiguring Analysis Schemes\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasr1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasr1AnalysisSchemeNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeAnalysisSchemesRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasr1Deployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdrDomainStatus",
                    "type": "Maybe DomainStatus"
                },
                "wrapper": false,
                "name": "CreateDomainResponse",
                "resultWrapper": "CreateDomainResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.CreateDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "CreateDomain",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a new search domain. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/creating-domains.html\" target=\"_blank\"\u003eCreating a Search Domain\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdrDomainName",
                    "type": "Text"
                },
                "name": "CreateDomainRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "difrIndexFields",
                    "type": "List IndexFieldStatus"
                },
                "wrapper": false,
                "name": "DescribeIndexFieldsResponse",
                "resultWrapper": "DescribeIndexFieldsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DescribeIndexFields",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DescribeIndexFields",
            "method": "post",
            "documentation": "\u003cp\u003eGets information about the index fields configured for the search domain. Can be limited to specific fields by name. By default, shows all fields and includes any pending changes to the configuration. Set the \u003ccode\u003eDeployed\u003c/code\u003e option to \u003ccode\u003etrue\u003c/code\u003e to show the active configuration and exclude pending changes. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-domain-info.html\" target=\"_blank\"\u003eGetting Domain Information\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difrFieldNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeIndexFieldsRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difrDeployed",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dsr2Suggester",
                    "type": "SuggesterStatus"
                },
                "wrapper": false,
                "name": "DeleteSuggesterResponse",
                "resultWrapper": "DeleteSuggesterResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DeleteSuggester",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DeleteSuggester",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a suggester. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html\" target=\"_blank\"\u003eGetting Search Suggestions\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsr2DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsr2SuggesterName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteSuggesterRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dasr1AnalysisScheme",
                    "type": "AnalysisSchemeStatus"
                },
                "wrapper": false,
                "name": "DefineAnalysisSchemeResponse",
                "resultWrapper": "DefineAnalysisSchemeResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DefineAnalysisScheme",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DefineAnalysisScheme",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures an analysis scheme that can be applied to a \u003ccode\u003etext\u003c/code\u003e or \u003ccode\u003etext-array\u003c/code\u003e field to define language-specific text processing options. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-analysis-schemes.html\" target=\"_blank\"\u003eConfiguring Analysis Schemes\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasr2DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasr2AnalysisScheme",
                        "type": "AnalysisScheme"
                    }
                ],
                "name": "DefineAnalysisSchemeRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "idrFieldNames",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "IndexDocumentsResponse",
                "resultWrapper": "IndexDocumentsResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.IndexDocuments",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "IndexDocuments",
            "method": "post",
            "documentation": "\u003cp\u003eTells the search domain to start indexing its documents using the latest indexing options. This operation must be invoked to activate options whose \u003ca\u003eOptionStatus\u003c/a\u003e is \u003ccode\u003eRequiresIndexDocuments\u003c/code\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "idrDomainName",
                    "type": "Text"
                },
                "name": "IndexDocumentsRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "difrIndexField",
                    "type": "IndexFieldStatus"
                },
                "wrapper": false,
                "name": "DeleteIndexFieldResponse",
                "resultWrapper": "DeleteIndexFieldResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DeleteIndexField",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DeleteIndexField",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves an \u003ccode\u003e\u003ca\u003eIndexField\u003c/a\u003e\u003c/code\u003e from the search domain. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html\" target=\"_blank\"\u003eConfiguring Index Fields\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difr1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difr1IndexFieldName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteIndexFieldRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "usaprAccessPolicies",
                    "type": "AccessPoliciesStatus"
                },
                "wrapper": false,
                "name": "UpdateServiceAccessPoliciesResponse",
                "resultWrapper": "UpdateServiceAccessPoliciesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.UpdateServiceAccessPolicies",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "UpdateServiceAccessPolicies",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures the access rules that control access to the domain's document and search endpoints. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-access.html\" target=\"_blank\"\u003e Configuring Access for an Amazon CloudSearch Domain\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "usapr1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "usapr1AccessPolicies",
                        "type": "Text"
                    }
                ],
                "name": "UpdateServiceAccessPoliciesRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "usprScalingParameters",
                    "type": "ScalingParametersStatus"
                },
                "wrapper": false,
                "name": "UpdateScalingParametersResponse",
                "resultWrapper": "UpdateScalingParametersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.UpdateScalingParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "UpdateScalingParameters",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures scaling parameters for a domain. A domain's scaling parameters specify the desired search instance type and replication count. Amazon CloudSearch will still automatically scale your domain based on the volume of data and traffic, but not below the desired instance type and replication count. If the Multi-AZ option is enabled, these values control the resources used per Availability Zone. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-scaling-options.html\" target=\"_blank\"\u003eConfiguring Scaling Options\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uspr1DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uspr1ScalingParameters",
                        "type": "ScalingParameters"
                    }
                ],
                "name": "UpdateScalingParametersRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "bsrFieldNames",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "BuildSuggestersResponse",
                "resultWrapper": "BuildSuggestersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.BuildSuggesters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "BuildSuggesters",
            "method": "post",
            "documentation": "\u003cp\u003eIndexes the search suggestions. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/getting-suggestions.html#configuring-suggesters\"\u003eConfiguring Suggesters\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "bsrDomainName",
                    "type": "Text"
                },
                "name": "BuildSuggestersRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddrDomainStatus",
                    "type": "Maybe DomainStatus"
                },
                "wrapper": false,
                "name": "DeleteDomainResponse",
                "resultWrapper": "DeleteDomainResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DeleteDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DeleteDomain",
            "method": "post",
            "documentation": "\u003cp\u003ePermanently deletes a search domain and all of its data. Once a domain has been deleted, it cannot be recovered. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/deleting-domains.html\" target=\"_blank\"\u003eDeleting a Search Domain\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddrDomainName",
                    "type": "Text"
                },
                "name": "DeleteDomainRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "difr1IndexField",
                    "type": "IndexFieldStatus"
                },
                "wrapper": false,
                "name": "DefineIndexFieldResponse",
                "resultWrapper": "DefineIndexFieldResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.CloudSearch.DefineIndexField",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.CloudSearch.Types"
            ],
            "name": "DefineIndexField",
            "method": "post",
            "documentation": "\u003cp\u003eConfigures an \u003ccode\u003e\u003ca\u003eIndexField\u003c/a\u003e\u003c/code\u003e for the search domain. Used to create new fields and modify existing ones. You must specify the name of the domain you are configuring and an index field configuration. The index field configuration specifies a unique name, the index field type, and the options you want to configure for the field. The options you can specify depend on the \u003ccode\u003e\u003ca\u003eIndexFieldType\u003c/a\u003e\u003c/code\u003e. If the field exists, the new configuration replaces the old one. For more information, see \u003ca href=\"http://docs.aws.amazon.com/cloudsearch/latest/developerguide/configuring-index-fields.html\" target=\"_blank\"\u003eConfiguring Index Fields\u003c/a\u003e in the \u003ci\u003eAmazon CloudSearch Developer Guide\u003c/i\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difr2DomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "difr2IndexField",
                        "type": "IndexField"
                    }
                ],
                "name": "DefineIndexFieldRequest",
                "type": "record",
                "optional": []
            }
        }
    ]
}