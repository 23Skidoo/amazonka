{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "ElasticTranscoder",
        "error": "RESTError",
        "namespace": "Network.AWS.ElasticTranscoder",
        "protocol": "rest-json",
        "imports": [
            "Network.AWS.ElasticTranscoder.CancelJob",
            "Network.AWS.ElasticTranscoder.CreateJob",
            "Network.AWS.ElasticTranscoder.CreatePipeline",
            "Network.AWS.ElasticTranscoder.CreatePreset",
            "Network.AWS.ElasticTranscoder.DeletePipeline",
            "Network.AWS.ElasticTranscoder.DeletePreset",
            "Network.AWS.ElasticTranscoder.ListJobsByPipeline",
            "Network.AWS.ElasticTranscoder.ListJobsByStatus",
            "Network.AWS.ElasticTranscoder.ListPipelines",
            "Network.AWS.ElasticTranscoder.ListPresets",
            "Network.AWS.ElasticTranscoder.ReadJob",
            "Network.AWS.ElasticTranscoder.ReadPipeline",
            "Network.AWS.ElasticTranscoder.ReadPreset",
            "Network.AWS.ElasticTranscoder.TestRole",
            "Network.AWS.ElasticTranscoder.Types",
            "Network.AWS.ElasticTranscoder.UpdatePipeline",
            "Network.AWS.ElasticTranscoder.UpdatePipelineNotifications",
            "Network.AWS.ElasticTranscoder.UpdatePipelineStatus"
        ],
        "name": "Amazon Elastic Transcoder",
        "version": "2012-09-25",
        "documentation": "Amazon Elastic Transcoder lets you convert media files that you have stored in Amazon Simple Storage Service (Amazon S3) into media files in the formats required by consumer playback devices. For example, you can convert large, high-quality digital media files into formats that users can play back on mobile devices, tablets, web browsers, and connected televisions.",
        "xmlNamespace": "https://elastictranscoder.amazonaws.com/doc/2012-09-25/",
        "endpoint": "Regional",
        "endpointPrefix": "elastictranscoder"
    },
    "cabal": {
        "other": [],
        "library": "amazonka-elastictranscoder",
        "exposed": [
            "Network.AWS.ElasticTranscoder",
            "Network.AWS.ElasticTranscoder.CancelJob",
            "Network.AWS.ElasticTranscoder.CreateJob",
            "Network.AWS.ElasticTranscoder.CreatePipeline",
            "Network.AWS.ElasticTranscoder.CreatePreset",
            "Network.AWS.ElasticTranscoder.DeletePipeline",
            "Network.AWS.ElasticTranscoder.DeletePreset",
            "Network.AWS.ElasticTranscoder.ListJobsByPipeline",
            "Network.AWS.ElasticTranscoder.ListJobsByStatus",
            "Network.AWS.ElasticTranscoder.ListPipelines",
            "Network.AWS.ElasticTranscoder.ListPresets",
            "Network.AWS.ElasticTranscoder.ReadJob",
            "Network.AWS.ElasticTranscoder.ReadPipeline",
            "Network.AWS.ElasticTranscoder.ReadPreset",
            "Network.AWS.ElasticTranscoder.TestRole",
            "Network.AWS.ElasticTranscoder.Types",
            "Network.AWS.ElasticTranscoder.UpdatePipeline",
            "Network.AWS.ElasticTranscoder.UpdatePipelineNotifications",
            "Network.AWS.ElasticTranscoder.UpdatePipelineStatus"
        ],
        "protocol": "rest-json",
        "name": "Amazon Elastic Transcoder",
        "version": "0.0.0",
        "description": "Amazon Elastic Transcoder lets you convert media files that you have stored in Amazon Simple Storage Service (Amazon S3) into media files in the formats required by consumer playback devices. For example, you can convert large, high-quality digital media files into formats that users can play back on mobile devices, tablets, web browsers, and connected televisions."
    },
    "types": {
        "namespace": "Network.AWS.ElasticTranscoder.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "pipelineOutputConfig",
                "payload": null,
                "required": [],
                "name": "PipelineOutputConfig",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pocBucket",
                        "name": "_pocBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "\u003cp\u003e The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files. Specify this value when all of the following are true: \u003cul\u003e \u003cli\u003eYou want to save transcoded files, thumbnails (if any), and playlists (if any) together in one bucket.\u003c/li\u003e \u003cli\u003eYou do not want to specify the users or groups who have access to the transcoded files, thumbnails, and playlists.\u003c/li\u003e \u003cli\u003eYou do not want to specify the permissions that Elastic Transcoder grants to the files. \u003c/li\u003e \u003cli\u003eYou want to associate the transcoded files and thumbnails with the Amazon S3 Standard storage class.\u003c/li\u003e \u003c/ul\u003e If you want to save transcoded files and playlists in one bucket and thumbnails in another bucket, specify which users can access the transcoded files or the permissions the users have, or change the Amazon S3 storage class, omit OutputBucket and specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e instead. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pocStorageClass",
                        "name": "_pocStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "\u003cp\u003e The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pocPermissions",
                        "name": "_pocPermissions",
                        "shape": "Permissions",
                        "locationName": "Permissions",
                        "documentation": "\u003cp\u003eOptional. The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to transcoded files and playlists, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/p\u003e \u003cp\u003eIf you include \u003ccode\u003ePermissions\u003c/code\u003e, Elastic Transcoder grants only the permissions that you specify. It does not grant full permissions to the owner of the role specified by \u003ccode\u003eRole\u003c/code\u003e. If you want that user to have full control, you must explicitly grant full control to the user.\u003c/p\u003e \u003cp\u003e If you omit \u003ccode\u003ePermissions\u003c/code\u003e, Elastic Transcoder grants full control over the transcoded files and playlists to the owner of the role specified by \u003ccode\u003eRole\u003c/code\u003e, and grants no other permissions to any other user or group.\u003c/p\u003e",
                        "typeExposed": "[Permission]",
                        "type": "[Permission]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pocBucket",
                        "name": "_pocBucket",
                        "shape": "BucketName",
                        "locationName": "Bucket",
                        "documentation": "\u003cp\u003e The Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files. Specify this value when all of the following are true: \u003cul\u003e \u003cli\u003eYou want to save transcoded files, thumbnails (if any), and playlists (if any) together in one bucket.\u003c/li\u003e \u003cli\u003eYou do not want to specify the users or groups who have access to the transcoded files, thumbnails, and playlists.\u003c/li\u003e \u003cli\u003eYou do not want to specify the permissions that Elastic Transcoder grants to the files. \u003c/li\u003e \u003cli\u003eYou want to associate the transcoded files and thumbnails with the Amazon S3 Standard storage class.\u003c/li\u003e \u003c/ul\u003e If you want to save transcoded files and playlists in one bucket and thumbnails in another bucket, specify which users can access the transcoded files or the permissions the users have, or change the Amazon S3 storage class, omit OutputBucket and specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e instead. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pocPermissions",
                        "name": "_pocPermissions",
                        "shape": "Permissions",
                        "locationName": "Permissions",
                        "documentation": "\u003cp\u003eOptional. The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to transcoded files and playlists, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/p\u003e \u003cp\u003eIf you include \u003ccode\u003ePermissions\u003c/code\u003e, Elastic Transcoder grants only the permissions that you specify. It does not grant full permissions to the owner of the role specified by \u003ccode\u003eRole\u003c/code\u003e. If you want that user to have full control, you must explicitly grant full control to the user.\u003c/p\u003e \u003cp\u003e If you omit \u003ccode\u003ePermissions\u003c/code\u003e, Elastic Transcoder grants full control over the transcoded files and playlists to the owner of the role specified by \u003ccode\u003eRole\u003c/code\u003e, and grants no other permissions to any other user or group.\u003c/p\u003e",
                        "typeExposed": "[Permission]",
                        "type": "[Permission]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pocStorageClass",
                        "name": "_pocStorageClass",
                        "shape": "StorageClass",
                        "locationName": "StorageClass",
                        "documentation": "\u003cp\u003e The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "createJobPlaylist",
                "payload": null,
                "required": [],
                "name": "CreateJobPlaylist",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjpName",
                        "name": "_cjpName",
                        "shape": "Filename",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name that you want Elastic Transcoder to assign to the master playlist, for example, nyc-vacation.m3u8. If the name includes a \u003ccode\u003e/\u003c/code\u003e character, the section of the name before the last \u003ccode\u003e/\u003c/code\u003e must be identical for all \u003ccode\u003eName\u003c/code\u003e objects. If you create more than one master playlist, the values of all \u003ccode\u003eName\u003c/code\u003e objects must be unique.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e Elastic Transcoder automatically appends the relevant file extension to the file name (\u003ccode\u003e.m3u8\u003c/code\u003e for \u003ccode\u003eHLSv3\u003c/code\u003e and \u003ccode\u003eHLSv4\u003c/code\u003e playlists, and \u003ccode\u003e.ism\u003c/code\u003e and \u003ccode\u003e.ismc\u003c/code\u003e for \u003ccode\u003eSmooth\u003c/code\u003e playlists). If you include a file extension in \u003ccode\u003eName\u003c/code\u003e, the file name will have two extensions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjpFormat",
                        "name": "_cjpFormat",
                        "shape": "PlaylistFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of the output playlist. Valid formats include \u003ccode\u003eHLSv3\u003c/code\u003e, \u003ccode\u003eHLSv4\u003c/code\u003e, and \u003ccode\u003eSmooth\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjpOutputKeys",
                        "name": "_cjpOutputKeys",
                        "shape": "OutputKeys",
                        "locationName": "OutputKeys",
                        "documentation": "\u003cp\u003eFor each output in this job that you want to include in a master playlist, the value of the \u003ccode\u003eOutputs:Key\u003c/code\u003e object. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf your output is not \u003ccode\u003eHLS\u003c/code\u003e or does not have a segment duration set, the name of the output file is a concatenation of \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e and \u003ccode\u003eOutputs:Key\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv3\u003c/code\u003e and has a segment duration set, or is not included in a playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e.m3u8\u003c/code\u003e, and a series of \u003ccode\u003e.ts\u003c/code\u003e files that include a five-digit sequential counter beginning with 00000:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e00000.ts\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv4\u003c/code\u003e, has a segment duration set, and is included in an \u003ccode\u003eHLSv4\u003c/code\u003e playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e_v4.m3u8\u003c/code\u003e. If the output is video, Elastic Transcoder also creates an output file with an extension of \u003ccode\u003e_iframe.m3u8\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_v4.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_iframe.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.ts\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eElastic Transcoder automatically appends the relevant file extension to the file name. If you include a file extension in Output Key, the file name will have two extensions.\u003c/p\u003e \u003cp\u003eIf you include more than one output in a playlist, any segment duration settings, clip settings, or caption settings must be the same for all outputs in the playlist. For \u003ccode\u003eSmooth\u003c/code\u003e playlists, the \u003ccode\u003eAudio:Profile\u003c/code\u003e, \u003ccode\u003eVideo:Profile\u003c/code\u003e, and \u003ccode\u003eVideo:FrameRate\u003c/code\u003e to \u003ccode\u003eVideo:KeyframesMaxDist\u003c/code\u003e ratio must be the same for all outputs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjpFormat",
                        "name": "_cjpFormat",
                        "shape": "PlaylistFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of the output playlist. Valid formats include \u003ccode\u003eHLSv3\u003c/code\u003e, \u003ccode\u003eHLSv4\u003c/code\u003e, and \u003ccode\u003eSmooth\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjpName",
                        "name": "_cjpName",
                        "shape": "Filename",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name that you want Elastic Transcoder to assign to the master playlist, for example, nyc-vacation.m3u8. If the name includes a \u003ccode\u003e/\u003c/code\u003e character, the section of the name before the last \u003ccode\u003e/\u003c/code\u003e must be identical for all \u003ccode\u003eName\u003c/code\u003e objects. If you create more than one master playlist, the values of all \u003ccode\u003eName\u003c/code\u003e objects must be unique.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote:\u003c/b\u003e Elastic Transcoder automatically appends the relevant file extension to the file name (\u003ccode\u003e.m3u8\u003c/code\u003e for \u003ccode\u003eHLSv3\u003c/code\u003e and \u003ccode\u003eHLSv4\u003c/code\u003e playlists, and \u003ccode\u003e.ism\u003c/code\u003e and \u003ccode\u003e.ismc\u003c/code\u003e for \u003ccode\u003eSmooth\u003c/code\u003e playlists). If you include a file extension in \u003ccode\u003eName\u003c/code\u003e, the file name will have two extensions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjpOutputKeys",
                        "name": "_cjpOutputKeys",
                        "shape": "OutputKeys",
                        "locationName": "OutputKeys",
                        "documentation": "\u003cp\u003eFor each output in this job that you want to include in a master playlist, the value of the \u003ccode\u003eOutputs:Key\u003c/code\u003e object. \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf your output is not \u003ccode\u003eHLS\u003c/code\u003e or does not have a segment duration set, the name of the output file is a concatenation of \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e and \u003ccode\u003eOutputs:Key\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv3\u003c/code\u003e and has a segment duration set, or is not included in a playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e.m3u8\u003c/code\u003e, and a series of \u003ccode\u003e.ts\u003c/code\u003e files that include a five-digit sequential counter beginning with 00000:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e00000.ts\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv4\u003c/code\u003e, has a segment duration set, and is included in an \u003ccode\u003eHLSv4\u003c/code\u003e playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e_v4.m3u8\u003c/code\u003e. If the output is video, Elastic Transcoder also creates an output file with an extension of \u003ccode\u003e_iframe.m3u8\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_v4.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_iframe.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.ts\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eElastic Transcoder automatically appends the relevant file extension to the file name. If you include a file extension in Output Key, the file name will have two extensions.\u003c/p\u003e \u003cp\u003eIf you include more than one output in a playlist, any segment duration settings, clip settings, or caption settings must be the same for all outputs in the playlist. For \u003ccode\u003eSmooth\u003c/code\u003e playlists, the \u003ccode\u003eAudio:Profile\u003c/code\u003e, \u003ccode\u003eVideo:Profile\u003c/code\u003e, and \u003ccode\u003eVideo:FrameRate\u003c/code\u003e to \u003ccode\u003eVideo:KeyframesMaxDist\u003c/code\u003e ratio must be the same for all outputs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "captions",
                "payload": null,
                "required": [],
                "name": "Captions",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cMergePolicy",
                        "name": "_cMergePolicy",
                        "shape": "CaptionMergePolicy",
                        "locationName": "MergePolicy",
                        "documentation": "\u003cp\u003eA policy that determines how Elastic Transcoder handles the existence of multiple captions.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eMergeOverride:\u003c/b\u003e Elastic Transcoder transcodes both embedded and sidecar captions into outputs. If captions for a language are embedded in the input file and also appear in a sidecar file, Elastic Transcoder uses the sidecar captions and ignores the embedded captions for that language.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eMergeRetain:\u003c/b\u003e Elastic Transcoder transcodes both embedded and sidecar captions into outputs. If captions for a language are embedded in the input file and also appear in a sidecar file, Elastic Transcoder uses the embedded captions and ignores the sidecar captions for that language. If \u003cguilabel\u003eCaptionSources\u003c/guilabel\u003e is empty, Elastic Transcoder omits all sidecar captions from the output files.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eOverride:\u003c/b\u003e Elastic Transcoder transcodes only the sidecar captions that you specify in \u003ccode\u003eCaptionSources\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003ccode\u003eMergePolicy\u003c/code\u003e cannot be null.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cCaptionSources",
                        "name": "_cCaptionSources",
                        "shape": "CaptionSources",
                        "locationName": "CaptionSources",
                        "documentation": "\u003cp\u003eSource files for the input sidecar captions used during the transcoding process. To omit all sidecar captions, leave \u003ccode\u003eCaptionSources\u003c/code\u003e blank.\u003c/p\u003e",
                        "typeExposed": "[CaptionSource]",
                        "type": "[CaptionSource]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cCaptionFormats",
                        "name": "_cCaptionFormats",
                        "shape": "CaptionFormats",
                        "locationName": "CaptionFormats",
                        "documentation": "\u003cp\u003eThe array of file formats for the output captions. If you leave this value blank, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "[CaptionFormat]",
                        "type": "[CaptionFormat]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cCaptionFormats",
                        "name": "_cCaptionFormats",
                        "shape": "CaptionFormats",
                        "locationName": "CaptionFormats",
                        "documentation": "\u003cp\u003eThe array of file formats for the output captions. If you leave this value blank, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "[CaptionFormat]",
                        "type": "[CaptionFormat]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cCaptionSources",
                        "name": "_cCaptionSources",
                        "shape": "CaptionSources",
                        "locationName": "CaptionSources",
                        "documentation": "\u003cp\u003eSource files for the input sidecar captions used during the transcoding process. To omit all sidecar captions, leave \u003ccode\u003eCaptionSources\u003c/code\u003e blank.\u003c/p\u003e",
                        "typeExposed": "[CaptionSource]",
                        "type": "[CaptionSource]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cMergePolicy",
                        "name": "_cMergePolicy",
                        "shape": "CaptionMergePolicy",
                        "locationName": "MergePolicy",
                        "documentation": "\u003cp\u003eA policy that determines how Elastic Transcoder handles the existence of multiple captions.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eMergeOverride:\u003c/b\u003e Elastic Transcoder transcodes both embedded and sidecar captions into outputs. If captions for a language are embedded in the input file and also appear in a sidecar file, Elastic Transcoder uses the sidecar captions and ignores the embedded captions for that language.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eMergeRetain:\u003c/b\u003e Elastic Transcoder transcodes both embedded and sidecar captions into outputs. If captions for a language are embedded in the input file and also appear in a sidecar file, Elastic Transcoder uses the embedded captions and ignores the sidecar captions for that language. If \u003cguilabel\u003eCaptionSources\u003c/guilabel\u003e is empty, Elastic Transcoder omits all sidecar captions from the output files.\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eOverride:\u003c/b\u003e Elastic Transcoder transcodes only the sidecar captions that you specify in \u003ccode\u003eCaptionSources\u003c/code\u003e.\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003ccode\u003eMergePolicy\u003c/code\u003e cannot be null.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "audioCodecOptions",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "acoProfile",
                    "name": "_acoProfile",
                    "shape": "AudioCodecProfile",
                    "locationName": "Profile",
                    "documentation": "\u003cp\u003eYou can only choose an audio profile when you specify AAC for the value of Audio:Codec.\u003c/p\u003e \u003cp\u003eSpecify the AAC profile for the output file. Elastic Transcoder supports the following profiles:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eauto\u003c/code\u003e: If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder will select the profile based on the bit rate selected for the output file.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAAC-LC\u003c/code\u003e: The most common AAC profile. Use for bitrates larger than 64 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AAC\u003c/code\u003e: Not supported on some older players and devices. Use for bitrates between 40 and 80 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AACv2\u003c/code\u003e: Not supported on some players and devices. Use for bitrates less than 48 kbps.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAll outputs in a \u003ccode\u003eSmooth\u003c/code\u003e playlist must have the same value for \u003ccode\u003eProfile\u003c/code\u003e.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "payload": null,
                "required": [],
                "name": "AudioCodecOptions",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "acoProfile",
                        "name": "_acoProfile",
                        "shape": "AudioCodecProfile",
                        "locationName": "Profile",
                        "documentation": "\u003cp\u003eYou can only choose an audio profile when you specify AAC for the value of Audio:Codec.\u003c/p\u003e \u003cp\u003eSpecify the AAC profile for the output file. Elastic Transcoder supports the following profiles:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eauto\u003c/code\u003e: If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder will select the profile based on the bit rate selected for the output file.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAAC-LC\u003c/code\u003e: The most common AAC profile. Use for bitrates larger than 64 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AAC\u003c/code\u003e: Not supported on some older players and devices. Use for bitrates between 40 and 80 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AACv2\u003c/code\u003e: Not supported on some players and devices. Use for bitrates less than 48 kbps.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAll outputs in a \u003ccode\u003eSmooth\u003c/code\u003e playlist must have the same value for \u003ccode\u003eProfile\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "acoProfile",
                        "name": "_acoProfile",
                        "shape": "AudioCodecProfile",
                        "locationName": "Profile",
                        "documentation": "\u003cp\u003eYou can only choose an audio profile when you specify AAC for the value of Audio:Codec.\u003c/p\u003e \u003cp\u003eSpecify the AAC profile for the output file. Elastic Transcoder supports the following profiles:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eauto\u003c/code\u003e: If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder will select the profile based on the bit rate selected for the output file.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAAC-LC\u003c/code\u003e: The most common AAC profile. Use for bitrates larger than 64 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AAC\u003c/code\u003e: Not supported on some older players and devices. Use for bitrates between 40 and 80 kbps.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eHE-AACv2\u003c/code\u003e: Not supported on some players and devices. Use for bitrates less than 48 kbps.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eAll outputs in a \u003ccode\u003eSmooth\u003c/code\u003e playlist must have the same value for \u003ccode\u003eProfile\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "jobOutput",
                "payload": null,
                "required": [],
                "name": "JobOutput",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joId",
                        "name": "_joId",
                        "shape": "String",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eA sequential counter, starting with 1, that identifies an output among the outputs from the current job. In the Output syntax, this value is always 1.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joKey",
                        "name": "_joKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name to assign to the transcoded file. Elastic Transcoder saves the file in the Amazon S3 bucket specified by the \u003ccode\u003eOutputBucket\u003c/code\u003e object in the pipeline that is specified by the pipeline ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joThumbnailPattern",
                        "name": "_joThumbnailPattern",
                        "shape": "ThumbnailPattern",
                        "locationName": "ThumbnailPattern",
                        "documentation": "\u003cp\u003eWhether you want Elastic Transcoder to create thumbnails for your videos and, if so, how you want Elastic Transcoder to name the files.\u003c/p\u003e \u003cp\u003eIf you don't want Elastic Transcoder to create thumbnails, specify \"\".\u003c/p\u003e \u003cp\u003e If you do want Elastic Transcoder to create thumbnails, specify the information that you want to include in the file name for each thumbnail. You can specify the following values in any sequence: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{count}\u003c/code\u003e (Required)\u003c/b\u003e: If you want to create thumbnails, you must include \u003ccode\u003e{count}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. Wherever you specify \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder adds a five-digit sequence number (beginning with \u003cb\u003e00001\u003c/b\u003e) to thumbnail file names. The number indicates where a given thumbnail appears in the sequence of thumbnails for a transcoded file. \u003c/p\u003e \u003cimportant\u003eIf you specify a literal value and/or \u003ccode\u003e{resolution}\u003c/code\u003e but you omit \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder returns a validation error and does not create the job.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eLiteral values (Optional)\u003c/b\u003e: You can specify literal values anywhere in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. For example, you can include them as a file name prefix or as a delimiter between \u003ccode\u003e{resolution}\u003c/code\u003e and \u003ccode\u003e{count}\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{resolution}\u003c/code\u003e (Optional)\u003c/b\u003e: If you want Elastic Transcoder to include the resolution in the file name, include \u003ccode\u003e{resolution}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen creating thumbnails, Elastic Transcoder automatically saves the files in the format (.jpg or .png) that appears in the preset that you specified in the \u003ccode\u003ePresetID\u003c/code\u003e value of \u003ccode\u003eCreateJobOutput\u003c/code\u003e. Elastic Transcoder also appends the applicable file name extension.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joRotate",
                        "name": "_joRotate",
                        "shape": "Rotate",
                        "locationName": "Rotate",
                        "documentation": "\u003cp\u003e The number of degrees clockwise by which you want Elastic Transcoder to rotate the output relative to the input. Enter one of the following values: \u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e90\u003c/code\u003e, \u003ccode\u003e180\u003c/code\u003e, \u003ccode\u003e270\u003c/code\u003e\u003c/p\u003e \u003cp\u003e The value \u003ccode\u003eauto\u003c/code\u003e generally works only if the file that you're transcoding contains rotation metadata.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joPresetId",
                        "name": "_joPresetId",
                        "shape": "Id",
                        "locationName": "PresetId",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eId\u003c/code\u003e object for the preset that you want to use for this job. The preset determines the audio, video, and thumbnail settings that Elastic Transcoder uses for transcoding. To use a preset that you created, specify the preset ID that Elastic Transcoder returned in the response when you created the preset. You can also use the Elastic Transcoder system presets, which you can get with \u003ccode\u003eListPresets\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joSegmentDuration",
                        "name": "_joSegmentDuration",
                        "shape": "Float",
                        "locationName": "SegmentDuration",
                        "documentation": "\u003cp\u003e\u003cimportant\u003e(Outputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is \u003ccode\u003efmp4\u003c/code\u003e (Fragmented MP4) or \u003ccode\u003ets\u003c/code\u003e (MPEG-TS), \u003ccode\u003eSegmentDuration\u003c/code\u003e is the target maximum duration of each segment in seconds. For \u003ccode\u003eHLSv3\u003c/code\u003e format playlists, each media segment is stored in a separate \u003ccode\u003e.ts\u003c/code\u003e file. For \u003ccode\u003eHLSv4\u003c/code\u003e and \u003ccode\u003eSmooth\u003c/code\u003e playlists, all media segments for an output are stored in a single file. Each segment is approximately the length of the \u003ccode\u003eSegmentDuration\u003c/code\u003e, though individual segments might be shorter or longer.\u003c/p\u003e \u003cp\u003eThe range of valid values is 1 to 60 seconds. If the duration of the video is not evenly divisible by \u003ccode\u003eSegmentDuration\u003c/code\u003e, the duration of the last segment is the remainder of total length/SegmentDuration.\u003c/p\u003e \u003cp\u003eElastic Transcoder creates an output-specific playlist for each output \u003ccode\u003eHLS\u003c/code\u003e output that you specify in OutputKeys. To add an output to the master playlist for this job, include it in the \u003ccode\u003eOutputKeys\u003c/code\u003e of the associated playlist.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joStatus",
                        "name": "_joStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of one output in a job. If you specified only one output for the job, \u003ccode\u003eOutputs:Status\u003c/code\u003e is always the same as \u003ccode\u003eJob:Status\u003c/code\u003e. If you specified more than one output: \u003cul\u003e \u003cli\u003e \u003ccode\u003eJob:Status\u003c/code\u003e and \u003ccode\u003eOutputs:Status\u003c/code\u003e for all of the outputs is Submitted until Elastic Transcoder starts to process the first output.\u003c/li\u003e \u003cli\u003eWhen Elastic Transcoder starts to process the first output, \u003ccode\u003eOutputs:Status\u003c/code\u003e for that output and \u003ccode\u003eJob:Status\u003c/code\u003e both change to Progressing. For each output, the value of \u003ccode\u003eOutputs:Status\u003c/code\u003e remains Submitted until Elastic Transcoder starts to process the output.\u003c/li\u003e \u003cli\u003eJob:Status remains Progressing until all of the outputs reach a terminal status, either Complete or Error.\u003c/li\u003e \u003cli\u003eWhen all of the outputs reach a terminal status, \u003ccode\u003eJob:Status\u003c/code\u003e changes to Complete only if \u003ccode\u003eOutputs:Status\u003c/code\u003e for all of the outputs is \u003ccode\u003eComplete\u003c/code\u003e. If \u003ccode\u003eOutputs:Status\u003c/code\u003e for one or more outputs is \u003ccode\u003eError\u003c/code\u003e, the terminal status for \u003ccode\u003eJob:Status\u003c/code\u003e is also \u003ccode\u003eError\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e The value of \u003ccode\u003eStatus\u003c/code\u003e is one of the following: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joStatusDetail",
                        "name": "_joStatusDetail",
                        "shape": "Description",
                        "locationName": "StatusDetail",
                        "documentation": "\u003cp\u003eInformation that further explains \u003ccode\u003eStatus\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joDuration",
                        "name": "_joDuration",
                        "shape": "NullableLong",
                        "locationName": "Duration",
                        "documentation": "\u003cp\u003eDuration of the output file, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joWidth",
                        "name": "_joWidth",
                        "shape": "NullableInteger",
                        "locationName": "Width",
                        "documentation": "\u003cp\u003eSpecifies the width of the output file in pixels.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joHeight",
                        "name": "_joHeight",
                        "shape": "NullableInteger",
                        "locationName": "Height",
                        "documentation": "\u003cp\u003eHeight of the output file, in pixels.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "joWatermarks",
                        "name": "_joWatermarks",
                        "shape": "JobWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eInformation about the watermarks that you want Elastic Transcoder to add to the video during transcoding. You can specify up to four watermarks for each output. Settings for each watermark must be defined in the preset that you specify in \u003ccode\u003ePreset\u003c/code\u003e for the current output.\u003c/p\u003e \u003cp\u003eWatermarks are added to the output video in the sequence in which you list them in the job output&#x2014;the first watermark in the list is added to the output video first, the second watermark in the list is added next, and so on. As a result, if the settings in a preset cause Elastic Transcoder to place all watermarks in the same location, the second watermark that you add will cover the first one, the third one will cover the second, and the fourth one will cover the third.\u003c/p\u003e",
                        "typeExposed": "[JobWatermark]",
                        "type": "[JobWatermark]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joAlbumArt",
                        "name": "_joAlbumArt",
                        "shape": "JobAlbumArt",
                        "locationName": "AlbumArt",
                        "documentation": "\u003cp\u003eThe album art to be associated with the output file, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe JobAlbumArt",
                        "type": "Maybe JobAlbumArt"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "joComposition",
                        "name": "_joComposition",
                        "shape": "Composition",
                        "locationName": "Composition",
                        "documentation": "\u003cp\u003eYou can create an output file that contains an excerpt from the input file. This excerpt, called a clip, can come from the beginning, middle, or end of the file. The Composition object contains settings for the clips that make up an output file. For the current release, you can only specify settings for a single clip per output file. The Composition object cannot be null.\u003c/p\u003e",
                        "typeExposed": "[Clip]",
                        "type": "[Clip]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joCaptions",
                        "name": "_joCaptions",
                        "shape": "Captions",
                        "locationName": "Captions",
                        "documentation": "\u003cp\u003eYou can configure Elastic Transcoder to transcode captions, or subtitles, from one format to another. All captions must be in UTF-8. Elastic Transcoder supports two types of captions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eEmbedded:\u003c/b\u003e Embedded captions are included in the same file as the audio and video. Elastic Transcoder supports only one embedded caption per language, to a maximum of 300 embedded captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003eCEA-608 (EIA-608\u003c/code\u003e, first non-empty channel only), \u003ccode\u003eCEA-708 (EIA-708\u003c/code\u003e, first non-empty channel only), and \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eElastic Transcoder supports a maximum of one embedded format per output.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eSidecar:\u003c/b\u003e Sidecar captions are kept in a separate metadata file from the audio and video data. Sidecar captions require a player that is capable of understanding the relationship between the video file and the sidecar file. Elastic Transcoder supports only one sidecar caption per language, to a maximum of 20 sidecar captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003eebu-tt\u003c/code\u003e, \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esmpt\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, \u003ccode\u003ettml\u003c/code\u003e (first div element only), and \u003ccode\u003ewebvtt\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, and \u003ccode\u003ewebvtt\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cp\u003eElastic Transcoder does not support OCR (Optical Character Recognition), does not accept pictures as a valid input for captions, and is not available for audio-only transcoding. Elastic Transcoder does not preserve text formatting (for example, italics) during the transcoding process.\u003c/p\u003e \u003cp\u003eTo remove captions or leave the captions empty, set \u003ccode\u003eCaptions\u003c/code\u003e to null. To pass through existing captions unchanged, set the \u003ccode\u003eMergePolicy\u003c/code\u003e to \u003ccode\u003eMergeRetain\u003c/code\u003e, and pass in a null \u003ccode\u003eCaptionSources\u003c/code\u003e array.\u003c/p\u003e \u003cp\u003eFor more information on embedded files, see the Subtitles Wikipedia page.\u003c/p\u003e \u003cp\u003eFor more information on sidecar files, see the Extensible Metadata Platform and Sidecar file Wikipedia pages.\u003c/p\u003e",
                        "typeExposed": "Maybe Captions",
                        "type": "Maybe Captions"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joAlbumArt",
                        "name": "_joAlbumArt",
                        "shape": "JobAlbumArt",
                        "locationName": "AlbumArt",
                        "documentation": "\u003cp\u003eThe album art to be associated with the output file, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe JobAlbumArt",
                        "type": "Maybe JobAlbumArt"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joCaptions",
                        "name": "_joCaptions",
                        "shape": "Captions",
                        "locationName": "Captions",
                        "documentation": "\u003cp\u003eYou can configure Elastic Transcoder to transcode captions, or subtitles, from one format to another. All captions must be in UTF-8. Elastic Transcoder supports two types of captions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eEmbedded:\u003c/b\u003e Embedded captions are included in the same file as the audio and video. Elastic Transcoder supports only one embedded caption per language, to a maximum of 300 embedded captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003eCEA-608 (EIA-608\u003c/code\u003e, first non-empty channel only), \u003ccode\u003eCEA-708 (EIA-708\u003c/code\u003e, first non-empty channel only), and \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eElastic Transcoder supports a maximum of one embedded format per output.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eSidecar:\u003c/b\u003e Sidecar captions are kept in a separate metadata file from the audio and video data. Sidecar captions require a player that is capable of understanding the relationship between the video file and the sidecar file. Elastic Transcoder supports only one sidecar caption per language, to a maximum of 20 sidecar captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003eebu-tt\u003c/code\u003e, \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esmpt\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, \u003ccode\u003ettml\u003c/code\u003e (first div element only), and \u003ccode\u003ewebvtt\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, and \u003ccode\u003ewebvtt\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cp\u003eElastic Transcoder does not support OCR (Optical Character Recognition), does not accept pictures as a valid input for captions, and is not available for audio-only transcoding. Elastic Transcoder does not preserve text formatting (for example, italics) during the transcoding process.\u003c/p\u003e \u003cp\u003eTo remove captions or leave the captions empty, set \u003ccode\u003eCaptions\u003c/code\u003e to null. To pass through existing captions unchanged, set the \u003ccode\u003eMergePolicy\u003c/code\u003e to \u003ccode\u003eMergeRetain\u003c/code\u003e, and pass in a null \u003ccode\u003eCaptionSources\u003c/code\u003e array.\u003c/p\u003e \u003cp\u003eFor more information on embedded files, see the Subtitles Wikipedia page.\u003c/p\u003e \u003cp\u003eFor more information on sidecar files, see the Extensible Metadata Platform and Sidecar file Wikipedia pages.\u003c/p\u003e",
                        "typeExposed": "Maybe Captions",
                        "type": "Maybe Captions"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "joComposition",
                        "name": "_joComposition",
                        "shape": "Composition",
                        "locationName": "Composition",
                        "documentation": "\u003cp\u003eYou can create an output file that contains an excerpt from the input file. This excerpt, called a clip, can come from the beginning, middle, or end of the file. The Composition object contains settings for the clips that make up an output file. For the current release, you can only specify settings for a single clip per output file. The Composition object cannot be null.\u003c/p\u003e",
                        "typeExposed": "[Clip]",
                        "type": "[Clip]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joDuration",
                        "name": "_joDuration",
                        "shape": "NullableLong",
                        "locationName": "Duration",
                        "documentation": "\u003cp\u003eDuration of the output file, in seconds.\u003c/p\u003e",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joHeight",
                        "name": "_joHeight",
                        "shape": "NullableInteger",
                        "locationName": "Height",
                        "documentation": "\u003cp\u003eHeight of the output file, in pixels.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joId",
                        "name": "_joId",
                        "shape": "String",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eA sequential counter, starting with 1, that identifies an output among the outputs from the current job. In the Output syntax, this value is always 1.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joKey",
                        "name": "_joKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name to assign to the transcoded file. Elastic Transcoder saves the file in the Amazon S3 bucket specified by the \u003ccode\u003eOutputBucket\u003c/code\u003e object in the pipeline that is specified by the pipeline ID.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joPresetId",
                        "name": "_joPresetId",
                        "shape": "Id",
                        "locationName": "PresetId",
                        "documentation": "\u003cp\u003eThe value of the \u003ccode\u003eId\u003c/code\u003e object for the preset that you want to use for this job. The preset determines the audio, video, and thumbnail settings that Elastic Transcoder uses for transcoding. To use a preset that you created, specify the preset ID that Elastic Transcoder returned in the response when you created the preset. You can also use the Elastic Transcoder system presets, which you can get with \u003ccode\u003eListPresets\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joRotate",
                        "name": "_joRotate",
                        "shape": "Rotate",
                        "locationName": "Rotate",
                        "documentation": "\u003cp\u003e The number of degrees clockwise by which you want Elastic Transcoder to rotate the output relative to the input. Enter one of the following values: \u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e90\u003c/code\u003e, \u003ccode\u003e180\u003c/code\u003e, \u003ccode\u003e270\u003c/code\u003e\u003c/p\u003e \u003cp\u003e The value \u003ccode\u003eauto\u003c/code\u003e generally works only if the file that you're transcoding contains rotation metadata.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joSegmentDuration",
                        "name": "_joSegmentDuration",
                        "shape": "Float",
                        "locationName": "SegmentDuration",
                        "documentation": "\u003cp\u003e\u003cimportant\u003e(Outputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is \u003ccode\u003efmp4\u003c/code\u003e (Fragmented MP4) or \u003ccode\u003ets\u003c/code\u003e (MPEG-TS), \u003ccode\u003eSegmentDuration\u003c/code\u003e is the target maximum duration of each segment in seconds. For \u003ccode\u003eHLSv3\u003c/code\u003e format playlists, each media segment is stored in a separate \u003ccode\u003e.ts\u003c/code\u003e file. For \u003ccode\u003eHLSv4\u003c/code\u003e and \u003ccode\u003eSmooth\u003c/code\u003e playlists, all media segments for an output are stored in a single file. Each segment is approximately the length of the \u003ccode\u003eSegmentDuration\u003c/code\u003e, though individual segments might be shorter or longer.\u003c/p\u003e \u003cp\u003eThe range of valid values is 1 to 60 seconds. If the duration of the video is not evenly divisible by \u003ccode\u003eSegmentDuration\u003c/code\u003e, the duration of the last segment is the remainder of total length/SegmentDuration.\u003c/p\u003e \u003cp\u003eElastic Transcoder creates an output-specific playlist for each output \u003ccode\u003eHLS\u003c/code\u003e output that you specify in OutputKeys. To add an output to the master playlist for this job, include it in the \u003ccode\u003eOutputKeys\u003c/code\u003e of the associated playlist.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joStatus",
                        "name": "_joStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of one output in a job. If you specified only one output for the job, \u003ccode\u003eOutputs:Status\u003c/code\u003e is always the same as \u003ccode\u003eJob:Status\u003c/code\u003e. If you specified more than one output: \u003cul\u003e \u003cli\u003e \u003ccode\u003eJob:Status\u003c/code\u003e and \u003ccode\u003eOutputs:Status\u003c/code\u003e for all of the outputs is Submitted until Elastic Transcoder starts to process the first output.\u003c/li\u003e \u003cli\u003eWhen Elastic Transcoder starts to process the first output, \u003ccode\u003eOutputs:Status\u003c/code\u003e for that output and \u003ccode\u003eJob:Status\u003c/code\u003e both change to Progressing. For each output, the value of \u003ccode\u003eOutputs:Status\u003c/code\u003e remains Submitted until Elastic Transcoder starts to process the output.\u003c/li\u003e \u003cli\u003eJob:Status remains Progressing until all of the outputs reach a terminal status, either Complete or Error.\u003c/li\u003e \u003cli\u003eWhen all of the outputs reach a terminal status, \u003ccode\u003eJob:Status\u003c/code\u003e changes to Complete only if \u003ccode\u003eOutputs:Status\u003c/code\u003e for all of the outputs is \u003ccode\u003eComplete\u003c/code\u003e. If \u003ccode\u003eOutputs:Status\u003c/code\u003e for one or more outputs is \u003ccode\u003eError\u003c/code\u003e, the terminal status for \u003ccode\u003eJob:Status\u003c/code\u003e is also \u003ccode\u003eError\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e The value of \u003ccode\u003eStatus\u003c/code\u003e is one of the following: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joStatusDetail",
                        "name": "_joStatusDetail",
                        "shape": "Description",
                        "locationName": "StatusDetail",
                        "documentation": "\u003cp\u003eInformation that further explains \u003ccode\u003eStatus\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joThumbnailPattern",
                        "name": "_joThumbnailPattern",
                        "shape": "ThumbnailPattern",
                        "locationName": "ThumbnailPattern",
                        "documentation": "\u003cp\u003eWhether you want Elastic Transcoder to create thumbnails for your videos and, if so, how you want Elastic Transcoder to name the files.\u003c/p\u003e \u003cp\u003eIf you don't want Elastic Transcoder to create thumbnails, specify \"\".\u003c/p\u003e \u003cp\u003e If you do want Elastic Transcoder to create thumbnails, specify the information that you want to include in the file name for each thumbnail. You can specify the following values in any sequence: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{count}\u003c/code\u003e (Required)\u003c/b\u003e: If you want to create thumbnails, you must include \u003ccode\u003e{count}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. Wherever you specify \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder adds a five-digit sequence number (beginning with \u003cb\u003e00001\u003c/b\u003e) to thumbnail file names. The number indicates where a given thumbnail appears in the sequence of thumbnails for a transcoded file. \u003c/p\u003e \u003cimportant\u003eIf you specify a literal value and/or \u003ccode\u003e{resolution}\u003c/code\u003e but you omit \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder returns a validation error and does not create the job.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eLiteral values (Optional)\u003c/b\u003e: You can specify literal values anywhere in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. For example, you can include them as a file name prefix or as a delimiter between \u003ccode\u003e{resolution}\u003c/code\u003e and \u003ccode\u003e{count}\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{resolution}\u003c/code\u003e (Optional)\u003c/b\u003e: If you want Elastic Transcoder to include the resolution in the file name, include \u003ccode\u003e{resolution}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen creating thumbnails, Elastic Transcoder automatically saves the files in the format (.jpg or .png) that appears in the preset that you specified in the \u003ccode\u003ePresetID\u003c/code\u003e value of \u003ccode\u003eCreateJobOutput\u003c/code\u003e. Elastic Transcoder also appends the applicable file name extension.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "joWatermarks",
                        "name": "_joWatermarks",
                        "shape": "JobWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eInformation about the watermarks that you want Elastic Transcoder to add to the video during transcoding. You can specify up to four watermarks for each output. Settings for each watermark must be defined in the preset that you specify in \u003ccode\u003ePreset\u003c/code\u003e for the current output.\u003c/p\u003e \u003cp\u003eWatermarks are added to the output video in the sequence in which you list them in the job output&#x2014;the first watermark in the list is added to the output video first, the second watermark in the list is added next, and so on. As a result, if the settings in a preset cause Elastic Transcoder to place all watermarks in the same location, the second watermark that you add will cover the first one, the third one will cover the second, and the fourth one will cover the third.\u003c/p\u003e",
                        "typeExposed": "[JobWatermark]",
                        "type": "[JobWatermark]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "joWidth",
                        "name": "_joWidth",
                        "shape": "NullableInteger",
                        "locationName": "Width",
                        "documentation": "\u003cp\u003eSpecifies the width of the output file in pixels.\u003c/p\u003e",
                        "typeExposed": "Maybe Int",
                        "type": "Maybe Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "job",
                "payload": null,
                "required": [],
                "name": "Job'",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jId",
                        "name": "_jId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The identifier that Elastic Transcoder assigned to the job. You use this value to get settings for the job or to delete the job. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jArn",
                        "name": "_jArn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jPipelineId",
                        "name": "_jPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003e The \u003ccode\u003eId\u003c/code\u003e of the pipeline that you want Elastic Transcoder to use for transcoding. The pipeline determines several settings, including the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode and the bucket into which Elastic Transcoder puts the transcoded files. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jInput",
                        "name": "_jInput",
                        "shape": "JobInput",
                        "locationName": "Input",
                        "documentation": "\u003cp\u003e A section of the request or response body that provides information about the file that is being transcoded.\u003c/p\u003e",
                        "typeExposed": "Maybe JobInput",
                        "type": "Maybe JobInput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jOutput",
                        "name": "_jOutput",
                        "shape": "JobOutput",
                        "locationName": "Output",
                        "documentation": "\u003cp\u003eIf you specified one output for a job, information about that output. If you specified multiple outputs for a job, the Output object lists information about the first output. This duplicates the information that is listed for the first output in the Outputs object.\u003c/p\u003e \u003cp\u003e\u003cimportant\u003eOutputs recommended instead.\u003c/important\u003e A section of the request or response body that provides information about the transcoded (target) file. \u003c/p\u003e",
                        "typeExposed": "Maybe JobOutput",
                        "type": "Maybe JobOutput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jOutputs",
                        "name": "_jOutputs",
                        "shape": "JobOutputs",
                        "locationName": "Outputs",
                        "documentation": "\u003cp\u003eInformation about the output files. We recommend that you use the \u003ccode\u003eOutputs\u003c/code\u003e syntax for all jobs, even when you want Elastic Transcoder to transcode a file into only one format. Do not use both the \u003ccode\u003eOutputs\u003c/code\u003e and \u003ccode\u003eOutput\u003c/code\u003e syntaxes in the same request. You can create a maximum of 30 outputs per job. \u003c/p\u003e \u003cp\u003e If you specify more than one output for a job, Elastic Transcoder creates the files for each output in the order in which you specify them in the job.\u003c/p\u003e",
                        "typeExposed": "[JobOutput]",
                        "type": "[JobOutput]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jOutputKeyPrefix",
                        "name": "_jOutputKeyPrefix",
                        "shape": "Key",
                        "locationName": "OutputKeyPrefix",
                        "documentation": "\u003cp\u003eThe value, if any, that you want Elastic Transcoder to prepend to the names of all files that this job creates, including output files, thumbnails, and playlists. We recommend that you add a / or some other delimiter to the end of the \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jPlaylists",
                        "name": "_jPlaylists",
                        "shape": "Playlists",
                        "locationName": "Playlists",
                        "documentation": "\u003cp\u003e\u003cimportant\u003eOutputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is fmp4 (Fragmented MP4) or ts (MPEG-TS), \u003ccode\u003ePlaylists\u003c/code\u003e contains information about the master playlists that you want Elastic Transcoder to create.\u003c/p\u003e \u003cp\u003eThe maximum number of master playlists in a job is 30. \u003c/p\u003e",
                        "typeExposed": "[Playlist]",
                        "type": "[Playlist]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jStatus",
                        "name": "_jStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of the job: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jArn",
                        "name": "_jArn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jId",
                        "name": "_jId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The identifier that Elastic Transcoder assigned to the job. You use this value to get settings for the job or to delete the job. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jInput",
                        "name": "_jInput",
                        "shape": "JobInput",
                        "locationName": "Input",
                        "documentation": "\u003cp\u003e A section of the request or response body that provides information about the file that is being transcoded.\u003c/p\u003e",
                        "typeExposed": "Maybe JobInput",
                        "type": "Maybe JobInput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jOutput",
                        "name": "_jOutput",
                        "shape": "JobOutput",
                        "locationName": "Output",
                        "documentation": "\u003cp\u003eIf you specified one output for a job, information about that output. If you specified multiple outputs for a job, the Output object lists information about the first output. This duplicates the information that is listed for the first output in the Outputs object.\u003c/p\u003e \u003cp\u003e\u003cimportant\u003eOutputs recommended instead.\u003c/important\u003e A section of the request or response body that provides information about the transcoded (target) file. \u003c/p\u003e",
                        "typeExposed": "Maybe JobOutput",
                        "type": "Maybe JobOutput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jOutputKeyPrefix",
                        "name": "_jOutputKeyPrefix",
                        "shape": "Key",
                        "locationName": "OutputKeyPrefix",
                        "documentation": "\u003cp\u003eThe value, if any, that you want Elastic Transcoder to prepend to the names of all files that this job creates, including output files, thumbnails, and playlists. We recommend that you add a / or some other delimiter to the end of the \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jOutputs",
                        "name": "_jOutputs",
                        "shape": "JobOutputs",
                        "locationName": "Outputs",
                        "documentation": "\u003cp\u003eInformation about the output files. We recommend that you use the \u003ccode\u003eOutputs\u003c/code\u003e syntax for all jobs, even when you want Elastic Transcoder to transcode a file into only one format. Do not use both the \u003ccode\u003eOutputs\u003c/code\u003e and \u003ccode\u003eOutput\u003c/code\u003e syntaxes in the same request. You can create a maximum of 30 outputs per job. \u003c/p\u003e \u003cp\u003e If you specify more than one output for a job, Elastic Transcoder creates the files for each output in the order in which you specify them in the job.\u003c/p\u003e",
                        "typeExposed": "[JobOutput]",
                        "type": "[JobOutput]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jPipelineId",
                        "name": "_jPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003e The \u003ccode\u003eId\u003c/code\u003e of the pipeline that you want Elastic Transcoder to use for transcoding. The pipeline determines several settings, including the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode and the bucket into which Elastic Transcoder puts the transcoded files. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jPlaylists",
                        "name": "_jPlaylists",
                        "shape": "Playlists",
                        "locationName": "Playlists",
                        "documentation": "\u003cp\u003e\u003cimportant\u003eOutputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is fmp4 (Fragmented MP4) or ts (MPEG-TS), \u003ccode\u003ePlaylists\u003c/code\u003e contains information about the master playlists that you want Elastic Transcoder to create.\u003c/p\u003e \u003cp\u003eThe maximum number of master playlists in a job is 30. \u003c/p\u003e",
                        "typeExposed": "[Playlist]",
                        "type": "[Playlist]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jStatus",
                        "name": "_jStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of the job: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "captionSource",
                "payload": null,
                "required": [],
                "name": "CaptionSource",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csKey",
                        "name": "_csKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003eThe name of the sidecar caption file that you want Elastic Transcoder to include in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csLanguage",
                        "name": "_csLanguage",
                        "shape": "Key",
                        "locationName": "Language",
                        "documentation": "\u003cp\u003eA string that specifies the language of the caption. Specify this as one of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e2-character ISO 639-1 code\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e3-character ISO 639-2 code\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information on ISO language codes and language names, see the List of ISO 639-1 codes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csTimeOffset",
                        "name": "_csTimeOffset",
                        "shape": "TimeOffset",
                        "locationName": "TimeOffset",
                        "documentation": "\u003cp\u003eFor clip generation or captions that do not start at the same time as the associated video file, the \u003ccode\u003eTimeOffset\u003c/code\u003e tells Elastic Transcoder how much of the video to encode before including captions.\u003c/p\u003e \u003cp\u003eSpecify the TimeOffset in the form [+-]SS.sss or [+-]HH:mm:SS.ss.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csLabel",
                        "name": "_csLabel",
                        "shape": "Name",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eThe label of the caption shown in the player when choosing a language. We recommend that you put the caption language name here, in the language of the captions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csKey",
                        "name": "_csKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003eThe name of the sidecar caption file that you want Elastic Transcoder to include in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csLabel",
                        "name": "_csLabel",
                        "shape": "Name",
                        "locationName": "Label",
                        "documentation": "\u003cp\u003eThe label of the caption shown in the player when choosing a language. We recommend that you put the caption language name here, in the language of the captions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csLanguage",
                        "name": "_csLanguage",
                        "shape": "Key",
                        "locationName": "Language",
                        "documentation": "\u003cp\u003eA string that specifies the language of the caption. Specify this as one of:\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e2-character ISO 639-1 code\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e3-character ISO 639-2 code\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eFor more information on ISO language codes and language names, see the List of ISO 639-1 codes.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csTimeOffset",
                        "name": "_csTimeOffset",
                        "shape": "TimeOffset",
                        "locationName": "TimeOffset",
                        "documentation": "\u003cp\u003eFor clip generation or captions that do not start at the same time as the associated video file, the \u003ccode\u003eTimeOffset\u003c/code\u003e tells Elastic Transcoder how much of the video to encode before including captions.\u003c/p\u003e \u003cp\u003eSpecify the TimeOffset in the form [+-]SS.sss or [+-]HH:mm:SS.ss.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 16,
                "ctor": "artwork",
                "payload": null,
                "required": [],
                "name": "Artwork",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aInputKey",
                        "name": "_aInputKey",
                        "shape": "WatermarkKey",
                        "locationName": "InputKey",
                        "documentation": "\u003cp\u003eThe name of the file to be used as album art. To determine which Amazon S3 bucket contains the specified file, Elastic Transcoder checks the pipeline specified by \u003ccode\u003ePipelineId\u003c/code\u003e; the \u003ccode\u003eInputBucket\u003c/code\u003e object in that pipeline identifies the bucket.\u003c/p\u003e \u003cp\u003eIf the file name includes a prefix, for example, \u003ccode\u003ecooking/pie.jpg\u003c/code\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aMaxWidth",
                        "name": "_aMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of the output album art in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 600 as the default value. If you specify a numeric value, enter an even integer between 32 and 4096, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aMaxHeight",
                        "name": "_aMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the output album art in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 600 as the default value. If you specify a numeric value, enter an even integer between 32 and 3072, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aSizingPolicy",
                        "name": "_aSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of the output album art:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit:\u003c/code\u003e Elastic Transcoder scales the output art so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill:\u003c/code\u003e Elastic Transcoder scales the output art so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e and matches or exceeds the other value. Elastic Transcoder centers the output art and then crops it in the dimension (if any) that exceeds the maximum value. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch:\u003c/code\u003e Elastic Transcoder stretches the output art to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the input art and the output art are different, the output art will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep:\u003c/code\u003e Elastic Transcoder does not scale the output art. If either dimension of the input art exceeds the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, Elastic Transcoder crops the output art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit:\u003c/code\u003e Elastic Transcoder scales the output art down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the art up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e Elastic Transcoder scales the output art down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale the art up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPaddingPolicy",
                        "name": "_aPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add white bars to the top and bottom and/or left and right sides of the output album art to make the total size of the output art match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAlbumArtFormat",
                        "name": "_aAlbumArtFormat",
                        "shape": "JpgOrPng",
                        "locationName": "AlbumArtFormat",
                        "documentation": "\u003cp\u003eThe format of album art, if any. Valid formats are \u003ccode\u003e.jpg\u003c/code\u003e and \u003ccode\u003e.png\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aAlbumArtFormat",
                        "name": "_aAlbumArtFormat",
                        "shape": "JpgOrPng",
                        "locationName": "AlbumArtFormat",
                        "documentation": "\u003cp\u003eThe format of album art, if any. Valid formats are \u003ccode\u003e.jpg\u003c/code\u003e and \u003ccode\u003e.png\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aInputKey",
                        "name": "_aInputKey",
                        "shape": "WatermarkKey",
                        "locationName": "InputKey",
                        "documentation": "\u003cp\u003eThe name of the file to be used as album art. To determine which Amazon S3 bucket contains the specified file, Elastic Transcoder checks the pipeline specified by \u003ccode\u003ePipelineId\u003c/code\u003e; the \u003ccode\u003eInputBucket\u003c/code\u003e object in that pipeline identifies the bucket.\u003c/p\u003e \u003cp\u003eIf the file name includes a prefix, for example, \u003ccode\u003ecooking/pie.jpg\u003c/code\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aMaxHeight",
                        "name": "_aMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the output album art in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 600 as the default value. If you specify a numeric value, enter an even integer between 32 and 3072, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aMaxWidth",
                        "name": "_aMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of the output album art in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 600 as the default value. If you specify a numeric value, enter an even integer between 32 and 4096, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aPaddingPolicy",
                        "name": "_aPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add white bars to the top and bottom and/or left and right sides of the output album art to make the total size of the output art match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "aSizingPolicy",
                        "name": "_aSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of the output album art:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit:\u003c/code\u003e Elastic Transcoder scales the output art so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill:\u003c/code\u003e Elastic Transcoder scales the output art so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e and matches or exceeds the other value. Elastic Transcoder centers the output art and then crops it in the dimension (if any) that exceeds the maximum value. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch:\u003c/code\u003e Elastic Transcoder stretches the output art to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the input art and the output art are different, the output art will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep:\u003c/code\u003e Elastic Transcoder does not scale the output art. If either dimension of the input art exceeds the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, Elastic Transcoder crops the output art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit:\u003c/code\u003e Elastic Transcoder scales the output art down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the art up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e Elastic Transcoder scales the output art down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale the art up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "timeSpan",
                "payload": null,
                "required": [],
                "name": "TimeSpan",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tsStartTime",
                        "name": "_tsStartTime",
                        "shape": "Time",
                        "locationName": "StartTime",
                        "documentation": "\u003cp\u003eThe place in the input file where you want a clip to start. The format can be either HH:mm:ss.SSS (maximum value: 23:59:59.999; SSS is thousandths of a second) or sssss.SSS (maximum value: 86399.999). If you don't specify a value, Elastic Transcoder starts at the beginning of the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tsDuration",
                        "name": "_tsDuration",
                        "shape": "Time",
                        "locationName": "Duration",
                        "documentation": "\u003cp\u003eThe duration of the clip. The format can be either HH:mm:ss.SSS (maximum value: 23:59:59.999; SSS is thousandths of a second) or sssss.SSS (maximum value: 86399.999). If you don't specify a value, Elastic Transcoder creates an output file from StartTime to the end of the file.\u003c/p\u003e \u003cp\u003eIf you specify a value longer than the duration of the input file, Elastic Transcoder transcodes the file and returns a warning message.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tsDuration",
                        "name": "_tsDuration",
                        "shape": "Time",
                        "locationName": "Duration",
                        "documentation": "\u003cp\u003eThe duration of the clip. The format can be either HH:mm:ss.SSS (maximum value: 23:59:59.999; SSS is thousandths of a second) or sssss.SSS (maximum value: 86399.999). If you don't specify a value, Elastic Transcoder creates an output file from StartTime to the end of the file.\u003c/p\u003e \u003cp\u003eIf you specify a value longer than the duration of the input file, Elastic Transcoder transcodes the file and returns a warning message.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tsStartTime",
                        "name": "_tsStartTime",
                        "shape": "Time",
                        "locationName": "StartTime",
                        "documentation": "\u003cp\u003eThe place in the input file where you want a clip to start. The format can be either HH:mm:ss.SSS (maximum value: 23:59:59.999; SSS is thousandths of a second) or sssss.SSS (maximum value: 86399.999). If you don't specify a value, Elastic Transcoder starts at the beginning of the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "createJobOutput",
                "payload": null,
                "required": [],
                "name": "CreateJobOutput",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoKey",
                        "name": "_cjoKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name to assign to the transcoded file. Elastic Transcoder saves the file in the Amazon S3 bucket specified by the \u003ccode\u003eOutputBucket\u003c/code\u003e object in the pipeline that is specified by the pipeline ID. If a file with the specified name already exists in the output bucket, the job fails. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoThumbnailPattern",
                        "name": "_cjoThumbnailPattern",
                        "shape": "ThumbnailPattern",
                        "locationName": "ThumbnailPattern",
                        "documentation": "\u003cp\u003eWhether you want Elastic Transcoder to create thumbnails for your videos and, if so, how you want Elastic Transcoder to name the files.\u003c/p\u003e \u003cp\u003eIf you don't want Elastic Transcoder to create thumbnails, specify \"\".\u003c/p\u003e \u003cp\u003e If you do want Elastic Transcoder to create thumbnails, specify the information that you want to include in the file name for each thumbnail. You can specify the following values in any sequence: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{count}\u003c/code\u003e (Required)\u003c/b\u003e: If you want to create thumbnails, you must include \u003ccode\u003e{count}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. Wherever you specify \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder adds a five-digit sequence number (beginning with \u003cb\u003e00001\u003c/b\u003e) to thumbnail file names. The number indicates where a given thumbnail appears in the sequence of thumbnails for a transcoded file. \u003c/p\u003e \u003cimportant\u003eIf you specify a literal value and/or \u003ccode\u003e{resolution}\u003c/code\u003e but you omit \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder returns a validation error and does not create the job.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eLiteral values (Optional)\u003c/b\u003e: You can specify literal values anywhere in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. For example, you can include them as a file name prefix or as a delimiter between \u003ccode\u003e{resolution}\u003c/code\u003e and \u003ccode\u003e{count}\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{resolution}\u003c/code\u003e (Optional)\u003c/b\u003e: If you want Elastic Transcoder to include the resolution in the file name, include \u003ccode\u003e{resolution}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen creating thumbnails, Elastic Transcoder automatically saves the files in the format (.jpg or .png) that appears in the preset that you specified in the \u003ccode\u003ePresetID\u003c/code\u003e value of \u003ccode\u003eCreateJobOutput\u003c/code\u003e. Elastic Transcoder also appends the applicable file name extension.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoRotate",
                        "name": "_cjoRotate",
                        "shape": "Rotate",
                        "locationName": "Rotate",
                        "documentation": "\u003cp\u003e The number of degrees clockwise by which you want Elastic Transcoder to rotate the output relative to the input. Enter one of the following values: \u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e90\u003c/code\u003e, \u003ccode\u003e180\u003c/code\u003e, \u003ccode\u003e270\u003c/code\u003e. The value \u003ccode\u003eauto\u003c/code\u003e generally works only if the file that you're transcoding contains rotation metadata. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoPresetId",
                        "name": "_cjoPresetId",
                        "shape": "Id",
                        "locationName": "PresetId",
                        "documentation": "\u003cp\u003e The \u003ccode\u003eId\u003c/code\u003e of the preset to use for this job. The preset determines the audio, video, and thumbnail settings that Elastic Transcoder uses for transcoding. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoSegmentDuration",
                        "name": "_cjoSegmentDuration",
                        "shape": "Float",
                        "locationName": "SegmentDuration",
                        "documentation": "\u003cp\u003e\u003cimportant\u003e(Outputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is \u003ccode\u003efmp4\u003c/code\u003e (Fragmented MP4) or \u003ccode\u003ets\u003c/code\u003e (MPEG-TS), \u003ccode\u003eSegmentDuration\u003c/code\u003e is the target maximum duration of each segment in seconds. For \u003ccode\u003eHLSv3\u003c/code\u003e format playlists, each media segment is stored in a separate \u003ccode\u003e.ts\u003c/code\u003e file. For \u003ccode\u003eHLSv4\u003c/code\u003e and \u003ccode\u003eSmooth\u003c/code\u003e playlists, all media segments for an output are stored in a single file. Each segment is approximately the length of the \u003ccode\u003eSegmentDuration\u003c/code\u003e, though individual segments might be shorter or longer.\u003c/p\u003e \u003cp\u003eThe range of valid values is 1 to 60 seconds. If the duration of the video is not evenly divisible by \u003ccode\u003eSegmentDuration\u003c/code\u003e, the duration of the last segment is the remainder of total length/SegmentDuration.\u003c/p\u003e \u003cp\u003eElastic Transcoder creates an output-specific playlist for each output \u003ccode\u003eHLS\u003c/code\u003e output that you specify in OutputKeys. To add an output to the master playlist for this job, include it in the \u003ccode\u003eOutputKeys\u003c/code\u003e of the associated playlist.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjoWatermarks",
                        "name": "_cjoWatermarks",
                        "shape": "JobWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eInformation about the watermarks that you want Elastic Transcoder to add to the video during transcoding. You can specify up to four watermarks for each output. Settings for each watermark must be defined in the preset for the current output.\u003c/p\u003e",
                        "typeExposed": "[JobWatermark]",
                        "type": "[JobWatermark]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoAlbumArt",
                        "name": "_cjoAlbumArt",
                        "shape": "JobAlbumArt",
                        "locationName": "AlbumArt",
                        "documentation": "\u003cp\u003eInformation about the album art that you want Elastic Transcoder to add to the file during transcoding. You can specify up to twenty album artworks for each output. Settings for each artwork must be defined in the job for the current output.\u003c/p\u003e",
                        "typeExposed": "Maybe JobAlbumArt",
                        "type": "Maybe JobAlbumArt"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjoComposition",
                        "name": "_cjoComposition",
                        "shape": "Composition",
                        "locationName": "Composition",
                        "documentation": "\u003cp\u003eYou can create an output file that contains an excerpt from the input file. This excerpt, called a clip, can come from the beginning, middle, or end of the file. The Composition object contains settings for the clips that make up an output file. For the current release, you can only specify settings for a single clip per output file. The Composition object cannot be null.\u003c/p\u003e",
                        "typeExposed": "[Clip]",
                        "type": "[Clip]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoCaptions",
                        "name": "_cjoCaptions",
                        "shape": "Captions",
                        "locationName": "Captions",
                        "documentation": "\u003cp\u003eYou can configure Elastic Transcoder to transcode captions, or subtitles, from one format to another. All captions must be in UTF-8. Elastic Transcoder supports two types of captions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eEmbedded:\u003c/b\u003e Embedded captions are included in the same file as the audio and video. Elastic Transcoder supports only one embedded caption per language, to a maximum of 300 embedded captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003eCEA-608 (EIA-608\u003c/code\u003e, first non-empty channel only), \u003ccode\u003eCEA-708 (EIA-708\u003c/code\u003e, first non-empty channel only), and \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eElastic Transcoder supports a maximum of one embedded format per output.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eSidecar:\u003c/b\u003e Sidecar captions are kept in a separate metadata file from the audio and video data. Sidecar captions require a player that is capable of understanding the relationship between the video file and the sidecar file. Elastic Transcoder supports only one sidecar caption per language, to a maximum of 20 sidecar captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003eebu-tt\u003c/code\u003e, \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esmpt\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, \u003ccode\u003ettml\u003c/code\u003e (first div element only), and \u003ccode\u003ewebvtt\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, and \u003ccode\u003ewebvtt\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cp\u003eElastic Transcoder does not support OCR (Optical Character Recognition), does not accept pictures as a valid input for captions, and is not available for audio-only transcoding. Elastic Transcoder does not preserve text formatting (for example, italics) during the transcoding process.\u003c/p\u003e \u003cp\u003eTo remove captions or leave the captions empty, set \u003ccode\u003eCaptions\u003c/code\u003e to null. To pass through existing captions unchanged, set the \u003ccode\u003eMergePolicy\u003c/code\u003e to \u003ccode\u003eMergeRetain\u003c/code\u003e, and pass in a null \u003ccode\u003eCaptionSources\u003c/code\u003e array.\u003c/p\u003e \u003cp\u003eFor more information on embedded files, see the Subtitles Wikipedia page.\u003c/p\u003e \u003cp\u003eFor more information on sidecar files, see the Extensible Metadata Platform and Sidecar file Wikipedia pages.\u003c/p\u003e",
                        "typeExposed": "Maybe Captions",
                        "type": "Maybe Captions"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoAlbumArt",
                        "name": "_cjoAlbumArt",
                        "shape": "JobAlbumArt",
                        "locationName": "AlbumArt",
                        "documentation": "\u003cp\u003eInformation about the album art that you want Elastic Transcoder to add to the file during transcoding. You can specify up to twenty album artworks for each output. Settings for each artwork must be defined in the job for the current output.\u003c/p\u003e",
                        "typeExposed": "Maybe JobAlbumArt",
                        "type": "Maybe JobAlbumArt"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoCaptions",
                        "name": "_cjoCaptions",
                        "shape": "Captions",
                        "locationName": "Captions",
                        "documentation": "\u003cp\u003eYou can configure Elastic Transcoder to transcode captions, or subtitles, from one format to another. All captions must be in UTF-8. Elastic Transcoder supports two types of captions:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eEmbedded:\u003c/b\u003e Embedded captions are included in the same file as the audio and video. Elastic Transcoder supports only one embedded caption per language, to a maximum of 300 embedded captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003eCEA-608 (EIA-608\u003c/code\u003e, first non-empty channel only), \u003ccode\u003eCEA-708 (EIA-708\u003c/code\u003e, first non-empty channel only), and \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003emov-text\u003c/code\u003e\u003c/p\u003e \u003cp\u003eElastic Transcoder supports a maximum of one embedded format per output.\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eSidecar:\u003c/b\u003e Sidecar captions are kept in a separate metadata file from the audio and video data. Sidecar captions require a player that is capable of understanding the relationship between the video file and the sidecar file. Elastic Transcoder supports only one sidecar caption per language, to a maximum of 20 sidecar captions per file.\u003c/p\u003e \u003cp\u003eValid input values include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003eebu-tt\u003c/code\u003e, \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esmpt\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, \u003ccode\u003ettml\u003c/code\u003e (first div element only), and \u003ccode\u003ewebvtt\u003c/code\u003e\u003c/p\u003e \u003cp\u003eValid outputs include: \u003ccode\u003edfxp\u003c/code\u003e (first div element only), \u003ccode\u003escc\u003c/code\u003e, \u003ccode\u003esrt\u003c/code\u003e, and \u003ccode\u003ewebvtt\u003c/code\u003e.\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003e If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cp\u003eElastic Transcoder does not support OCR (Optical Character Recognition), does not accept pictures as a valid input for captions, and is not available for audio-only transcoding. Elastic Transcoder does not preserve text formatting (for example, italics) during the transcoding process.\u003c/p\u003e \u003cp\u003eTo remove captions or leave the captions empty, set \u003ccode\u003eCaptions\u003c/code\u003e to null. To pass through existing captions unchanged, set the \u003ccode\u003eMergePolicy\u003c/code\u003e to \u003ccode\u003eMergeRetain\u003c/code\u003e, and pass in a null \u003ccode\u003eCaptionSources\u003c/code\u003e array.\u003c/p\u003e \u003cp\u003eFor more information on embedded files, see the Subtitles Wikipedia page.\u003c/p\u003e \u003cp\u003eFor more information on sidecar files, see the Extensible Metadata Platform and Sidecar file Wikipedia pages.\u003c/p\u003e",
                        "typeExposed": "Maybe Captions",
                        "type": "Maybe Captions"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjoComposition",
                        "name": "_cjoComposition",
                        "shape": "Composition",
                        "locationName": "Composition",
                        "documentation": "\u003cp\u003eYou can create an output file that contains an excerpt from the input file. This excerpt, called a clip, can come from the beginning, middle, or end of the file. The Composition object contains settings for the clips that make up an output file. For the current release, you can only specify settings for a single clip per output file. The Composition object cannot be null.\u003c/p\u003e",
                        "typeExposed": "[Clip]",
                        "type": "[Clip]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoKey",
                        "name": "_cjoKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name to assign to the transcoded file. Elastic Transcoder saves the file in the Amazon S3 bucket specified by the \u003ccode\u003eOutputBucket\u003c/code\u003e object in the pipeline that is specified by the pipeline ID. If a file with the specified name already exists in the output bucket, the job fails. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoPresetId",
                        "name": "_cjoPresetId",
                        "shape": "Id",
                        "locationName": "PresetId",
                        "documentation": "\u003cp\u003e The \u003ccode\u003eId\u003c/code\u003e of the preset to use for this job. The preset determines the audio, video, and thumbnail settings that Elastic Transcoder uses for transcoding. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoRotate",
                        "name": "_cjoRotate",
                        "shape": "Rotate",
                        "locationName": "Rotate",
                        "documentation": "\u003cp\u003e The number of degrees clockwise by which you want Elastic Transcoder to rotate the output relative to the input. Enter one of the following values: \u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e90\u003c/code\u003e, \u003ccode\u003e180\u003c/code\u003e, \u003ccode\u003e270\u003c/code\u003e. The value \u003ccode\u003eauto\u003c/code\u003e generally works only if the file that you're transcoding contains rotation metadata. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoSegmentDuration",
                        "name": "_cjoSegmentDuration",
                        "shape": "Float",
                        "locationName": "SegmentDuration",
                        "documentation": "\u003cp\u003e\u003cimportant\u003e(Outputs in Fragmented MP4 or MPEG-TS format only.\u003c/important\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is \u003ccode\u003efmp4\u003c/code\u003e (Fragmented MP4) or \u003ccode\u003ets\u003c/code\u003e (MPEG-TS), \u003ccode\u003eSegmentDuration\u003c/code\u003e is the target maximum duration of each segment in seconds. For \u003ccode\u003eHLSv3\u003c/code\u003e format playlists, each media segment is stored in a separate \u003ccode\u003e.ts\u003c/code\u003e file. For \u003ccode\u003eHLSv4\u003c/code\u003e and \u003ccode\u003eSmooth\u003c/code\u003e playlists, all media segments for an output are stored in a single file. Each segment is approximately the length of the \u003ccode\u003eSegmentDuration\u003c/code\u003e, though individual segments might be shorter or longer.\u003c/p\u003e \u003cp\u003eThe range of valid values is 1 to 60 seconds. If the duration of the video is not evenly divisible by \u003ccode\u003eSegmentDuration\u003c/code\u003e, the duration of the last segment is the remainder of total length/SegmentDuration.\u003c/p\u003e \u003cp\u003eElastic Transcoder creates an output-specific playlist for each output \u003ccode\u003eHLS\u003c/code\u003e output that you specify in OutputKeys. To add an output to the master playlist for this job, include it in the \u003ccode\u003eOutputKeys\u003c/code\u003e of the associated playlist.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjoThumbnailPattern",
                        "name": "_cjoThumbnailPattern",
                        "shape": "ThumbnailPattern",
                        "locationName": "ThumbnailPattern",
                        "documentation": "\u003cp\u003eWhether you want Elastic Transcoder to create thumbnails for your videos and, if so, how you want Elastic Transcoder to name the files.\u003c/p\u003e \u003cp\u003eIf you don't want Elastic Transcoder to create thumbnails, specify \"\".\u003c/p\u003e \u003cp\u003e If you do want Elastic Transcoder to create thumbnails, specify the information that you want to include in the file name for each thumbnail. You can specify the following values in any sequence: \u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{count}\u003c/code\u003e (Required)\u003c/b\u003e: If you want to create thumbnails, you must include \u003ccode\u003e{count}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. Wherever you specify \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder adds a five-digit sequence number (beginning with \u003cb\u003e00001\u003c/b\u003e) to thumbnail file names. The number indicates where a given thumbnail appears in the sequence of thumbnails for a transcoded file. \u003c/p\u003e \u003cimportant\u003eIf you specify a literal value and/or \u003ccode\u003e{resolution}\u003c/code\u003e but you omit \u003ccode\u003e{count}\u003c/code\u003e, Elastic Transcoder returns a validation error and does not create the job.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003eLiteral values (Optional)\u003c/b\u003e: You can specify literal values anywhere in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. For example, you can include them as a file name prefix or as a delimiter between \u003ccode\u003e{resolution}\u003c/code\u003e and \u003ccode\u003e{count}\u003c/code\u003e. \u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e \u003cb\u003e\u003ccode\u003e{resolution}\u003c/code\u003e (Optional)\u003c/b\u003e: If you want Elastic Transcoder to include the resolution in the file name, include \u003ccode\u003e{resolution}\u003c/code\u003e in the \u003ccode\u003eThumbnailPattern\u003c/code\u003e object. \u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWhen creating thumbnails, Elastic Transcoder automatically saves the files in the format (.jpg or .png) that appears in the preset that you specified in the \u003ccode\u003ePresetID\u003c/code\u003e value of \u003ccode\u003eCreateJobOutput\u003c/code\u003e. Elastic Transcoder also appends the applicable file name extension.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjoWatermarks",
                        "name": "_cjoWatermarks",
                        "shape": "JobWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eInformation about the watermarks that you want Elastic Transcoder to add to the video during transcoding. You can specify up to four watermarks for each output. Settings for each watermark must be defined in the preset for the current output.\u003c/p\u003e",
                        "typeExposed": "[JobWatermark]",
                        "type": "[JobWatermark]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "audioParameters",
                "payload": null,
                "required": [],
                "name": "AudioParameters",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apCodec",
                        "name": "_apCodec",
                        "shape": "AudioCodec",
                        "locationName": "Codec",
                        "documentation": "\u003cp\u003eThe audio codec for the output file. Valid values include \u003ccode\u003eaac\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, and \u003ccode\u003evorbis\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apSampleRate",
                        "name": "_apSampleRate",
                        "shape": "AudioSampleRate",
                        "locationName": "SampleRate",
                        "documentation": "\u003cp\u003eThe sample rate of the audio stream in the output file, in Hertz. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e22050\u003c/code\u003e, \u003ccode\u003e32000\u003c/code\u003e, \u003ccode\u003e44100\u003c/code\u003e, \u003ccode\u003e48000\u003c/code\u003e, \u003ccode\u003e96000\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder automatically detects the sample rate.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apBitRate",
                        "name": "_apBitRate",
                        "shape": "AudioBitRate",
                        "locationName": "BitRate",
                        "documentation": "\u003cp\u003eThe bit rate of the audio stream in the output file, in kilobits/second. Enter an integer between 64 and 320, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apChannels",
                        "name": "_apChannels",
                        "shape": "AudioChannels",
                        "locationName": "Channels",
                        "documentation": "\u003cp\u003eThe number of audio channels in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder automatically detects the number of channels in the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apCodecOptions",
                        "name": "_apCodecOptions",
                        "shape": "AudioCodecOptions",
                        "locationName": "CodecOptions",
                        "documentation": "\u003cp\u003eIf you specified \u003ccode\u003eAAC\u003c/code\u003e for \u003ccode\u003eAudio:Codec\u003c/code\u003e, this is the \u003ccode\u003eAAC\u003c/code\u003e compression profile to use. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003eAAC-LC\u003c/code\u003e, \u003ccode\u003eHE-AAC\u003c/code\u003e, \u003ccode\u003eHE-AACv2\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder chooses a profile based on the bit rate of the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioCodecOptions",
                        "type": "Maybe AudioCodecOptions"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apBitRate",
                        "name": "_apBitRate",
                        "shape": "AudioBitRate",
                        "locationName": "BitRate",
                        "documentation": "\u003cp\u003eThe bit rate of the audio stream in the output file, in kilobits/second. Enter an integer between 64 and 320, inclusive.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apChannels",
                        "name": "_apChannels",
                        "shape": "AudioChannels",
                        "locationName": "Channels",
                        "documentation": "\u003cp\u003eThe number of audio channels in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e0\u003c/code\u003e, \u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder automatically detects the number of channels in the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apCodec",
                        "name": "_apCodec",
                        "shape": "AudioCodec",
                        "locationName": "Codec",
                        "documentation": "\u003cp\u003eThe audio codec for the output file. Valid values include \u003ccode\u003eaac\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, and \u003ccode\u003evorbis\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apCodecOptions",
                        "name": "_apCodecOptions",
                        "shape": "AudioCodecOptions",
                        "locationName": "CodecOptions",
                        "documentation": "\u003cp\u003eIf you specified \u003ccode\u003eAAC\u003c/code\u003e for \u003ccode\u003eAudio:Codec\u003c/code\u003e, this is the \u003ccode\u003eAAC\u003c/code\u003e compression profile to use. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003eAAC-LC\u003c/code\u003e, \u003ccode\u003eHE-AAC\u003c/code\u003e, \u003ccode\u003eHE-AACv2\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder chooses a profile based on the bit rate of the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioCodecOptions",
                        "type": "Maybe AudioCodecOptions"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "apSampleRate",
                        "name": "_apSampleRate",
                        "shape": "AudioSampleRate",
                        "locationName": "SampleRate",
                        "documentation": "\u003cp\u003eThe sample rate of the audio stream in the output file, in Hertz. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e22050\u003c/code\u003e, \u003ccode\u003e32000\u003c/code\u003e, \u003ccode\u003e44100\u003c/code\u003e, \u003ccode\u003e48000\u003c/code\u003e, \u003ccode\u003e96000\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder automatically detects the sample rate.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "thumbnails",
                "payload": null,
                "required": [],
                "name": "Thumbnails",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tFormat",
                        "name": "_tFormat",
                        "shape": "JpgOrPng",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of thumbnails, if any. Valid values are \u003ccode\u003ejpg\u003c/code\u003e and \u003ccode\u003epng\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eYou specify whether you want Elastic Transcoder to create thumbnails when you create a job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tInterval",
                        "name": "_tInterval",
                        "shape": "Digits",
                        "locationName": "Interval",
                        "documentation": "\u003cp\u003eThe number of seconds between thumbnails. Specify an integer value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tResolution",
                        "name": "_tResolution",
                        "shape": "ThumbnailResolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of thumbnails, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, and \u003ccode\u003ePaddingPolicy\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe width and height of thumbnail files in pixels. Specify a value in the format \u003ccode\u003e\u003ci\u003ewidth\u003c/i\u003e\u003c/code\u003e x \u003ccode\u003e\u003ci\u003eheight\u003c/i\u003e\u003c/code\u003e where both values are even integers. The values cannot exceed the width and height that you specified in the \u003ccode\u003eVideo:Resolution\u003c/code\u003e object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tAspectRatio",
                        "name": "_tAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of thumbnails, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, and \u003ccode\u003ePaddingPolicy\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe aspect ratio of thumbnails. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder tries to preserve the aspect ratio of the video in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tMaxWidth",
                        "name": "_tMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of thumbnails in pixels. If you specify auto, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 4096. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tMaxHeight",
                        "name": "_tMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of thumbnails in pixels. If you specify auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 3072. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tSizingPolicy",
                        "name": "_tSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of thumbnails:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit\u003c/code\u003e: Elastic Transcoder scales thumbnails so they match the value that you specified in thumbnail MaxWidth or MaxHeight settings without exceeding the other value. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill\u003c/code\u003e: Elastic Transcoder scales thumbnails so they match the value that you specified in thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e settings and matches or exceeds the other value. Elastic Transcoder centers the image in thumbnails and then crops in the dimension (if any) that exceeds the maximum value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch\u003c/code\u003e: Elastic Transcoder stretches thumbnails to match the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings. If the relative proportions of the input video and thumbnails are different, the thumbnails will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep\u003c/code\u003e: Elastic Transcoder does not scale thumbnails. If either dimension of the input video exceeds the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings, Elastic Transcoder crops the thumbnails.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit\u003c/code\u003e: Elastic Transcoder scales thumbnails down so that their dimensions match the values that you specified for at least one of thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale thumbnails up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e: Elastic Transcoder scales thumbnails down so that their dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale thumbnails up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tPaddingPolicy",
                        "name": "_tPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add black bars to the top and bottom and/or left and right sides of thumbnails to make the total size of the thumbnails match the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tAspectRatio",
                        "name": "_tAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of thumbnails, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, and \u003ccode\u003ePaddingPolicy\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe aspect ratio of thumbnails. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder tries to preserve the aspect ratio of the video in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tFormat",
                        "name": "_tFormat",
                        "shape": "JpgOrPng",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of thumbnails, if any. Valid values are \u003ccode\u003ejpg\u003c/code\u003e and \u003ccode\u003epng\u003c/code\u003e. \u003c/p\u003e \u003cp\u003eYou specify whether you want Elastic Transcoder to create thumbnails when you create a job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tInterval",
                        "name": "_tInterval",
                        "shape": "Digits",
                        "locationName": "Interval",
                        "documentation": "\u003cp\u003eThe number of seconds between thumbnails. Specify an integer value.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tMaxHeight",
                        "name": "_tMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of thumbnails in pixels. If you specify auto, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 3072. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tMaxWidth",
                        "name": "_tMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of thumbnails in pixels. If you specify auto, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 32 and 4096. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tPaddingPolicy",
                        "name": "_tPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add black bars to the top and bottom and/or left and right sides of thumbnails to make the total size of the thumbnails match the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tResolution",
                        "name": "_tResolution",
                        "shape": "ThumbnailResolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of thumbnails, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, and \u003ccode\u003ePaddingPolicy\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe width and height of thumbnail files in pixels. Specify a value in the format \u003ccode\u003e\u003ci\u003ewidth\u003c/i\u003e\u003c/code\u003e x \u003ccode\u003e\u003ci\u003eheight\u003c/i\u003e\u003c/code\u003e where both values are even integers. The values cannot exceed the width and height that you specified in the \u003ccode\u003eVideo:Resolution\u003c/code\u003e object.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "tSizingPolicy",
                        "name": "_tSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of thumbnails:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit\u003c/code\u003e: Elastic Transcoder scales thumbnails so they match the value that you specified in thumbnail MaxWidth or MaxHeight settings without exceeding the other value. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill\u003c/code\u003e: Elastic Transcoder scales thumbnails so they match the value that you specified in thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e settings and matches or exceeds the other value. Elastic Transcoder centers the image in thumbnails and then crops in the dimension (if any) that exceeds the maximum value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch\u003c/code\u003e: Elastic Transcoder stretches thumbnails to match the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings. If the relative proportions of the input video and thumbnails are different, the thumbnails will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep\u003c/code\u003e: Elastic Transcoder does not scale thumbnails. If either dimension of the input video exceeds the values that you specified for thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e settings, Elastic Transcoder crops the thumbnails.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit\u003c/code\u003e: Elastic Transcoder scales thumbnails down so that their dimensions match the values that you specified for at least one of thumbnail \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale thumbnails up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e: Elastic Transcoder scales thumbnails down so that their dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale thumbnails up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "jobAlbumArt",
                "payload": null,
                "required": [],
                "name": "JobAlbumArt",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jaaMergePolicy",
                        "name": "_jaaMergePolicy",
                        "shape": "MergePolicy",
                        "locationName": "MergePolicy",
                        "documentation": "\u003cp\u003eA policy that determines how Elastic Transcoder will handle the existence of multiple album artwork files.\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eReplace:\u003c/code\u003e The specified album art will replace any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePrepend:\u003c/code\u003e The specified album art will be placed in front of any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAppend:\u003c/code\u003e The specified album art will be placed after any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFallback:\u003c/code\u003e If the original input file contains artwork, Elastic Transcoder will use that artwork for the output. If the original input does not contain artwork, Elastic Transcoder will use the specified album art file.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jaaArtwork",
                        "name": "_jaaArtwork",
                        "shape": "Artworks",
                        "locationName": "Artwork",
                        "documentation": "\u003cp\u003eThe file to be used as album art. There can be multiple artworks associated with an audio file, to a maximum of 20. Valid formats are \u003ccode\u003e.jpg\u003c/code\u003e and \u003ccode\u003e.png\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "[Artwork]",
                        "type": "[Artwork]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "jaaArtwork",
                        "name": "_jaaArtwork",
                        "shape": "Artworks",
                        "locationName": "Artwork",
                        "documentation": "\u003cp\u003eThe file to be used as album art. There can be multiple artworks associated with an audio file, to a maximum of 20. Valid formats are \u003ccode\u003e.jpg\u003c/code\u003e and \u003ccode\u003e.png\u003c/code\u003e\u003c/p\u003e",
                        "typeExposed": "[Artwork]",
                        "type": "[Artwork]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jaaMergePolicy",
                        "name": "_jaaMergePolicy",
                        "shape": "MergePolicy",
                        "locationName": "MergePolicy",
                        "documentation": "\u003cp\u003eA policy that determines how Elastic Transcoder will handle the existence of multiple album artwork files.\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eReplace:\u003c/code\u003e The specified album art will replace any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePrepend:\u003c/code\u003e The specified album art will be placed in front of any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAppend:\u003c/code\u003e The specified album art will be placed after any existing album art.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFallback:\u003c/code\u003e If the original input file contains artwork, Elastic Transcoder will use that artwork for the output. If the original input does not contain artwork, Elastic Transcoder will use the specified album art file.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 20,
                "ctor": "jobWatermark",
                "payload": null,
                "required": [],
                "name": "JobWatermark",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jwPresetWatermarkId",
                        "name": "_jwPresetWatermarkId",
                        "shape": "PresetWatermarkId",
                        "locationName": "PresetWatermarkId",
                        "documentation": "\u003cp\u003eThe ID of the watermark settings that Elastic Transcoder uses to add watermarks to the video during transcoding. The settings are in the preset specified by Preset for the current output. In that preset, the value of Watermarks Id tells Elastic Transcoder which settings to use.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jwInputKey",
                        "name": "_jwInputKey",
                        "shape": "WatermarkKey",
                        "locationName": "InputKey",
                        "documentation": "\u003cp\u003e The name of the .png or .jpg file that you want to use for the watermark. To determine which Amazon S3 bucket contains the specified file, Elastic Transcoder checks the pipeline specified by \u003ccode\u003ePipeline\u003c/code\u003e; the \u003ccode\u003eInput Bucket\u003c/code\u003e object in that pipeline identifies the bucket.\u003c/p\u003e \u003cp\u003e If the file name includes a prefix, for example, \u003cb\u003elogos/128x64.png\u003c/b\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jwInputKey",
                        "name": "_jwInputKey",
                        "shape": "WatermarkKey",
                        "locationName": "InputKey",
                        "documentation": "\u003cp\u003e The name of the .png or .jpg file that you want to use for the watermark. To determine which Amazon S3 bucket contains the specified file, Elastic Transcoder checks the pipeline specified by \u003ccode\u003ePipeline\u003c/code\u003e; the \u003ccode\u003eInput Bucket\u003c/code\u003e object in that pipeline identifies the bucket.\u003c/p\u003e \u003cp\u003e If the file name includes a prefix, for example, \u003cb\u003elogos/128x64.png\u003c/b\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jwPresetWatermarkId",
                        "name": "_jwPresetWatermarkId",
                        "shape": "PresetWatermarkId",
                        "locationName": "PresetWatermarkId",
                        "documentation": "\u003cp\u003eThe ID of the watermark settings that Elastic Transcoder uses to add watermarks to the video during transcoding. The settings are in the preset specified by Preset for the current output. In that preset, the value of Watermarks Id tells Elastic Transcoder which settings to use.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "pipeline",
                "payload": null,
                "required": [],
                "name": "Pipeline",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pId",
                        "name": "_pId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier for the pipeline. You use this value to identify the pipeline in which you want to perform a variety of operations, such as creating a job or a preset. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pArn",
                        "name": "_pArn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pName",
                        "name": "_pName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pStatus",
                        "name": "_pStatus",
                        "shape": "PipelineStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe current status of the pipeline:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eActive\u003c/code\u003e: The pipeline is processing jobs.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePaused\u003c/code\u003e: The pipeline is not currently processing jobs.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pInputBucket",
                        "name": "_pInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket from which Elastic Transcoder gets media files for transcoding and the graphics files, if any, that you want to use for watermarks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pOutputBucket",
                        "name": "_pOutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files, thumbnails, and playlists. Either you specify this value, or you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pRole",
                        "name": "_pRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that Elastic Transcoder uses to transcode jobs for this pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pNotifications",
                        "name": "_pNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e (optional): The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process the job.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing the job.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pContentConfig",
                        "name": "_pContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eInformation about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. Either you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, or you specify \u003ccode\u003eOutputBucket\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e: A list of the users and/or predefined Amazon S3 groups you want to have access to transcoded files and playlists, and the type of access that you want them to have. \u003cul\u003e \u003cli\u003eGranteeType: The type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eGrantee\u003c/code\u003e: The AWS user or group that you want to have access to transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAccess\u003c/code\u003e: The permission that you want to give to the AWS user that is listed in \u003ccode\u003eGrantee\u003c/code\u003e. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pThumbnailConfig",
                        "name": "_pThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eInformation about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. Either you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, or you specify \u003ccode\u003eOutputBucket\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eBucket\u003c/code\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. \u003c/li\u003e \u003cli\u003e \u003ccode\u003ePermissions\u003c/code\u003e: A list of the users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access that you want them to have. \u003cul\u003e \u003cli\u003eGranteeType: The type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eGrantee\u003c/code\u003e: The AWS user or group that you want to have access to thumbnail files.\u003c/li\u003e \u003cli\u003eAccess: The permission that you want to give to the AWS user that is listed in Grantee. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has READ, READ_ACP, and WRITE_ACP permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eStorageClass\u003c/code\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pArn",
                        "name": "_pArn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pContentConfig",
                        "name": "_pContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eInformation about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists. Either you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, or you specify \u003ccode\u003eOutputBucket\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e: A list of the users and/or predefined Amazon S3 groups you want to have access to transcoded files and playlists, and the type of access that you want them to have. \u003cul\u003e \u003cli\u003eGranteeType: The type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eGrantee\u003c/code\u003e: The AWS user or group that you want to have access to transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eAccess\u003c/code\u003e: The permission that you want to give to the AWS user that is listed in \u003ccode\u003eGrantee\u003c/code\u003e. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, Standard or ReducedRedundancy, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pId",
                        "name": "_pId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier for the pipeline. You use this value to identify the pipeline in which you want to perform a variety of operations, such as creating a job or a preset. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pInputBucket",
                        "name": "_pInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket from which Elastic Transcoder gets media files for transcoding and the graphics files, if any, that you want to use for watermarks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pName",
                        "name": "_pName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pNotifications",
                        "name": "_pNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e (optional): The Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process the job.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing the job.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e (optional): The Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pOutputBucket",
                        "name": "_pOutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files, thumbnails, and playlists. Either you specify this value, or you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pRole",
                        "name": "_pRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that Elastic Transcoder uses to transcode jobs for this pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pStatus",
                        "name": "_pStatus",
                        "shape": "PipelineStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe current status of the pipeline:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eActive\u003c/code\u003e: The pipeline is processing jobs.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePaused\u003c/code\u003e: The pipeline is not currently processing jobs.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pThumbnailConfig",
                        "name": "_pThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eInformation about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. Either you specify both \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, or you specify \u003ccode\u003eOutputBucket\u003c/code\u003e.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eBucket\u003c/code\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files. \u003c/li\u003e \u003cli\u003e \u003ccode\u003ePermissions\u003c/code\u003e: A list of the users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access that you want them to have. \u003cul\u003e \u003cli\u003eGranteeType: The type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eGrantee\u003c/code\u003e: The AWS user or group that you want to have access to thumbnail files.\u003c/li\u003e \u003cli\u003eAccess: The permission that you want to give to the AWS user that is listed in Grantee. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has READ, READ_ACP, and WRITE_ACP permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eStorageClass\u003c/code\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "preset",
                "payload": null,
                "required": [],
                "name": "Preset",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Id",
                        "name": "_p1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eIdentifier for the new preset. You use this value to get settings for the preset or to delete it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Arn",
                        "name": "_p1Arn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Name",
                        "name": "_p1Name",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Description",
                        "name": "_p1Description",
                        "shape": "Description",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Container",
                        "name": "_p1Container",
                        "shape": "PresetContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the output file. Valid values include \u003ccode\u003efmp4\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003ets\u003c/code\u003e, and \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Audio",
                        "name": "_p1Audio",
                        "shape": "AudioParameters",
                        "locationName": "Audio",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the audio preset values.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioParameters",
                        "type": "Maybe AudioParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Video",
                        "name": "_p1Video",
                        "shape": "VideoParameters",
                        "locationName": "Video",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the video preset values.\u003c/p\u003e",
                        "typeExposed": "Maybe VideoParameters",
                        "type": "Maybe VideoParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Thumbnails",
                        "name": "_p1Thumbnails",
                        "shape": "Thumbnails",
                        "locationName": "Thumbnails",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the thumbnail preset values, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe Thumbnails",
                        "type": "Maybe Thumbnails"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Type",
                        "name": "_p1Type",
                        "shape": "PresetType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eWhether the preset is a default preset provided by Elastic Transcoder (\u003ccode\u003eSystem\u003c/code\u003e) or a preset that you have defined (\u003ccode\u003eCustom\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Arn",
                        "name": "_p1Arn",
                        "shape": "String",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) for the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Audio",
                        "name": "_p1Audio",
                        "shape": "AudioParameters",
                        "locationName": "Audio",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the audio preset values.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioParameters",
                        "type": "Maybe AudioParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Container",
                        "name": "_p1Container",
                        "shape": "PresetContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the output file. Valid values include \u003ccode\u003efmp4\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003ets\u003c/code\u003e, and \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Description",
                        "name": "_p1Description",
                        "shape": "Description",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Id",
                        "name": "_p1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eIdentifier for the new preset. You use this value to get settings for the preset or to delete it.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Name",
                        "name": "_p1Name",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Thumbnails",
                        "name": "_p1Thumbnails",
                        "shape": "Thumbnails",
                        "locationName": "Thumbnails",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the thumbnail preset values, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe Thumbnails",
                        "type": "Maybe Thumbnails"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Type",
                        "name": "_p1Type",
                        "shape": "PresetType",
                        "locationName": "Type",
                        "documentation": "\u003cp\u003eWhether the preset is a default preset provided by Elastic Transcoder (\u003ccode\u003eSystem\u003c/code\u003e) or a preset that you have defined (\u003ccode\u003eCustom\u003c/code\u003e).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p1Video",
                        "name": "_p1Video",
                        "shape": "VideoParameters",
                        "locationName": "Video",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the video preset values.\u003c/p\u003e",
                        "typeExposed": "Maybe VideoParameters",
                        "type": "Maybe VideoParameters"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 10,
                "ctor": "captionFormat",
                "payload": null,
                "required": [],
                "name": "CaptionFormat",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cfFormat",
                        "name": "_cfFormat",
                        "shape": "CaptionFormatFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format you specify determines whether Elastic Transcoder generates an embedded or sidecar caption for this output.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eValid Embedded Caption Formats:\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MP3\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MP4\u003c/b\u003e: mov-text\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MPEG-TS\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor ogg\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor webm\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eValid Sidecar Caption Formats:\u003c/b\u003e Elastic Transcoder supports dfxp (first div element only), scc, srt, and webvtt. If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor FMP4\u003c/b\u003e: dfxp\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eNon-FMP4 outputs\u003c/b\u003e: All sidecar types\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003ccode\u003efmp4\u003c/code\u003e captions have an extension of \u003ccode\u003e.ismt\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cfPattern",
                        "name": "_cfPattern",
                        "shape": "CaptionFormatPattern",
                        "locationName": "Pattern",
                        "documentation": "\u003cp\u003eThe prefix for caption filenames, in the form \u003ci\u003edescription\u003c/i\u003e-\u003ccode\u003e{language}\u003c/code\u003e, where:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003edescription\u003c/i\u003e is a description of the video.\u003c/li\u003e \u003cli\u003e \u003ccode\u003e{language}\u003c/code\u003e is a literal value that Elastic Transcoder replaces with the two- or three-letter code for the language of the caption in the output file names.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don't include \u003ccode\u003e{language}\u003c/code\u003e in the file name pattern, Elastic Transcoder automatically appends \"\u003ccode\u003e{language}\u003c/code\u003e\" to the value that you specify for the description. In addition, Elastic Transcoder automatically appends the count to the end of the segment files.\u003c/p\u003e \u003cp\u003eFor example, suppose you're transcoding into srt format. When you enter \"Sydney-{language}-sunrise\", and the language of the captions is English (en), the name of the first caption file will be Sydney-en-sunrise00000.srt.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cfFormat",
                        "name": "_cfFormat",
                        "shape": "CaptionFormatFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format you specify determines whether Elastic Transcoder generates an embedded or sidecar caption for this output.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eValid Embedded Caption Formats:\u003c/b\u003e\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MP3\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MP4\u003c/b\u003e: mov-text\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor MPEG-TS\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor ogg\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor webm\u003c/b\u003e: None\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003e\u003cb\u003eValid Sidecar Caption Formats:\u003c/b\u003e Elastic Transcoder supports dfxp (first div element only), scc, srt, and webvtt. If you want ttml or smpte-tt compatible captions, specify dfxp as your output format.\u003c/p\u003e \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eFor FMP4\u003c/b\u003e: dfxp\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003cb\u003eNon-FMP4 outputs\u003c/b\u003e: All sidecar types\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e\u003ccode\u003efmp4\u003c/code\u003e captions have an extension of \u003ccode\u003e.ismt\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cfPattern",
                        "name": "_cfPattern",
                        "shape": "CaptionFormatPattern",
                        "locationName": "Pattern",
                        "documentation": "\u003cp\u003eThe prefix for caption filenames, in the form \u003ci\u003edescription\u003c/i\u003e-\u003ccode\u003e{language}\u003c/code\u003e, where:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003edescription\u003c/i\u003e is a description of the video.\u003c/li\u003e \u003cli\u003e \u003ccode\u003e{language}\u003c/code\u003e is a literal value that Elastic Transcoder replaces with the two- or three-letter code for the language of the caption in the output file names.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eIf you don't include \u003ccode\u003e{language}\u003c/code\u003e in the file name pattern, Elastic Transcoder automatically appends \"\u003ccode\u003e{language}\u003c/code\u003e\" to the value that you specify for the description. In addition, Elastic Transcoder automatically appends the count to the end of the segment files.\u003c/p\u003e \u003cp\u003eFor example, suppose you're transcoding into srt format. When you enter \"Sydney-{language}-sunrise\", and the language of the captions is English (en), the name of the first caption file will be Sydney-en-sunrise00000.srt.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "presetWatermark",
                "payload": null,
                "required": [],
                "name": "PresetWatermark",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwId",
                        "name": "_pwId",
                        "shape": "PresetWatermarkId",
                        "locationName": "Id",
                        "documentation": "A unique identifier for the settings for one watermark. The value of \u003ccode\u003eId\u003c/code\u003e can be up to 40 characters long.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwMaxWidth",
                        "name": "_pwMaxWidth",
                        "shape": "PixelsOrPercent",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of the watermark in one of the following formats: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 16 pixels, and the maximum value is the value of \u003ccode\u003eMaxWidth\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100. Use the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the calculation.\u003c/li\u003e If you specify the value in pixels, it must be less than or equal to the value of \u003ccode\u003eMaxWidth\u003c/code\u003e.\u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwMaxHeight",
                        "name": "_pwMaxHeight",
                        "shape": "PixelsOrPercent",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the watermark in one of the following formats: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 16 pixels, and the maximum value is the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100. Use the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the calculation.\u003c/li\u003e \u003c/ul\u003e If you specify the value in pixels, it must be less than or equal to the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwSizingPolicy",
                        "name": "_pwSizingPolicy",
                        "shape": "WatermarkSizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eA value that controls scaling of the watermark: \u003cul\u003e \u003cli\u003e \u003cb\u003eFit\u003c/b\u003e: Elastic Transcoder scales the watermark so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003cb\u003eStretch\u003c/b\u003e: Elastic Transcoder stretches the watermark to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the watermark and the values of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e are different, the watermark will be distorted.\u003c/li\u003e \u003cli\u003e \u003cb\u003eShrinkToFit\u003c/b\u003e: Elastic Transcoder scales the watermark down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the watermark up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwHorizontalAlign",
                        "name": "_pwHorizontalAlign",
                        "shape": "HorizontalAlign",
                        "locationName": "HorizontalAlign",
                        "documentation": "\u003cp\u003eThe horizontal position of the watermark unless you specify a non-zero value for \u003ccode\u003eHorizontalOffset\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eLeft\u003c/b\u003e: The left edge of the watermark is aligned with the left border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eRight\u003c/b\u003e: The right edge of the watermark is aligned with the right border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCenter\u003c/b\u003e: The watermark is centered between the left and right borders.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwHorizontalOffset",
                        "name": "_pwHorizontalOffset",
                        "shape": "PixelsOrPercent",
                        "locationName": "HorizontalOffset",
                        "documentation": "\u003cp\u003eThe amount by which you want the horizontal position of the watermark to be offset from the position specified by HorizontalAlign: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 0 pixels, and the maximum value is the value of MaxWidth.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100.\u003c/li\u003e \u003c/ul\u003eFor example, if you specify Left for \u003ccode\u003eHorizontalAlign\u003c/code\u003e and 5px for \u003ccode\u003eHorizontalOffset\u003c/code\u003e, the left side of the watermark appears 5 pixels from the left border of the output video.\u003c/p\u003e \u003cp\u003e\u003ccode\u003eHorizontalOffset\u003c/code\u003e is only valid when the value of \u003ccode\u003eHorizontalAlign\u003c/code\u003e is \u003ccode\u003eLeft\u003c/code\u003e or \u003ccode\u003eRight\u003c/code\u003e. If you specify an offset that causes the watermark to extend beyond the left or right border and Elastic Transcoder has not added black bars, the watermark is cropped. If Elastic Transcoder has added black bars, the watermark extends into the black bars. If the watermark extends beyond the black bars, it is cropped.\u003c/p\u003e \u003cp\u003eUse the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want to include the black bars that are added by Elastic Transcoder, if any, in the offset calculation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwVerticalAlign",
                        "name": "_pwVerticalAlign",
                        "shape": "VerticalAlign",
                        "locationName": "VerticalAlign",
                        "documentation": "\u003cp\u003eThe vertical position of the watermark unless you specify a non-zero value for \u003ccode\u003eVerticalOffset\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eTop\u003c/b\u003e: The top edge of the watermark is aligned with the top border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eBottom\u003c/b\u003e: The bottom edge of the watermark is aligned with the bottom border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCenter\u003c/b\u003e: The watermark is centered between the top and bottom borders.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwVerticalOffset",
                        "name": "_pwVerticalOffset",
                        "shape": "PixelsOrPercent",
                        "locationName": "VerticalOffset",
                        "documentation": "\u003ccode\u003eVerticalOffset\u003c/code\u003e \u003cp\u003eThe amount by which you want the vertical position of the watermark to be offset from the position specified by VerticalAlign:\u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 0 pixels, and the maximum value is the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100.\u003c/li\u003e \u003c/ul\u003e For example, if you specify \u003ccode\u003eTop\u003c/code\u003e for \u003ccode\u003eVerticalAlign\u003c/code\u003e and \u003ccode\u003e5px\u003c/code\u003e for \u003ccode\u003eVerticalOffset\u003c/code\u003e, the top of the watermark appears 5 pixels from the top border of the output video.\u003c/p\u003e \u003cp\u003e\u003ccode\u003eVerticalOffset\u003c/code\u003e is only valid when the value of VerticalAlign is Top or Bottom.\u003c/p\u003e \u003cp\u003eIf you specify an offset that causes the watermark to extend beyond the top or bottom border and Elastic Transcoder has not added black bars, the watermark is cropped. If Elastic Transcoder has added black bars, the watermark extends into the black bars. If the watermark extends beyond the black bars, it is cropped.\u003c/p\u003e \u003cp\u003eUse the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the offset calculation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwOpacity",
                        "name": "_pwOpacity",
                        "shape": "Opacity",
                        "locationName": "Opacity",
                        "documentation": "\u003cp\u003eA percentage that indicates how much you want a watermark to obscure the video in the location where it appears. Valid values are 0 (the watermark is invisible) to 100 (the watermark completely obscures the video in the specified location). The datatype of \u003ccode\u003eOpacity\u003c/code\u003e is float.\u003c/p\u003e \u003cp\u003eElastic Transcoder supports transparent .png graphics. If you use a transparent .png, the transparent portion of the video appears as if you had specified a value of 0 for \u003ccode\u003eOpacity\u003c/code\u003e. The .jpg file format doesn't support transparency.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwTarget",
                        "name": "_pwTarget",
                        "shape": "Target",
                        "locationName": "Target",
                        "documentation": "\u003cp\u003eA value that determines how Elastic Transcoder interprets values that you specified for \u003ccode\u003eHorizontalOffset\u003c/code\u003e, \u003ccode\u003eVerticalOffset\u003c/code\u003e, \u003ccode\u003eMaxWidth\u003c/code\u003e, and \u003ccode\u003eMaxHeight\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eContent\u003c/b\u003e: \u003ccode\u003eHorizontalOffset\u003c/code\u003e and \u003ccode\u003eVerticalOffset\u003c/code\u003e values are calculated based on the borders of the video excluding black bars added by Elastic Transcoder, if any. In addition, \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, if specified as a percentage, are calculated based on the borders of the video excluding black bars added by Elastic Transcoder, if any.\u003c/li\u003e \u003cli\u003e \u003cb\u003eFrame\u003c/b\u003e: \u003ccode\u003eHorizontalOffset\u003c/code\u003e and \u003ccode\u003eVerticalOffset\u003c/code\u003e values are calculated based on the borders of the video including black bars added by Elastic Transcoder, if any.\u003c/li\u003e In addition, \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, if specified as a percentage, are calculated based on the borders of the video including black bars added by Elastic Transcoder, if any.\u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwHorizontalAlign",
                        "name": "_pwHorizontalAlign",
                        "shape": "HorizontalAlign",
                        "locationName": "HorizontalAlign",
                        "documentation": "\u003cp\u003eThe horizontal position of the watermark unless you specify a non-zero value for \u003ccode\u003eHorizontalOffset\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eLeft\u003c/b\u003e: The left edge of the watermark is aligned with the left border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eRight\u003c/b\u003e: The right edge of the watermark is aligned with the right border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCenter\u003c/b\u003e: The watermark is centered between the left and right borders.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwHorizontalOffset",
                        "name": "_pwHorizontalOffset",
                        "shape": "PixelsOrPercent",
                        "locationName": "HorizontalOffset",
                        "documentation": "\u003cp\u003eThe amount by which you want the horizontal position of the watermark to be offset from the position specified by HorizontalAlign: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 0 pixels, and the maximum value is the value of MaxWidth.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100.\u003c/li\u003e \u003c/ul\u003eFor example, if you specify Left for \u003ccode\u003eHorizontalAlign\u003c/code\u003e and 5px for \u003ccode\u003eHorizontalOffset\u003c/code\u003e, the left side of the watermark appears 5 pixels from the left border of the output video.\u003c/p\u003e \u003cp\u003e\u003ccode\u003eHorizontalOffset\u003c/code\u003e is only valid when the value of \u003ccode\u003eHorizontalAlign\u003c/code\u003e is \u003ccode\u003eLeft\u003c/code\u003e or \u003ccode\u003eRight\u003c/code\u003e. If you specify an offset that causes the watermark to extend beyond the left or right border and Elastic Transcoder has not added black bars, the watermark is cropped. If Elastic Transcoder has added black bars, the watermark extends into the black bars. If the watermark extends beyond the black bars, it is cropped.\u003c/p\u003e \u003cp\u003eUse the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want to include the black bars that are added by Elastic Transcoder, if any, in the offset calculation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwId",
                        "name": "_pwId",
                        "shape": "PresetWatermarkId",
                        "locationName": "Id",
                        "documentation": "A unique identifier for the settings for one watermark. The value of \u003ccode\u003eId\u003c/code\u003e can be up to 40 characters long.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwMaxHeight",
                        "name": "_pwMaxHeight",
                        "shape": "PixelsOrPercent",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the watermark in one of the following formats: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 16 pixels, and the maximum value is the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100. Use the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the calculation.\u003c/li\u003e \u003c/ul\u003e If you specify the value in pixels, it must be less than or equal to the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwMaxWidth",
                        "name": "_pwMaxWidth",
                        "shape": "PixelsOrPercent",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003eThe maximum width of the watermark in one of the following formats: \u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 16 pixels, and the maximum value is the value of \u003ccode\u003eMaxWidth\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100. Use the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the calculation.\u003c/li\u003e If you specify the value in pixels, it must be less than or equal to the value of \u003ccode\u003eMaxWidth\u003c/code\u003e.\u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwOpacity",
                        "name": "_pwOpacity",
                        "shape": "Opacity",
                        "locationName": "Opacity",
                        "documentation": "\u003cp\u003eA percentage that indicates how much you want a watermark to obscure the video in the location where it appears. Valid values are 0 (the watermark is invisible) to 100 (the watermark completely obscures the video in the specified location). The datatype of \u003ccode\u003eOpacity\u003c/code\u003e is float.\u003c/p\u003e \u003cp\u003eElastic Transcoder supports transparent .png graphics. If you use a transparent .png, the transparent portion of the video appears as if you had specified a value of 0 for \u003ccode\u003eOpacity\u003c/code\u003e. The .jpg file format doesn't support transparency.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwSizingPolicy",
                        "name": "_pwSizingPolicy",
                        "shape": "WatermarkSizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eA value that controls scaling of the watermark: \u003cul\u003e \u003cli\u003e \u003cb\u003eFit\u003c/b\u003e: Elastic Transcoder scales the watermark so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003cb\u003eStretch\u003c/b\u003e: Elastic Transcoder stretches the watermark to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the watermark and the values of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e are different, the watermark will be distorted.\u003c/li\u003e \u003cli\u003e \u003cb\u003eShrinkToFit\u003c/b\u003e: Elastic Transcoder scales the watermark down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the watermark up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwTarget",
                        "name": "_pwTarget",
                        "shape": "Target",
                        "locationName": "Target",
                        "documentation": "\u003cp\u003eA value that determines how Elastic Transcoder interprets values that you specified for \u003ccode\u003eHorizontalOffset\u003c/code\u003e, \u003ccode\u003eVerticalOffset\u003c/code\u003e, \u003ccode\u003eMaxWidth\u003c/code\u003e, and \u003ccode\u003eMaxHeight\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eContent\u003c/b\u003e: \u003ccode\u003eHorizontalOffset\u003c/code\u003e and \u003ccode\u003eVerticalOffset\u003c/code\u003e values are calculated based on the borders of the video excluding black bars added by Elastic Transcoder, if any. In addition, \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, if specified as a percentage, are calculated based on the borders of the video excluding black bars added by Elastic Transcoder, if any.\u003c/li\u003e \u003cli\u003e \u003cb\u003eFrame\u003c/b\u003e: \u003ccode\u003eHorizontalOffset\u003c/code\u003e and \u003ccode\u003eVerticalOffset\u003c/code\u003e values are calculated based on the borders of the video including black bars added by Elastic Transcoder, if any.\u003c/li\u003e In addition, \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, if specified as a percentage, are calculated based on the borders of the video including black bars added by Elastic Transcoder, if any.\u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwVerticalAlign",
                        "name": "_pwVerticalAlign",
                        "shape": "VerticalAlign",
                        "locationName": "VerticalAlign",
                        "documentation": "\u003cp\u003eThe vertical position of the watermark unless you specify a non-zero value for \u003ccode\u003eVerticalOffset\u003c/code\u003e: \u003cul\u003e \u003cli\u003e \u003cb\u003eTop\u003c/b\u003e: The top edge of the watermark is aligned with the top border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eBottom\u003c/b\u003e: The bottom edge of the watermark is aligned with the bottom border of the video.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCenter\u003c/b\u003e: The watermark is centered between the top and bottom borders.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pwVerticalOffset",
                        "name": "_pwVerticalOffset",
                        "shape": "PixelsOrPercent",
                        "locationName": "VerticalOffset",
                        "documentation": "\u003ccode\u003eVerticalOffset\u003c/code\u003e \u003cp\u003eThe amount by which you want the vertical position of the watermark to be offset from the position specified by VerticalAlign:\u003cul\u003e \u003cli\u003enumber of pixels (px): The minimum value is 0 pixels, and the maximum value is the value of \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/li\u003e \u003cli\u003einteger percentage (%): The range of valid values is 0 to 100.\u003c/li\u003e \u003c/ul\u003e For example, if you specify \u003ccode\u003eTop\u003c/code\u003e for \u003ccode\u003eVerticalAlign\u003c/code\u003e and \u003ccode\u003e5px\u003c/code\u003e for \u003ccode\u003eVerticalOffset\u003c/code\u003e, the top of the watermark appears 5 pixels from the top border of the output video.\u003c/p\u003e \u003cp\u003e\u003ccode\u003eVerticalOffset\u003c/code\u003e is only valid when the value of VerticalAlign is Top or Bottom.\u003c/p\u003e \u003cp\u003eIf you specify an offset that causes the watermark to extend beyond the top or bottom border and Elastic Transcoder has not added black bars, the watermark is cropped. If Elastic Transcoder has added black bars, the watermark extends into the black bars. If the watermark extends beyond the black bars, it is cropped.\u003c/p\u003e \u003cp\u003eUse the value of \u003ccode\u003eTarget\u003c/code\u003e to specify whether you want Elastic Transcoder to include the black bars that are added by Elastic Transcoder, if any, in the offset calculation.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "permission",
                "payload": null,
                "required": [],
                "name": "Permission",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGranteeType",
                        "name": "_pGranteeType",
                        "shape": "GranteeType",
                        "locationName": "GranteeType",
                        "documentation": "\u003cp\u003eThe type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGrantee",
                        "name": "_pGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": "\u003cp\u003eThe AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pAccess",
                        "name": "_pAccess",
                        "shape": "AccessControls",
                        "locationName": "Access",
                        "documentation": "\u003cp\u003e The permission that you want to give to the AWS user that is listed in Grantee. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has READ, READ_ACP, and WRITE_ACP permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "pAccess",
                        "name": "_pAccess",
                        "shape": "AccessControls",
                        "locationName": "Access",
                        "documentation": "\u003cp\u003e The permission that you want to give to the AWS user that is listed in Grantee. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has READ, READ_ACP, and WRITE_ACP permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGrantee",
                        "name": "_pGrantee",
                        "shape": "Grantee",
                        "locationName": "Grantee",
                        "documentation": "\u003cp\u003eThe AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "pGranteeType",
                        "name": "_pGranteeType",
                        "shape": "GranteeType",
                        "locationName": "GranteeType",
                        "documentation": "\u003cp\u003eThe type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003ccode\u003eCanonical\u003c/code\u003e: Either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003ccode\u003eEmail\u003c/code\u003e: The registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eGroup\u003c/code\u003e: One of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 21,
                "ctor": "videoParameters",
                "payload": null,
                "required": [],
                "name": "VideoParameters",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpCodec",
                        "name": "_vpCodec",
                        "shape": "VideoCodec",
                        "locationName": "Codec",
                        "documentation": "\u003cp\u003eThe video codec for the output file. Valid values include \u003ccode\u003eH.264\u003c/code\u003e and \u003ccode\u003evp8\u003c/code\u003e. You can only specify \u003ccode\u003evp8\u003c/code\u003e when the container type is \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "vpCodecOptions",
                        "name": "_vpCodecOptions",
                        "shape": "CodecOptions",
                        "locationName": "CodecOptions",
                        "documentation": "\u003cp\u003e \u003cb\u003eProfile\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe H.264 profile that you want to use for the output file. Elastic Transcoder supports the following profiles:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ebaseline\u003c/code\u003e: The profile most commonly used for videoconferencing and for mobile applications.\u003c/li\u003e \u003cli\u003e \u003ccode\u003emain\u003c/code\u003e: The profile used for standard-definition digital TV broadcasts.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ehigh\u003c/code\u003e: The profile used for high-definition digital TV broadcasts and for Blu-ray discs.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eLevel (H.264 Only)\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe H.264 level that you want to use for the output file. Elastic Transcoder supports the following levels:\u003c/p\u003e \u003cp\u003e\u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e1b\u003c/code\u003e, \u003ccode\u003e1.1\u003c/code\u003e, \u003ccode\u003e1.2\u003c/code\u003e, \u003ccode\u003e1.3\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e2.1\u003c/code\u003e, \u003ccode\u003e2.2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, \u003ccode\u003e3.1\u003c/code\u003e, \u003ccode\u003e3.2\u003c/code\u003e, \u003ccode\u003e4\u003c/code\u003e, \u003ccode\u003e4.1\u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cb\u003eMaxReferenceFrames (H.264 Only)\u003c/b\u003e \u003c/p\u003e \u003cp\u003eApplicable only when the value of Video:Codec is H.264. The maximum number of previously decoded frames to use as a reference for decoding future frames. Valid values are integers 0 through 16, but we recommend that you not use a value greater than the following:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eMin(Floor(Maximum decoded picture buffer in macroblocks * 256 / (Width in pixels * Height in pixels)), 16)\u003c/code\u003e \u003c/p\u003e \u003cp\u003ewhere \u003ci\u003eWidth in pixels\u003c/i\u003e and \u003ci\u003eHeight in pixels\u003c/i\u003e represent either MaxWidth and MaxHeight, or Resolution. \u003ci\u003eMaximum decoded picture buffer in macroblocks\u003c/i\u003e depends on the value of the \u003ccode\u003eLevel\u003c/code\u003e object. See the list below. (A macroblock is a block of pixels measuring 16x16.) \u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 396\u003c/li\u003e \u003cli\u003e1b - 396\u003c/li\u003e \u003cli\u003e1.1 - 900\u003c/li\u003e \u003cli\u003e1.2 - 2376\u003c/li\u003e \u003cli\u003e1.3 - 2376\u003c/li\u003e \u003cli\u003e2 - 2376\u003c/li\u003e \u003cli\u003e2.1 - 4752\u003c/li\u003e \u003cli\u003e2.2 - 8100\u003c/li\u003e \u003cli\u003e3 - 8100\u003c/li\u003e \u003cli\u003e3.1 - 18000\u003c/li\u003e \u003cli\u003e3.2 - 20480\u003c/li\u003e \u003cli\u003e4 - 32768\u003c/li\u003e \u003cli\u003e4.1 - 32768\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eMaxBitRate\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe maximum number of bits per second in a video buffer; the size of the buffer is specified by \u003ccode\u003eBufferSize\u003c/code\u003e. Specify a value between 16 and 62,500. You can reduce the bandwidth required to stream a video by reducing the maximum bit rate, but this also reduces the quality of the video.\u003c/p\u003e \u003cp\u003e \u003cb\u003eBufferSize\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe maximum number of bits in any x seconds of the output video. This window is commonly 10 seconds, the standard segment duration when you're using FMP4 or MPEG-TS for the container type of the output video. Specify an integer greater than 0. If you specify \u003ccode\u003eMaxBitRate\u003c/code\u003e and omit \u003ccode\u003eBufferSize\u003c/code\u003e, Elastic Transcoder sets \u003ccode\u003eBufferSize\u003c/code\u003e to 10 times the value of \u003ccode\u003eMaxBitRate\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpKeyframesMaxDist",
                        "name": "_vpKeyframesMaxDist",
                        "shape": "KeyframesMaxDist",
                        "locationName": "KeyframesMaxDist",
                        "documentation": "\u003cp\u003eThe maximum number of frames between key frames. Key frames are fully encoded frames; the frames between key frames are encoded based, in part, on the content of the key frames. The value is an integer formatted as a string; valid values are between 1 (every frame is a key frame) and 100000, inclusive. A higher value results in higher compression but may also discernibly decrease video quality.\u003c/p\u003e \u003cp\u003eFor \u003ccode\u003eSmooth\u003c/code\u003e outputs, the \u003ccode\u003eFrameRate\u003c/code\u003e must have a constant ratio to the \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e. This allows \u003ccode\u003eSmooth\u003c/code\u003e playlists to switch between different quality levels while the file is being played.\u003c/p\u003e \u003cp\u003eFor example, an input file can have a \u003ccode\u003eFrameRate\u003c/code\u003e of 30 with a \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e of 90. The output file then needs to have a ratio of 1:3. Valid outputs would have \u003ccode\u003eFrameRate\u003c/code\u003e of 30, 25, and 10, and \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e of 90, 75, and 30, respectively.\u003c/p\u003e \u003cp\u003eAlternately, this can be achieved by setting \u003ccode\u003eFrameRate\u003c/code\u003e to auto and having the same values for \u003ccode\u003eMaxFrameRate\u003c/code\u003e and \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpFixedGOP",
                        "name": "_vpFixedGOP",
                        "shape": "FixedGOP",
                        "locationName": "FixedGOP",
                        "documentation": "\u003cp\u003eWhether to use a fixed value for \u003ccode\u003eFixedGOP\u003c/code\u003e. Valid values are \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003efalse\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003etrue\u003c/code\u003e: Elastic Transcoder uses the value of \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e for the distance between key frames (the number of frames in a group of pictures, or GOP).\u003c/li\u003e \u003cli\u003e \u003ccode\u003efalse\u003c/code\u003e: The distance between key frames can vary.\u003c/li\u003e \u003c/ul\u003e \u003cimportant\u003e\u003cp\u003e\u003ccode\u003eFixedGOP\u003c/code\u003e must be set to \u003ccode\u003etrue\u003c/code\u003e for \u003ccode\u003efmp4\u003c/code\u003e containers.\u003c/p\u003e\u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpBitRate",
                        "name": "_vpBitRate",
                        "shape": "VideoBitRate",
                        "locationName": "BitRate",
                        "documentation": "\u003cp\u003eThe bit rate of the video stream in the output file, in kilobits/second. Valid values depend on the values of \u003ccode\u003eLevel\u003c/code\u003e and \u003ccode\u003eProfile\u003c/code\u003e. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses the detected bit rate of the input source. If you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, we recommend that you specify a value less than or equal to the maximum H.264-compliant value listed for your level and profile:\u003c/p\u003e \u003cp\u003e \u003ci\u003eLevel - Maximum video bit rate in kilobits/second (baseline and main Profile) : maximum video bit rate in kilobits/second (high Profile)\u003c/i\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 64 : 80\u003c/li\u003e \u003cli\u003e1b - 128 : 160\u003c/li\u003e \u003cli\u003e1.1 - 192 : 240\u003c/li\u003e \u003cli\u003e1.2 - 384 : 480\u003c/li\u003e \u003cli\u003e1.3 - 768 : 960\u003c/li\u003e \u003cli\u003e2 - 2000 : 2500\u003c/li\u003e \u003cli\u003e3 - 10000 : 12500\u003c/li\u003e \u003cli\u003e3.1 - 14000 : 17500\u003c/li\u003e \u003cli\u003e3.2 - 20000 : 25000\u003c/li\u003e \u003cli\u003e4 - 20000 : 25000\u003c/li\u003e \u003cli\u003e4.1 - 50000 : 62500\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpFrameRate",
                        "name": "_vpFrameRate",
                        "shape": "FrameRate",
                        "locationName": "FrameRate",
                        "documentation": "\u003cp\u003eThe frames per second for the video stream in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses the detected frame rate of the input source. If you specify a frame rate, we recommend that you perform the following calculation:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eFrame rate = maximum recommended decoding speed in luma samples/second / (width in pixels * height in pixels)\u003c/code\u003e \u003c/p\u003e \u003cp\u003ewhere:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003ewidth in pixels\u003c/i\u003e and \u003ci\u003eheight in pixels\u003c/i\u003e represent the Resolution of the output video.\u003c/li\u003e \u003cli\u003e \u003ci\u003emaximum recommended decoding speed in Luma samples/second\u003c/i\u003e is less than or equal to the maximum value listed in the following table, based on the value that you specified for Level.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe maximum recommended decoding speed in Luma samples/second for each level is described in the following list (\u003ci\u003eLevel - Decoding speed\u003c/i\u003e):\u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 380160\u003c/li\u003e \u003cli\u003e1b - 380160\u003c/li\u003e \u003cli\u003e1.1 - 76800\u003c/li\u003e \u003cli\u003e1.2 - 1536000\u003c/li\u003e \u003cli\u003e1.3 - 3041280\u003c/li\u003e \u003cli\u003e2 - 3041280\u003c/li\u003e \u003cli\u003e2.1 - 5068800\u003c/li\u003e \u003cli\u003e2.2 - 5184000\u003c/li\u003e \u003cli\u003e3 - 10368000\u003c/li\u003e \u003cli\u003e3.1 - 27648000\u003c/li\u003e \u003cli\u003e3.2 - 55296000\u003c/li\u003e \u003cli\u003e4 - 62914560\u003c/li\u003e \u003cli\u003e4.1 - 62914560\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxFrameRate",
                        "name": "_vpMaxFrameRate",
                        "shape": "MaxFrameRate",
                        "locationName": "MaxFrameRate",
                        "documentation": "\u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e for \u003ccode\u003eFrameRate\u003c/code\u003e, Elastic Transcoder uses the frame rate of the input video for the frame rate of the output video. Specify the maximum frame rate that you want Elastic Transcoder to use when the frame rate of the input video is greater than the desired maximum frame rate of the output video. Valid values include: \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpResolution",
                        "name": "_vpResolution",
                        "shape": "Resolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of output videos, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, \u003ccode\u003ePaddingPolicy\u003c/code\u003e, and \u003ccode\u003eDisplayAspectRatio\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe width and height of the video in the output file, in pixels. Valid values are \u003ccode\u003eauto\u003c/code\u003e and \u003ci\u003ewidth\u003c/i\u003e x \u003ci\u003eheight\u003c/i\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eauto\u003c/code\u003e: Elastic Transcoder attempts to preserve the width and height of the input file, subject to the following rules.\u003c/li\u003e \u003cli\u003e \u003ccode\u003e\u003ci\u003ewidth\u003c/i\u003e x \u003ci\u003eheight\u003c/i\u003e\u003c/code\u003e: The width and height of the output video in pixels.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote the following about specifying the width and height:\u003c/p\u003e \u003cul\u003e \u003cli\u003eThe width must be an even integer between 128 and 4096, inclusive.\u003c/li\u003e \u003cli\u003eThe height must be an even integer between 96 and 3072, inclusive.\u003c/li\u003e \u003cli\u003eIf you specify a resolution that is less than the resolution of the input file, Elastic Transcoder rescales the output file to the lower resolution.\u003c/li\u003e \u003cli\u003eIf you specify a resolution that is greater than the resolution of the input file, Elastic Transcoder rescales the output to the higher resolution.\u003c/li\u003e \u003cli\u003eWe recommend that you specify a resolution for which the product of width and height is less than or equal to the applicable value in the following list (\u003ci\u003eList - Max width x height value\u003c/i\u003e):\u003c/li\u003e \u003cul\u003e \u003cli\u003e1 - 25344\u003c/li\u003e \u003cli\u003e1b - 25344\u003c/li\u003e \u003cli\u003e1.1 - 101376\u003c/li\u003e \u003cli\u003e1.2 - 101376\u003c/li\u003e \u003cli\u003e1.3 - 101376\u003c/li\u003e \u003cli\u003e2 - 101376\u003c/li\u003e \u003cli\u003e2.1 - 202752\u003c/li\u003e \u003cli\u003e2.2 - 404720\u003c/li\u003e \u003cli\u003e3 - 404720\u003c/li\u003e \u003cli\u003e3.1 - 921600\u003c/li\u003e \u003cli\u003e3.2 - 1310720\u003c/li\u003e \u003cli\u003e4 - 2097152\u003c/li\u003e \u003cli\u003e4.1 - 2097152\u003c/li\u003e \u003c/ul\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpAspectRatio",
                        "name": "_vpAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of output videos, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, \u003ccode\u003ePaddingPolicy\u003c/code\u003e, and \u003ccode\u003eDisplayAspectRatio\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe display aspect ratio of the video in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder tries to preserve the aspect ratio of the input file.\u003c/p\u003e \u003cp\u003eIf you specify an aspect ratio for the output file that differs from aspect ratio of the input file, Elastic Transcoder adds pillarboxing (black bars on the sides) or letterboxing (black bars on the top and bottom) to maintain the aspect ratio of the active region of the video.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxWidth",
                        "name": "_vpMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003e The maximum width of the output video in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 128 and 4096. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxHeight",
                        "name": "_vpMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the output video in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 96 and 3072.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpDisplayAspectRatio",
                        "name": "_vpDisplayAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "DisplayAspectRatio",
                        "documentation": "\u003cp\u003eThe value that Elastic Transcoder adds to the metadata in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpSizingPolicy",
                        "name": "_vpSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of the output video:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit\u003c/code\u003e: Elastic Transcoder scales the output video so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill\u003c/code\u003e: Elastic Transcoder scales the output video so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e and matches or exceeds the other value. Elastic Transcoder centers the output video and then crops it in the dimension (if any) that exceeds the maximum value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch\u003c/code\u003e: Elastic Transcoder stretches the output video to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the input video and the output video are different, the output video will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep\u003c/code\u003e: Elastic Transcoder does not scale the output video. If either dimension of the input video exceeds the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, Elastic Transcoder crops the output video.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit\u003c/code\u003e: Elastic Transcoder scales the output video down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the video up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e: Elastic Transcoder scales the output video down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale the video up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpPaddingPolicy",
                        "name": "_vpPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add black bars to the top and bottom and/or left and right sides of the output video to make the total size of the output video match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpWatermarks",
                        "name": "_vpWatermarks",
                        "shape": "PresetWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eSettings for the size, location, and opacity of graphics that you want Elastic Transcoder to overlay over videos that are transcoded using this preset. You can specify settings for up to four watermarks. Watermarks appear in the specified size and location, and with the specified opacity for the duration of the transcoded video.\u003c/p\u003e \u003cp\u003eWatermarks can be in .png or .jpg format. If you want to display a watermark that is not rectangular, use the .png format, which supports transparency.\u003c/p\u003e \u003cp\u003eWhen you create a job that uses this preset, you specify the .png or .jpg graphics that you want Elastic Transcoder to include in the transcoded videos. You can specify fewer graphics in the job than you specify watermark settings in the preset, which allows you to use the same preset for up to four watermarks that have different dimensions.\u003c/p\u003e",
                        "typeExposed": "[PresetWatermark]",
                        "type": "[PresetWatermark]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpAspectRatio",
                        "name": "_vpAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of output videos, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, \u003ccode\u003ePaddingPolicy\u003c/code\u003e, and \u003ccode\u003eDisplayAspectRatio\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe display aspect ratio of the video in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder tries to preserve the aspect ratio of the input file.\u003c/p\u003e \u003cp\u003eIf you specify an aspect ratio for the output file that differs from aspect ratio of the input file, Elastic Transcoder adds pillarboxing (black bars on the sides) or letterboxing (black bars on the top and bottom) to maintain the aspect ratio of the active region of the video.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpBitRate",
                        "name": "_vpBitRate",
                        "shape": "VideoBitRate",
                        "locationName": "BitRate",
                        "documentation": "\u003cp\u003eThe bit rate of the video stream in the output file, in kilobits/second. Valid values depend on the values of \u003ccode\u003eLevel\u003c/code\u003e and \u003ccode\u003eProfile\u003c/code\u003e. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses the detected bit rate of the input source. If you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, we recommend that you specify a value less than or equal to the maximum H.264-compliant value listed for your level and profile:\u003c/p\u003e \u003cp\u003e \u003ci\u003eLevel - Maximum video bit rate in kilobits/second (baseline and main Profile) : maximum video bit rate in kilobits/second (high Profile)\u003c/i\u003e \u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 64 : 80\u003c/li\u003e \u003cli\u003e1b - 128 : 160\u003c/li\u003e \u003cli\u003e1.1 - 192 : 240\u003c/li\u003e \u003cli\u003e1.2 - 384 : 480\u003c/li\u003e \u003cli\u003e1.3 - 768 : 960\u003c/li\u003e \u003cli\u003e2 - 2000 : 2500\u003c/li\u003e \u003cli\u003e3 - 10000 : 12500\u003c/li\u003e \u003cli\u003e3.1 - 14000 : 17500\u003c/li\u003e \u003cli\u003e3.2 - 20000 : 25000\u003c/li\u003e \u003cli\u003e4 - 20000 : 25000\u003c/li\u003e \u003cli\u003e4.1 - 50000 : 62500\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpCodec",
                        "name": "_vpCodec",
                        "shape": "VideoCodec",
                        "locationName": "Codec",
                        "documentation": "\u003cp\u003eThe video codec for the output file. Valid values include \u003ccode\u003eH.264\u003c/code\u003e and \u003ccode\u003evp8\u003c/code\u003e. You can only specify \u003ccode\u003evp8\u003c/code\u003e when the container type is \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "vpCodecOptions",
                        "name": "_vpCodecOptions",
                        "shape": "CodecOptions",
                        "locationName": "CodecOptions",
                        "documentation": "\u003cp\u003e \u003cb\u003eProfile\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe H.264 profile that you want to use for the output file. Elastic Transcoder supports the following profiles:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003ebaseline\u003c/code\u003e: The profile most commonly used for videoconferencing and for mobile applications.\u003c/li\u003e \u003cli\u003e \u003ccode\u003emain\u003c/code\u003e: The profile used for standard-definition digital TV broadcasts.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ehigh\u003c/code\u003e: The profile used for high-definition digital TV broadcasts and for Blu-ray discs.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eLevel (H.264 Only)\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe H.264 level that you want to use for the output file. Elastic Transcoder supports the following levels:\u003c/p\u003e \u003cp\u003e\u003ccode\u003e1\u003c/code\u003e, \u003ccode\u003e1b\u003c/code\u003e, \u003ccode\u003e1.1\u003c/code\u003e, \u003ccode\u003e1.2\u003c/code\u003e, \u003ccode\u003e1.3\u003c/code\u003e, \u003ccode\u003e2\u003c/code\u003e, \u003ccode\u003e2.1\u003c/code\u003e, \u003ccode\u003e2.2\u003c/code\u003e, \u003ccode\u003e3\u003c/code\u003e, \u003ccode\u003e3.1\u003c/code\u003e, \u003ccode\u003e3.2\u003c/code\u003e, \u003ccode\u003e4\u003c/code\u003e, \u003ccode\u003e4.1\u003c/code\u003e\u003c/p\u003e \u003cp\u003e \u003cb\u003eMaxReferenceFrames (H.264 Only)\u003c/b\u003e \u003c/p\u003e \u003cp\u003eApplicable only when the value of Video:Codec is H.264. The maximum number of previously decoded frames to use as a reference for decoding future frames. Valid values are integers 0 through 16, but we recommend that you not use a value greater than the following:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eMin(Floor(Maximum decoded picture buffer in macroblocks * 256 / (Width in pixels * Height in pixels)), 16)\u003c/code\u003e \u003c/p\u003e \u003cp\u003ewhere \u003ci\u003eWidth in pixels\u003c/i\u003e and \u003ci\u003eHeight in pixels\u003c/i\u003e represent either MaxWidth and MaxHeight, or Resolution. \u003ci\u003eMaximum decoded picture buffer in macroblocks\u003c/i\u003e depends on the value of the \u003ccode\u003eLevel\u003c/code\u003e object. See the list below. (A macroblock is a block of pixels measuring 16x16.) \u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 396\u003c/li\u003e \u003cli\u003e1b - 396\u003c/li\u003e \u003cli\u003e1.1 - 900\u003c/li\u003e \u003cli\u003e1.2 - 2376\u003c/li\u003e \u003cli\u003e1.3 - 2376\u003c/li\u003e \u003cli\u003e2 - 2376\u003c/li\u003e \u003cli\u003e2.1 - 4752\u003c/li\u003e \u003cli\u003e2.2 - 8100\u003c/li\u003e \u003cli\u003e3 - 8100\u003c/li\u003e \u003cli\u003e3.1 - 18000\u003c/li\u003e \u003cli\u003e3.2 - 20480\u003c/li\u003e \u003cli\u003e4 - 32768\u003c/li\u003e \u003cli\u003e4.1 - 32768\u003c/li\u003e \u003c/ul\u003e \u003cp\u003e \u003cb\u003eMaxBitRate\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe maximum number of bits per second in a video buffer; the size of the buffer is specified by \u003ccode\u003eBufferSize\u003c/code\u003e. Specify a value between 16 and 62,500. You can reduce the bandwidth required to stream a video by reducing the maximum bit rate, but this also reduces the quality of the video.\u003c/p\u003e \u003cp\u003e \u003cb\u003eBufferSize\u003c/b\u003e \u003c/p\u003e \u003cp\u003eThe maximum number of bits in any x seconds of the output video. This window is commonly 10 seconds, the standard segment duration when you're using FMP4 or MPEG-TS for the container type of the output video. Specify an integer greater than 0. If you specify \u003ccode\u003eMaxBitRate\u003c/code\u003e and omit \u003ccode\u003eBufferSize\u003c/code\u003e, Elastic Transcoder sets \u003ccode\u003eBufferSize\u003c/code\u003e to 10 times the value of \u003ccode\u003eMaxBitRate\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "HashMap Text Text",
                        "type": "Map Text Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpDisplayAspectRatio",
                        "name": "_vpDisplayAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "DisplayAspectRatio",
                        "documentation": "\u003cp\u003eThe value that Elastic Transcoder adds to the metadata in the output file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpFixedGOP",
                        "name": "_vpFixedGOP",
                        "shape": "FixedGOP",
                        "locationName": "FixedGOP",
                        "documentation": "\u003cp\u003eWhether to use a fixed value for \u003ccode\u003eFixedGOP\u003c/code\u003e. Valid values are \u003ccode\u003etrue\u003c/code\u003e and \u003ccode\u003efalse\u003c/code\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003etrue\u003c/code\u003e: Elastic Transcoder uses the value of \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e for the distance between key frames (the number of frames in a group of pictures, or GOP).\u003c/li\u003e \u003cli\u003e \u003ccode\u003efalse\u003c/code\u003e: The distance between key frames can vary.\u003c/li\u003e \u003c/ul\u003e \u003cimportant\u003e\u003cp\u003e\u003ccode\u003eFixedGOP\u003c/code\u003e must be set to \u003ccode\u003etrue\u003c/code\u003e for \u003ccode\u003efmp4\u003c/code\u003e containers.\u003c/p\u003e\u003c/important\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpFrameRate",
                        "name": "_vpFrameRate",
                        "shape": "FrameRate",
                        "locationName": "FrameRate",
                        "documentation": "\u003cp\u003eThe frames per second for the video stream in the output file. Valid values include:\u003c/p\u003e \u003cp\u003e\u003ccode\u003eauto\u003c/code\u003e, \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses the detected frame rate of the input source. If you specify a frame rate, we recommend that you perform the following calculation:\u003c/p\u003e \u003cp\u003e \u003ccode\u003eFrame rate = maximum recommended decoding speed in luma samples/second / (width in pixels * height in pixels)\u003c/code\u003e \u003c/p\u003e \u003cp\u003ewhere:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ci\u003ewidth in pixels\u003c/i\u003e and \u003ci\u003eheight in pixels\u003c/i\u003e represent the Resolution of the output video.\u003c/li\u003e \u003cli\u003e \u003ci\u003emaximum recommended decoding speed in Luma samples/second\u003c/i\u003e is less than or equal to the maximum value listed in the following table, based on the value that you specified for Level.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eThe maximum recommended decoding speed in Luma samples/second for each level is described in the following list (\u003ci\u003eLevel - Decoding speed\u003c/i\u003e):\u003c/p\u003e \u003cul\u003e \u003cli\u003e1 - 380160\u003c/li\u003e \u003cli\u003e1b - 380160\u003c/li\u003e \u003cli\u003e1.1 - 76800\u003c/li\u003e \u003cli\u003e1.2 - 1536000\u003c/li\u003e \u003cli\u003e1.3 - 3041280\u003c/li\u003e \u003cli\u003e2 - 3041280\u003c/li\u003e \u003cli\u003e2.1 - 5068800\u003c/li\u003e \u003cli\u003e2.2 - 5184000\u003c/li\u003e \u003cli\u003e3 - 10368000\u003c/li\u003e \u003cli\u003e3.1 - 27648000\u003c/li\u003e \u003cli\u003e3.2 - 55296000\u003c/li\u003e \u003cli\u003e4 - 62914560\u003c/li\u003e \u003cli\u003e4.1 - 62914560\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpKeyframesMaxDist",
                        "name": "_vpKeyframesMaxDist",
                        "shape": "KeyframesMaxDist",
                        "locationName": "KeyframesMaxDist",
                        "documentation": "\u003cp\u003eThe maximum number of frames between key frames. Key frames are fully encoded frames; the frames between key frames are encoded based, in part, on the content of the key frames. The value is an integer formatted as a string; valid values are between 1 (every frame is a key frame) and 100000, inclusive. A higher value results in higher compression but may also discernibly decrease video quality.\u003c/p\u003e \u003cp\u003eFor \u003ccode\u003eSmooth\u003c/code\u003e outputs, the \u003ccode\u003eFrameRate\u003c/code\u003e must have a constant ratio to the \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e. This allows \u003ccode\u003eSmooth\u003c/code\u003e playlists to switch between different quality levels while the file is being played.\u003c/p\u003e \u003cp\u003eFor example, an input file can have a \u003ccode\u003eFrameRate\u003c/code\u003e of 30 with a \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e of 90. The output file then needs to have a ratio of 1:3. Valid outputs would have \u003ccode\u003eFrameRate\u003c/code\u003e of 30, 25, and 10, and \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e of 90, 75, and 30, respectively.\u003c/p\u003e \u003cp\u003eAlternately, this can be achieved by setting \u003ccode\u003eFrameRate\u003c/code\u003e to auto and having the same values for \u003ccode\u003eMaxFrameRate\u003c/code\u003e and \u003ccode\u003eKeyframesMaxDist\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxFrameRate",
                        "name": "_vpMaxFrameRate",
                        "shape": "MaxFrameRate",
                        "locationName": "MaxFrameRate",
                        "documentation": "\u003cp\u003eIf you specify \u003ccode\u003eauto\u003c/code\u003e for \u003ccode\u003eFrameRate\u003c/code\u003e, Elastic Transcoder uses the frame rate of the input video for the frame rate of the output video. Specify the maximum frame rate that you want Elastic Transcoder to use when the frame rate of the input video is greater than the desired maximum frame rate of the output video. Valid values include: \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxHeight",
                        "name": "_vpMaxHeight",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxHeight",
                        "documentation": "\u003cp\u003eThe maximum height of the output video in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 1080 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 96 and 3072.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpMaxWidth",
                        "name": "_vpMaxWidth",
                        "shape": "DigitsOrAuto",
                        "locationName": "MaxWidth",
                        "documentation": "\u003cp\u003e The maximum width of the output video in pixels. If you specify \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder uses 1920 (Full HD) as the default value. If you specify a numeric value, enter an even integer between 128 and 4096. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpPaddingPolicy",
                        "name": "_vpPaddingPolicy",
                        "shape": "PaddingPolicy",
                        "locationName": "PaddingPolicy",
                        "documentation": "\u003cp\u003eWhen you set \u003ccode\u003ePaddingPolicy\u003c/code\u003e to \u003ccode\u003ePad\u003c/code\u003e, Elastic Transcoder may add black bars to the top and bottom and/or left and right sides of the output video to make the total size of the output video match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpResolution",
                        "name": "_vpResolution",
                        "shape": "Resolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cimportant\u003e \u003cp\u003eTo better control resolution and aspect ratio of output videos, we recommend that you use the values \u003ccode\u003eMaxWidth\u003c/code\u003e, \u003ccode\u003eMaxHeight\u003c/code\u003e, \u003ccode\u003eSizingPolicy\u003c/code\u003e, \u003ccode\u003ePaddingPolicy\u003c/code\u003e, and \u003ccode\u003eDisplayAspectRatio\u003c/code\u003e instead of \u003ccode\u003eResolution\u003c/code\u003e and \u003ccode\u003eAspectRatio\u003c/code\u003e. The two groups of settings are mutually exclusive. Do not use them together.\u003c/p\u003e \u003c/important\u003e \u003cp\u003eThe width and height of the video in the output file, in pixels. Valid values are \u003ccode\u003eauto\u003c/code\u003e and \u003ci\u003ewidth\u003c/i\u003e x \u003ci\u003eheight\u003c/i\u003e:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eauto\u003c/code\u003e: Elastic Transcoder attempts to preserve the width and height of the input file, subject to the following rules.\u003c/li\u003e \u003cli\u003e \u003ccode\u003e\u003ci\u003ewidth\u003c/i\u003e x \u003ci\u003eheight\u003c/i\u003e\u003c/code\u003e: The width and height of the output video in pixels.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eNote the following about specifying the width and height:\u003c/p\u003e \u003cul\u003e \u003cli\u003eThe width must be an even integer between 128 and 4096, inclusive.\u003c/li\u003e \u003cli\u003eThe height must be an even integer between 96 and 3072, inclusive.\u003c/li\u003e \u003cli\u003eIf you specify a resolution that is less than the resolution of the input file, Elastic Transcoder rescales the output file to the lower resolution.\u003c/li\u003e \u003cli\u003eIf you specify a resolution that is greater than the resolution of the input file, Elastic Transcoder rescales the output to the higher resolution.\u003c/li\u003e \u003cli\u003eWe recommend that you specify a resolution for which the product of width and height is less than or equal to the applicable value in the following list (\u003ci\u003eList - Max width x height value\u003c/i\u003e):\u003c/li\u003e \u003cul\u003e \u003cli\u003e1 - 25344\u003c/li\u003e \u003cli\u003e1b - 25344\u003c/li\u003e \u003cli\u003e1.1 - 101376\u003c/li\u003e \u003cli\u003e1.2 - 101376\u003c/li\u003e \u003cli\u003e1.3 - 101376\u003c/li\u003e \u003cli\u003e2 - 101376\u003c/li\u003e \u003cli\u003e2.1 - 202752\u003c/li\u003e \u003cli\u003e2.2 - 404720\u003c/li\u003e \u003cli\u003e3 - 404720\u003c/li\u003e \u003cli\u003e3.1 - 921600\u003c/li\u003e \u003cli\u003e3.2 - 1310720\u003c/li\u003e \u003cli\u003e4 - 2097152\u003c/li\u003e \u003cli\u003e4.1 - 2097152\u003c/li\u003e \u003c/ul\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vpSizingPolicy",
                        "name": "_vpSizingPolicy",
                        "shape": "SizingPolicy",
                        "locationName": "SizingPolicy",
                        "documentation": "\u003cp\u003eSpecify one of the following values to control scaling of the output video:\u003c/p\u003e \u003cp\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eFit\u003c/code\u003e: Elastic Transcoder scales the output video so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding the other value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFill\u003c/code\u003e: Elastic Transcoder scales the output video so it matches the value that you specified in either \u003ccode\u003eMaxWidth\u003c/code\u003e or \u003ccode\u003eMaxHeight\u003c/code\u003e and matches or exceeds the other value. Elastic Transcoder centers the output video and then crops it in the dimension (if any) that exceeds the maximum value.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eStretch\u003c/code\u003e: Elastic Transcoder stretches the output video to match the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e. If the relative proportions of the input video and the output video are different, the output video will be distorted.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eKeep\u003c/code\u003e: Elastic Transcoder does not scale the output video. If either dimension of the input video exceeds the values that you specified for \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e, Elastic Transcoder crops the output video.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFit\u003c/code\u003e: Elastic Transcoder scales the output video down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without exceeding either value. If you specify this option, Elastic Transcoder does not scale the video up.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eShrinkToFill\u003c/code\u003e: Elastic Transcoder scales the output video down so that its dimensions match the values that you specified for at least one of \u003ccode\u003eMaxWidth\u003c/code\u003e and \u003ccode\u003eMaxHeight\u003c/code\u003e without dropping below either value. If you specify this option, Elastic Transcoder does not scale the video up.\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "vpWatermarks",
                        "name": "_vpWatermarks",
                        "shape": "PresetWatermarks",
                        "locationName": "Watermarks",
                        "documentation": "\u003cp\u003eSettings for the size, location, and opacity of graphics that you want Elastic Transcoder to overlay over videos that are transcoded using this preset. You can specify settings for up to four watermarks. Watermarks appear in the specified size and location, and with the specified opacity for the duration of the transcoded video.\u003c/p\u003e \u003cp\u003eWatermarks can be in .png or .jpg format. If you want to display a watermark that is not rectangular, use the .png format, which supports transparency.\u003c/p\u003e \u003cp\u003eWhen you create a job that uses this preset, you specify the .png or .jpg graphics that you want Elastic Transcoder to include in the transcoded videos. You can specify fewer graphics in the job than you specify watermark settings in the preset, which allows you to use the same preset for up to four watermarks that have different dimensions.\u003c/p\u003e",
                        "typeExposed": "[PresetWatermark]",
                        "type": "[PresetWatermark]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "playlist",
                "payload": null,
                "required": [],
                "name": "Playlist",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Name",
                        "name": "_p2Name",
                        "shape": "Filename",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name that you want Elastic Transcoder to assign to the master playlist, for example, nyc-vacation.m3u8. If the name includes a \u003ccode\u003e/\u003c/code\u003e character, the section of the name before the last \u003ccode\u003e/\u003c/code\u003e must be identical for all \u003ccode\u003eName\u003c/code\u003e objects. If you create more than one master playlist, the values of all \u003ccode\u003eName\u003c/code\u003e objects must be unique.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote\u003c/b\u003e: Elastic Transcoder automatically appends the relevant file extension to the file name (\u003ccode\u003e.m3u8\u003c/code\u003e for \u003ccode\u003eHLSv3\u003c/code\u003e and \u003ccode\u003eHLSv4\u003c/code\u003e playlists, and \u003ccode\u003e.ism\u003c/code\u003e and \u003ccode\u003e.ismc\u003c/code\u003e for \u003ccode\u003eSmooth\u003c/code\u003e playlists). If you include a file extension in \u003ccode\u003eName\u003c/code\u003e, the file name will have two extensions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Format",
                        "name": "_p2Format",
                        "shape": "PlaylistFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of the output playlist. Valid formats include \u003ccode\u003eHLSv3\u003c/code\u003e, \u003ccode\u003eHLSv4\u003c/code\u003e, and \u003ccode\u003eSmooth\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "p2OutputKeys",
                        "name": "_p2OutputKeys",
                        "shape": "OutputKeys",
                        "locationName": "OutputKeys",
                        "documentation": "\u003cp\u003eFor each output in this job that you want to include in a master playlist, the value of the Outputs:Key object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf your output is not \u003ccode\u003eHLS\u003c/code\u003e or does not have a segment duration set, the name of the output file is a concatenation of \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e and \u003ccode\u003eOutputs:Key\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv3\u003c/code\u003e and has a segment duration set, or is not included in a playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e.m3u8\u003c/code\u003e, and a series of \u003ccode\u003e.ts\u003c/code\u003e files that include a five-digit sequential counter beginning with 00000:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e00000.ts\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv4\u003c/code\u003e, has a segment duration set, and is included in an \u003ccode\u003eHLSv4\u003c/code\u003e playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e_v4.m3u8\u003c/code\u003e. If the output is video, Elastic Transcoder also creates an output file with an extension of \u003ccode\u003e_iframe.m3u8\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_v4.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_iframe.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.ts\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eElastic Transcoder automatically appends the relevant file extension to the file name. If you include a file extension in Output Key, the file name will have two extensions.\u003c/p\u003e \u003cp\u003eIf you include more than one output in a playlist, any segment duration settings, clip settings, or caption settings must be the same for all outputs in the playlist. For \u003ccode\u003eSmooth\u003c/code\u003e playlists, the \u003ccode\u003eAudio:Profile\u003c/code\u003e, \u003ccode\u003eVideo:Profile\u003c/code\u003e, and \u003ccode\u003eVideo:FrameRate\u003c/code\u003e to \u003ccode\u003eVideo:KeyframesMaxDist\u003c/code\u003e ratio must be the same for all outputs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Status",
                        "name": "_p2Status",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the job with which the playlist is associated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2StatusDetail",
                        "name": "_p2StatusDetail",
                        "shape": "Description",
                        "locationName": "StatusDetail",
                        "documentation": "\u003cp\u003eInformation that further explains the status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Format",
                        "name": "_p2Format",
                        "shape": "PlaylistFormat",
                        "locationName": "Format",
                        "documentation": "\u003cp\u003eThe format of the output playlist. Valid formats include \u003ccode\u003eHLSv3\u003c/code\u003e, \u003ccode\u003eHLSv4\u003c/code\u003e, and \u003ccode\u003eSmooth\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Name",
                        "name": "_p2Name",
                        "shape": "Filename",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name that you want Elastic Transcoder to assign to the master playlist, for example, nyc-vacation.m3u8. If the name includes a \u003ccode\u003e/\u003c/code\u003e character, the section of the name before the last \u003ccode\u003e/\u003c/code\u003e must be identical for all \u003ccode\u003eName\u003c/code\u003e objects. If you create more than one master playlist, the values of all \u003ccode\u003eName\u003c/code\u003e objects must be unique.\u003c/p\u003e \u003cp\u003e\u003cb\u003eNote\u003c/b\u003e: Elastic Transcoder automatically appends the relevant file extension to the file name (\u003ccode\u003e.m3u8\u003c/code\u003e for \u003ccode\u003eHLSv3\u003c/code\u003e and \u003ccode\u003eHLSv4\u003c/code\u003e playlists, and \u003ccode\u003e.ism\u003c/code\u003e and \u003ccode\u003e.ismc\u003c/code\u003e for \u003ccode\u003eSmooth\u003c/code\u003e playlists). If you include a file extension in \u003ccode\u003eName\u003c/code\u003e, the file name will have two extensions.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "p2OutputKeys",
                        "name": "_p2OutputKeys",
                        "shape": "OutputKeys",
                        "locationName": "OutputKeys",
                        "documentation": "\u003cp\u003eFor each output in this job that you want to include in a master playlist, the value of the Outputs:Key object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cp\u003eIf your output is not \u003ccode\u003eHLS\u003c/code\u003e or does not have a segment duration set, the name of the output file is a concatenation of \u003ccode\u003eOutputKeyPrefix\u003c/code\u003e and \u003ccode\u003eOutputs:Key\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv3\u003c/code\u003e and has a segment duration set, or is not included in a playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e.m3u8\u003c/code\u003e, and a series of \u003ccode\u003e.ts\u003c/code\u003e files that include a five-digit sequential counter beginning with 00000:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e00000.ts\u003c/p\u003e \u003c/li\u003e \u003cli\u003e \u003cp\u003eIf your output is \u003ccode\u003eHLSv4\u003c/code\u003e, has a segment duration set, and is included in an \u003ccode\u003eHLSv4\u003c/code\u003e playlist, Elastic Transcoder creates an output playlist file with a file extension of \u003ccode\u003e_v4.m3u8\u003c/code\u003e. If the output is video, Elastic Transcoder also creates an output file with an extension of \u003ccode\u003e_iframe.m3u8\u003c/code\u003e:\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_v4.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e_iframe.m3u8\u003c/p\u003e \u003cp\u003eOutputKeyPrefix\u003ccode\u003eOutputs:Key\u003c/code\u003e.ts\u003c/p\u003e \u003c/li\u003e \u003c/ul\u003e \u003cp\u003eElastic Transcoder automatically appends the relevant file extension to the file name. If you include a file extension in Output Key, the file name will have two extensions.\u003c/p\u003e \u003cp\u003eIf you include more than one output in a playlist, any segment duration settings, clip settings, or caption settings must be the same for all outputs in the playlist. For \u003ccode\u003eSmooth\u003c/code\u003e playlists, the \u003ccode\u003eAudio:Profile\u003c/code\u003e, \u003ccode\u003eVideo:Profile\u003c/code\u003e, and \u003ccode\u003eVideo:FrameRate\u003c/code\u003e to \u003ccode\u003eVideo:KeyframesMaxDist\u003c/code\u003e ratio must be the same for all outputs.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2Status",
                        "name": "_p2Status",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the job with which the playlist is associated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "p2StatusDetail",
                        "name": "_p2StatusDetail",
                        "shape": "Description",
                        "locationName": "StatusDetail",
                        "documentation": "\u003cp\u003eInformation that further explains the status.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 13,
                "ctor": "notifications",
                "payload": null,
                "required": [],
                "name": "Notifications",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nProgressing",
                        "name": "_nProgressing",
                        "shape": "SnsTopic",
                        "locationName": "Progressing",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nCompleted",
                        "name": "_nCompleted",
                        "shape": "SnsTopic",
                        "locationName": "Completed",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nWarning",
                        "name": "_nWarning",
                        "shape": "SnsTopic",
                        "locationName": "Warning",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nError",
                        "name": "_nError",
                        "shape": "SnsTopic",
                        "locationName": "Error",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nCompleted",
                        "name": "_nCompleted",
                        "shape": "SnsTopic",
                        "locationName": "Completed",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nError",
                        "name": "_nError",
                        "shape": "SnsTopic",
                        "locationName": "Error",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nProgressing",
                        "name": "_nProgressing",
                        "shape": "SnsTopic",
                        "locationName": "Progressing",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "nWarning",
                        "name": "_nWarning",
                        "shape": "SnsTopic",
                        "locationName": "Warning",
                        "documentation": "\u003cp\u003eThe Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "clip",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cTimeSpan",
                    "name": "_cTimeSpan",
                    "shape": "TimeSpan",
                    "locationName": "TimeSpan",
                    "documentation": "\u003cp\u003eSettings that determine when a clip begins and how long it lasts.\u003c/p\u003e",
                    "typeExposed": "Maybe TimeSpan",
                    "type": "Maybe TimeSpan"
                },
                "payload": null,
                "required": [],
                "name": "Clip",
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cTimeSpan",
                        "name": "_cTimeSpan",
                        "shape": "TimeSpan",
                        "locationName": "TimeSpan",
                        "documentation": "\u003cp\u003eSettings that determine when a clip begins and how long it lasts.\u003c/p\u003e",
                        "typeExposed": "Maybe TimeSpan",
                        "type": "Maybe TimeSpan"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cTimeSpan",
                        "name": "_cTimeSpan",
                        "shape": "TimeSpan",
                        "locationName": "TimeSpan",
                        "documentation": "\u003cp\u003eSettings that determine when a clip begins and how long it lasts.\u003c/p\u003e",
                        "typeExposed": "Maybe TimeSpan",
                        "type": "Maybe TimeSpan"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 14,
                "ctor": "jobInput",
                "payload": null,
                "required": [],
                "name": "JobInput",
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiKey",
                        "name": "_jiKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name of the file to transcode. Elsewhere in the body of the JSON block is the the ID of the pipeline to use for processing the job. The \u003ccode\u003eInputBucket\u003c/code\u003e object in that pipeline tells Elastic Transcoder which Amazon S3 bucket to get the file from. \u003c/p\u003e \u003cp\u003eIf the file name includes a prefix, such as \u003ccode\u003ecooking/lasagna.mpg\u003c/code\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiFrameRate",
                        "name": "_jiFrameRate",
                        "shape": "FrameRate",
                        "locationName": "FrameRate",
                        "documentation": "\u003cp\u003eThe frame rate of the input file. If you want Elastic Transcoder to automatically detect the frame rate of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the frame rate for the input file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e \u003c/p\u003e \u003cp\u003eIf you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of the frame rate.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiResolution",
                        "name": "_jiResolution",
                        "shape": "Resolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cp\u003eThis value must be \u003ccode\u003eauto\u003c/code\u003e, which causes Elastic Transcoder to automatically detect the resolution of the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiAspectRatio",
                        "name": "_jiAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cp\u003e The aspect ratio of the input file. If you want Elastic Transcoder to automatically detect the aspect ratio of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the aspect ratio for the output file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e \u003c/p\u003e \u003cp\u003e If you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of the aspect ratio. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiInterlaced",
                        "name": "_jiInterlaced",
                        "shape": "Interlaced",
                        "locationName": "Interlaced",
                        "documentation": "\u003cp\u003eWhether the input file is interlaced. If you want Elastic Transcoder to automatically detect whether the input file is interlaced, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify whether the input file is interlaced, enter one of the following values:\u003c/p\u003e \u003cp\u003e\u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of interlacing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiContainer",
                        "name": "_jiContainer",
                        "shape": "JobContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the input file. If you want Elastic Transcoder to automatically detect the container type of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the container type for the input file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e3gp\u003c/code\u003e, \u003ccode\u003eaac\u003c/code\u003e, \u003ccode\u003easf\u003c/code\u003e, \u003ccode\u003eavi\u003c/code\u003e, \u003ccode\u003edivx\u003c/code\u003e, \u003ccode\u003eflv\u003c/code\u003e, \u003ccode\u003em4a\u003c/code\u003e, \u003ccode\u003emkv\u003c/code\u003e, \u003ccode\u003emov\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003empeg\u003c/code\u003e, \u003ccode\u003empeg-ps\u003c/code\u003e, \u003ccode\u003empeg-ts\u003c/code\u003e, \u003ccode\u003emxf\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003evob\u003c/code\u003e, \u003ccode\u003ewav\u003c/code\u003e, \u003ccode\u003ewebm\u003c/code\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiAspectRatio",
                        "name": "_jiAspectRatio",
                        "shape": "AspectRatio",
                        "locationName": "AspectRatio",
                        "documentation": "\u003cp\u003e The aspect ratio of the input file. If you want Elastic Transcoder to automatically detect the aspect ratio of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the aspect ratio for the output file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e1:1\u003c/code\u003e, \u003ccode\u003e4:3\u003c/code\u003e, \u003ccode\u003e3:2\u003c/code\u003e, \u003ccode\u003e16:9\u003c/code\u003e \u003c/p\u003e \u003cp\u003e If you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of the aspect ratio. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiContainer",
                        "name": "_jiContainer",
                        "shape": "JobContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the input file. If you want Elastic Transcoder to automatically detect the container type of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the container type for the input file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e3gp\u003c/code\u003e, \u003ccode\u003eaac\u003c/code\u003e, \u003ccode\u003easf\u003c/code\u003e, \u003ccode\u003eavi\u003c/code\u003e, \u003ccode\u003edivx\u003c/code\u003e, \u003ccode\u003eflv\u003c/code\u003e, \u003ccode\u003em4a\u003c/code\u003e, \u003ccode\u003emkv\u003c/code\u003e, \u003ccode\u003emov\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003empeg\u003c/code\u003e, \u003ccode\u003empeg-ps\u003c/code\u003e, \u003ccode\u003empeg-ts\u003c/code\u003e, \u003ccode\u003emxf\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003evob\u003c/code\u003e, \u003ccode\u003ewav\u003c/code\u003e, \u003ccode\u003ewebm\u003c/code\u003e \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiFrameRate",
                        "name": "_jiFrameRate",
                        "shape": "FrameRate",
                        "locationName": "FrameRate",
                        "documentation": "\u003cp\u003eThe frame rate of the input file. If you want Elastic Transcoder to automatically detect the frame rate of the input file, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify the frame rate for the input file, enter one of the following values: \u003c/p\u003e \u003cp\u003e \u003ccode\u003e10\u003c/code\u003e, \u003ccode\u003e15\u003c/code\u003e, \u003ccode\u003e23.97\u003c/code\u003e, \u003ccode\u003e24\u003c/code\u003e, \u003ccode\u003e25\u003c/code\u003e, \u003ccode\u003e29.97\u003c/code\u003e, \u003ccode\u003e30\u003c/code\u003e, \u003ccode\u003e60\u003c/code\u003e \u003c/p\u003e \u003cp\u003eIf you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of the frame rate.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiInterlaced",
                        "name": "_jiInterlaced",
                        "shape": "Interlaced",
                        "locationName": "Interlaced",
                        "documentation": "\u003cp\u003eWhether the input file is interlaced. If you want Elastic Transcoder to automatically detect whether the input file is interlaced, specify \u003ccode\u003eauto\u003c/code\u003e. If you want to specify whether the input file is interlaced, enter one of the following values:\u003c/p\u003e \u003cp\u003e\u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e\u003c/p\u003e \u003cp\u003eIf you specify a value other than \u003ccode\u003eauto\u003c/code\u003e, Elastic Transcoder disables automatic detection of interlacing.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiKey",
                        "name": "_jiKey",
                        "shape": "Key",
                        "locationName": "Key",
                        "documentation": "\u003cp\u003e The name of the file to transcode. Elsewhere in the body of the JSON block is the the ID of the pipeline to use for processing the job. The \u003ccode\u003eInputBucket\u003c/code\u003e object in that pipeline tells Elastic Transcoder which Amazon S3 bucket to get the file from. \u003c/p\u003e \u003cp\u003eIf the file name includes a prefix, such as \u003ccode\u003ecooking/lasagna.mpg\u003c/code\u003e, include the prefix in the key. If the file isn't in the specified bucket, Elastic Transcoder returns an error.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "jiResolution",
                        "name": "_jiResolution",
                        "shape": "Resolution",
                        "locationName": "Resolution",
                        "documentation": "\u003cp\u003eThis value must be \u003ccode\u003eauto\u003c/code\u003e, which causes Elastic Transcoder to automatically detect the resolution of the input file.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": []
    },
    "operations": [
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "cancelJobResponse",
                "headerPad": 0,
                "wrapper": false,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CancelJobResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.ElasticTranscoder.CancelJob",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "CancelJob",
            "method": "delete",
            "documentation": "\u003cp\u003eThe CancelJob operation cancels an unfinished job.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "cancelJob",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cjId",
                    "name": "_cjId",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the job that you want to cancel. \u003c/p\u003e \u003cp\u003eTo get a list of the jobs (including their \u003ccode\u003ejobId\u003c/code\u003e) that have a status of \u003ccode\u003eSubmitted\u003c/code\u003e, use the \u003ca\u003eListJobsByStatus\u003c/a\u003e API action.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/jobs/",
                        "type": "const"
                    },
                    {
                        "value": "_cjId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjId",
                        "name": "_cjId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the job that you want to cancel. \u003c/p\u003e \u003cp\u003eTo get a list of the jobs (including their \u003ccode\u003ejobId\u003c/code\u003e) that have a status of \u003ccode\u003eSubmitted\u003c/code\u003e, use the \u003ca\u003eListJobsByStatus\u003c/a\u003e API action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CancelJob",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjId",
                        "name": "_cjId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the job that you want to cancel. \u003c/p\u003e \u003cp\u003eTo get a list of the jobs (including their \u003ccode\u003ejobId\u003c/code\u003e) that have a status of \u003ccode\u003eSubmitted\u003c/code\u003e, use the \u003ca\u003eListJobsByStatus\u003c/a\u003e API action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createJobResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cjrJob",
                    "name": "_cjrJob",
                    "shape": "Job",
                    "locationName": "Job",
                    "documentation": "\u003cp\u003e A section of the response body that provides information about the job that is created. \u003c/p\u003e",
                    "typeExposed": "Maybe Job'",
                    "type": "Maybe Job'"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateJobResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjrJob",
                        "name": "_cjrJob",
                        "shape": "Job",
                        "locationName": "Job",
                        "documentation": "\u003cp\u003e A section of the response body that provides information about the job that is created. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjrJob",
                        "name": "_cjrJob",
                        "shape": "Job",
                        "locationName": "Job",
                        "documentation": "\u003cp\u003e A section of the response body that provides information about the job that is created. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.CreateJob",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "CreateJob",
            "method": "post",
            "documentation": "\u003cp\u003e When you create a job, Elastic Transcoder returns JSON data that includes the values that you specified plus information about the job that is created. \u003c/p\u003e \u003cp\u003eIf you have specified more than one output for your jobs (for example, one output for the Kindle Fire and another output for the Apple iPhone 4s), you currently must use the Elastic Transcoder API to list the jobs (as opposed to the AWS Console).\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "createJob",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/jobs",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjPipelineId",
                        "name": "_cjPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eId\u003c/code\u003e of the pipeline that you want Elastic Transcoder to use for transcoding. The pipeline determines several settings, including the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode and the bucket into which Elastic Transcoder puts the transcoded files.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjInput",
                        "name": "_cjInput",
                        "shape": "JobInput",
                        "locationName": "Input",
                        "documentation": "\u003cp\u003eA section of the request body that provides information about the file that is being transcoded.\u003c/p\u003e",
                        "typeExposed": "JobInput",
                        "type": "JobInput"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreateJob",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjOutput",
                        "name": "_cjOutput",
                        "shape": "CreateJobOutput",
                        "locationName": "Output",
                        "documentation": null,
                        "typeExposed": "Maybe CreateJobOutput",
                        "type": "Maybe CreateJobOutput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjOutputs",
                        "name": "_cjOutputs",
                        "shape": "CreateJobOutputs",
                        "locationName": "Outputs",
                        "documentation": "\u003cp\u003e A section of the request body that provides information about the transcoded (target) files. We recommend that you use the \u003ccode\u003eOutputs\u003c/code\u003e syntax instead of the \u003ccode\u003eOutput\u003c/code\u003e syntax. \u003c/p\u003e",
                        "typeExposed": "[CreateJobOutput]",
                        "type": "[CreateJobOutput]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjOutputKeyPrefix",
                        "name": "_cjOutputKeyPrefix",
                        "shape": "Key",
                        "locationName": "OutputKeyPrefix",
                        "documentation": "\u003cp\u003eThe value, if any, that you want Elastic Transcoder to prepend to the names of all files that this job creates, including output files, thumbnails, and playlists.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjPlaylists",
                        "name": "_cjPlaylists",
                        "shape": "CreateJobPlaylists",
                        "locationName": "Playlists",
                        "documentation": "\u003cp\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is fmp4 (Fragmented MP4) or ts (MPEG-TS), Playlists contains information about the master playlists that you want Elastic Transcoder to create.\u003c/p\u003e \u003cp\u003eThe maximum number of master playlists in a job is 30.\u003c/p\u003e",
                        "typeExposed": "[CreateJobPlaylist]",
                        "type": "[CreateJobPlaylist]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjInput",
                        "name": "_cjInput",
                        "shape": "JobInput",
                        "locationName": "Input",
                        "documentation": "\u003cp\u003eA section of the request body that provides information about the file that is being transcoded.\u003c/p\u003e",
                        "typeExposed": "JobInput",
                        "type": "JobInput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjOutput",
                        "name": "_cjOutput",
                        "shape": "CreateJobOutput",
                        "locationName": "Output",
                        "documentation": null,
                        "typeExposed": "Maybe CreateJobOutput",
                        "type": "Maybe CreateJobOutput"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cjOutputKeyPrefix",
                        "name": "_cjOutputKeyPrefix",
                        "shape": "Key",
                        "locationName": "OutputKeyPrefix",
                        "documentation": "\u003cp\u003eThe value, if any, that you want Elastic Transcoder to prepend to the names of all files that this job creates, including output files, thumbnails, and playlists.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjOutputs",
                        "name": "_cjOutputs",
                        "shape": "CreateJobOutputs",
                        "locationName": "Outputs",
                        "documentation": "\u003cp\u003e A section of the request body that provides information about the transcoded (target) files. We recommend that you use the \u003ccode\u003eOutputs\u003c/code\u003e syntax instead of the \u003ccode\u003eOutput\u003c/code\u003e syntax. \u003c/p\u003e",
                        "typeExposed": "[CreateJobOutput]",
                        "type": "[CreateJobOutput]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cjPipelineId",
                        "name": "_cjPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eId\u003c/code\u003e of the pipeline that you want Elastic Transcoder to use for transcoding. The pipeline determines several settings, including the Amazon S3 bucket from which Elastic Transcoder gets the files to transcode and the bucket into which Elastic Transcoder puts the transcoded files.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "cjPlaylists",
                        "name": "_cjPlaylists",
                        "shape": "CreateJobPlaylists",
                        "locationName": "Playlists",
                        "documentation": "\u003cp\u003eIf you specify a preset in \u003ccode\u003ePresetId\u003c/code\u003e for which the value of \u003ccode\u003eContainer\u003c/code\u003e is fmp4 (Fragmented MP4) or ts (MPEG-TS), Playlists contains information about the master playlists that you want Elastic Transcoder to create.\u003c/p\u003e \u003cp\u003eThe maximum number of master playlists in a job is 30.\u003c/p\u003e",
                        "typeExposed": "[CreateJobPlaylist]",
                        "type": "[CreateJobPlaylist]"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "createPipelineResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cprPipeline",
                    "name": "_cprPipeline",
                    "shape": "Pipeline",
                    "locationName": "Pipeline",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline that is created.\u003c/p\u003e",
                    "typeExposed": "Maybe Pipeline",
                    "type": "Maybe Pipeline"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreatePipelineResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprPipeline",
                        "name": "_cprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline that is created.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprPipeline",
                        "name": "_cprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline that is created.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.CreatePipeline",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "CreatePipeline",
            "method": "post",
            "documentation": "\u003cp\u003eThe CreatePipeline operation creates a pipeline with settings that you specify.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "createPipeline",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/pipelines",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1Name",
                        "name": "_cp1Name",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1InputBucket",
                        "name": "_cp1InputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you saved the media files that you want to transcode.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1Role",
                        "name": "_cp1Role",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to create the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreatePipeline",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1OutputBucket",
                        "name": "_cp1OutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files. (Use this, or use ContentConfig:Bucket plus ThumbnailConfig:Bucket.)\u003c/p\u003e \u003cp\u003eSpecify this value when all of the following are true: \u003cul\u003e \u003cli\u003eYou want to save transcoded files, thumbnails (if any), and playlists (if any) together in one bucket.\u003c/li\u003e \u003cli\u003eYou do not want to specify the users or groups who have access to the transcoded files, thumbnails, and playlists.\u003c/li\u003e \u003cli\u003eYou do not want to specify the permissions that Elastic Transcoder grants to the files. \u003cimportant\u003eWhen Elastic Transcoder saves files in \u003ccode\u003eOutputBucket\u003c/code\u003e, it grants full control over the files only to the AWS account that owns the role that is specified by \u003ccode\u003eRole\u003c/code\u003e.\u003c/important\u003e \u003c/li\u003e \u003cli\u003eYou want to associate the transcoded files and thumbnails with the Amazon S3 Standard storage class.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e \u003cp\u003eIf you want to save transcoded files and playlists in one bucket and thumbnails in another bucket, specify which users can access the transcoded files or the permissions the users have, or change the Amazon S3 storage class, omit \u003ccode\u003eOutputBucket\u003c/code\u003e and specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e instead.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1Notifications",
                        "name": "_cp1Notifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e: The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic. For more information, see Create a Topic in the Amazon Simple Notification Service Developer Guide.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition while processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition while processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1ContentConfig",
                        "name": "_cp1ContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eThe optional \u003ccode\u003eContentConfig\u003c/code\u003e object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists: which bucket to use, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The Permissions object specifies which users you want to have access to transcoded files and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee Type\u003c/b\u003e: Specify the type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. For more information about canonical user IDs, see Access Control List (ACL) Overview in the Amazon Simple Storage Service Developer Guide. For more information about using CloudFront origin access identities to require that users use CloudFront URLs instead of Amazon S3 URLs, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the files that Elastic Transcoder adds to the bucket, including playlists and video files. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1ThumbnailConfig",
                        "name": "_cp1ThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eThumbnailConfig\u003c/code\u003e object specifies several values, including the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e even if you don't want to create thumbnails.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGranteeType\u003c/b\u003e: Specify the type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account. \u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to thumbnail files. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group. \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the thumbnail files that Elastic Transcoder adds to the bucket. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1ContentConfig",
                        "name": "_cp1ContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eThe optional \u003ccode\u003eContentConfig\u003c/code\u003e object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists: which bucket to use, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The Permissions object specifies which users you want to have access to transcoded files and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee Type\u003c/b\u003e: Specify the type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. For more information about canonical user IDs, see Access Control List (ACL) Overview in the Amazon Simple Storage Service Developer Guide. For more information about using CloudFront origin access identities to require that users use CloudFront URLs instead of Amazon S3 URLs, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the files that Elastic Transcoder adds to the bucket, including playlists and video files. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1InputBucket",
                        "name": "_cp1InputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you saved the media files that you want to transcode.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1Name",
                        "name": "_cp1Name",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1Notifications",
                        "name": "_cp1Notifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e: The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic. For more information, see Create a Topic in the Amazon Simple Notification Service Developer Guide.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition while processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition while processing a job in this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1OutputBucket",
                        "name": "_cp1OutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you want Elastic Transcoder to save the transcoded files. (Use this, or use ContentConfig:Bucket plus ThumbnailConfig:Bucket.)\u003c/p\u003e \u003cp\u003eSpecify this value when all of the following are true: \u003cul\u003e \u003cli\u003eYou want to save transcoded files, thumbnails (if any), and playlists (if any) together in one bucket.\u003c/li\u003e \u003cli\u003eYou do not want to specify the users or groups who have access to the transcoded files, thumbnails, and playlists.\u003c/li\u003e \u003cli\u003eYou do not want to specify the permissions that Elastic Transcoder grants to the files. \u003cimportant\u003eWhen Elastic Transcoder saves files in \u003ccode\u003eOutputBucket\u003c/code\u003e, it grants full control over the files only to the AWS account that owns the role that is specified by \u003ccode\u003eRole\u003c/code\u003e.\u003c/important\u003e \u003c/li\u003e \u003cli\u003eYou want to associate the transcoded files and thumbnails with the Amazon S3 Standard storage class.\u003c/li\u003e \u003c/ul\u003e\u003c/p\u003e \u003cp\u003eIf you want to save transcoded files and playlists in one bucket and thumbnails in another bucket, specify which users can access the transcoded files or the permissions the users have, or change the Amazon S3 storage class, omit \u003ccode\u003eOutputBucket\u003c/code\u003e and specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e instead.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cp1Role",
                        "name": "_cp1Role",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to create the pipeline.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cp1ThumbnailConfig",
                        "name": "_cp1ThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eThumbnailConfig\u003c/code\u003e object specifies several values, including the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e even if you don't want to create thumbnails.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGranteeType\u003c/b\u003e: Specify the type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account. \u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to thumbnail files. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group. \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the thumbnail files that Elastic Transcoder adds to the bucket. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 11,
                "ctor": "createPresetResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreatePresetResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprPreset",
                        "name": "_cprPreset",
                        "shape": "Preset",
                        "locationName": "Preset",
                        "documentation": "\u003cp\u003e A section of the response body that provides information about the preset that is created. \u003c/p\u003e",
                        "typeExposed": "Maybe Preset",
                        "type": "Maybe Preset"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprWarning",
                        "name": "_cprWarning",
                        "shape": "String",
                        "locationName": "Warning",
                        "documentation": "\u003cp\u003eIf the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprPreset",
                        "name": "_cprPreset",
                        "shape": "Preset",
                        "locationName": "Preset",
                        "documentation": "\u003cp\u003e A section of the response body that provides information about the preset that is created. \u003c/p\u003e",
                        "typeExposed": "Maybe Preset",
                        "type": "Maybe Preset"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cprWarning",
                        "name": "_cprWarning",
                        "shape": "String",
                        "locationName": "Warning",
                        "documentation": "\u003cp\u003eIf the preset settings don't comply with the standards for the video codec but Elastic Transcoder created the preset, this message explains the reason the preset settings don't meet the standard. Elastic Transcoder created the preset because the settings might produce acceptable output.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.CreatePreset",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "CreatePreset",
            "method": "post",
            "documentation": "\u003cp\u003eThe CreatePreset operation creates a preset with settings that you specify.\u003c/p\u003e \u003cimportant\u003eElastic Transcoder checks the CreatePreset settings to ensure that they meet Elastic Transcoder requirements and to determine whether they comply with H.264 standards. If your settings are not valid for Elastic Transcoder, Elastic Transcoder returns an HTTP 400 response (\u003ccode\u003eValidationException\u003c/code\u003e) and does not create the preset. If the settings are valid for Elastic Transcoder but aren't strictly compliant with the H.264 standard, Elastic Transcoder creates the preset and returns a warning message in the response. This helps you determine whether your settings comply with the H.264 standard while giving you greater flexibility with respect to the video that Elastic Transcoder produces.\u003c/important\u003e \u003cp\u003eElastic Transcoder uses the H.264 video-compression format. For more information, see the International Telecommunication Union publication \u003ci\u003eRecommendation ITU-T H.264: Advanced video coding for generic audiovisual services\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "createPreset",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/presets",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpName",
                        "name": "_cpName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the preset. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpContainer",
                        "name": "_cpContainer",
                        "shape": "PresetContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the output file. Valid values include \u003ccode\u003efmp4\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003ets\u003c/code\u003e, and \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "CreatePreset",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "Description",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpVideo",
                        "name": "_cpVideo",
                        "shape": "VideoParameters",
                        "locationName": "Video",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the video parameters.\u003c/p\u003e",
                        "typeExposed": "Maybe VideoParameters",
                        "type": "Maybe VideoParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpAudio",
                        "name": "_cpAudio",
                        "shape": "AudioParameters",
                        "locationName": "Audio",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the audio parameters.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioParameters",
                        "type": "Maybe AudioParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpThumbnails",
                        "name": "_cpThumbnails",
                        "shape": "Thumbnails",
                        "locationName": "Thumbnails",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the thumbnail parameters, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe Thumbnails",
                        "type": "Maybe Thumbnails"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpAudio",
                        "name": "_cpAudio",
                        "shape": "AudioParameters",
                        "locationName": "Audio",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the audio parameters.\u003c/p\u003e",
                        "typeExposed": "Maybe AudioParameters",
                        "type": "Maybe AudioParameters"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpContainer",
                        "name": "_cpContainer",
                        "shape": "PresetContainer",
                        "locationName": "Container",
                        "documentation": "\u003cp\u003eThe container type for the output file. Valid values include \u003ccode\u003efmp4\u003c/code\u003e, \u003ccode\u003emp3\u003c/code\u003e, \u003ccode\u003emp4\u003c/code\u003e, \u003ccode\u003eogg\u003c/code\u003e, \u003ccode\u003ets\u003c/code\u003e, and \u003ccode\u003ewebm\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpDescription",
                        "name": "_cpDescription",
                        "shape": "Description",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eA description of the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpName",
                        "name": "_cpName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the preset. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpThumbnails",
                        "name": "_cpThumbnails",
                        "shape": "Thumbnails",
                        "locationName": "Thumbnails",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the thumbnail parameters, if any.\u003c/p\u003e",
                        "typeExposed": "Maybe Thumbnails",
                        "type": "Maybe Thumbnails"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cpVideo",
                        "name": "_cpVideo",
                        "shape": "VideoParameters",
                        "locationName": "Video",
                        "documentation": "\u003cp\u003eA section of the request body that specifies the video parameters.\u003c/p\u003e",
                        "typeExposed": "Maybe VideoParameters",
                        "type": "Maybe VideoParameters"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePipelineResponse",
                "headerPad": 0,
                "wrapper": false,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePipelineResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.ElasticTranscoder.DeletePipeline",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "DeletePipeline",
            "method": "delete",
            "documentation": "\u003cp\u003eThe DeletePipeline operation removes a pipeline.\u003c/p\u003e \u003cp\u003e You can only delete a pipeline that has never been used or that is not currently in use (doesn't contain any active jobs). If the pipeline is currently in use, \u003ccode\u003eDeletePipeline\u003c/code\u003e returns an error. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deletePipeline",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dp1Id",
                    "name": "_dp1Id",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the pipeline that you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/pipelines/",
                        "type": "const"
                    },
                    {
                        "value": "_dp1Id",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dp1Id",
                        "name": "_dp1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline that you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeletePipeline",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dp1Id",
                        "name": "_dp1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline that you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deletePresetResponse",
                "headerPad": 0,
                "wrapper": false,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeletePresetResponse",
                "resultWrapper": null,
                "type": "empty",
                "optional": [],
                "fields": []
            },
            "namespace": "Network.AWS.ElasticTranscoder.DeletePreset",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "DeletePreset",
            "method": "delete",
            "documentation": "\u003cp\u003eThe DeletePreset operation removes a preset that you've added in an AWS region.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "deletePreset",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dpId",
                    "name": "_dpId",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/presets/",
                        "type": "const"
                    },
                    {
                        "value": "_dpId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpId",
                        "name": "_dpId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeletePreset",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dpId",
                        "name": "_dpId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "listJobsByPipelineResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ListJobsByPipelineResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ljbprJobs",
                        "name": "_ljbprJobs",
                        "shape": "Jobs",
                        "locationName": "Jobs",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003eJob\u003c/code\u003e objects that are in the specified pipeline.\u003c/p\u003e",
                        "typeExposed": "[Job']",
                        "type": "[Job']"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbprNextPageToken",
                        "name": "_ljbprNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003e A value that you use to access the second and subsequent pages of results, if any. When the jobs in the specified pipeline fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ljbprJobs",
                        "name": "_ljbprJobs",
                        "shape": "Jobs",
                        "locationName": "Jobs",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003eJob\u003c/code\u003e objects that are in the specified pipeline.\u003c/p\u003e",
                        "typeExposed": "[Job']",
                        "type": "[Job']"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbprNextPageToken",
                        "name": "_ljbprNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003e A value that you use to access the second and subsequent pages of results, if any. When the jobs in the specified pipeline fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ListJobsByPipeline",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "pager": {
                "token": {
                    "input": "ljbpPageToken",
                    "output": "ljbprNextPageToken"
                },
                "type": "next",
                "resultKey": "ljbprJobs"
            },
            "name": "ListJobsByPipeline",
            "method": "get",
            "documentation": "\u003cp\u003eThe ListJobsByPipeline operation gets a list of the jobs currently in a pipeline.\u003c/p\u003e \u003cp\u003eElastic Transcoder returns all of the jobs currently in the specified pipeline. The response body contains one element for each job that satisfies the search criteria.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "listJobsByPipeline",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/jobsByPipeline/",
                        "type": "const"
                    },
                    {
                        "value": "_ljbpPipelineId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ljbpPipelineId",
                        "name": "_ljbpPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003e The ID of the pipeline for which you want to get job information. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListJobsByPipeline",
                "query": [
                    {
                        "field": "_ljbpAscending",
                        "locationName": "Ascending",
                        "type": "field"
                    },
                    {
                        "field": "_ljbpPageToken",
                        "locationName": "PageToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbpAscending",
                        "name": "_ljbpAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003e To list jobs in chronological order by the date and time that they were submitted, enter \u003ccode\u003etrue\u003c/code\u003e. To list jobs in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbpPageToken",
                        "name": "_ljbpPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003e When Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbpAscending",
                        "name": "_ljbpAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003e To list jobs in chronological order by the date and time that they were submitted, enter \u003ccode\u003etrue\u003c/code\u003e. To list jobs in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbpPageToken",
                        "name": "_ljbpPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003e When Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ljbpPipelineId",
                        "name": "_ljbpPipelineId",
                        "shape": "Id",
                        "locationName": "PipelineId",
                        "documentation": "\u003cp\u003e The ID of the pipeline for which you want to get job information. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 19,
                "ctor": "listJobsByStatusResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ListJobsByStatusResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ljbsrJobs",
                        "name": "_ljbsrJobs",
                        "shape": "Jobs",
                        "locationName": "Jobs",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003eJob\u003c/code\u003e objects that have the specified status.\u003c/p\u003e",
                        "typeExposed": "[Job']",
                        "type": "[Job']"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsrNextPageToken",
                        "name": "_ljbsrNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003e A value that you use to access the second and subsequent pages of results, if any. When the jobs in the specified pipeline fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ljbsrJobs",
                        "name": "_ljbsrJobs",
                        "shape": "Jobs",
                        "locationName": "Jobs",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003eJob\u003c/code\u003e objects that have the specified status.\u003c/p\u003e",
                        "typeExposed": "[Job']",
                        "type": "[Job']"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsrNextPageToken",
                        "name": "_ljbsrNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003e A value that you use to access the second and subsequent pages of results, if any. When the jobs in the specified pipeline fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ListJobsByStatus",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "pager": {
                "token": {
                    "input": "ljbsPageToken",
                    "output": "ljbsrNextPageToken"
                },
                "type": "next",
                "resultKey": "ljbsrJobs"
            },
            "name": "ListJobsByStatus",
            "method": "get",
            "documentation": "\u003cp\u003eThe ListJobsByStatus operation gets a list of jobs that have a specified status. The response body contains one element for each job that satisfies the search criteria.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 14,
                "ctor": "listJobsByStatus",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/jobsByStatus/",
                        "type": "const"
                    },
                    {
                        "value": "_ljbsStatus",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ljbsStatus",
                        "name": "_ljbsStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eTo get information about all of the jobs associated with the current AWS account that have a given status, specify the following status: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListJobsByStatus",
                "query": [
                    {
                        "field": "_ljbsAscending",
                        "locationName": "Ascending",
                        "type": "field"
                    },
                    {
                        "field": "_ljbsPageToken",
                        "locationName": "PageToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsAscending",
                        "name": "_ljbsAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003e To list jobs in chronological order by the date and time that they were submitted, enter \u003ccode\u003etrue\u003c/code\u003e. To list jobs in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsPageToken",
                        "name": "_ljbsPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003e When Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsAscending",
                        "name": "_ljbsAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003e To list jobs in chronological order by the date and time that they were submitted, enter \u003ccode\u003etrue\u003c/code\u003e. To list jobs in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ljbsPageToken",
                        "name": "_ljbsPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003e When Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ljbsStatus",
                        "name": "_ljbsStatus",
                        "shape": "JobStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eTo get information about all of the jobs associated with the current AWS account that have a given status, specify the following status: \u003ccode\u003eSubmitted\u003c/code\u003e, \u003ccode\u003eProgressing\u003c/code\u003e, \u003ccode\u003eComplete\u003c/code\u003e, \u003ccode\u003eCanceled\u003c/code\u003e, or \u003ccode\u003eError\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "listPipelinesResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ListPipelinesResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lprPipelines",
                        "name": "_lprPipelines",
                        "shape": "Pipelines",
                        "locationName": "Pipelines",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003ePipeline\u003c/code\u003e objects.\u003c/p\u003e",
                        "typeExposed": "[Pipeline]",
                        "type": "[Pipeline]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprNextPageToken",
                        "name": "_lprNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003eA value that you use to access the second and subsequent pages of results, if any. When the pipelines fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lprNextPageToken",
                        "name": "_lprNextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003eA value that you use to access the second and subsequent pages of results, if any. When the pipelines fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lprPipelines",
                        "name": "_lprPipelines",
                        "shape": "Pipelines",
                        "locationName": "Pipelines",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003ePipeline\u003c/code\u003e objects.\u003c/p\u003e",
                        "typeExposed": "[Pipeline]",
                        "type": "[Pipeline]"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ListPipelines",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "pager": {
                "token": {
                    "input": "lpPageToken",
                    "output": "lprNextPageToken"
                },
                "type": "next",
                "resultKey": "lprPipelines"
            },
            "name": "ListPipelines",
            "method": "get",
            "documentation": "\u003cp\u003eThe ListPipelines operation gets a list of the pipelines associated with the current AWS account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 12,
                "ctor": "listPipelines",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/pipelines",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListPipelines",
                "query": [
                    {
                        "field": "_lpAscending",
                        "locationName": "Ascending",
                        "type": "field"
                    },
                    {
                        "field": "_lpPageToken",
                        "locationName": "PageToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpAscending",
                        "name": "_lpAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003eTo list pipelines in chronological order by the date and time that they were created, enter \u003ccode\u003etrue\u003c/code\u003e. To list pipelines in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpPageToken",
                        "name": "_lpPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003eWhen Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpAscending",
                        "name": "_lpAscending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003eTo list pipelines in chronological order by the date and time that they were created, enter \u003ccode\u003etrue\u003c/code\u003e. To list pipelines in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpPageToken",
                        "name": "_lpPageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003eWhen Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "listPresetsResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ListPresetsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpr1Presets",
                        "name": "_lpr1Presets",
                        "shape": "Presets",
                        "locationName": "Presets",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003ePreset\u003c/code\u003e objects.\u003c/p\u003e",
                        "typeExposed": "[Preset]",
                        "type": "[Preset]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpr1NextPageToken",
                        "name": "_lpr1NextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003eA value that you use to access the second and subsequent pages of results, if any. When the presets fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpr1NextPageToken",
                        "name": "_lpr1NextPageToken",
                        "shape": "Id",
                        "locationName": "NextPageToken",
                        "documentation": "\u003cp\u003eA value that you use to access the second and subsequent pages of results, if any. When the presets fit on one page or when you've reached the last page of results, the value of \u003ccode\u003eNextPageToken\u003c/code\u003e is \u003ccode\u003enull\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lpr1Presets",
                        "name": "_lpr1Presets",
                        "shape": "Presets",
                        "locationName": "Presets",
                        "documentation": "\u003cp\u003eAn array of \u003ccode\u003ePreset\u003c/code\u003e objects.\u003c/p\u003e",
                        "typeExposed": "[Preset]",
                        "type": "[Preset]"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ListPresets",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "pager": {
                "token": {
                    "input": "lp1PageToken",
                    "output": "lpr1NextPageToken"
                },
                "type": "next",
                "resultKey": "lpr1Presets"
            },
            "name": "ListPresets",
            "method": "get",
            "documentation": "\u003cp\u003eThe ListPresets operation gets a list of the default presets included with Elastic Transcoder and the presets that you've added in an AWS region.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 13,
                "ctor": "listPresets",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/presets",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 10,
                "name": "ListPresets",
                "query": [
                    {
                        "field": "_lp1Ascending",
                        "locationName": "Ascending",
                        "type": "field"
                    },
                    {
                        "field": "_lp1PageToken",
                        "locationName": "PageToken",
                        "type": "field"
                    }
                ],
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lp1Ascending",
                        "name": "_lp1Ascending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003eTo list presets in chronological order by the date and time that they were created, enter \u003ccode\u003etrue\u003c/code\u003e. To list presets in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lp1PageToken",
                        "name": "_lp1PageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003eWhen Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lp1Ascending",
                        "name": "_lp1Ascending",
                        "shape": "Ascending",
                        "locationName": "Ascending",
                        "documentation": "\u003cp\u003eTo list presets in chronological order by the date and time that they were created, enter \u003ccode\u003etrue\u003c/code\u003e. To list presets in reverse chronological order, enter \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lp1PageToken",
                        "name": "_lp1PageToken",
                        "shape": "Id",
                        "locationName": "PageToken",
                        "documentation": "\u003cp\u003eWhen Elastic Transcoder returns more than one page of results, use \u003ccode\u003epageToken\u003c/code\u003e in subsequent \u003ccode\u003eGET\u003c/code\u003e requests to get each successive page of results. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readJobResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rjrJob",
                    "name": "_rjrJob",
                    "shape": "Job",
                    "locationName": "Job",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the job.\u003c/p\u003e",
                    "typeExposed": "Maybe Job'",
                    "type": "Maybe Job'"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReadJobResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rjrJob",
                        "name": "_rjrJob",
                        "shape": "Job",
                        "locationName": "Job",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rjrJob",
                        "name": "_rjrJob",
                        "shape": "Job",
                        "locationName": "Job",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the job.\u003c/p\u003e",
                        "typeExposed": "Maybe Job'",
                        "type": "Maybe Job'"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ReadJob",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "ReadJob",
            "method": "get",
            "documentation": "\u003cp\u003eThe ReadJob operation returns detailed information about a job.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readJob",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rjId",
                    "name": "_rjId",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the job for which you want to get detailed information.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/jobs/",
                        "type": "const"
                    },
                    {
                        "value": "_rjId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rjId",
                        "name": "_rjId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the job for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ReadJob",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rjId",
                        "name": "_rjId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the job for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readPipelineResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rprPipeline",
                    "name": "_rprPipeline",
                    "shape": "Pipeline",
                    "locationName": "Pipeline",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                    "typeExposed": "Maybe Pipeline",
                    "type": "Maybe Pipeline"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReadPipelineResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rprPipeline",
                        "name": "_rprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rprPipeline",
                        "name": "_rprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ReadPipeline",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "ReadPipeline",
            "method": "get",
            "documentation": "\u003cp\u003eThe ReadPipeline operation gets detailed information about a pipeline.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readPipeline",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rp1Id",
                    "name": "_rp1Id",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the pipeline to read.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/pipelines/",
                        "type": "const"
                    },
                    {
                        "value": "_rp1Id",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rp1Id",
                        "name": "_rp1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to read.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ReadPipeline",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rp1Id",
                        "name": "_rp1Id",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to read.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readPresetResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "rprPreset",
                    "name": "_rprPreset",
                    "shape": "Preset",
                    "locationName": "Preset",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the preset.\u003c/p\u003e",
                    "typeExposed": "Maybe Preset",
                    "type": "Maybe Preset"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ReadPresetResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rprPreset",
                        "name": "_rprPreset",
                        "shape": "Preset",
                        "locationName": "Preset",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Preset",
                        "type": "Maybe Preset"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rprPreset",
                        "name": "_rprPreset",
                        "shape": "Preset",
                        "locationName": "Preset",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the preset.\u003c/p\u003e",
                        "typeExposed": "Maybe Preset",
                        "type": "Maybe Preset"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.ReadPreset",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "ReadPreset",
            "method": "get",
            "documentation": "\u003cp\u003eThe ReadPreset operation gets detailed information about a preset.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "readPreset",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "rpId",
                    "name": "_rpId",
                    "shape": "Id",
                    "locationName": "Id",
                    "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "path": [
                    {
                        "value": "/2012-09-25/presets/",
                        "type": "const"
                    },
                    {
                        "value": "_rpId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpId",
                        "name": "_rpId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ReadPreset",
                "query": [],
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rpId",
                        "name": "_rpId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the preset for which you want to get detailed information.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 12,
                "ctor": "testRoleResponse",
                "headerPad": 0,
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "TestRoleResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "trrSuccess",
                        "name": "_trrSuccess",
                        "shape": "Success",
                        "locationName": "Success",
                        "documentation": "\u003cp\u003eIf the operation is successful, this value is \u003ccode\u003etrue\u003c/code\u003e; otherwise, the value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "trrMessages",
                        "name": "_trrMessages",
                        "shape": "ExceptionMessages",
                        "locationName": "Messages",
                        "documentation": "\u003cp\u003eIf the \u003ccode\u003eSuccess\u003c/code\u003e element contains \u003ccode\u003efalse\u003c/code\u003e, this value is an array of one or more error messages that were generated during the test process.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "trrMessages",
                        "name": "_trrMessages",
                        "shape": "ExceptionMessages",
                        "locationName": "Messages",
                        "documentation": "\u003cp\u003eIf the \u003ccode\u003eSuccess\u003c/code\u003e element contains \u003ccode\u003efalse\u003c/code\u003e, this value is an array of one or more error messages that were generated during the test process.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "trrSuccess",
                        "name": "_trrSuccess",
                        "shape": "Success",
                        "locationName": "Success",
                        "documentation": "\u003cp\u003eIf the operation is successful, this value is \u003ccode\u003etrue\u003c/code\u003e; otherwise, the value is \u003ccode\u003efalse\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.TestRole",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "TestRole",
            "method": "post",
            "documentation": "\u003cp\u003eThe TestRole operation tests the IAM role used to create the pipeline.\u003c/p\u003e \u003cp\u003eThe \u003ccode\u003eTestRole\u003c/code\u003e action lets you determine whether the IAM role you are using has sufficient permissions to let Elastic Transcoder perform tasks associated with the transcoding process. The action attempts to assume the specified IAM role, checks read access to the input and output buckets, and tries to send a test notification to Amazon SNS topics that you specify.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 15,
                "ctor": "testRole",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/roleTests",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trRole",
                        "name": "_trRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to test.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trInputBucket",
                        "name": "_trInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket that contains media files to be transcoded. The action attempts to read from this bucket.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trOutputBucket",
                        "name": "_trOutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket that Elastic Transcoder will write transcoded media files to. The action attempts to read from this bucket.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "TestRole",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "trTopics",
                        "name": "_trTopics",
                        "shape": "SnsTopics",
                        "locationName": "Topics",
                        "documentation": "\u003cp\u003eThe ARNs of one or more Amazon Simple Notification Service (Amazon SNS) topics that you want the action to send a test notification to.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trInputBucket",
                        "name": "_trInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket that contains media files to be transcoded. The action attempts to read from this bucket.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trOutputBucket",
                        "name": "_trOutputBucket",
                        "shape": "BucketName",
                        "locationName": "OutputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket that Elastic Transcoder will write transcoded media files to. The action attempts to read from this bucket.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "trRole",
                        "name": "_trRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to test.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "trTopics",
                        "name": "_trTopics",
                        "shape": "SnsTopics",
                        "locationName": "Topics",
                        "documentation": "\u003cp\u003eThe ARNs of one or more Amazon Simple Notification Service (Amazon SNS) topics that you want the action to send a test notification to.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updatePipelineResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "uprPipeline",
                    "name": "_uprPipeline",
                    "shape": "Pipeline",
                    "locationName": "Pipeline",
                    "documentation": null,
                    "typeExposed": "Maybe Pipeline",
                    "type": "Maybe Pipeline"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdatePipelineResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprPipeline",
                        "name": "_uprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": null,
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uprPipeline",
                        "name": "_uprPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": null,
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.UpdatePipeline",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "UpdatePipeline",
            "method": "put",
            "documentation": "\u003cp\u003e Use the \u003ccode\u003eUpdatePipeline\u003c/code\u003e operation to update settings for a pipeline. \u003cimportant\u003eWhen you change pipeline settings, your changes take effect immediately. Jobs that you have already submitted and that Elastic Transcoder has not started to process are affected in addition to jobs that you submit after you change settings. \u003c/important\u003e \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 18,
                "ctor": "updatePipeline",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/pipelines/",
                        "type": "const"
                    },
                    {
                        "value": "_upId",
                        "type": "var"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upId",
                        "name": "_upId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the pipeline that you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "UpdatePipeline",
                "query": [],
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upName",
                        "name": "_upName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upInputBucket",
                        "name": "_upInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upRole",
                        "name": "_upRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upNotifications",
                        "name": "_upNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": null,
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upContentConfig",
                        "name": "_upContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eThe optional \u003ccode\u003eContentConfig\u003c/code\u003e object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists: which bucket to use, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The Permissions object specifies which users you want to have access to transcoded files and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee Type\u003c/b\u003e: Specify the type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. For more information about canonical user IDs, see Access Control List (ACL) Overview in the Amazon Simple Storage Service Developer Guide. For more information about using CloudFront origin access identities to require that users use CloudFront URLs instead of Amazon S3 URLs, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the files that Elastic Transcoder adds to the bucket, including playlists and video files. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upThumbnailConfig",
                        "name": "_upThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eThumbnailConfig\u003c/code\u003e object specifies several values, including the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e even if you don't want to create thumbnails.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGranteeType\u003c/b\u003e: Specify the type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account. \u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to thumbnail files. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group. \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the thumbnail files that Elastic Transcoder adds to the bucket. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upContentConfig",
                        "name": "_upContentConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ContentConfig",
                        "documentation": "\u003cp\u003eThe optional \u003ccode\u003eContentConfig\u003c/code\u003e object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists: which bucket to use, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The Permissions object specifies which users you want to have access to transcoded files and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee Type\u003c/b\u003e: Specify the type of value that appears in the \u003ccode\u003eGrantee\u003c/code\u003e object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. For more information about canonical user IDs, see Access Control List (ACL) Overview in the Amazon Simple Storage Service Developer Guide. For more information about using CloudFront origin access identities to require that users use CloudFront URLs instead of Amazon S3 URLs, see Using an Origin Access Identity to Restrict Access to Your Amazon S3 Content. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to transcoded files and playlists. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the files that Elastic Transcoder adds to the bucket, including playlists and video files. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the objects and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for objects that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the video files and playlists that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upId",
                        "name": "_upId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe ID of the pipeline that you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upInputBucket",
                        "name": "_upInputBucket",
                        "shape": "BucketName",
                        "locationName": "InputBucket",
                        "documentation": "\u003cp\u003eThe Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upName",
                        "name": "_upName",
                        "shape": "Name",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.\u003c/p\u003e \u003cp\u003eConstraints: Maximum 40 characters\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upNotifications",
                        "name": "_upNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": null,
                        "typeExposed": "Maybe Notifications",
                        "type": "Maybe Notifications"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upRole",
                        "name": "_upRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eThe IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upThumbnailConfig",
                        "name": "_upThumbnailConfig",
                        "shape": "PipelineOutputConfig",
                        "locationName": "ThumbnailConfig",
                        "documentation": "\u003cp\u003eThe \u003ccode\u003eThumbnailConfig\u003c/code\u003e object specifies several values, including the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e, you must also specify values for \u003ccode\u003eThumbnailConfig\u003c/code\u003e even if you don't want to create thumbnails.\u003c/p\u003e \u003cp\u003eIf you specify values for \u003ccode\u003eContentConfig\u003c/code\u003e and \u003ccode\u003eThumbnailConfig\u003c/code\u003e, omit the \u003ccode\u003eOutputBucket\u003c/code\u003e object.\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eBucket\u003c/b\u003e: The Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files.\u003c/li\u003e \u003cli\u003e \u003cb\u003ePermissions\u003c/b\u003e (Optional): The \u003ccode\u003ePermissions\u003c/code\u003e object specifies which users and/or predefined Amazon S3 groups you want to have access to thumbnail files, and the type of access you want them to have. You can grant permissions to a maximum of 30 users and/or predefined Amazon S3 groups.\u003c/li\u003e \u003cli\u003e \u003cb\u003eGranteeType\u003c/b\u003e: Specify the type of value that appears in the Grantee object: \u003cul\u003e \u003cli\u003e \u003cb\u003eCanonical\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is either the canonical user ID for an AWS account or an origin access identity for an Amazon CloudFront distribution. \u003cimportant\u003eA canonical user ID is not the same as an AWS account number.\u003c/important\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eEmail\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is the registered email address of an AWS account. \u003c/li\u003e \u003cli\u003e \u003cb\u003eGroup\u003c/b\u003e: The value in the \u003ccode\u003eGrantee\u003c/code\u003e object is one of the following predefined Amazon S3 groups: \u003ccode\u003eAllUsers\u003c/code\u003e, \u003ccode\u003eAuthenticatedUsers\u003c/code\u003e, or \u003ccode\u003eLogDelivery\u003c/code\u003e.\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eGrantee\u003c/b\u003e: The AWS user or group that you want to have access to thumbnail files. To identify the user or group, you can specify the canonical user ID for an AWS account, an origin access identity for a CloudFront distribution, the registered email address of an AWS account, or a predefined Amazon S3 group. \u003c/li\u003e \u003cli\u003e \u003cb\u003eAccess\u003c/b\u003e: The permission that you want to give to the AWS user that you specified in \u003ccode\u003eGrantee\u003c/code\u003e. Permissions are granted on the thumbnail files that Elastic Transcoder adds to the bucket. Valid values include: \u003cul\u003e \u003cli\u003e \u003ccode\u003eREAD\u003c/code\u003e: The grantee can read the thumbnails and metadata for objects that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eREAD_ACP\u003c/code\u003e: The grantee can read the object ACL for thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003cli\u003e \u003ccode\u003eWRITE_ACP\u003c/code\u003e: The grantee can write the ACL for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket.\u003c/li\u003e \u003cli\u003e \u003ccode\u003eFULL_CONTROL\u003c/code\u003e: The grantee has \u003ccode\u003eREAD\u003c/code\u003e, \u003ccode\u003eREAD_ACP\u003c/code\u003e, and \u003ccode\u003eWRITE_ACP\u003c/code\u003e permissions for the thumbnails that Elastic Transcoder adds to the Amazon S3 bucket. \u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003e \u003cb\u003eStorageClass\u003c/b\u003e: The Amazon S3 storage class, \u003ccode\u003eStandard\u003c/code\u003e or \u003ccode\u003eReducedRedundancy\u003c/code\u003e, that you want Elastic Transcoder to assign to the thumbnails that it stores in your Amazon S3 bucket.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Maybe PipelineOutputConfig",
                        "type": "Maybe PipelineOutputConfig"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updatePipelineNotificationsResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "upnrPipeline",
                    "name": "_upnrPipeline",
                    "shape": "Pipeline",
                    "locationName": "Pipeline",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                    "typeExposed": "Maybe Pipeline",
                    "type": "Maybe Pipeline"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdatePipelineNotificationsResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upnrPipeline",
                        "name": "_upnrPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upnrPipeline",
                        "name": "_upnrPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.UpdatePipelineNotifications",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "UpdatePipelineNotifications",
            "method": "post",
            "documentation": "\u003cp\u003eWith the UpdatePipelineNotifications operation, you can update Amazon Simple Notification Service (Amazon SNS) notifications for a pipeline.\u003c/p\u003e \u003cp\u003eWhen you update notifications for a pipeline, Elastic Transcoder returns the values that you specified in the request.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 17,
                "ctor": "updatePipelineNotifications",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/pipelines/",
                        "type": "const"
                    },
                    {
                        "value": "_upnId",
                        "type": "var"
                    },
                    {
                        "value": "/notifications",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upnId",
                        "name": "_upnId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The identifier of the pipeline for which you want to change notification settings. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upnNotifications",
                        "name": "_upnNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e: The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process jobs that are added to this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Notifications",
                        "type": "Notifications"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "UpdatePipelineNotifications",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upnId",
                        "name": "_upnId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003e The identifier of the pipeline for which you want to change notification settings. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upnNotifications",
                        "name": "_upnNotifications",
                        "shape": "Notifications",
                        "locationName": "Notifications",
                        "documentation": "\u003cp\u003eThe topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify to report job status.\u003c/p\u003e \u003cimportant\u003eTo receive notifications, you must also subscribe to the new topic in the Amazon SNS console.\u003c/important\u003e \u003cul\u003e \u003cli\u003e \u003cb\u003eProgressing\u003c/b\u003e: The topic ARN for the Amazon Simple Notification Service (Amazon SNS) topic that you want to notify when Elastic Transcoder has started to process jobs that are added to this pipeline. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eCompleted\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder has finished processing a job. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eWarning\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters a warning condition. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003cli\u003e \u003cb\u003eError\u003c/b\u003e: The topic ARN for the Amazon SNS topic that you want to notify when Elastic Transcoder encounters an error condition. This is the ARN that Amazon SNS returned when you created the topic.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Notifications",
                        "type": "Notifications"
                    }
                ]
            }
        },
        {
            "service": "ElasticTranscoder",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "json",
                "fieldPad": 0,
                "ctor": "updatePipelineStatusResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "upsrPipeline",
                    "name": "_upsrPipeline",
                    "shape": "Pipeline",
                    "locationName": "Pipeline",
                    "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                    "typeExposed": "Maybe Pipeline",
                    "type": "Maybe Pipeline"
                },
                "wrapper": false,
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdatePipelineStatusResponse",
                "resultWrapper": null,
                "type": "newtype",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upsrPipeline",
                        "name": "_upsrPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "upsrPipeline",
                        "name": "_upsrPipeline",
                        "shape": "Pipeline",
                        "locationName": "Pipeline",
                        "documentation": "\u003cp\u003eA section of the response body that provides information about the pipeline.\u003c/p\u003e",
                        "typeExposed": "Maybe Pipeline",
                        "type": "Maybe Pipeline"
                    }
                ]
            },
            "namespace": "Network.AWS.ElasticTranscoder.UpdatePipelineStatus",
            "protocol": "rest-json",
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.ElasticTranscoder.Types"
            ],
            "name": "UpdatePipelineStatus",
            "method": "post",
            "documentation": "\u003cp\u003eThe UpdatePipelineStatus operation pauses or reactivates a pipeline, so that the pipeline stops or restarts the processing of jobs.\u003c/p\u003e \u003cp\u003eChanging the pipeline status is useful if you want to cancel one or more jobs. You can't cancel jobs after Elastic Transcoder has started processing them; if you pause the pipeline to which you submitted the jobs, you have more time to get the job IDs for the jobs that you want to cancel, and to send a \u003ca\u003eCancelJob\u003c/a\u003e request. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "json",
                "fieldPad": 10,
                "ctor": "updatePipelineStatus",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/2012-09-25/pipelines/",
                        "type": "const"
                    },
                    {
                        "value": "_upsId",
                        "type": "var"
                    },
                    {
                        "value": "/status",
                        "type": "const"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upsId",
                        "name": "_upsId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upsStatus",
                        "name": "_upsStatus",
                        "shape": "PipelineStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe desired status of the pipeline:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eActive\u003c/code\u003e: The pipeline is processing jobs.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePaused\u003c/code\u003e: The pipeline is not currently processing jobs.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "UpdatePipelineStatus",
                "query": [],
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upsId",
                        "name": "_upsId",
                        "shape": "Id",
                        "locationName": "Id",
                        "documentation": "\u003cp\u003eThe identifier of the pipeline to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "upsStatus",
                        "name": "_upsStatus",
                        "shape": "PipelineStatus",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe desired status of the pipeline:\u003c/p\u003e \u003cul\u003e \u003cli\u003e \u003ccode\u003eActive\u003c/code\u003e: The pipeline is processing jobs.\u003c/li\u003e \u003cli\u003e \u003ccode\u003ePaused\u003c/code\u003e: The pipeline is not currently processing jobs.\u003c/li\u003e \u003c/ul\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        }
    ]
}