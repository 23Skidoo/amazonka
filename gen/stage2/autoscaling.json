{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "AutoScaling",
        "error": "AutoScalingError",
        "namespace": "Network.AWS.AutoScaling",
        "protocol": "query",
        "imports": [
            "Network.AWS.AutoScaling.AttachInstances",
            "Network.AWS.AutoScaling.CompleteLifecycleAction",
            "Network.AWS.AutoScaling.CreateAutoScalingGroup",
            "Network.AWS.AutoScaling.CreateLaunchConfiguration",
            "Network.AWS.AutoScaling.CreateOrUpdateTags",
            "Network.AWS.AutoScaling.DeleteAutoScalingGroup",
            "Network.AWS.AutoScaling.DeleteLaunchConfiguration",
            "Network.AWS.AutoScaling.DeleteLifecycleHook",
            "Network.AWS.AutoScaling.DeleteNotificationConfiguration",
            "Network.AWS.AutoScaling.DeletePolicy",
            "Network.AWS.AutoScaling.DeleteScheduledAction",
            "Network.AWS.AutoScaling.DeleteTags",
            "Network.AWS.AutoScaling.DescribeAccountLimits",
            "Network.AWS.AutoScaling.DescribeAdjustmentTypes",
            "Network.AWS.AutoScaling.DescribeAutoScalingGroups",
            "Network.AWS.AutoScaling.DescribeAutoScalingInstances",
            "Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes",
            "Network.AWS.AutoScaling.DescribeLaunchConfigurations",
            "Network.AWS.AutoScaling.DescribeLifecycleHookTypes",
            "Network.AWS.AutoScaling.DescribeLifecycleHooks",
            "Network.AWS.AutoScaling.DescribeMetricCollectionTypes",
            "Network.AWS.AutoScaling.DescribeNotificationConfigurations",
            "Network.AWS.AutoScaling.DescribePolicies",
            "Network.AWS.AutoScaling.DescribeScalingActivities",
            "Network.AWS.AutoScaling.DescribeScalingProcessTypes",
            "Network.AWS.AutoScaling.DescribeScheduledActions",
            "Network.AWS.AutoScaling.DescribeTags",
            "Network.AWS.AutoScaling.DescribeTerminationPolicyTypes",
            "Network.AWS.AutoScaling.DetachInstances",
            "Network.AWS.AutoScaling.DisableMetricsCollection",
            "Network.AWS.AutoScaling.EnableMetricsCollection",
            "Network.AWS.AutoScaling.EnterStandby",
            "Network.AWS.AutoScaling.ExecutePolicy",
            "Network.AWS.AutoScaling.ExitStandby",
            "Network.AWS.AutoScaling.PutLifecycleHook",
            "Network.AWS.AutoScaling.PutNotificationConfiguration",
            "Network.AWS.AutoScaling.PutScalingPolicy",
            "Network.AWS.AutoScaling.PutScheduledUpdateGroupAction",
            "Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat",
            "Network.AWS.AutoScaling.ResumeProcesses",
            "Network.AWS.AutoScaling.SetDesiredCapacity",
            "Network.AWS.AutoScaling.SetInstanceHealth",
            "Network.AWS.AutoScaling.SuspendProcesses",
            "Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup",
            "Network.AWS.AutoScaling.Types",
            "Network.AWS.AutoScaling.UpdateAutoScalingGroup"
        ],
        "name": "Auto Scaling",
        "version": "2011-01-01",
        "documentation": "\u003cfullname\u003eAuto Scaling\u003c/fullname\u003e \u003cp\u003e Auto Scaling is a web service designed to automatically launch or terminate Amazon Elastic Compute Cloud (Amazon EC2) instances based on user-defined policies, schedules, and health checks. This service is used in conjunction with Amazon CloudWatch and Elastic Load Balancing services. \u003c/p\u003e \u003cp\u003eAuto Scaling provides APIs that you can call by submitting a Query Request. Query requests are HTTP or HTTPS requests that use the HTTP verbs GET or POST and a Query parameter named \u003ci\u003eAction\u003c/i\u003e or \u003ci\u003eOperation\u003c/i\u003e that specifies the API you are calling. Action is used throughout this documentation, although Operation is also supported for backward compatibility with other Amazon Web Services (AWS) Query APIs. \u003c/p\u003e \u003cp\u003eCalling the API using a Query request is the most direct way to access the web service, but requires that your application handle low-level details such as generating the hash to sign the request and error handling. The benefit of calling the service using a Query request is that you are assured of having access to the complete functionality of the API. For information about signing a a query request, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/api_requests.html\"\u003eUse Query Requests to Call Auto Scaling APIs\u003c/a\u003e\u003c/p\u003e \u003cp\u003e This guide provides detailed information about Auto Scaling actions, data types, parameters, and errors. For detailed information about Auto Scaling features and their associated API actions, go to the \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/\"\u003eAuto Scaling Developer Guide\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThis reference is based on the current WSDL, which is available at:\u003c/p\u003e \u003cp\u003e\u003ca href=\"http://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl\"\u003ehttp://autoscaling.amazonaws.com/doc/2011-01-01/AutoScaling.wsdl\u003c/a\u003e \u003c/p\u003e \u003cp\u003e\u003cb\u003eEndpoints\u003c/b\u003e\u003c/p\u003e \u003cp\u003eThe examples in this guide assume that your instances are launched in the US East (Northern Virginia) region and use us-east-1 as the endpoint.\u003c/p\u003e \u003cp\u003eYou can set up your Auto Scaling infrastructure in other AWS regions. For information about this product's regions and endpoints, see \u003ca href=\"http://docs.aws.amazon.com/general/latest/gr/index.html?rande.html\"\u003eRegions and Endpoints\u003c/a\u003e in the Amazon Web Services General Reference. \u003c/p\u003e",
        "xmlNamespace": "http://autoscaling.amazonaws.com/doc/2011-01-01/",
        "endpoint": "regional",
        "endpointPrefix": "autoscaling"
    },
    "cabal": {
        "library": "amazonka-autoscaling",
        "modules": [
            "Network.AWS.AutoScaling",
            "Network.AWS.AutoScaling.AttachInstances",
            "Network.AWS.AutoScaling.CompleteLifecycleAction",
            "Network.AWS.AutoScaling.CreateAutoScalingGroup",
            "Network.AWS.AutoScaling.CreateLaunchConfiguration",
            "Network.AWS.AutoScaling.CreateOrUpdateTags",
            "Network.AWS.AutoScaling.DeleteAutoScalingGroup",
            "Network.AWS.AutoScaling.DeleteLaunchConfiguration",
            "Network.AWS.AutoScaling.DeleteLifecycleHook",
            "Network.AWS.AutoScaling.DeleteNotificationConfiguration",
            "Network.AWS.AutoScaling.DeletePolicy",
            "Network.AWS.AutoScaling.DeleteScheduledAction",
            "Network.AWS.AutoScaling.DeleteTags",
            "Network.AWS.AutoScaling.DescribeAccountLimits",
            "Network.AWS.AutoScaling.DescribeAdjustmentTypes",
            "Network.AWS.AutoScaling.DescribeAutoScalingGroups",
            "Network.AWS.AutoScaling.DescribeAutoScalingInstances",
            "Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes",
            "Network.AWS.AutoScaling.DescribeLaunchConfigurations",
            "Network.AWS.AutoScaling.DescribeLifecycleHookTypes",
            "Network.AWS.AutoScaling.DescribeLifecycleHooks",
            "Network.AWS.AutoScaling.DescribeMetricCollectionTypes",
            "Network.AWS.AutoScaling.DescribeNotificationConfigurations",
            "Network.AWS.AutoScaling.DescribePolicies",
            "Network.AWS.AutoScaling.DescribeScalingActivities",
            "Network.AWS.AutoScaling.DescribeScalingProcessTypes",
            "Network.AWS.AutoScaling.DescribeScheduledActions",
            "Network.AWS.AutoScaling.DescribeTags",
            "Network.AWS.AutoScaling.DescribeTerminationPolicyTypes",
            "Network.AWS.AutoScaling.DetachInstances",
            "Network.AWS.AutoScaling.DisableMetricsCollection",
            "Network.AWS.AutoScaling.EnableMetricsCollection",
            "Network.AWS.AutoScaling.EnterStandby",
            "Network.AWS.AutoScaling.ExecutePolicy",
            "Network.AWS.AutoScaling.ExitStandby",
            "Network.AWS.AutoScaling.PutLifecycleHook",
            "Network.AWS.AutoScaling.PutNotificationConfiguration",
            "Network.AWS.AutoScaling.PutScalingPolicy",
            "Network.AWS.AutoScaling.PutScheduledUpdateGroupAction",
            "Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat",
            "Network.AWS.AutoScaling.ResumeProcesses",
            "Network.AWS.AutoScaling.SetDesiredCapacity",
            "Network.AWS.AutoScaling.SetInstanceHealth",
            "Network.AWS.AutoScaling.SuspendProcesses",
            "Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup",
            "Network.AWS.AutoScaling.Types",
            "Network.AWS.AutoScaling.UpdateAutoScalingGroup"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "AlreadyExistsFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "aefmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "LimitExceededFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "lefmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ResourceInUseFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "riufmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "TagDescription": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tdResourceId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tdResourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tdKey",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tdValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tdPropagateAtLaunch",
                    "type": "Maybe Bool"
                }
            ]
        },
        "Tag": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagKey",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagResourceId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagResourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagPropagateAtLaunch",
                    "type": "Maybe Bool"
                }
            ]
        },
        "NotificationConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ncAutoScalingGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ncTopicARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ncNotificationType",
                    "type": "Maybe Text"
                }
            ]
        },
        "BlockDeviceMapping": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "bdmDeviceName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "bdmVirtualName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "bdmEbs",
                    "type": "Maybe Ebs"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "bdmNoDevice",
                    "type": "Maybe Bool"
                }
            ]
        },
        "LaunchConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcLaunchConfigurationName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcImageId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcSecurityGroups",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcInstanceType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcBlockDeviceMappings",
                    "type": "List BlockDeviceMapping"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcCreatedTime",
                    "type": "Time RFC822"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcLaunchConfigurationARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcKeyName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcUserData",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcKernelId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcRamdiskId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcInstanceMonitoring",
                    "type": "Maybe InstanceMonitoring"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcSpotPrice",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcIamInstanceProfile",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcEbsOptimized",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcAssociatePublicIpAddress",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lcPlacementTenancy",
                    "type": "Maybe Text"
                }
            ]
        },
        "AutoScalingGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgAutoScalingGroupName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgLaunchConfigurationName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgMinSize",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgMaxSize",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgDesiredCapacity",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgDefaultCooldown",
                    "type": "Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgAvailabilityZones",
                    "type": "List1 Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgLoadBalancerNames",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgHealthCheckType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgInstances",
                    "type": "List Instance"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgCreatedTime",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgSuspendedProcesses",
                    "type": "List SuspendedProcess"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgEnabledMetrics",
                    "type": "List EnabledMetric"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgTags",
                    "type": "List TagDescription"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgTerminationPolicies",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgAutoScalingGroupARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgHealthCheckGracePeriod",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgPlacementGroup",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgVPCZoneIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asgStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ScalingPolicy": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spAlarms",
                    "type": "List Alarm"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spAutoScalingGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spPolicyName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spScalingAdjustment",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spAdjustmentType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spCooldown",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spPolicyARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spMinAdjustmentStep",
                    "type": "Maybe Int"
                }
            ]
        },
        "InstanceMonitoring": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "enum"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "imEnabled",
                "type": "Maybe Bool"
            },
            "type": "newtype"
        },
        "InvalidNextToken": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "intmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ScalingActivityInProgressFault": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "saipfmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "namespace": "Network.AWS.AutoScaling.Types",
        "imports": [],
        "ScheduledUpdateGroupAction": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaAutoScalingGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaScheduledActionName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaScheduledActionARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaStartTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaEndTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaRecurrence",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaMinSize",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaMaxSize",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "sugaDesiredCapacity",
                    "type": "Maybe Int"
                }
            ]
        },
        "Ebs": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ebsSnapshotId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ebsVolumeSize",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ebsVolumeType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ebsDeleteOnTermination",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ebsIops",
                    "type": "Maybe Int"
                }
            ]
        },
        "AdjustmentType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "atAdjustmentType",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "MetricCollectionType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "mctMetric",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "LifecycleHook": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhLifecycleHookName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhAutoScalingGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhLifecycleTransition",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhNotificationTargetARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhRoleARN",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhNotificationMetadata",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhHeartbeatTimeout",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhGlobalTimeout",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "lhDefaultResult",
                    "type": "Maybe Text"
                }
            ]
        },
        "Activity": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actActivityId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actAutoScalingGroupName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actCause",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actStartTime",
                    "type": "Time RFC822"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actStatusCode",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actEndTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actStatusMessage",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actProgress",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "actDetails",
                    "type": "Maybe Text"
                }
            ]
        },
        "SuspendedProcess": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spProcessName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "spSuspensionReason",
                    "type": "Maybe Text"
                }
            ]
        },
        "MetricGranularityType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "mgtGranularity",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "Filter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "filValues",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "filName",
                    "type": "Maybe Text"
                }
            ]
        },
        "ProcessType": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "ptProcessName",
                "type": "Text"
            },
            "type": "newtype"
        },
        "Alarm": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "alaAlarmName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "alaAlarmARN",
                    "type": "Maybe Text"
                }
            ]
        },
        "EnabledMetric": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "emMetric",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "emGranularity",
                    "type": "Maybe Text"
                }
            ]
        },
        "Instance": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "insInstanceId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "insAvailabilityZone",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "insLifecycleState",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "insHealthStatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "insLaunchConfigurationName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "AutoScalingInstanceDetails": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidInstanceId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidAutoScalingGroupName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidAvailabilityZone",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidLifecycleState",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidHealthStatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "asidLaunchConfigurationName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmctaMetrics",
                        "type": "List MetricCollectionType"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmctaGranularities",
                        "type": "List MetricGranularityType"
                    }
                ],
                "name": "DescribeMetricCollectionTypesAnswer",
                "resultWrapper": "DescribeMetricCollectionTypesResult",
                "type": "record",
                "optional": []
            },
            "namespace": "Network.AWS.AutoScaling.DescribeMetricCollectionTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeMetricCollectionTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of metrics and a corresponding list of granularities for each metric. \u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.PutNotificationConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "PutNotificationConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003e Configures an Auto Scaling group to send notifications when specified events take place. Subscribers to this topic can have messages for events delivered to an endpoint such as a web server or email address. \u003c/p\u003e \u003cp\u003eFor more information see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/ASGettingNotifications.html\"\u003eGet Email Notifications When Your Auto Scaling Group Changes\u003c/a\u003e\u003c/p\u003e \u003cp\u003eA new \u003ccode\u003ePutNotificationConfiguration\u003c/code\u003e overwrites an existing configuration. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pnctAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pnctTopicARN",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "pnctNotificationTypes",
                        "type": "List Text"
                    }
                ],
                "name": "PutNotificationConfigurationType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ttTags",
                        "type": "List TagDescription"
                    }
                ],
                "name": "TagsType",
                "resultWrapper": "DescribeTagsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ttNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeTags",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeTags",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the Auto Scaling group tags. \u003c/p\u003e \u003cp\u003e You can use filters to limit results when describing tags. For example, you can query for tags of a particular Auto Scaling group. You can specify multiple values for a filter. A tag must match at least one of the specified values for it to be included in the results. \u003c/p\u003e \u003cp\u003e You can also specify multiple filters. The result includes information for a particular tag only if it matches all your filters. If there's no match, no special message is returned. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dttFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeTagsType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dttNextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dttMaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteNotificationConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteNotificationConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes notifications created by \u003ca\u003ePutNotificationConfiguration\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dnctAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dnctTopicARN",
                        "type": "Text"
                    }
                ],
                "name": "DeleteNotificationConfigurationType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "parntPolicyARN",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "PolicyARNType",
                "resultWrapper": "PutScalingPolicyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.PutScalingPolicy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "PutScalingPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Creates or updates a policy for an Auto Scaling group. To update an existing policy, use the existing policy name and set the parameter(s) you want to change. Any existing parameter not changed in an update to an existing policy is not changed in this update request. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptPolicyName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptScalingAdjustment",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptAdjustmentType",
                        "type": "Text"
                    }
                ],
                "name": "PutScalingPolicyType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptCooldown",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psptMinAdjustmentStep",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteLaunchConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteLaunchConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified \u003ca\u003eLaunchConfiguration\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e The specified launch configuration must not be attached to an Auto Scaling group. When this call completes, the launch configuration is no longer available for use. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "lcntLaunchConfigurationName",
                    "type": "Text"
                },
                "name": "LaunchConfigurationNameType",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "esaActivities",
                    "type": "List Activity"
                },
                "wrapper": false,
                "name": "EnterStandbyAnswer",
                "resultWrapper": "EnterStandbyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.EnterStandby",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "EnterStandby",
            "method": "post",
            "documentation": "\u003cp\u003e Move instances in an Auto Scaling group into a Standby mode. \u003c/p\u003e \u003cp\u003eTo learn more about how to put instances into a Standby mode, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingInServiceState.html\"\u003eAuto Scaling InService State\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esqInstanceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esqAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esqShouldDecrementDesiredCapacity",
                        "type": "Bool"
                    }
                ],
                "name": "EnterStandbyQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.SuspendProcesses",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "SuspendProcesses",
            "method": "post",
            "documentation": "\u003cp\u003e Suspends Auto Scaling processes for an Auto Scaling group. To suspend specific process types, specify them by name with the \u003ccode\u003eScalingProcesses.member.N\u003c/code\u003e parameter. To suspend all process types, omit the \u003ccode\u003eScalingProcesses.member.N\u003c/code\u003e parameter. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003e Suspending either of the two primary process types, \u003ccode\u003eLaunch\u003c/code\u003e or \u003ccode\u003eTerminate\u003c/code\u003e, can prevent other process types from functioning properly. \u003c/p\u003e \u003c/important\u003e \u003cp\u003e To resume processes that have been suspended, use \u003ca\u003eResumeProcesses\u003c/a\u003e For more information on suspending and resuming Auto Scaling process, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US_SuspendResume.html\"\u003eSuspend and Resume Auto Scaling Process\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "spqAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "spqScalingProcesses",
                        "type": "List Text"
                    }
                ],
                "name": "ScalingProcessQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.SetInstanceHealth",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "SetInstanceHealth",
            "method": "post",
            "documentation": "\u003cp\u003e Sets the health status of a specified instance that belongs to any of your Auto Scaling groups. \u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/as-configure-healthcheck.html\"\u003eConfigure Health Checks for Your Auto Scaling group\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sihqInstanceId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sihqHealthStatus",
                        "type": "Text"
                    }
                ],
                "name": "SetInstanceHealthQuery",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sihqShouldRespectGracePeriod",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "esa1Activities",
                    "type": "List Activity"
                },
                "wrapper": false,
                "name": "ExitStandbyAnswer",
                "resultWrapper": "ExitStandbyResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.ExitStandby",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "ExitStandby",
            "method": "post",
            "documentation": "\u003cp\u003e Move an instance out of Standby mode. \u003c/p\u003e \u003cp\u003eTo learn more about how to put instances that are in a Standby mode back into service, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingInServiceState.html\"\u003eAuto Scaling InService State\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esq1InstanceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esq1AutoScalingGroupName",
                        "type": "Text"
                    }
                ],
                "name": "ExitStandbyQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dtptaTerminationPolicyTypes",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "DescribeTerminationPolicyTypesAnswer",
                "resultWrapper": "DescribeTerminationPolicyTypesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeTerminationPolicyTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeTerminationPolicyTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of all termination policies supported by Auto Scaling. \u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asitAutoScalingInstances",
                        "type": "List AutoScalingInstanceDetails"
                    }
                ],
                "name": "AutoScalingInstancesType",
                "resultWrapper": "DescribeAutoScalingInstancesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asitNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeAutoScalingInstances",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeAutoScalingInstances",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a description of each Auto Scaling instance in the \u003ccode\u003eInstanceIds\u003c/code\u003e list. If a list is not provided, the service returns the full details of all instances up to a maximum of 50. By default, the service returns a list of 20 items. \u003c/p\u003e \u003cp\u003e This action supports pagination by returning a token if there are more pages to retrieve. To get the next page, call this action again with the returned token as the \u003ccode\u003eNextToken\u003c/code\u003e parameter. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasitInstanceIds",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeAutoScalingInstancesType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasitMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasitNextToken",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "RecordLifecycleActionHeartbeatAnswer",
                "resultWrapper": "RecordLifecycleActionHeartbeatResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.RecordLifecycleActionHeartbeat",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "RecordLifecycleActionHeartbeat",
            "method": "post",
            "documentation": "\u003cp\u003e Records a heartbeat for the lifecycle action associated with a specific token. This extends the timeout by the length of time defined by the \u003ccode\u003eHeartbeatTimeout\u003c/code\u003e parameter of the \u003ca\u003ePutLifecycleHook\u003c/a\u003e operation. \u003c/p\u003e \u003cp\u003e This operation is a part of the basic sequence for adding a lifecycle hook to an Auto Scaling group: \u003c/p\u003e \u003col\u003e \u003cli\u003e Create a notification target. A target can be either an Amazon SQS queue or an Amazon SNS topic. \u003c/li\u003e \u003cli\u003e Create an IAM role. This role allows Auto Scaling to publish lifecycle notifications to the designated SQS queue or SNS topic. \u003c/li\u003e \u003cli\u003e Create the lifecycle hook. You can create a hook that acts when instances launch or when instances terminate. \u003c/li\u003e \u003cli\u003e \u003cb\u003eIf necessary, record the lifecycle action heartbeat to keep the instance in a pending state.\u003c/b\u003e \u003c/li\u003e \u003cli\u003e Complete the lifecycle action. \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eTo learn more, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html\"\u003eAuto Scaling Pending State\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html\"\u003eAuto Scaling Terminating State\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rlahtLifecycleHookName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rlahtAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rlahtLifecycleActionToken",
                        "type": "Text"
                    }
                ],
                "name": "RecordLifecycleActionHeartbeatType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DisableMetricsCollection",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DisableMetricsCollection",
            "method": "post",
            "documentation": "\u003cp\u003e Disables monitoring of group metrics for the Auto Scaling group specified in \u003ccode\u003eAutoScalingGroupName\u003c/code\u003e. You can specify the list of affected metrics with the \u003ccode\u003eMetrics\u003c/code\u003e parameter. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmcqAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dmcqMetrics",
                        "type": "List Text"
                    }
                ],
                "name": "DisableMetricsCollectionQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "diaActivities",
                    "type": "List Activity"
                },
                "wrapper": false,
                "name": "DetachInstancesAnswer",
                "resultWrapper": "DetachInstancesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DetachInstances",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DetachInstances",
            "method": "post",
            "documentation": "\u003cp\u003eUsing \u003ccode\u003eDetachInstances\u003c/code\u003e, you can remove an instance from an Auto Scaling group. After the instances are detached, you can manage them independently from the rest of the Auto Scaling group.\u003c/p\u003e \u003cp\u003eTo learn more about detaching instances, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/detach-instance-asg.html\"\u003eDetach Amazon EC2 Instances From Your Auto Scaling Group\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "diqInstanceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "diqAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "diqShouldDecrementDesiredCapacity",
                        "type": "Bool"
                    }
                ],
                "name": "DetachInstancesQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.EnableMetricsCollection",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "EnableMetricsCollection",
            "method": "post",
            "documentation": "\u003cp\u003e Enables monitoring of group metrics for the Auto Scaling group specified in \u003ccode\u003eAutoScalingGroupName\u003c/code\u003e. You can specify the list of enabled metrics with the \u003ccode\u003eMetrics\u003c/code\u003e parameter. \u003c/p\u003e \u003cp\u003e Auto Scaling metrics collection can be turned on only if the \u003ccode\u003eInstanceMonitoring\u003c/code\u003e flag, in the Auto Scaling group's launch configuration, is set to \u003ccode\u003eTrue\u003c/code\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emcqAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emcqMetrics",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emcqGranularity",
                        "type": "Text"
                    }
                ],
                "name": "EnableMetricsCollectionQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ptProcesses",
                    "type": "List ProcessType"
                },
                "wrapper": false,
                "name": "ProcessesType",
                "resultWrapper": "DescribeScalingProcessTypesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeScalingProcessTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeScalingProcessTypes",
            "method": "post",
            "documentation": "\u003cp\u003eReturns scaling process types for use in the \u003ca\u003eResumeProcesses\u003c/a\u003e and \u003ca\u003eSuspendProcesses\u003c/a\u003e actions.\u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteTags",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteTags",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves the specified tags or a set of tags from a set of resources.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dttTags",
                    "type": "List Tag"
                },
                "name": "DeleteTagsType",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dlhaLifecycleHooks",
                    "type": "List LifecycleHook"
                },
                "wrapper": false,
                "name": "DescribeLifecycleHooksAnswer",
                "resultWrapper": "DescribeLifecycleHooksResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeLifecycleHooks",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeLifecycleHooks",
            "method": "post",
            "documentation": "\u003cp\u003e Describes the lifecycle hooks that currently belong to the specified Auto Scaling group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dlht1AutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dlht1LifecycleHookNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeLifecycleHooksType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asgtAutoScalingGroups",
                        "type": "List AutoScalingGroup"
                    }
                ],
                "name": "AutoScalingGroupsType",
                "resultWrapper": "DescribeAutoScalingGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asgtNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeAutoScalingGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeAutoScalingGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a full description of each Auto Scaling group in the given list. This includes all Amazon EC2 instances that are members of the group. If a list of names is not provided, the service returns the full details of all Auto Scaling groups. \u003c/p\u003e \u003cp\u003e This action supports pagination by returning a token if there are more pages to retrieve. To get the next page, call this action again with the returned token as the \u003ccode\u003eNextToken\u003c/code\u003e parameter. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asgntAutoScalingGroupNames",
                        "type": "List Text"
                    }
                ],
                "name": "AutoScalingGroupNamesType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asgntNextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asgntMaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteScheduledAction",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteScheduledAction",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a scheduled action previously created using the \u003ca\u003ePutScheduledUpdateGroupAction\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat1ScheduledActionName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteScheduledActionType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat1AutoScalingGroupName",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.SetDesiredCapacity",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "SetDesiredCapacity",
            "method": "post",
            "documentation": "\u003cp\u003e Sets the desired size of the specified \u003ca\u003eAutoScalingGroup\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sdctAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sdctDesiredCapacity",
                        "type": "Int"
                    }
                ],
                "name": "SetDesiredCapacityType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "sdctHonorCooldown",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dasntaAutoScalingNotificationTypes",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "DescribeAutoScalingNotificationTypesAnswer",
                "resultWrapper": "DescribeAutoScalingNotificationTypesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeAutoScalingNotificationTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeAutoScalingNotificationTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of all notification types that are supported by Auto Scaling. \u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "satScheduledUpdateGroupActions",
                        "type": "List ScheduledUpdateGroupAction"
                    }
                ],
                "name": "ScheduledActionsType",
                "resultWrapper": "DescribeScheduledActionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "satNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeScheduledActions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeScheduledActions",
            "method": "post",
            "documentation": "\u003cp\u003e Lists all the actions scheduled for your Auto Scaling group that haven't been executed. To see a list of actions already executed, see the activity record returned in \u003ca\u003eDescribeScalingActivities\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2ScheduledActionNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeScheduledActionsType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2AutoScalingGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2StartTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2EndTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2NextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsat2MaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.CreateOrUpdateTags",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "CreateOrUpdateTags",
            "method": "post",
            "documentation": "\u003cp\u003e Creates new tags or updates existing tags for an Auto Scaling group. \u003c/p\u003e \u003cp\u003eFor information on creating tags for your Auto Scaling group, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/ASTagging.html\"\u003eTag Your Auto Scaling Groups and Amazon EC2 Instances\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "couttTags",
                    "type": "List Tag"
                },
                "name": "CreateOrUpdateTagsType",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "CompleteLifecycleActionAnswer",
                "resultWrapper": "CompleteLifecycleActionResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.CompleteLifecycleAction",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "CompleteLifecycleAction",
            "method": "post",
            "documentation": "\u003cp\u003eCompletes the lifecycle action for the associated token initiated under the given lifecycle hook with the specified result. \u003c/p\u003e \u003cp\u003e This operation is a part of the basic sequence for adding a lifecycle hook to an Auto Scaling group: \u003c/p\u003e \u003col\u003e \u003cli\u003e Create a notification target. A target can be either an Amazon SQS queue or an Amazon SNS topic. \u003c/li\u003e \u003cli\u003e Create an IAM role. This role allows Auto Scaling to publish lifecycle notifications to the designated SQS queue or SNS topic. \u003c/li\u003e \u003cli\u003e Create the lifecycle hook. You can create a hook that acts when instances launch or when instances terminate. \u003c/li\u003e \u003cli\u003e If necessary, record the lifecycle action heartbeat to keep the instance in a pending state. \u003c/li\u003e \u003cli\u003e \u003cb\u003eComplete the lifecycle action.\u003c/b\u003e \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eTo learn more, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html\"\u003eAuto Scaling Pending State\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html\"\u003eAuto Scaling Terminating State\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clatLifecycleHookName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clatAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clatLifecycleActionToken",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clatLifecycleActionResult",
                        "type": "Text"
                    }
                ],
                "name": "CompleteLifecycleActionType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeletePolicy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeletePolicy",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a policy created by \u003ca\u003ePutScalingPolicy\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dpt1PolicyName",
                        "type": "Text"
                    }
                ],
                "name": "DeletePolicyType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dpt1AutoScalingGroupName",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.AttachInstances",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "AttachInstances",
            "method": "post",
            "documentation": "\u003cp\u003e Attaches one or more Amazon EC2 instances to an existing Auto Scaling group. After the instance(s) is attached, it becomes a part of the Auto Scaling group. \u003c/p\u003e \u003cp\u003eFor more information, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/attach-instance-asg.html\"\u003eAttach Amazon EC2 Instances to Your Existing Auto Scaling Group\u003c/a\u003e in the \u003ci\u003eAuto Scaling Developer Guide\u003c/i\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aiqInstanceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "aiqAutoScalingGroupName",
                        "type": "Text"
                    }
                ],
                "name": "AttachInstancesQuery",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.UpdateAutoScalingGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "UpdateAutoScalingGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Updates the configuration for the specified \u003ca\u003eAutoScalingGroup\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e The new settings are registered upon the completion of this call. Any launch configuration settings take effect on any triggers after this call returns. Scaling activities that are currently in progress aren't affected. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtAvailabilityZones",
                        "type": "List1 Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtTerminationPolicies",
                        "type": "List Text"
                    }
                ],
                "name": "UpdateAutoScalingGroupType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtLaunchConfigurationName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtMinSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtMaxSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtDesiredCapacity",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtDefaultCooldown",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtHealthCheckType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtHealthCheckGracePeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtPlacementGroup",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "uasgtVPCZoneIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteAutoScalingGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteAutoScalingGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified Auto Scaling group if the group has no instances and no scaling activities in progress. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasgtAutoScalingGroupName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteAutoScalingGroupType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dasgtForceDelete",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "PutLifecycleHookAnswer",
                "resultWrapper": "PutLifecycleHookResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.PutLifecycleHook",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "PutLifecycleHook",
            "method": "post",
            "documentation": "\u003cp\u003eCreates or updates a lifecycle hook for an Auto Scaling Group.\u003c/p\u003e \u003cp\u003eA lifecycle hook tells Auto Scaling that you want to perform an action on an instance that is not actively in service; for example, either when the instance launches or before the instance terminates.\u003c/p\u003e \u003cp\u003e This operation is a part of the basic sequence for adding a lifecycle hook to an Auto Scaling group: \u003c/p\u003e \u003col\u003e \u003cli\u003e Create a notification target. A target can be either an Amazon SQS queue or an Amazon SNS topic. \u003c/li\u003e \u003cli\u003e Create an IAM role. This role allows Auto Scaling to publish lifecycle notifications to the designated SQS queue or SNS topic. \u003c/li\u003e \u003cli\u003e \u003cb\u003eCreate the lifecycle hook. You can create a hook that acts when instances launch or when instances terminate.\u003c/b\u003e \u003c/li\u003e \u003cli\u003e If necessary, record the lifecycle action heartbeat to keep the instance in a pending state. \u003c/li\u003e \u003cli\u003e Complete the lifecycle action. \u003c/li\u003e \u003c/ol\u003e \u003cp\u003eTo learn more, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingPendingState.html\"\u003eAuto Scaling Pending State\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingTerminatingState.html\"\u003eAuto Scaling Terminating State\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtLifecycleHookName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtAutoScalingGroupName",
                        "type": "Text"
                    }
                ],
                "name": "PutLifecycleHookType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtLifecycleTransition",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtRoleARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtNotificationTargetARN",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtNotificationMetadata",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtHeartbeatTimeout",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "plhtDefaultResult",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "DeleteLifecycleHookAnswer",
                "resultWrapper": "DeleteLifecycleHookResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.DeleteLifecycleHook",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DeleteLifecycleHook",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified lifecycle hook. If there are any outstanding lifecycle actions, they are completed first (ABANDON for launching instances, CONTINUE for terminating instances).\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dlhtLifecycleHookName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dlhtAutoScalingGroupName",
                        "type": "Text"
                    }
                ],
                "name": "DeleteLifecycleHookType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.ResumeProcesses",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "ResumeProcesses",
            "method": "post",
            "documentation": "\u003cp\u003e Resumes all suspended Auto Scaling processes for an Auto Scaling group. For information on suspending and resuming Auto Scaling process, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/US_SuspendResume.html\"\u003eSuspend and Resume Auto Scaling Process\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "ScalingProcessQuery",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.ExecutePolicy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "ExecutePolicy",
            "method": "post",
            "documentation": "\u003cp\u003eExecutes the specified policy. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "eptPolicyName",
                        "type": "Text"
                    }
                ],
                "name": "ExecutePolicyType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "eptAutoScalingGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "eptHonorCooldown",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "enum",
                    "num"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DescribeAccountLimitsAnswer",
                "resultWrapper": "DescribeAccountLimitsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dalaMaxNumberOfAutoScalingGroups",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dalaMaxNumberOfLaunchConfigurations",
                        "type": "Maybe Int"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeAccountLimits",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeAccountLimits",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the limits for the Auto Scaling resources currently allowed for your AWS account. \u003c/p\u003e \u003cp\u003eYour AWS account comes with default limits on resources for Auto Scaling. There is a default limit of \u003ccode\u003e20\u003c/code\u003e Auto Scaling groups and \u003ccode\u003e100\u003c/code\u003e launch configurations per region.\u003c/p\u003e \u003cp\u003eIf you reach the limits for the number of Auto Scaling groups or the launch configurations, you can go to the \u003ca href=\"https://aws.amazon.com/support/\"\u003eSupport Center\u003c/a\u003e and place a request to raise the limits.\u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "atActivity",
                    "type": "Maybe Activity"
                },
                "wrapper": false,
                "name": "ActivityType",
                "resultWrapper": "TerminateInstanceInAutoScalingGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.TerminateInstanceInAutoScalingGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "TerminateInstanceInAutoScalingGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Terminates the specified instance. Optionally, the desired group size can be adjusted. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tiiasgtInstanceId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tiiasgtShouldDecrementDesiredCapacity",
                        "type": "Bool"
                    }
                ],
                "name": "TerminateInstanceInAutoScalingGroupType",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.PutScheduledUpdateGroupAction",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "PutScheduledUpdateGroupAction",
            "method": "post",
            "documentation": "\u003cp\u003e Creates or updates a scheduled scaling action for an Auto Scaling group. When updating a scheduled scaling action, if you leave a parameter unspecified, the corresponding value remains unchanged in the affected Auto Scaling group. \u003c/p\u003e \u003cp\u003eFor information on creating or updating a scheduled action for your Auto Scaling group, see \u003ca href=\"http://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/schedule_time.html\"\u003eScale Based on a Schedule\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatScheduledActionName",
                        "type": "Text"
                    }
                ],
                "name": "PutScheduledUpdateGroupActionType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatStartTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatEndTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatRecurrence",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatMinSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatMaxSize",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "psugatDesiredCapacity",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ptScalingPolicies",
                        "type": "List ScalingPolicy"
                    }
                ],
                "name": "PoliciesType",
                "resultWrapper": "DescribePoliciesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ptNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribePolicies",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribePolicies",
            "method": "post",
            "documentation": "\u003cp\u003e Returns descriptions of what each policy does. This action supports pagination. If the response includes a token, there are more records available. To get the additional records, repeat the request with the response token as the \u003ccode\u003eNextToken\u003c/code\u003e parameter. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dptPolicyNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribePoliciesType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dptAutoScalingGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dptNextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dptMaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lctLaunchConfigurations",
                        "type": "List LaunchConfiguration"
                    }
                ],
                "name": "LaunchConfigurationsType",
                "resultWrapper": "DescribeLaunchConfigurationsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lctNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeLaunchConfigurations",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeLaunchConfigurations",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a full description of the launch configurations, or the specified launch configurations, if they exist. \u003c/p\u003e \u003cp\u003e If no name is specified, then the full details of all launch configurations are returned. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcntLaunchConfigurationNames",
                        "type": "List Text"
                    }
                ],
                "name": "LaunchConfigurationNamesType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcntNextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lcntMaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atActivities",
                        "type": "List Activity"
                    }
                ],
                "name": "ActivitiesType",
                "resultWrapper": "DescribeScalingActivitiesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "atNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeScalingActivities",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeScalingActivities",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the scaling activities for the specified Auto Scaling group. \u003c/p\u003e \u003cp\u003e If the specified \u003ccode\u003eActivityIds\u003c/code\u003e list is empty, all the activities from the past six weeks are returned. Activities are sorted by the start time. Activities still in progress appear first on the list. \u003c/p\u003e \u003cp\u003e This action supports pagination. If the response includes a token, there are more records available. To get the additional records, repeat the request with the response token as the \u003ccode\u003eNextToken\u003c/code\u003e parameter. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsatActivityIds",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeScalingActivitiesType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsatAutoScalingGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsatMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dsatNextToken",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dncaNotificationConfigurations",
                        "type": "List NotificationConfiguration"
                    }
                ],
                "name": "DescribeNotificationConfigurationsAnswer",
                "resultWrapper": "DescribeNotificationConfigurationsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dncaNextToken",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.AutoScaling.DescribeNotificationConfigurations",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeNotificationConfigurations",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of notification actions associated with Auto Scaling groups for specified events. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dnctAutoScalingGroupNames",
                        "type": "List Text"
                    }
                ],
                "name": "DescribeNotificationConfigurationsType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dnctNextToken",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dnctMaxRecords",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dlhtaLifecycleHookTypes",
                    "type": "List Text"
                },
                "wrapper": false,
                "name": "DescribeLifecycleHookTypesAnswer",
                "resultWrapper": "DescribeLifecycleHookTypesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeLifecycleHookTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeLifecycleHookTypes",
            "method": "post",
            "documentation": "\u003cp\u003eDescribes the available types of lifecycle hooks.\u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dataAdjustmentTypes",
                    "type": "List AdjustmentType"
                },
                "wrapper": false,
                "name": "DescribeAdjustmentTypesAnswer",
                "resultWrapper": "DescribeAdjustmentTypesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.AutoScaling.DescribeAdjustmentTypes",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "DescribeAdjustmentTypes",
            "method": "post",
            "documentation": "\u003cp\u003e Returns policy adjustment types for use in the \u003ca\u003ePutScalingPolicy\u003c/a\u003e action. \u003c/p\u003e",
            "request": {
                "deriving": [],
                "name": "Empty",
                "type": "empty"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.CreateAutoScalingGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "CreateAutoScalingGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new Auto Scaling group with the specified name and other attributes. When the creation request is completed, the Auto Scaling group is ready to be used in other calls. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtAutoScalingGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtMinSize",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtMaxSize",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtAvailabilityZones",
                        "type": "List1 Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtLoadBalancerNames",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtTerminationPolicies",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateAutoScalingGroupType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtLaunchConfigurationName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtInstanceId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtDesiredCapacity",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtDefaultCooldown",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtHealthCheckType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtHealthCheckGracePeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtPlacementGroup",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "casgtVPCZoneIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.AutoScaling.CreateLaunchConfiguration",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.AutoScaling.Types"
            ],
            "name": "CreateLaunchConfiguration",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new launch configuration. The launch configuration name must be unique within the scope of the client's AWS account. The maximum limit of launch configurations, which by default is 100, must not yet have been met; otherwise, the call will fail. When created, the new launch configuration is available for immediate use. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctLaunchConfigurationName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctBlockDeviceMappings",
                        "type": "List BlockDeviceMapping"
                    }
                ],
                "name": "CreateLaunchConfigurationType",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctImageId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctKeyName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctUserData",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctInstanceId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctInstanceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctKernelId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctRamdiskId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctInstanceMonitoring",
                        "type": "Maybe InstanceMonitoring"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctSpotPrice",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctIamInstanceProfile",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctEbsOptimized",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctAssociatePublicIpAddress",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "clctPlacementTenancy",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}