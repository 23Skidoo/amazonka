{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "IAM",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.IAM",
        "protocol": "query",
        "imports": [
            "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "Network.AWS.IAM.AddRoleToInstanceProfile",
            "Network.AWS.IAM.AddUserToGroup",
            "Network.AWS.IAM.ChangePassword",
            "Network.AWS.IAM.CreateAccessKey",
            "Network.AWS.IAM.CreateAccountAlias",
            "Network.AWS.IAM.CreateGroup",
            "Network.AWS.IAM.CreateInstanceProfile",
            "Network.AWS.IAM.CreateLoginProfile",
            "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "Network.AWS.IAM.CreateRole",
            "Network.AWS.IAM.CreateSAMLProvider",
            "Network.AWS.IAM.CreateUser",
            "Network.AWS.IAM.CreateVirtualMFADevice",
            "Network.AWS.IAM.DeactivateMFADevice",
            "Network.AWS.IAM.DeleteAccessKey",
            "Network.AWS.IAM.DeleteAccountAlias",
            "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "Network.AWS.IAM.DeleteGroup",
            "Network.AWS.IAM.DeleteGroupPolicy",
            "Network.AWS.IAM.DeleteInstanceProfile",
            "Network.AWS.IAM.DeleteLoginProfile",
            "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "Network.AWS.IAM.DeleteRole",
            "Network.AWS.IAM.DeleteRolePolicy",
            "Network.AWS.IAM.DeleteSAMLProvider",
            "Network.AWS.IAM.DeleteServerCertificate",
            "Network.AWS.IAM.DeleteSigningCertificate",
            "Network.AWS.IAM.DeleteUser",
            "Network.AWS.IAM.DeleteUserPolicy",
            "Network.AWS.IAM.DeleteVirtualMFADevice",
            "Network.AWS.IAM.EnableMFADevice",
            "Network.AWS.IAM.GenerateCredentialReport",
            "Network.AWS.IAM.GetAccountPasswordPolicy",
            "Network.AWS.IAM.GetAccountSummary",
            "Network.AWS.IAM.GetCredentialReport",
            "Network.AWS.IAM.GetGroup",
            "Network.AWS.IAM.GetGroupPolicy",
            "Network.AWS.IAM.GetInstanceProfile",
            "Network.AWS.IAM.GetLoginProfile",
            "Network.AWS.IAM.GetOpenIDConnectProvider",
            "Network.AWS.IAM.GetRole",
            "Network.AWS.IAM.GetRolePolicy",
            "Network.AWS.IAM.GetSAMLProvider",
            "Network.AWS.IAM.GetServerCertificate",
            "Network.AWS.IAM.GetUser",
            "Network.AWS.IAM.GetUserPolicy",
            "Network.AWS.IAM.ListAccessKeys",
            "Network.AWS.IAM.ListAccountAliases",
            "Network.AWS.IAM.ListGroupPolicies",
            "Network.AWS.IAM.ListGroups",
            "Network.AWS.IAM.ListGroupsForUser",
            "Network.AWS.IAM.ListInstanceProfiles",
            "Network.AWS.IAM.ListInstanceProfilesForRole",
            "Network.AWS.IAM.ListMFADevices",
            "Network.AWS.IAM.ListOpenIDConnectProviders",
            "Network.AWS.IAM.ListRolePolicies",
            "Network.AWS.IAM.ListRoles",
            "Network.AWS.IAM.ListSAMLProviders",
            "Network.AWS.IAM.ListServerCertificates",
            "Network.AWS.IAM.ListSigningCertificates",
            "Network.AWS.IAM.ListUserPolicies",
            "Network.AWS.IAM.ListUsers",
            "Network.AWS.IAM.ListVirtualMFADevices",
            "Network.AWS.IAM.PutGroupPolicy",
            "Network.AWS.IAM.PutRolePolicy",
            "Network.AWS.IAM.PutUserPolicy",
            "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "Network.AWS.IAM.RemoveUserFromGroup",
            "Network.AWS.IAM.ResyncMFADevice",
            "Network.AWS.IAM.Types",
            "Network.AWS.IAM.UpdateAccessKey",
            "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "Network.AWS.IAM.UpdateGroup",
            "Network.AWS.IAM.UpdateLoginProfile",
            "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "Network.AWS.IAM.UpdateSAMLProvider",
            "Network.AWS.IAM.UpdateServerCertificate",
            "Network.AWS.IAM.UpdateSigningCertificate",
            "Network.AWS.IAM.UpdateUser",
            "Network.AWS.IAM.UploadServerCertificate",
            "Network.AWS.IAM.UploadSigningCertificate"
        ],
        "name": "Amazon Identity and Access Management",
        "version": "2010-05-08",
        "documentation": "AWS Identity and Access Management (IAM) enables you to securely control access to AWS services and resources for your users. Using IAM, you can create and manage AWS users and groups and use permissions to allow and deny their access to AWS resources.",
        "xmlNamespace": "https://iam.amazonaws.com/doc/2010-05-08/",
        "jsonVersion": null,
        "endpoint": "Global",
        "endpointPrefix": "iam",
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-iam",
        "exposed": [
            "Network.AWS.IAM",
            "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "Network.AWS.IAM.AddRoleToInstanceProfile",
            "Network.AWS.IAM.AddUserToGroup",
            "Network.AWS.IAM.ChangePassword",
            "Network.AWS.IAM.CreateAccessKey",
            "Network.AWS.IAM.CreateAccountAlias",
            "Network.AWS.IAM.CreateGroup",
            "Network.AWS.IAM.CreateInstanceProfile",
            "Network.AWS.IAM.CreateLoginProfile",
            "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "Network.AWS.IAM.CreateRole",
            "Network.AWS.IAM.CreateSAMLProvider",
            "Network.AWS.IAM.CreateUser",
            "Network.AWS.IAM.CreateVirtualMFADevice",
            "Network.AWS.IAM.DeactivateMFADevice",
            "Network.AWS.IAM.DeleteAccessKey",
            "Network.AWS.IAM.DeleteAccountAlias",
            "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "Network.AWS.IAM.DeleteGroup",
            "Network.AWS.IAM.DeleteGroupPolicy",
            "Network.AWS.IAM.DeleteInstanceProfile",
            "Network.AWS.IAM.DeleteLoginProfile",
            "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "Network.AWS.IAM.DeleteRole",
            "Network.AWS.IAM.DeleteRolePolicy",
            "Network.AWS.IAM.DeleteSAMLProvider",
            "Network.AWS.IAM.DeleteServerCertificate",
            "Network.AWS.IAM.DeleteSigningCertificate",
            "Network.AWS.IAM.DeleteUser",
            "Network.AWS.IAM.DeleteUserPolicy",
            "Network.AWS.IAM.DeleteVirtualMFADevice",
            "Network.AWS.IAM.EnableMFADevice",
            "Network.AWS.IAM.GenerateCredentialReport",
            "Network.AWS.IAM.GetAccountPasswordPolicy",
            "Network.AWS.IAM.GetAccountSummary",
            "Network.AWS.IAM.GetCredentialReport",
            "Network.AWS.IAM.GetGroup",
            "Network.AWS.IAM.GetGroupPolicy",
            "Network.AWS.IAM.GetInstanceProfile",
            "Network.AWS.IAM.GetLoginProfile",
            "Network.AWS.IAM.GetOpenIDConnectProvider",
            "Network.AWS.IAM.GetRole",
            "Network.AWS.IAM.GetRolePolicy",
            "Network.AWS.IAM.GetSAMLProvider",
            "Network.AWS.IAM.GetServerCertificate",
            "Network.AWS.IAM.GetUser",
            "Network.AWS.IAM.GetUserPolicy",
            "Network.AWS.IAM.ListAccessKeys",
            "Network.AWS.IAM.ListAccountAliases",
            "Network.AWS.IAM.ListGroupPolicies",
            "Network.AWS.IAM.ListGroups",
            "Network.AWS.IAM.ListGroupsForUser",
            "Network.AWS.IAM.ListInstanceProfiles",
            "Network.AWS.IAM.ListInstanceProfilesForRole",
            "Network.AWS.IAM.ListMFADevices",
            "Network.AWS.IAM.ListOpenIDConnectProviders",
            "Network.AWS.IAM.ListRolePolicies",
            "Network.AWS.IAM.ListRoles",
            "Network.AWS.IAM.ListSAMLProviders",
            "Network.AWS.IAM.ListServerCertificates",
            "Network.AWS.IAM.ListSigningCertificates",
            "Network.AWS.IAM.ListUserPolicies",
            "Network.AWS.IAM.ListUsers",
            "Network.AWS.IAM.ListVirtualMFADevices",
            "Network.AWS.IAM.PutGroupPolicy",
            "Network.AWS.IAM.PutRolePolicy",
            "Network.AWS.IAM.PutUserPolicy",
            "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "Network.AWS.IAM.RemoveUserFromGroup",
            "Network.AWS.IAM.ResyncMFADevice",
            "Network.AWS.IAM.Types",
            "Network.AWS.IAM.UpdateAccessKey",
            "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "Network.AWS.IAM.UpdateGroup",
            "Network.AWS.IAM.UpdateLoginProfile",
            "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "Network.AWS.IAM.UpdateSAMLProvider",
            "Network.AWS.IAM.UpdateServerCertificate",
            "Network.AWS.IAM.UpdateSigningCertificate",
            "Network.AWS.IAM.UpdateUser",
            "Network.AWS.IAM.UploadServerCertificate",
            "Network.AWS.IAM.UploadSigningCertificate"
        ],
        "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/Welcome.html",
        "protocol": "query",
        "name": "Amazon Identity and Access Management",
        "version": "0.0.0",
        "description": "AWS Identity and Access Management (IAM) enables you to securely control access to AWS services and resources for your users. Using IAM, you can create and manage AWS users and groups and use permissions to allow and deny their access to AWS resources."
    },
    "types": {
        "namespace": "Network.AWS.IAM.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Assigned": "Assigned",
                    "Unassigned": "Unassigned",
                    "Any": "Any"
                },
                "valuePad": 11,
                "name": "AssignmentStatusType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 29,
                "ctor": "passwordPolicy",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "PasswordPolicy",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppMinimumPasswordLength",
                        "name": "_ppMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "\u003cp\u003eMinimum length to require for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireSymbols",
                        "name": "_ppRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "\u003cp\u003eSpecifies whether to require symbols for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireNumbers",
                        "name": "_ppRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "\u003cp\u003eSpecifies whether to require numbers for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireUppercaseCharacters",
                        "name": "_ppRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether to require uppercase characters for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireLowercaseCharacters",
                        "name": "_ppRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether to require lowercase characters for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppAllowUsersToChangePassword",
                        "name": "_ppAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are allowed to change their own password.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppExpirePasswords",
                        "name": "_ppExpirePasswords",
                        "shape": "booleanType",
                        "locationName": "ExpirePasswords",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are required to change their password after a specified number of days.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppMaxPasswordAge",
                        "name": "_ppMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "\u003cp\u003eThe number of days that an IAM user password is valid.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppPasswordReusePrevention",
                        "name": "_ppPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "\u003cp\u003eSpecifies the number of previous passwords that IAM users are prevented from reusing.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppHardExpiry",
                        "name": "_ppHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are prevented from setting a new password after their password has expired.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppAllowUsersToChangePassword",
                        "name": "_ppAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are allowed to change their own password.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppExpirePasswords",
                        "name": "_ppExpirePasswords",
                        "shape": "booleanType",
                        "locationName": "ExpirePasswords",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are required to change their password after a specified number of days.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppHardExpiry",
                        "name": "_ppHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "\u003cp\u003eSpecifies whether IAM users are prevented from setting a new password after their password has expired.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppMaxPasswordAge",
                        "name": "_ppMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "\u003cp\u003eThe number of days that an IAM user password is valid.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppMinimumPasswordLength",
                        "name": "_ppMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "\u003cp\u003eMinimum length to require for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppPasswordReusePrevention",
                        "name": "_ppPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "\u003cp\u003eSpecifies the number of previous passwords that IAM users are prevented from reusing.\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireLowercaseCharacters",
                        "name": "_ppRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether to require lowercase characters for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireNumbers",
                        "name": "_ppRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "\u003cp\u003eSpecifies whether to require numbers for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireSymbols",
                        "name": "_ppRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "\u003cp\u003eSpecifies whether to require symbols for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ppRequireUppercaseCharacters",
                        "name": "_ppRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether to require uppercase characters for IAM user passwords.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 12,
                "ctor": "group",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gPath",
                        "name": "_gPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003eThe path to the group. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gGroupName",
                        "name": "_gGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name that identifies the group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gGroupId",
                        "name": "_gGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the group. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gArn",
                        "name": "_gArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gCreateDate",
                        "name": "_gCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the group was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "Group",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gArn",
                        "name": "_gArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the group. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gCreateDate",
                        "name": "_gCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the group was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gGroupId",
                        "name": "_gGroupId",
                        "shape": "idType",
                        "locationName": "GroupId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the group. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gGroupName",
                        "name": "_gGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name that identifies the group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gPath",
                        "name": "_gPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003eThe path to the group. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 17,
                "ctor": "mfadevice",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadUserName",
                        "name": "_mfadUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user with whom the MFA device is associated.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadSerialNumber",
                        "name": "_mfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadEnableDate",
                        "name": "_mfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "\u003cp\u003eThe date when the MFA device was enabled for the user.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "MFADevice",
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadEnableDate",
                        "name": "_mfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "\u003cp\u003eThe date when the MFA device was enabled for the user.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadSerialNumber",
                        "name": "_mfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "mfadUserName",
                        "name": "_mfadUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user with whom the MFA device is associated.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "instanceProfile",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipPath",
                        "name": "_ipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the instance profile. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipInstanceProfileName",
                        "name": "_ipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name identifying the instance profile.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipInstanceProfileId",
                        "name": "_ipInstanceProfileId",
                        "shape": "idType",
                        "locationName": "InstanceProfileId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the instance profile. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipArn",
                        "name": "_ipArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipCreateDate",
                        "name": "_ipCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the instance profile was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "InstanceProfile",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipRoles",
                        "name": "_ipRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "\u003cp\u003eThe role associated with the instance profile.\u003c/p\u003e",
                        "typeExposed": "[Role]",
                        "type": "[Role]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipArn",
                        "name": "_ipArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the instance profile. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipCreateDate",
                        "name": "_ipCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the instance profile was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipInstanceProfileId",
                        "name": "_ipInstanceProfileId",
                        "shape": "idType",
                        "locationName": "InstanceProfileId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the instance profile. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipInstanceProfileName",
                        "name": "_ipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name identifying the instance profile.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ipPath",
                        "name": "_ipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the instance profile. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ipRoles",
                        "name": "_ipRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "\u003cp\u003eThe role associated with the instance profile.\u003c/p\u003e",
                        "typeExposed": "[Role]",
                        "type": "[Role]"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "TextCsv": "text/csv"
                },
                "valuePad": 9,
                "name": "ReportFormatType",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 25,
                "ctor": "serverCertificateMetadata",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmPath",
                        "name": "_scmPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the server certificate. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmServerCertificateName",
                        "name": "_scmServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name that identifies the server certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmServerCertificateId",
                        "name": "_scmServerCertificateId",
                        "shape": "idType",
                        "locationName": "ServerCertificateId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the server certificate. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmArn",
                        "name": "_scmArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ServerCertificateMetadata",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "scmUploadDate",
                        "name": "_scmUploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "\u003cp\u003eThe date when the server certificate was uploaded.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "scmExpiration",
                        "name": "_scmExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "\u003cp\u003eThe date on which the certificate is set to expire.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmArn",
                        "name": "_scmArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the server certificate. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "scmExpiration",
                        "name": "_scmExpiration",
                        "shape": "dateType",
                        "locationName": "Expiration",
                        "documentation": "\u003cp\u003eThe date on which the certificate is set to expire.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmPath",
                        "name": "_scmPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the server certificate. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmServerCertificateId",
                        "name": "_scmServerCertificateId",
                        "shape": "idType",
                        "locationName": "ServerCertificateId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the server certificate. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scmServerCertificateName",
                        "name": "_scmServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name that identifies the server certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "scmUploadDate",
                        "name": "_scmUploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "\u003cp\u003eThe date when the server certificate was uploaded.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "openIDConnectProviderListEntry",
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "oidcpleArn",
                    "name": "_oidcpleArn",
                    "shape": "arnType",
                    "locationName": "Arn",
                    "documentation": null,
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "OpenIDConnectProviderListEntry",
                "type": "newtype",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oidcpleArn",
                        "name": "_oidcpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "oidcpleArn",
                        "name": "_oidcpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": null,
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 24,
                "ctor": "loginProfile",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lpUserName",
                        "name": "_lpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user, which can be used for signing in to the AWS Management Console.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lpCreateDate",
                        "name": "_lpCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the password for the user was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "LoginProfile",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpPasswordResetRequired",
                        "name": "_lpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003eSpecifies whether the user is required to set a new password on next sign-in.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lpCreateDate",
                        "name": "_lpCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the password for the user was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lpPasswordResetRequired",
                        "name": "_lpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003eSpecifies whether the user is required to set a new password on next sign-in.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lpUserName",
                        "name": "_lpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user, which can be used for signing in to the AWS Management Console.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "UsersQuota": "UsersQuota",
                    "Groups": "Groups",
                    "GroupsQuota": "GroupsQuota",
                    "Users": "Users",
                    "MFADevicesInUse": "MFADevicesInUse",
                    "SigningCertificatesPerUserQuota": "SigningCertificatesPerUserQuota",
                    "AccessKeysPerUserQuota": "AccessKeysPerUserQuota",
                    "ServerCertificates": "ServerCertificates",
                    "GroupsPerUserQuota": "GroupsPerUserQuota",
                    "GroupPolicySizeQuota": "GroupPolicySizeQuota",
                    "UserPolicySizeQuota": "UserPolicySizeQuota",
                    "ServerCertificatesQuota": "ServerCertificatesQuota",
                    "AccountMFAEnabled": "AccountMFAEnabled",
                    "MFADevices": "MFADevices"
                },
                "valuePad": 32,
                "name": "SummaryKeyType",
                "type": "nullary",
                "branchPad": 31
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Inprogress": "INPROGRESS",
                    "Started": "STARTED",
                    "Complete": "COMPLETE"
                },
                "valuePad": 11,
                "name": "ReportStateType",
                "type": "nullary",
                "branchPad": 10
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "user",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uPath",
                        "name": "_uPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003eThe path to the user. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uUserName",
                        "name": "_uUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe friendly name identifying the user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uUserId",
                        "name": "_uUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eThe stable and unique string identifying the user. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uArn",
                        "name": "_uArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uCreateDate",
                        "name": "_uCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e, when the user was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "User",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uPasswordLastUsed",
                        "name": "_uPasswordLastUsed",
                        "shape": "dateType",
                        "locationName": "PasswordLastUsed",
                        "documentation": "\u003cp\u003eThe date and time, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e, when the user's password was last used to sign in to an AWS website. For a list of AWS websites that capture a user's last sign-in time, see the \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\"\u003eCredential Reports\u003c/a\u003e topic in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. When the user does not have a password, this field is null (not present). When a user's password exists but has never been used, or when there is no sign-in data associated with the user, this field is null (not present). \u003c/p\u003e \u003cp\u003eThis value is returned only in the \u003ca\u003eGetUser\u003c/a\u003e and \u003ca\u003eListUsers\u003c/a\u003e actions. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uArn",
                        "name": "_uArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) that identifies the user. For more information about ARNs and how to use ARNs in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uCreateDate",
                        "name": "_uCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e, when the user was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uPasswordLastUsed",
                        "name": "_uPasswordLastUsed",
                        "shape": "dateType",
                        "locationName": "PasswordLastUsed",
                        "documentation": "\u003cp\u003eThe date and time, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e, when the user's password was last used to sign in to an AWS website. For a list of AWS websites that capture a user's last sign-in time, see the \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\"\u003eCredential Reports\u003c/a\u003e topic in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. If a password is used more than once in a five-minute span, only the first use is returned in this field. When the user does not have a password, this field is null (not present). When a user's password exists but has never been used, or when there is no sign-in data associated with the user, this field is null (not present). \u003c/p\u003e \u003cp\u003eThis value is returned only in the \u003ca\u003eGetUser\u003c/a\u003e and \u003ca\u003eListUsers\u003c/a\u003e actions. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uPath",
                        "name": "_uPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003eThe path to the user. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uUserId",
                        "name": "_uUserId",
                        "shape": "idType",
                        "locationName": "UserId",
                        "documentation": "\u003cp\u003eThe stable and unique string identifying the user. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uUserName",
                        "name": "_uUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe friendly name identifying the user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Inactive": "Inactive",
                    "Active": "Active"
                },
                "valuePad": 9,
                "name": "StatusType",
                "type": "nullary",
                "branchPad": 8
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "samlproviderListEntry",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "SAMLProviderListEntry",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleArn",
                        "name": "_samlpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleValidUntil",
                        "name": "_samlpleValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "\u003cp\u003eThe expiration date and time for the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleCreateDate",
                        "name": "_samlpleCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the SAML provider was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleArn",
                        "name": "_samlpleArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleCreateDate",
                        "name": "_samlpleCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the SAML provider was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "samlpleValidUntil",
                        "name": "_samlpleValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "\u003cp\u003eThe expiration date and time for the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 26,
                "ctor": "role",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rPath",
                        "name": "_rPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the role. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rRoleName",
                        "name": "_rRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name that identifies the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rRoleId",
                        "name": "_rRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the role. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rArn",
                        "name": "_rArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rCreateDate",
                        "name": "_rCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the role was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    }
                ],
                "contentPad": 0,
                "name": "Role",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rAssumeRolePolicyDocument",
                        "name": "_rAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e \u003cp\u003e The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rArn",
                        "name": "_rArn",
                        "shape": "arnType",
                        "locationName": "Arn",
                        "documentation": "\u003cp\u003e The Amazon Resource Name (ARN) specifying the role. For more information about ARNs and how to use them in policies, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "rAssumeRolePolicyDocument",
                        "name": "_rAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e \u003cp\u003e The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rCreateDate",
                        "name": "_rCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the role was created.\u003c/p\u003e",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rPath",
                        "name": "_rPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the role. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rRoleId",
                        "name": "_rRoleId",
                        "shape": "idType",
                        "locationName": "RoleId",
                        "documentation": "\u003cp\u003e The stable and unique string identifying the role. For more information about IDs, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rRoleName",
                        "name": "_rRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name that identifies the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 28,
                "ctor": "serverCertificate",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scServerCertificateMetadata",
                        "name": "_scServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "\u003cp\u003eThe meta information of the server certificate, such as its name, path, ID, and ARN.\u003c/p\u003e",
                        "typeExposed": "ServerCertificateMetadata",
                        "type": "ServerCertificateMetadata"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scCertificateBody",
                        "name": "_scCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "ServerCertificate",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "scCertificateChain",
                        "name": "_scCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate chain.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scCertificateBody",
                        "name": "_scCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "scCertificateChain",
                        "name": "_scCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate chain.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "scServerCertificateMetadata",
                        "name": "_scServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "\u003cp\u003eThe meta information of the server certificate, such as its name, path, ID, and ARN.\u003c/p\u003e",
                        "typeExposed": "ServerCertificateMetadata",
                        "type": "ServerCertificateMetadata"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 18,
                "ctor": "accessKey",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akUserName",
                        "name": "_akUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the IAM user that the access key is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akAccessKeyId",
                        "name": "_akAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe ID for this access key.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akStatus",
                        "name": "_akStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of the access key. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls, while \u003ccode\u003eInactive\u003c/code\u003e means it is not. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akSecretAccessKey",
                        "name": "_akSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "\u003cp\u003eThe secret key used to sign requests.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "contentPad": 0,
                "name": "AccessKey",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "akCreateDate",
                        "name": "_akCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the access key was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akAccessKeyId",
                        "name": "_akAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe ID for this access key.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "akCreateDate",
                        "name": "_akCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the access key was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akSecretAccessKey",
                        "name": "_akSecretAccessKey",
                        "shape": "accessKeySecretType",
                        "locationName": "SecretAccessKey",
                        "documentation": "\u003cp\u003eThe secret key used to sign requests.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akStatus",
                        "name": "_akStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status of the access key. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls, while \u003ccode\u003eInactive\u003c/code\u003e means it is not. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "akUserName",
                        "name": "_akUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the IAM user that the access key is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 22,
                "ctor": "virtualMFADevice",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vmfadSerialNumber",
                        "name": "_vmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe serial number associated with \u003ccode\u003eVirtualMFADevice\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "VirtualMFADevice",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadBase32StringSeed",
                        "name": "_vmfadBase32StringSeed",
                        "shape": "BootstrapDatum",
                        "locationName": "Base32StringSeed",
                        "documentation": "\u003cp\u003e The Base32 seed defined as specified in \u003ca href=\"http://www.ietf.org/rfc/rfc3548.txt\"\u003eRFC3548\u003c/a\u003e. The \u003ccode\u003eBase32StringSeed\u003c/code\u003e is Base64-encoded. \u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadQRCodePNG",
                        "name": "_vmfadQRCodePNG",
                        "shape": "BootstrapDatum",
                        "locationName": "QRCodePNG",
                        "documentation": "\u003cp\u003e A QR code PNG image that encodes \u003ccode\u003eotpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String\u003c/code\u003e where \u003ccode\u003e$virtualMFADeviceName\u003c/code\u003e is one of the create call arguments, \u003ccode\u003eAccountName\u003c/code\u003e is the user name if set (otherwise, the account ID otherwise), and \u003ccode\u003eBase32String\u003c/code\u003e is the seed in Base32 format. The \u003ccode\u003eBase32String\u003c/code\u003e value is Base64-encoded. \u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadUser",
                        "name": "_vmfadUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": null,
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadEnableDate",
                        "name": "_vmfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "\u003cp\u003eThe date and time on which the virtual MFA device was enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadBase32StringSeed",
                        "name": "_vmfadBase32StringSeed",
                        "shape": "BootstrapDatum",
                        "locationName": "Base32StringSeed",
                        "documentation": "\u003cp\u003e The Base32 seed defined as specified in \u003ca href=\"http://www.ietf.org/rfc/rfc3548.txt\"\u003eRFC3548\u003c/a\u003e. The \u003ccode\u003eBase32StringSeed\u003c/code\u003e is Base64-encoded. \u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadEnableDate",
                        "name": "_vmfadEnableDate",
                        "shape": "dateType",
                        "locationName": "EnableDate",
                        "documentation": "\u003cp\u003eThe date and time on which the virtual MFA device was enabled.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadQRCodePNG",
                        "name": "_vmfadQRCodePNG",
                        "shape": "BootstrapDatum",
                        "locationName": "QRCodePNG",
                        "documentation": "\u003cp\u003e A QR code PNG image that encodes \u003ccode\u003eotpauth://totp/$virtualMFADeviceName@$AccountName?secret=$Base32String\u003c/code\u003e where \u003ccode\u003e$virtualMFADeviceName\u003c/code\u003e is one of the create call arguments, \u003ccode\u003eAccountName\u003c/code\u003e is the user name if set (otherwise, the account ID otherwise), and \u003ccode\u003eBase32String\u003c/code\u003e is the seed in Base32 format. The \u003ccode\u003eBase32String\u003c/code\u003e value is Base64-encoded. \u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "vmfadSerialNumber",
                        "name": "_vmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eThe serial number associated with \u003ccode\u003eVirtualMFADevice\u003c/code\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "vmfadUser",
                        "name": "_vmfadUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": null,
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 19,
                "ctor": "signingCertificate",
                "contents": [],
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1UserName",
                        "name": "_sc1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1CertificateId",
                        "name": "_sc1CertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID for the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1CertificateBody",
                        "name": "_sc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1Status",
                        "name": "_sc1Status",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the signing certificate. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls, while \u003ccode\u003eInactive\u003c/code\u003e means it is not.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "SigningCertificate",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sc1UploadDate",
                        "name": "_sc1UploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "\u003cp\u003eThe date when the signing certificate was uploaded.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1CertificateBody",
                        "name": "_sc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1CertificateId",
                        "name": "_sc1CertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID for the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1Status",
                        "name": "_sc1Status",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the signing certificate. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls, while \u003ccode\u003eInactive\u003c/code\u003e means it is not.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "sc1UploadDate",
                        "name": "_sc1UploadDate",
                        "shape": "dateType",
                        "locationName": "UploadDate",
                        "documentation": "\u003cp\u003eThe date when the signing certificate was uploaded.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "sc1UserName",
                        "name": "_sc1UserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "fieldPad": 15,
                "ctor": "accessKeyMetadata",
                "contents": [],
                "payload": null,
                "required": [],
                "contentPad": 0,
                "name": "AccessKeyMetadata",
                "type": "record",
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmUserName",
                        "name": "_akmUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the IAM user that the key is associated with.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmAccessKeyId",
                        "name": "_akmAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe ID for this access key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmStatus",
                        "name": "_akmStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the access key. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls; \u003ccode\u003eInactive\u003c/code\u003e means it is not.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmCreateDate",
                        "name": "_akmCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the access key was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmAccessKeyId",
                        "name": "_akmAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe ID for this access key.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmCreateDate",
                        "name": "_akmCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date when the access key was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmStatus",
                        "name": "_akmStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003eThe status of the access key. \u003ccode\u003eActive\u003c/code\u003e means the key is valid for API calls; \u003ccode\u003eInactive\u003c/code\u003e means it is not.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "akmUserName",
                        "name": "_akmUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the IAM user that the key is associated with.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        ],
        "imports": []
    },
    "operations": [
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addClientIDToOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddClientIDToOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddClientIDToOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.AddClientIDToOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddClientIDToOpenIDConnectProvider",
            "method": "post",
            "documentation": "\u003cp\u003eAdds a new client ID (also known as audience) to the list of client IDs already registered for the specified IAM OpenID Connect provider.\u003c/p\u003e \u003cp\u003eThis action is idempotent; it does not fail or return an error if you add an existing client ID to the provider.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "addClientIDToOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "acidtoidcpOpenIDConnectProviderArn",
                        "name": "_acidtoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to add the client ID to. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "acidtoidcpClientID",
                        "name": "_acidtoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "\u003cp\u003eThe client ID (also known as audience) to add to the IAM OpenID Connect provider.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "AddClientIDToOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_acidtoidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_acidtoidcpClientID",
                        "locationName": "ClientID",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "acidtoidcpClientID",
                        "name": "_acidtoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "\u003cp\u003eThe client ID (also known as audience) to add to the IAM OpenID Connect provider.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "acidtoidcpOpenIDConnectProviderArn",
                        "name": "_acidtoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to add the client ID to. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addRoleToInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddRoleToInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddRoleToInstanceProfile.html",
            "namespace": "Network.AWS.IAM.AddRoleToInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddRoleToInstanceProfile",
            "method": "post",
            "documentation": "\u003cp\u003eAdds the specified role to the specified instance profile. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "addRoleToInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artipInstanceProfileName",
                        "name": "_artipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artipRoleName",
                        "name": "_artipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to add.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "AddRoleToInstanceProfile",
                "query": [
                    {
                        "field": "_artipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_artipRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artipInstanceProfileName",
                        "name": "_artipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "artipRoleName",
                        "name": "_artipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to add.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "addUserToGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "AddUserToGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_AddUserToGroup.html",
            "namespace": "Network.AWS.IAM.AddUserToGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "AddUserToGroup",
            "method": "post",
            "documentation": "\u003cp\u003eAdds the specified user to the specified group.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "addUserToGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "autgGroupName",
                        "name": "_autgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "autgUserName",
                        "name": "_autgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to add.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "AddUserToGroup",
                "query": [
                    {
                        "field": "_autgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_autgUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "autgGroupName",
                        "name": "_autgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "autgUserName",
                        "name": "_autgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to add.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "changePasswordResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ChangePasswordResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ChangePassword.html",
            "namespace": "Network.AWS.IAM.ChangePassword",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ChangePassword",
            "method": "post",
            "documentation": "\u003cp\u003eChanges the password of the IAM user who is calling this action. The root account password is not affected by this action. \u003c/p\u003e \u003cp\u003eTo change the password for a different user, see \u003ca\u003eUpdateLoginProfile\u003c/a\u003e. For more information about modifying passwords, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\"\u003eManaging Passwords\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "changePassword",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpOldPassword",
                        "name": "_cpOldPassword",
                        "shape": "passwordType",
                        "locationName": "OldPassword",
                        "documentation": "\u003cp\u003eThe IAM user's current password.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpNewPassword",
                        "name": "_cpNewPassword",
                        "shape": "passwordType",
                        "locationName": "NewPassword",
                        "documentation": "\u003cp\u003eThe new password. The new password must conform to the AWS account's password policy, if one exists.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "ChangePassword",
                "query": [
                    {
                        "field": "_cpOldPassword",
                        "locationName": "OldPassword",
                        "type": "field"
                    },
                    {
                        "field": "_cpNewPassword",
                        "locationName": "NewPassword",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpNewPassword",
                        "name": "_cpNewPassword",
                        "shape": "passwordType",
                        "locationName": "NewPassword",
                        "documentation": "\u003cp\u003eThe new password. The new password must conform to the AWS account's password policy, if one exists.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cpOldPassword",
                        "name": "_cpOldPassword",
                        "shape": "passwordType",
                        "locationName": "OldPassword",
                        "documentation": "\u003cp\u003eThe IAM user's current password.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createAccessKeyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cakrAccessKey",
                    "name": "_cakrAccessKey",
                    "shape": "AccessKey",
                    "locationName": "AccessKey",
                    "documentation": "\u003cp\u003eInformation about the access key.\u003c/p\u003e",
                    "typeExposed": "AccessKey",
                    "type": "AccessKey"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cakrAccessKey",
                        "name": "_cakrAccessKey",
                        "shape": "AccessKey",
                        "locationName": "AccessKey",
                        "documentation": "\u003cp\u003eInformation about the access key.\u003c/p\u003e",
                        "typeExposed": "AccessKey",
                        "type": "AccessKey"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateAccessKeyResponse",
                "resultWrapper": "CreateAccessKeyResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cakrAccessKey",
                        "name": "_cakrAccessKey",
                        "shape": "AccessKey",
                        "locationName": "AccessKey",
                        "documentation": "\u003cp\u003eInformation about the access key.\u003c/p\u003e",
                        "typeExposed": "AccessKey",
                        "type": "AccessKey"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccessKey.html",
            "namespace": "Network.AWS.IAM.CreateAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateAccessKey",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new AWS secret access key and corresponding AWS access key ID for the specified user. The default status for new keys is \u003ccode\u003eActive\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e \u003cp\u003e For information about limits on the number of keys you can create, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cimportant\u003e To ensure the security of your AWS account, the secret access key is accessible only during key and user creation. You must save the key (for example, in a text file) if you want to be able to access it again. If a secret key is lost, you can delete the access keys for the associated user and then create new keys. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createAccessKey",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "cakUserName",
                    "name": "_cakUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "\u003cp\u003eThe user name that the new key will belong to.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "CreateAccessKey",
                "query": [
                    {
                        "field": "_cakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cakUserName",
                        "name": "_cakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user name that the new key will belong to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cakUserName",
                        "name": "_cakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user name that the new key will belong to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "createAccountAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "CreateAccountAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateAccountAlias.html",
            "namespace": "Network.AWS.IAM.CreateAccountAlias",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateAccountAlias",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an alias for your AWS account. For information about using an AWS account alias, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\"\u003eUsing an Alias for Your AWS Account ID\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "createAccountAlias",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "caaAccountAlias",
                    "name": "_caaAccountAlias",
                    "shape": "accountAliasType",
                    "locationName": "AccountAlias",
                    "documentation": "\u003cp\u003eThe name of the account alias to create.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "caaAccountAlias",
                        "name": "_caaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "\u003cp\u003eThe name of the account alias to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "CreateAccountAlias",
                "query": [
                    {
                        "field": "_caaAccountAlias",
                        "locationName": "AccountAlias",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "caaAccountAlias",
                        "name": "_caaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "\u003cp\u003eThe name of the account alias to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createGroupResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cgrGroup",
                    "name": "_cgrGroup",
                    "shape": "Group",
                    "locationName": "Group",
                    "documentation": "\u003cp\u003eInformation about the group.\u003c/p\u003e",
                    "typeExposed": "Group",
                    "type": "Group"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cgrGroup",
                        "name": "_cgrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "\u003cp\u003eInformation about the group.\u003c/p\u003e",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateGroupResponse",
                "resultWrapper": "CreateGroupResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cgrGroup",
                        "name": "_cgrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "\u003cp\u003eInformation about the group.\u003c/p\u003e",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateGroup.html",
            "namespace": "Network.AWS.IAM.CreateGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateGroup",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a new group.\u003c/p\u003e \u003cp\u003e For information about the number of groups you can create, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "createGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cgGroupName",
                        "name": "_cgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to create. Do not include the path in this value.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "CreateGroup",
                "query": [
                    {
                        "field": "_cgPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgPath",
                        "name": "_cgPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the group. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cgGroupName",
                        "name": "_cgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to create. Do not include the path in this value.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cgPath",
                        "name": "_cgPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the group. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createInstanceProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "ciprInstanceProfile",
                    "name": "_ciprInstanceProfile",
                    "shape": "InstanceProfile",
                    "locationName": "InstanceProfile",
                    "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                    "typeExposed": "InstanceProfile",
                    "type": "InstanceProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciprInstanceProfile",
                        "name": "_ciprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateInstanceProfileResponse",
                "resultWrapper": "CreateInstanceProfileResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ciprInstanceProfile",
                        "name": "_ciprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateInstanceProfile.html",
            "namespace": "Network.AWS.IAM.CreateInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateInstanceProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new instance profile. For information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e For information about the number of instance profiles you can create, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "createInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cipInstanceProfileName",
                        "name": "_cipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "CreateInstanceProfile",
                "query": [
                    {
                        "field": "_cipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_cipPath",
                        "locationName": "Path",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cipPath",
                        "name": "_cipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the instance profile. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cipInstanceProfileName",
                        "name": "_cipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cipPath",
                        "name": "_cipPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the instance profile. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createLoginProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "clprLoginProfile",
                    "name": "_clprLoginProfile",
                    "shape": "LoginProfile",
                    "locationName": "LoginProfile",
                    "documentation": "\u003cp\u003eThe user name and password create date.\u003c/p\u003e",
                    "typeExposed": "LoginProfile",
                    "type": "LoginProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clprLoginProfile",
                        "name": "_clprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "\u003cp\u003eThe user name and password create date.\u003c/p\u003e",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateLoginProfileResponse",
                "resultWrapper": "CreateLoginProfileResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clprLoginProfile",
                        "name": "_clprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "\u003cp\u003eThe user name and password create date.\u003c/p\u003e",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateLoginProfile.html",
            "namespace": "Network.AWS.IAM.CreateLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateLoginProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a password for the specified user, giving the user the ability to access AWS services through the AWS Management Console. For more information about managing passwords, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\"\u003eManaging Passwords\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "createLoginProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clpUserName",
                        "name": "_clpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to create a password for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clpPassword",
                        "name": "_clpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "\u003cp\u003eThe new password for the user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "CreateLoginProfile",
                "query": [
                    {
                        "field": "_clpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_clpPassword",
                        "locationName": "Password",
                        "type": "field"
                    },
                    {
                        "field": "_clpPasswordResetRequired",
                        "locationName": "PasswordResetRequired",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "clpPasswordResetRequired",
                        "name": "_clpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003e Specifies whether the user is required to set a new password on next sign-in. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clpPassword",
                        "name": "_clpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "\u003cp\u003eThe new password for the user.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "clpPasswordResetRequired",
                        "name": "_clpPasswordResetRequired",
                        "shape": "booleanType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003e Specifies whether the user is required to set a new password on next sign-in. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "clpUserName",
                        "name": "_clpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to create a password for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createOpenIDConnectProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "coidcprOpenIDConnectProviderArn",
                    "name": "_coidcprOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was created. For more information, see \u003ca\u003eOpenIDConnectProviderListEntry\u003c/a\u003e. \u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateOpenIDConnectProviderResponse",
                "resultWrapper": "CreateOpenIDConnectProviderResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "coidcprOpenIDConnectProviderArn",
                        "name": "_coidcprOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was created. For more information, see \u003ca\u003eOpenIDConnectProviderListEntry\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "coidcprOpenIDConnectProviderArn",
                        "name": "_coidcprOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider that was created. For more information, see \u003ca\u003eOpenIDConnectProviderListEntry\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.CreateOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateOpenIDConnectProvider",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an IAM entity to describe an identity provider (IdP) that supports \u003ca href=\"http://openid.net/connect/\"\u003eOpenID Connect (OIDC)\u003c/a\u003e. \u003c/p\u003e \u003cp\u003eThe OIDC provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and the OIDC provider. \u003c/p\u003e \u003cp\u003eWhen you create the IAM OIDC provider, you specify the URL of the OIDC identity provider (IdP) to trust, a list of client IDs (also known as audiences) that identify the application or applications that are allowed to authenticate using the OIDC provider, and a list of thumbprints of the server certificate(s) that the IdP uses. You get all of this information from the OIDC IdP that you want to use for access to AWS. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 21,
                "ctor": "createOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "coidcpUrl",
                        "name": "_coidcpUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "\u003cp\u003eThe URL of the identity provider. The URL must begin with \"https://\" and should correspond to the \u003ccode\u003eiss\u003c/code\u003e claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a host name, like \"https://server.example.org\" or \"https://example.com\". \u003c/p\u003e \u003cp\u003eYou cannot register the same provider multiple times in a single AWS account. If you try to submit a URL that has already been used for an OpenID Connect provider in the AWS account, you will get an error. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "CreateOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_coidcpUrl",
                        "locationName": "Url",
                        "type": "field"
                    },
                    {
                        "field": "_coidcpClientIDList",
                        "locationName": "ClientIDList",
                        "type": "field"
                    },
                    {
                        "field": "_coidcpThumbprintList",
                        "locationName": "ThumbprintList",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "coidcpClientIDList",
                        "name": "_coidcpClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "\u003cp\u003eA list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the \u003ccode\u003eclient_id\u003c/code\u003e parameter on OAuth requests.) \u003c/p\u003e \u003cp\u003eYou can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider. \u003c/p\u003e \u003cp\u003eThere is no defined format for a client ID. The \u003ccode\u003eCreateOpenIDConnectProviderRequest\u003c/code\u003e action accepts client IDs up to 255 characters long. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "coidcpThumbprintList",
                        "name": "_coidcpThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s). Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.\u003c/p\u003e \u003cp\u003eThe server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string. \u003c/p\u003e \u003cp\u003eYou must provide at least one thumbprint when creating an IAM OIDC provider. For example, if the OIDC provider is \u003ccode\u003eserver.example.com\u003c/code\u003e and the provider stores its keys at \"https://keys.server.example.com/openid-connect\", the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "coidcpClientIDList",
                        "name": "_coidcpClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "\u003cp\u003eA list of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the \u003ccode\u003eclient_id\u003c/code\u003e parameter on OAuth requests.) \u003c/p\u003e \u003cp\u003eYou can register multiple client IDs with the same provider. For example, you might have multiple applications that use the same OIDC provider. You cannot register more than 100 client IDs with a single IAM OIDC provider. \u003c/p\u003e \u003cp\u003eThere is no defined format for a client ID. The \u003ccode\u003eCreateOpenIDConnectProviderRequest\u003c/code\u003e action accepts client IDs up to 255 characters long. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "coidcpThumbprintList",
                        "name": "_coidcpThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s). Typically this list includes only one entry. However, IAM lets you have up to five thumbprints for an OIDC provider. This lets you maintain multiple thumbprints if the identity provider is rotating certificates.\u003c/p\u003e \u003cp\u003eThe server certificate thumbprint is the hex-encoded SHA-1 hash value of the X.509 certificate used by the domain where the OpenID Connect provider makes its keys available. It is always a 40-character string. \u003c/p\u003e \u003cp\u003eYou must provide at least one thumbprint when creating an IAM OIDC provider. For example, if the OIDC provider is \u003ccode\u003eserver.example.com\u003c/code\u003e and the provider stores its keys at \"https://keys.server.example.com/openid-connect\", the thumbprint string would be the hex-encoded SHA-1 hash value of the certificate used by https://keys.server.example.com. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "coidcpUrl",
                        "name": "_coidcpUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "\u003cp\u003eThe URL of the identity provider. The URL must begin with \"https://\" and should correspond to the \u003ccode\u003eiss\u003c/code\u003e claim in the provider's OpenID Connect ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a host name, like \"https://server.example.org\" or \"https://example.com\". \u003c/p\u003e \u003cp\u003eYou cannot register the same provider multiple times in a single AWS account. If you try to submit a URL that has already been used for an OpenID Connect provider in the AWS account, you will get an error. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createRoleResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "crrRole",
                    "name": "_crrRole",
                    "shape": "Role",
                    "locationName": "Role",
                    "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                    "typeExposed": "Role",
                    "type": "Role"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrRole",
                        "name": "_crrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateRoleResponse",
                "resultWrapper": "CreateRoleResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crrRole",
                        "name": "_crrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateRole.html",
            "namespace": "Network.AWS.IAM.CreateRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateRole",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new role for your AWS account. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. For information about limitations on role names and the number of roles you can create, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e The example policy grants permission to an EC2 instance to assume the role. The policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crRoleName",
                        "name": "_crRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crAssumeRolePolicyDocument",
                        "name": "_crAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "CreateRole",
                "query": [
                    {
                        "field": "_crPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_crRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_crAssumeRolePolicyDocument",
                        "locationName": "AssumeRolePolicyDocument",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crPath",
                        "name": "_crPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the role. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crAssumeRolePolicyDocument",
                        "name": "_crAssumeRolePolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "AssumeRolePolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "crPath",
                        "name": "_crPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path to the role. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "crRoleName",
                        "name": "_crRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createSAMLProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "csamlprSAMLProviderArn",
                    "name": "_csamlprSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateSAMLProviderResponse",
                "resultWrapper": "CreateSAMLProviderResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csamlprSAMLProviderArn",
                        "name": "_csamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "csamlprSAMLProviderArn",
                        "name": "_csamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateSAMLProvider.html",
            "namespace": "Network.AWS.IAM.CreateSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateSAMLProvider",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an IAM entity to describe an identity provider (IdP) that supports SAML 2.0.\u003c/p\u003e \u003cp\u003e The SAML provider that you create with this operation can be used as a principal in a role's trust policy to establish a trust relationship between AWS and a SAML identity provider. You can create an IAM role that supports Web-based single sign-on (SSO) to the AWS Management Console or one that supports API access to AWS. \u003c/p\u003e \u003cp\u003e When you create the SAML provider, you upload an a SAML metadata document that you get from your IdP and that includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. \u003c/p\u003e \u003cp\u003e For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/STSMgmtConsole-SAML.html\"\u003eGiving Console Access Using SAML\u003c/a\u003e and \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\"\u003eCreating Temporary Security Credentials for SAML Federation\u003c/a\u003e in the \u003ci\u003eUsing Temporary Credentials\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createSAMLProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csamlpSAMLMetadataDocument",
                        "name": "_csamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003e An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. \u003c/p\u003e \u003cp\u003e For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\"\u003eCreating Temporary Security Credentials for SAML Federation\u003c/a\u003e in the \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csamlpName",
                        "name": "_csamlpName",
                        "shape": "SAMLProviderNameType",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the provider to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateSAMLProvider",
                "query": [
                    {
                        "field": "_csamlpSAMLMetadataDocument",
                        "locationName": "SAMLMetadataDocument",
                        "type": "field"
                    },
                    {
                        "field": "_csamlpName",
                        "locationName": "Name",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csamlpName",
                        "name": "_csamlpName",
                        "shape": "SAMLProviderNameType",
                        "locationName": "Name",
                        "documentation": "\u003cp\u003eThe name of the provider to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "csamlpSAMLMetadataDocument",
                        "name": "_csamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003e An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. \u003c/p\u003e \u003cp\u003e For more information, see \u003ca href=\"http://docs.aws.amazon.com/STS/latest/UsingSTS/CreatingSAML.html\"\u003eCreating Temporary Security Credentials for SAML Federation\u003c/a\u003e in the \u003ci\u003eUsing Temporary Security Credentials\u003c/i\u003e guide. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createUserResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "curUser",
                    "name": "_curUser",
                    "shape": "User",
                    "locationName": "User",
                    "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                    "typeExposed": "Maybe User",
                    "type": "Maybe User"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateUserResponse",
                "resultWrapper": "CreateUserResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "curUser",
                        "name": "_curUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "curUser",
                        "name": "_curUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                        "typeExposed": "Maybe User",
                        "type": "Maybe User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateUser.html",
            "namespace": "Network.AWS.IAM.CreateUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateUser",
            "method": "post",
            "documentation": "\u003cp\u003eCreates a new user for your AWS account.\u003c/p\u003e \u003cp\u003e For information about limitations on the number of users you can create, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 11,
                "ctor": "createUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cuUserName",
                        "name": "_cuUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "CreateUser",
                "query": [
                    {
                        "field": "_cuPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cuPath",
                        "name": "_cuPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the user name. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cuPath",
                        "name": "_cuPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the user name. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cuUserName",
                        "name": "_cuUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to create.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createVirtualMFADeviceResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "cvmfadrVirtualMFADevice",
                    "name": "_cvmfadrVirtualMFADevice",
                    "shape": "VirtualMFADevice",
                    "locationName": "VirtualMFADevice",
                    "documentation": "\u003cp\u003eA newly created virtual MFA device.\u003c/p\u003e",
                    "typeExposed": "VirtualMFADevice",
                    "type": "VirtualMFADevice"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvmfadrVirtualMFADevice",
                        "name": "_cvmfadrVirtualMFADevice",
                        "shape": "VirtualMFADevice",
                        "locationName": "VirtualMFADevice",
                        "documentation": "\u003cp\u003eA newly created virtual MFA device.\u003c/p\u003e",
                        "typeExposed": "VirtualMFADevice",
                        "type": "VirtualMFADevice"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "CreateVirtualMFADeviceResponse",
                "resultWrapper": "CreateVirtualMFADeviceResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvmfadrVirtualMFADevice",
                        "name": "_cvmfadrVirtualMFADevice",
                        "shape": "VirtualMFADevice",
                        "locationName": "VirtualMFADevice",
                        "documentation": "\u003cp\u003eA newly created virtual MFA device.\u003c/p\u003e",
                        "typeExposed": "VirtualMFADevice",
                        "type": "VirtualMFADevice"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_CreateVirtualMFADevice.html",
            "namespace": "Network.AWS.IAM.CreateVirtualMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "CreateVirtualMFADevice",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new virtual MFA device for the AWS account. After creating the virtual MFA, use \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html\"\u003eEnableMFADevice\u003c/a\u003e to attach the MFA device to an IAM user. For more information about creating and working with virtual MFA devices, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\"\u003eUsing a Virtual MFA Device\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e For information about limits on the number of MFA devices you can create, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cimportant\u003e The seed information contained in the QR code and the Base32 string should be treated like any other secret access information, such as your AWS access keys or your passwords. After you provision your virtual device, you should ensure that the information is destroyed following secure procedures. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "createVirtualMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvmfadVirtualMFADeviceName",
                        "name": "_cvmfadVirtualMFADeviceName",
                        "shape": "virtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "documentation": "\u003cp\u003e The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "CreateVirtualMFADevice",
                "query": [
                    {
                        "field": "_cvmfadPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_cvmfadVirtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvmfadPath",
                        "name": "_cvmfadPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the virtual MFA device. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "cvmfadPath",
                        "name": "_cvmfadPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the virtual MFA device. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "cvmfadVirtualMFADeviceName",
                        "name": "_cvmfadVirtualMFADeviceName",
                        "shape": "virtualMFADeviceName",
                        "locationName": "VirtualMFADeviceName",
                        "documentation": "\u003cp\u003e The name of the virtual MFA device. Use with path to uniquely identify a virtual MFA device. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deactivateMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeactivateMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeactivateMFADevice.html",
            "namespace": "Network.AWS.IAM.DeactivateMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeactivateMFADevice",
            "method": "post",
            "documentation": "\u003cp\u003eDeactivates the specified MFA device and removes it from association with the user name for which it was originally enabled. \u003c/p\u003e \u003cp\u003eFor more information about creating and working with virtual MFA devices, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\"\u003eUsing a Virtual MFA Device\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "deactivateMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dmfadUserName",
                        "name": "_dmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA device you want to deactivate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dmfadSerialNumber",
                        "name": "_dmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeactivateMFADevice",
                "query": [
                    {
                        "field": "_dmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dmfadSerialNumber",
                        "name": "_dmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dmfadUserName",
                        "name": "_dmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA device you want to deactivate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccessKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccessKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccessKey.html",
            "namespace": "Network.AWS.IAM.DeleteAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccessKey",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the access key associated with the specified user.\u003c/p\u003e \u003cp\u003e If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "deleteAccessKey",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dakAccessKeyId",
                        "name": "_dakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID for the access key ID and secret access key you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "DeleteAccessKey",
                "query": [
                    {
                        "field": "_dakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dakAccessKeyId",
                        "locationName": "AccessKeyId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dakUserName",
                        "name": "_dakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose key you want to delete.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dakAccessKeyId",
                        "name": "_dakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID for the access key ID and secret access key you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dakUserName",
                        "name": "_dakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose key you want to delete.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccountAliasResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccountAliasResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountAlias.html",
            "namespace": "Network.AWS.IAM.DeleteAccountAlias",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccountAlias",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified AWS account alias. For information about using an AWS account alias, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\"\u003eUsing an Alias for Your AWS Account ID\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteAccountAlias",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "daaAccountAlias",
                    "name": "_daaAccountAlias",
                    "shape": "accountAliasType",
                    "locationName": "AccountAlias",
                    "documentation": "\u003cp\u003eThe name of the account alias to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "daaAccountAlias",
                        "name": "_daaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "\u003cp\u003eThe name of the account alias to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteAccountAlias",
                "query": [
                    {
                        "field": "_daaAccountAlias",
                        "locationName": "AccountAlias",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "daaAccountAlias",
                        "name": "_daaAccountAlias",
                        "shape": "accountAliasType",
                        "locationName": "AccountAlias",
                        "documentation": "\u003cp\u003eThe name of the account alias to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteAccountPasswordPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteAccountPasswordPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteAccountPasswordPolicy",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the password policy for the AWS account.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteAccountPasswordPolicy",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "DeleteAccountPasswordPolicy",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroup.html",
            "namespace": "Network.AWS.IAM.DeleteGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified group. The group must not contain any users or have any attached policies. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteGroup",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dgGroupName",
                    "name": "_dgGroupName",
                    "shape": "groupNameType",
                    "locationName": "GroupName",
                    "documentation": "\u003cp\u003eThe name of the group to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgGroupName",
                        "name": "_dgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "DeleteGroup",
                "query": [
                    {
                        "field": "_dgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgGroupName",
                        "name": "_dgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteGroupPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteGroupPolicy",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified policy that is associated with the specified group.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "deleteGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgpGroupName",
                        "name": "_dgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgpPolicyName",
                        "name": "_dgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteGroupPolicy",
                "query": [
                    {
                        "field": "_dgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_dgpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgpGroupName",
                        "name": "_dgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dgpPolicyName",
                        "name": "_dgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteInstanceProfile.html",
            "namespace": "Network.AWS.IAM.DeleteInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteInstanceProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified instance profile. The instance profile must not have an associated role. \u003c/p\u003e \u003cimportant\u003e Make sure you do not have any Amazon EC2 instances running with the instance profile you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. \u003c/important\u003e \u003cp\u003e For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteInstanceProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dipInstanceProfileName",
                    "name": "_dipInstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "locationName": "InstanceProfileName",
                    "documentation": "\u003cp\u003eThe name of the instance profile to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dipInstanceProfileName",
                        "name": "_dipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "DeleteInstanceProfile",
                "query": [
                    {
                        "field": "_dipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dipInstanceProfileName",
                        "name": "_dipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteLoginProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteLoginProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteLoginProfile.html",
            "namespace": "Network.AWS.IAM.DeleteLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteLoginProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the password for the specified user, which terminates the user's ability to access AWS services through the AWS Management Console. \u003c/p\u003e \u003cimportant\u003e Deleting a user's password does not prevent a user from accessing IAM through the command line interface or the API. To prevent all user access you must also either make the access key inactive or delete it. For more information about making keys inactive or deleting them, see \u003ca\u003eUpdateAccessKey\u003c/a\u003e and \u003ca\u003eDeleteAccessKey\u003c/a\u003e. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteLoginProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dlpUserName",
                    "name": "_dlpUserName",
                    "shape": "userNameType",
                    "locationName": "UserName",
                    "documentation": "\u003cp\u003eThe name of the user whose password you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dlpUserName",
                        "name": "_dlpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose password you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteLoginProfile",
                "query": [
                    {
                        "field": "_dlpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dlpUserName",
                        "name": "_dlpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose password you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.DeleteOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteOpenIDConnectProvider",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes an IAM OpenID Connect identity provider.\u003c/p\u003e \u003cp\u003eDeleting an OIDC provider does not update any roles that reference the provider as a principal in their trust policies. Any attempt to assume a role that references a provider that has been deleted will fail. \u003c/p\u003e \u003cp\u003eThis action is idempotent; it does not fail or return an error if you call the action for a provider that was already deleted.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteOpenIDConnectProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "doidcpOpenIDConnectProviderArn",
                    "name": "_doidcpOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete. You can get a list of OpenID Connect provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "doidcpOpenIDConnectProviderArn",
                        "name": "_doidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete. You can get a list of OpenID Connect provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "DeleteOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_doidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "doidcpOpenIDConnectProviderArn",
                        "name": "_doidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect provider to delete. You can get a list of OpenID Connect provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRoleResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRoleResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRole.html",
            "namespace": "Network.AWS.IAM.DeleteRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteRole",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified role. The role must not have any policies attached. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. \u003c/p\u003e \u003cimportant\u003e Make sure you do not have any Amazon EC2 instances running with the role you are about to delete. Deleting a role or instance profile that is associated with a running instance will break any applications running on the instance. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteRole",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "drRoleName",
                    "name": "_drRoleName",
                    "shape": "roleNameType",
                    "locationName": "RoleName",
                    "documentation": "\u003cp\u003eThe name of the role to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drRoleName",
                        "name": "_drRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteRole",
                "query": [
                    {
                        "field": "_drRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drRoleName",
                        "name": "_drRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteRolePolicy.html",
            "namespace": "Network.AWS.IAM.DeleteRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteRolePolicy",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified policy associated with the specified role.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "deleteRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drpRoleName",
                        "name": "_drpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role the associated with the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drpPolicyName",
                        "name": "_drpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteRolePolicy",
                "query": [
                    {
                        "field": "_drpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_drpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drpPolicyName",
                        "name": "_drpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "drpRoleName",
                        "name": "_drpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role the associated with the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSAMLProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSAMLProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSAMLProvider.html",
            "namespace": "Network.AWS.IAM.DeleteSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteSAMLProvider",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a SAML provider.\u003c/p\u003e \u003cp\u003e Deleting the provider does not update any roles that reference the SAML provider as a principal in their trust policies. Any attempt to assume a role that references a SAML provider that has been deleted will fail. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteSAMLProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dsamlpSAMLProviderArn",
                    "name": "_dsamlpSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsamlpSAMLProviderArn",
                        "name": "_dsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "DeleteSAMLProvider",
                "query": [
                    {
                        "field": "_dsamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dsamlpSAMLProviderArn",
                        "name": "_dsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteServerCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteServerCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteServerCertificate.html",
            "namespace": "Network.AWS.IAM.DeleteServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteServerCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified server certificate.\u003c/p\u003e \u003cimportant\u003e If you are using a server certificate with Elastic Load Balancing, deleting the certificate could have implications for your application. If Elastic Load Balancing doesn't detect the deletion of bound certificates, it may continue to use the certificates. This could cause Elastic Load Balancing to stop accepting traffic. We recommend that you remove the reference to the certificate from Elastic Load Balancing before using this command to delete the certificate. For more information, go to \u003ca href=\"http://docs.aws.amazon.com/ElasticLoadBalancing/latest/APIReference/API_DeleteLoadBalancerListeners.html\" target=\"blank\"\u003eDeleteLoadBalancerListeners\u003c/a\u003e in the \u003ci\u003eElastic Load Balancing API Reference\u003c/i\u003e. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteServerCertificate",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dscServerCertificateName",
                    "name": "_dscServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "locationName": "ServerCertificateName",
                    "documentation": "\u003cp\u003eThe name of the server certificate you want to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dscServerCertificateName",
                        "name": "_dscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "DeleteServerCertificate",
                "query": [
                    {
                        "field": "_dscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dscServerCertificateName",
                        "name": "_dscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate you want to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteSigningCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteSigningCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteSigningCertificate.html",
            "namespace": "Network.AWS.IAM.DeleteSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteSigningCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified signing certificate associated with the specified user.\u003c/p\u003e \u003cp\u003e If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "deleteSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dscCertificateId",
                        "name": "_dscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID of the signing certificate to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "DeleteSigningCertificate",
                "query": [
                    {
                        "field": "_dscUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dscCertificateId",
                        "locationName": "CertificateId",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dscUserName",
                        "name": "_dscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate belongs to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dscCertificateId",
                        "name": "_dscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID of the signing certificate to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "dscUserName",
                        "name": "_dscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate belongs to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteUserResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteUserResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUser.html",
            "namespace": "Network.AWS.IAM.DeleteUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteUser",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes the specified user. The user must not belong to any groups, have any keys or signing certificates, or have any attached policies. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteUser",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "duUserName",
                    "name": "_duUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "\u003cp\u003eThe name of the user to delete.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "duUserName",
                        "name": "_duUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "DeleteUser",
                "query": [
                    {
                        "field": "_duUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "duUserName",
                        "name": "_duUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteUserPolicy.html",
            "namespace": "Network.AWS.IAM.DeleteUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteUserPolicy",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes the specified policy associated with the specified user.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "deleteUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dupUserName",
                        "name": "_dupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dupPolicyName",
                        "name": "_dupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "DeleteUserPolicy",
                "query": [
                    {
                        "field": "_dupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_dupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dupPolicyName",
                        "name": "_dupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to delete.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dupUserName",
                        "name": "_dupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteVirtualMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteVirtualMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_DeleteVirtualMFADevice.html",
            "namespace": "Network.AWS.IAM.DeleteVirtualMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "DeleteVirtualMFADevice",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes a virtual MFA device.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "deleteVirtualMFADevice",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "dvmfadSerialNumber",
                    "name": "_dvmfadSerialNumber",
                    "shape": "serialNumberType",
                    "locationName": "SerialNumber",
                    "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN. \u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvmfadSerialNumber",
                        "name": "_dvmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "DeleteVirtualMFADevice",
                "query": [
                    {
                        "field": "_dvmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "dvmfadSerialNumber",
                        "name": "_dvmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the same as the ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "enableMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "EnableMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_EnableMFADevice.html",
            "namespace": "Network.AWS.IAM.EnableMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "EnableMFADevice",
            "method": "post",
            "documentation": "\u003cp\u003e Enables the specified MFA device and associates it with the specified user name. When enabled, the MFA device is required for every subsequent login by the user name associated with the device. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "enableMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadUserName",
                        "name": "_emfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user for whom you want to enable the MFA device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadSerialNumber",
                        "name": "_emfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadAuthenticationCode1",
                        "name": "_emfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "\u003cp\u003eAn authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadAuthenticationCode2",
                        "name": "_emfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "\u003cp\u003eA subsequent authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "EnableMFADevice",
                "query": [
                    {
                        "field": "_emfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_emfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_emfadAuthenticationCode1",
                        "locationName": "AuthenticationCode1",
                        "type": "field"
                    },
                    {
                        "field": "_emfadAuthenticationCode2",
                        "locationName": "AuthenticationCode2",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadAuthenticationCode1",
                        "name": "_emfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "\u003cp\u003eAn authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadAuthenticationCode2",
                        "name": "_emfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "\u003cp\u003eA subsequent authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadSerialNumber",
                        "name": "_emfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003e The serial number that uniquely identifies the MFA device. For virtual MFA devices, the serial number is the device ARN. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "emfadUserName",
                        "name": "_emfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user for whom you want to enable the MFA device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "generateCredentialReportResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GenerateCredentialReportResponse",
                "resultWrapper": "GenerateCredentialReportResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrState",
                        "name": "_gcrrState",
                        "shape": "ReportStateType",
                        "locationName": "State",
                        "documentation": "\u003cp\u003eInformation about the state of a credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrDescription",
                        "name": "_gcrrDescription",
                        "shape": "ReportStateDescriptionType",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eInformation about the credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrDescription",
                        "name": "_gcrrDescription",
                        "shape": "ReportStateDescriptionType",
                        "locationName": "Description",
                        "documentation": "\u003cp\u003eInformation about the credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrState",
                        "name": "_gcrrState",
                        "shape": "ReportStateType",
                        "locationName": "State",
                        "documentation": "\u003cp\u003eInformation about the state of a credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GenerateCredentialReport.html",
            "namespace": "Network.AWS.IAM.GenerateCredentialReport",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GenerateCredentialReport",
            "method": "post",
            "documentation": "\u003cp\u003e Generates a credential report for the AWS account. For more information about the credential report, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\"\u003eGetting Credential Reports\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "generateCredentialReport",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GenerateCredentialReport",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getAccountPasswordPolicyResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gapprPasswordPolicy",
                    "name": "_gapprPasswordPolicy",
                    "shape": "PasswordPolicy",
                    "locationName": "PasswordPolicy",
                    "documentation": null,
                    "typeExposed": "PasswordPolicy",
                    "type": "PasswordPolicy"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gapprPasswordPolicy",
                        "name": "_gapprPasswordPolicy",
                        "shape": "PasswordPolicy",
                        "locationName": "PasswordPolicy",
                        "documentation": null,
                        "typeExposed": "PasswordPolicy",
                        "type": "PasswordPolicy"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetAccountPasswordPolicyResponse",
                "resultWrapper": "GetAccountPasswordPolicyResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gapprPasswordPolicy",
                        "name": "_gapprPasswordPolicy",
                        "shape": "PasswordPolicy",
                        "locationName": "PasswordPolicy",
                        "documentation": null,
                        "typeExposed": "PasswordPolicy",
                        "type": "PasswordPolicy"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.GetAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetAccountPasswordPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves the password policy for the AWS account. For more information about using a password policy, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\"\u003eManaging an IAM Password Policy\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getAccountPasswordPolicy",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetAccountPasswordPolicy",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getAccountSummaryResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": "_Map",
                    "lensMapping": "_Map",
                    "default": "mempty",
                    "required": true,
                    "lens": "gasrSummaryMap",
                    "name": "_gasrSummaryMap",
                    "shape": "summaryMapType",
                    "locationName": "SummaryMap",
                    "documentation": "\u003cp\u003eA set of key value pairs containing account-level information.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSummaryMap\u003c/code\u003e contains the following keys: \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccessKeysPerUserQuota\u003c/code\u003e - Maximum number of access keys that can be created per user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccountMFAEnabled\u003c/code\u003e - 1 if the root account has an MFA device assigned to it, 0 otherwise\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAssumeRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for assume role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupPolicySizeQuota\u003c/code\u003e - Maximum allowed size for Group policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroups\u003c/code\u003e - Number of Groups for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsPerUserQuota\u003c/code\u003e - Maximum number of groups an IAM user can belong to\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsQuota\u003c/code\u003e - Maximum groups allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfiles\u003c/code\u003e - Number of instance profiles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfilesQuota\u003c/code\u003e - Maximum instance profiles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevices\u003c/code\u003e - Number of MFA devices, either assigned or unassigned\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevicesInUse\u003c/code\u003e - Number of MFA devices that have been assigned to an IAM user or to the root account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRoles\u003c/code\u003e - Number of roles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolesQuota\u003c/code\u003e - Maximum roles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificates\u003c/code\u003e - Number of server certificates for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificatesQuota\u003c/code\u003e - Maximum server certificates allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eSigningCertificatesPerUserQuota\u003c/code\u003e - Maximum number of X509 certificates allowed for a user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUserPolicySizeQuota\u003c/code\u003e - Maximum allowed size for user policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsers\u003c/code\u003e - Number of users for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsersQuota\u003c/code\u003e - Maximum users allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                    "typeExposed": "HashMap Text Int",
                    "type": "Map Text Int"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetAccountSummaryResponse",
                "resultWrapper": "GetAccountSummaryResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gasrSummaryMap",
                        "name": "_gasrSummaryMap",
                        "shape": "summaryMapType",
                        "locationName": "SummaryMap",
                        "documentation": "\u003cp\u003eA set of key value pairs containing account-level information.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSummaryMap\u003c/code\u003e contains the following keys: \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccessKeysPerUserQuota\u003c/code\u003e - Maximum number of access keys that can be created per user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccountMFAEnabled\u003c/code\u003e - 1 if the root account has an MFA device assigned to it, 0 otherwise\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAssumeRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for assume role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupPolicySizeQuota\u003c/code\u003e - Maximum allowed size for Group policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroups\u003c/code\u003e - Number of Groups for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsPerUserQuota\u003c/code\u003e - Maximum number of groups an IAM user can belong to\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsQuota\u003c/code\u003e - Maximum groups allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfiles\u003c/code\u003e - Number of instance profiles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfilesQuota\u003c/code\u003e - Maximum instance profiles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevices\u003c/code\u003e - Number of MFA devices, either assigned or unassigned\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevicesInUse\u003c/code\u003e - Number of MFA devices that have been assigned to an IAM user or to the root account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRoles\u003c/code\u003e - Number of roles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolesQuota\u003c/code\u003e - Maximum roles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificates\u003c/code\u003e - Number of server certificates for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificatesQuota\u003c/code\u003e - Maximum server certificates allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eSigningCertificatesPerUserQuota\u003c/code\u003e - Maximum number of X509 certificates allowed for a user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUserPolicySizeQuota\u003c/code\u003e - Maximum allowed size for user policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsers\u003c/code\u003e - Number of users for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsersQuota\u003c/code\u003e - Maximum users allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "HashMap Text Int",
                        "type": "Map Text Int"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": "_Map",
                        "lensMapping": "_Map",
                        "default": "mempty",
                        "required": true,
                        "lens": "gasrSummaryMap",
                        "name": "_gasrSummaryMap",
                        "shape": "summaryMapType",
                        "locationName": "SummaryMap",
                        "documentation": "\u003cp\u003eA set of key value pairs containing account-level information.\u003c/p\u003e \u003cp\u003e \u003ccode\u003eSummaryMap\u003c/code\u003e contains the following keys: \u003cul\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccessKeysPerUserQuota\u003c/code\u003e - Maximum number of access keys that can be created per user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAccountMFAEnabled\u003c/code\u003e - 1 if the root account has an MFA device assigned to it, 0 otherwise\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eAssumeRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for assume role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupPolicySizeQuota\u003c/code\u003e - Maximum allowed size for Group policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroups\u003c/code\u003e - Number of Groups for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsPerUserQuota\u003c/code\u003e - Maximum number of groups an IAM user can belong to\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eGroupsQuota\u003c/code\u003e - Maximum groups allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfiles\u003c/code\u003e - Number of instance profiles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eInstanceProfilesQuota\u003c/code\u003e - Maximum instance profiles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevices\u003c/code\u003e - Number of MFA devices, either assigned or unassigned\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eMFADevicesInUse\u003c/code\u003e - Number of MFA devices that have been assigned to an IAM user or to the root account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolePolicySizeQuota\u003c/code\u003e - Maximum allowed size for role policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRoles\u003c/code\u003e - Number of roles for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eRolesQuota\u003c/code\u003e - Maximum roles allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificates\u003c/code\u003e - Number of server certificates for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eServerCertificatesQuota\u003c/code\u003e - Maximum server certificates allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eSigningCertificatesPerUserQuota\u003c/code\u003e - Maximum number of X509 certificates allowed for a user\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUserPolicySizeQuota\u003c/code\u003e - Maximum allowed size for user policy documents (in kilobytes)\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsers\u003c/code\u003e - Number of users for the AWS account\u003c/p\u003e\u003c/li\u003e \u003cli\u003e\u003cp\u003e\u003ccode\u003eUsersQuota\u003c/code\u003e - Maximum users allowed for the AWS account\u003c/p\u003e\u003c/li\u003e \u003c/ul\u003e \u003c/p\u003e",
                        "typeExposed": "HashMap Text Int",
                        "type": "Map Text Int"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetAccountSummary.html",
            "namespace": "Network.AWS.IAM.GetAccountSummary",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetAccountSummary",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves account level information about account entity usage and IAM quotas.\u003c/p\u003e \u003cp\u003e For information about limitations on IAM entities, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getAccountSummary",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetAccountSummary",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "getCredentialReportResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetCredentialReportResponse",
                "resultWrapper": "GetCredentialReportResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrContent",
                        "name": "_gcrrContent",
                        "shape": "ReportContentType",
                        "locationName": "Content",
                        "documentation": "\u003cp\u003eContains the credential report. The report is Base64-encoded.\u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrReportFormat",
                        "name": "_gcrrReportFormat",
                        "shape": "ReportFormatType",
                        "locationName": "ReportFormat",
                        "documentation": "\u003cp\u003eThe format (MIME type) of the credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrGeneratedTime",
                        "name": "_gcrrGeneratedTime",
                        "shape": "dateType",
                        "locationName": "GeneratedTime",
                        "documentation": "\u003cp\u003e The time and date when the credential report was created, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrContent",
                        "name": "_gcrrContent",
                        "shape": "ReportContentType",
                        "locationName": "Content",
                        "documentation": "\u003cp\u003eContains the credential report. The report is Base64-encoded.\u003c/p\u003e",
                        "typeExposed": "Maybe Base64",
                        "type": "Maybe Base64"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrGeneratedTime",
                        "name": "_gcrrGeneratedTime",
                        "shape": "dateType",
                        "locationName": "GeneratedTime",
                        "documentation": "\u003cp\u003e The time and date when the credential report was created, in \u003ca href=\"http://www.iso.org/iso/iso8601\"\u003eISO 8601 date-time format\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gcrrReportFormat",
                        "name": "_gcrrReportFormat",
                        "shape": "ReportFormatType",
                        "locationName": "ReportFormat",
                        "documentation": "\u003cp\u003eThe format (MIME type) of the credential report.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetCredentialReport.html",
            "namespace": "Network.AWS.IAM.GetCredentialReport",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetCredentialReport",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves a credential report for the AWS account. For more information about the credential report, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/credential-reports.html\"\u003eGetting Credential Reports\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getCredentialReport",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "GetCredentialReport",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "getGroupResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggrGroup",
                        "name": "_ggrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "\u003cp\u003eInformation about the group.\u003c/p\u003e",
                        "typeExposed": "Group",
                        "type": "Group"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetGroupResponse",
                "resultWrapper": "GetGroupResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ggrUsers",
                        "name": "_ggrUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "\u003cp\u003eA list of users in the group.\u003c/p\u003e",
                        "typeExposed": "[User]",
                        "type": "[User]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggrIsTruncated",
                        "name": "_ggrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more user names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggrMarker",
                        "name": "_ggrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If IsTruncated is \u003ccode\u003etrue\u003c/code\u003e, then this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggrGroup",
                        "name": "_ggrGroup",
                        "shape": "Group",
                        "locationName": "Group",
                        "documentation": "\u003cp\u003eInformation about the group.\u003c/p\u003e",
                        "typeExposed": "Group",
                        "type": "Group"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggrIsTruncated",
                        "name": "_ggrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more user names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggrMarker",
                        "name": "_ggrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If IsTruncated is \u003ccode\u003etrue\u003c/code\u003e, then this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "ggrUsers",
                        "name": "_ggrUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "\u003cp\u003eA list of users in the group.\u003c/p\u003e",
                        "typeExposed": "[User]",
                        "type": "[User]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroup.html",
            "namespace": "Network.AWS.IAM.GetGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "ggrIsTruncated",
                "token": {
                    "input": "ggMarker",
                    "output": "ggrMarker"
                },
                "type": "one"
            },
            "name": "GetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of users that are in the specified group. You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "getGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggGroupName",
                        "name": "_ggGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "GetGroup",
                "query": [
                    {
                        "field": "_ggGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ggMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_ggMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggMarker",
                        "name": "_ggMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggMaxItems",
                        "name": "_ggMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggGroupName",
                        "name": "_ggGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggMarker",
                        "name": "_ggMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ggMaxItems",
                        "name": "_ggMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getGroupPolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprGroupName",
                        "name": "_ggprGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprPolicyName",
                        "name": "_ggprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprPolicyDocument",
                        "name": "_ggprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetGroupPolicyResponse",
                "resultWrapper": "GetGroupPolicyResult",
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprGroupName",
                        "name": "_ggprGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprPolicyDocument",
                        "name": "_ggprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggprPolicyName",
                        "name": "_ggprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetGroupPolicy.html",
            "namespace": "Network.AWS.IAM.GetGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetGroupPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves the specified policy document for the specified group. The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggpGroupName",
                        "name": "_ggpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggpPolicyName",
                        "name": "_ggpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetGroupPolicy",
                "query": [
                    {
                        "field": "_ggpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ggpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggpGroupName",
                        "name": "_ggpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ggpPolicyName",
                        "name": "_ggpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getInstanceProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "giprInstanceProfile",
                    "name": "_giprInstanceProfile",
                    "shape": "InstanceProfile",
                    "locationName": "InstanceProfile",
                    "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                    "typeExposed": "InstanceProfile",
                    "type": "InstanceProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "giprInstanceProfile",
                        "name": "_giprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetInstanceProfileResponse",
                "resultWrapper": "GetInstanceProfileResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "giprInstanceProfile",
                        "name": "_giprInstanceProfile",
                        "shape": "InstanceProfile",
                        "locationName": "InstanceProfile",
                        "documentation": "\u003cp\u003eInformation about the instance profile.\u003c/p\u003e",
                        "typeExposed": "InstanceProfile",
                        "type": "InstanceProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetInstanceProfile.html",
            "namespace": "Network.AWS.IAM.GetInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetInstanceProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves information about the specified instance profile, including the instance profile's path, GUID, ARN, and role. For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. For more information about ARNs, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\"\u003eARNs\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getInstanceProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gipInstanceProfileName",
                    "name": "_gipInstanceProfileName",
                    "shape": "instanceProfileNameType",
                    "locationName": "InstanceProfileName",
                    "documentation": "\u003cp\u003eThe name of the instance profile to get information about.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gipInstanceProfileName",
                        "name": "_gipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "GetInstanceProfile",
                "query": [
                    {
                        "field": "_gipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gipInstanceProfileName",
                        "name": "_gipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getLoginProfileResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "glprLoginProfile",
                    "name": "_glprLoginProfile",
                    "shape": "LoginProfile",
                    "locationName": "LoginProfile",
                    "documentation": "\u003cp\u003eThe user name and password create date for the user.\u003c/p\u003e",
                    "typeExposed": "LoginProfile",
                    "type": "LoginProfile"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "glprLoginProfile",
                        "name": "_glprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "\u003cp\u003eThe user name and password create date for the user.\u003c/p\u003e",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetLoginProfileResponse",
                "resultWrapper": "GetLoginProfileResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "glprLoginProfile",
                        "name": "_glprLoginProfile",
                        "shape": "LoginProfile",
                        "locationName": "LoginProfile",
                        "documentation": "\u003cp\u003eThe user name and password create date for the user.\u003c/p\u003e",
                        "typeExposed": "LoginProfile",
                        "type": "LoginProfile"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetLoginProfile.html",
            "namespace": "Network.AWS.IAM.GetLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetLoginProfile",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves the user name and password-creation date for the specified user. If the user has not been assigned a password, the action returns a 404 (\u003ccode\u003eNoSuchEntity\u003c/code\u003e) error. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getLoginProfile",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "glpUserName",
                    "name": "_glpUserName",
                    "shape": "userNameType",
                    "locationName": "UserName",
                    "documentation": "\u003cp\u003eThe name of the user whose login profile you want to retrieve.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "glpUserName",
                        "name": "_glpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose login profile you want to retrieve.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetLoginProfile",
                "query": [
                    {
                        "field": "_glpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "glpUserName",
                        "name": "_glpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose login profile you want to retrieve.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "getOpenIDConnectProviderResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetOpenIDConnectProviderResponse",
                "resultWrapper": "GetOpenIDConnectProviderResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goidcprUrl",
                        "name": "_goidcprUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "\u003cp\u003eThe URL that the IAM OpenID Connect provider is associated with. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goidcprClientIDList",
                        "name": "_goidcprClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "\u003cp\u003eA list of client IDs (also known as audiences) that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goidcprThumbprintList",
                        "name": "_goidcprThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "goidcprCreateDate",
                        "name": "_goidcprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the IAM OpenID Connect provider entity was created in the AWS account. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goidcprClientIDList",
                        "name": "_goidcprClientIDList",
                        "shape": "clientIDListType",
                        "locationName": "ClientIDList",
                        "documentation": "\u003cp\u003eA list of client IDs (also known as audiences) that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "goidcprCreateDate",
                        "name": "_goidcprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the IAM OpenID Connect provider entity was created in the AWS account. \u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "goidcprThumbprintList",
                        "name": "_goidcprThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "goidcprUrl",
                        "name": "_goidcprUrl",
                        "shape": "OpenIDConnectProviderUrlType",
                        "locationName": "Url",
                        "documentation": "\u003cp\u003eThe URL that the IAM OpenID Connect provider is associated with. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.GetOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetOpenIDConnectProvider",
            "method": "post",
            "documentation": "\u003cp\u003eReturns information about the specified OpenID Connect provider.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getOpenIDConnectProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "goidcpOpenIDConnectProviderArn",
                    "name": "_goidcpOpenIDConnectProviderArn",
                    "shape": "arnType",
                    "locationName": "OpenIDConnectProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to get information for. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goidcpOpenIDConnectProviderArn",
                        "name": "_goidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to get information for. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "GetOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_goidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "goidcpOpenIDConnectProviderArn",
                        "name": "_goidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to get information for. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getRoleResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "grrRole",
                    "name": "_grrRole",
                    "shape": "Role",
                    "locationName": "Role",
                    "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                    "typeExposed": "Role",
                    "type": "Role"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grrRole",
                        "name": "_grrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetRoleResponse",
                "resultWrapper": "GetRoleResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grrRole",
                        "name": "_grrRole",
                        "shape": "Role",
                        "locationName": "Role",
                        "documentation": "\u003cp\u003eInformation about the role.\u003c/p\u003e",
                        "typeExposed": "Role",
                        "type": "Role"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRole.html",
            "namespace": "Network.AWS.IAM.GetRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetRole",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves information about the specified role, including the role's path, GUID, ARN, and the policy granting permission to assume the role. For more information about ARNs, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html#Identifiers_ARNs\"\u003eARNs\u003c/a\u003e. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getRole",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "grRoleName",
                    "name": "_grRoleName",
                    "shape": "roleNameType",
                    "locationName": "RoleName",
                    "documentation": "\u003cp\u003eThe name of the role to get information about.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grRoleName",
                        "name": "_grRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetRole",
                "query": [
                    {
                        "field": "_grRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grRoleName",
                        "name": "_grRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getRolePolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprRoleName",
                        "name": "_grprRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe role the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprPolicyName",
                        "name": "_grprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprPolicyDocument",
                        "name": "_grprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetRolePolicyResponse",
                "resultWrapper": "GetRolePolicyResult",
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprPolicyDocument",
                        "name": "_grprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprPolicyName",
                        "name": "_grprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grprRoleName",
                        "name": "_grprRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe role the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetRolePolicy.html",
            "namespace": "Network.AWS.IAM.GetRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetRolePolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves the specified policy document for the specified role. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grpRoleName",
                        "name": "_grpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role associated with the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grpPolicyName",
                        "name": "_grpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetRolePolicy",
                "query": [
                    {
                        "field": "_grpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_grpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grpPolicyName",
                        "name": "_grpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "grpRoleName",
                        "name": "_grpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role associated with the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 28,
                "ctor": "getSAMLProviderResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetSAMLProviderResponse",
                "resultWrapper": "GetSAMLProviderResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprSAMLMetadataDocument",
                        "name": "_gsamlprSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003eThe XML metadata document that includes information about an identity provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprCreateDate",
                        "name": "_gsamlprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the SAML provider was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprValidUntil",
                        "name": "_gsamlprValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "\u003cp\u003eThe expiration date and time for the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprCreateDate",
                        "name": "_gsamlprCreateDate",
                        "shape": "dateType",
                        "locationName": "CreateDate",
                        "documentation": "\u003cp\u003eThe date and time when the SAML provider was created.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprSAMLMetadataDocument",
                        "name": "_gsamlprSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003eThe XML metadata document that includes information about an identity provider.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "required": false,
                        "lens": "gsamlprValidUntil",
                        "name": "_gsamlprValidUntil",
                        "shape": "dateType",
                        "locationName": "ValidUntil",
                        "documentation": "\u003cp\u003eThe expiration date and time for the SAML provider.\u003c/p\u003e",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetSAMLProvider.html",
            "namespace": "Network.AWS.IAM.GetSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetSAMLProvider",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the SAML provider metadocument that was uploaded when the provider was created or updated. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getSAMLProvider",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gsamlpSAMLProviderArn",
                    "name": "_gsamlpSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to get information about.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gsamlpSAMLProviderArn",
                        "name": "_gsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "GetSAMLProvider",
                "query": [
                    {
                        "field": "_gsamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gsamlpSAMLProviderArn",
                        "name": "_gsamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to get information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getServerCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gscrServerCertificate",
                    "name": "_gscrServerCertificate",
                    "shape": "ServerCertificate",
                    "locationName": "ServerCertificate",
                    "documentation": "\u003cp\u003eInformation about the server certificate.\u003c/p\u003e",
                    "typeExposed": "ServerCertificate",
                    "type": "ServerCertificate"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gscrServerCertificate",
                        "name": "_gscrServerCertificate",
                        "shape": "ServerCertificate",
                        "locationName": "ServerCertificate",
                        "documentation": "\u003cp\u003eInformation about the server certificate.\u003c/p\u003e",
                        "typeExposed": "ServerCertificate",
                        "type": "ServerCertificate"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetServerCertificateResponse",
                "resultWrapper": "GetServerCertificateResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gscrServerCertificate",
                        "name": "_gscrServerCertificate",
                        "shape": "ServerCertificate",
                        "locationName": "ServerCertificate",
                        "documentation": "\u003cp\u003eInformation about the server certificate.\u003c/p\u003e",
                        "typeExposed": "ServerCertificate",
                        "type": "ServerCertificate"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetServerCertificate.html",
            "namespace": "Network.AWS.IAM.GetServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetServerCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves information about the specified server certificate.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getServerCertificate",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gscServerCertificateName",
                    "name": "_gscServerCertificateName",
                    "shape": "serverCertificateNameType",
                    "locationName": "ServerCertificateName",
                    "documentation": "\u003cp\u003eThe name of the server certificate you want to retrieve information about.\u003c/p\u003e",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gscServerCertificateName",
                        "name": "_gscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate you want to retrieve information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "GetServerCertificate",
                "query": [
                    {
                        "field": "_gscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gscServerCertificateName",
                        "name": "_gscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate you want to retrieve information about.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getUserResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "gurUser",
                    "name": "_gurUser",
                    "shape": "User",
                    "locationName": "User",
                    "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                    "typeExposed": "User",
                    "type": "User"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gurUser",
                        "name": "_gurUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                        "typeExposed": "User",
                        "type": "User"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetUserResponse",
                "resultWrapper": "GetUserResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gurUser",
                        "name": "_gurUser",
                        "shape": "User",
                        "locationName": "User",
                        "documentation": "\u003cp\u003eInformation about the user.\u003c/p\u003e",
                        "typeExposed": "User",
                        "type": "User"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUser.html",
            "namespace": "Network.AWS.IAM.GetUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetUser",
            "method": "post",
            "documentation": "\u003cp\u003eRetrieves information about the specified user, including the user's creation date, path, unique ID, and ARN. \u003c/p\u003e \u003cp\u003eIf you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID used to sign the request. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "query",
                "fieldPad": 0,
                "ctor": "getUser",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "guUserName",
                    "name": "_guUserName",
                    "shape": "existingUserNameType",
                    "locationName": "UserName",
                    "documentation": "\u003cp\u003eThe name of the user to get information about.\u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to the user making the request.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "GetUser",
                "query": [
                    {
                        "field": "_guUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "newtype",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "guUserName",
                        "name": "_guUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to get information about.\u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to the user making the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "guUserName",
                        "name": "_guUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to get information about.\u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to the user making the request.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "getUserPolicyResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprUserName",
                        "name": "_guprUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprPolicyName",
                        "name": "_guprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprPolicyDocument",
                        "name": "_guprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetUserPolicyResponse",
                "resultWrapper": "GetUserPolicyResult",
                "type": "record",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprPolicyDocument",
                        "name": "_guprPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprPolicyName",
                        "name": "_guprPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "guprUserName",
                        "name": "_guprUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe user the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_GetUserPolicy.html",
            "namespace": "Network.AWS.IAM.GetUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "GetUserPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Retrieves the specified policy document for the specified user. The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "getUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gupUserName",
                        "name": "_gupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user who the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gupPolicyName",
                        "name": "_gupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "GetUserPolicy",
                "query": [
                    {
                        "field": "_gupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_gupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gupPolicyName",
                        "name": "_gupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document to get.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "gupUserName",
                        "name": "_gupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user who the policy is associated with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 22,
                "ctor": "listAccessKeysResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAccessKeysResponse",
                "resultWrapper": "ListAccessKeysResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lakrAccessKeyMetadata",
                        "name": "_lakrAccessKeyMetadata",
                        "shape": "accessKeyMetadataListType",
                        "locationName": "AccessKeyMetadata",
                        "documentation": "\u003cp\u003eA list of access key metadata.\u003c/p\u003e",
                        "typeExposed": "[AccessKeyMetadata]",
                        "type": "[AccessKeyMetadata]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakrIsTruncated",
                        "name": "_lakrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more keys to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more keys in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakrMarker",
                        "name": "_lakrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lakrAccessKeyMetadata",
                        "name": "_lakrAccessKeyMetadata",
                        "shape": "accessKeyMetadataListType",
                        "locationName": "AccessKeyMetadata",
                        "documentation": "\u003cp\u003eA list of access key metadata.\u003c/p\u003e",
                        "typeExposed": "[AccessKeyMetadata]",
                        "type": "[AccessKeyMetadata]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakrIsTruncated",
                        "name": "_lakrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more keys to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more keys in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakrMarker",
                        "name": "_lakrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccessKeys.html",
            "namespace": "Network.AWS.IAM.ListAccessKeys",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lakrIsTruncated",
                "token": {
                    "input": "lakMarker",
                    "output": "lakrMarker"
                },
                "type": "one"
            },
            "name": "ListAccessKeys",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the access key IDs associated with the specified user. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003e Although each user is limited to a small number of keys, you can still paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e \u003cp\u003e If the \u003ccode\u003eUserName\u003c/code\u003e field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listAccessKeys",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListAccessKeys",
                "query": [
                    {
                        "field": "_lakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lakMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lakMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakUserName",
                        "name": "_lakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakMarker",
                        "name": "_lakMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakMaxItems",
                        "name": "_lakMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of keys you want in the response. If there are additional keys beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakMarker",
                        "name": "_lakMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakMaxItems",
                        "name": "_lakMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of keys you want in the response. If there are additional keys beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lakUserName",
                        "name": "_lakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 19,
                "ctor": "listAccountAliasesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListAccountAliasesResponse",
                "resultWrapper": "ListAccountAliasesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "laarAccountAliases",
                        "name": "_laarAccountAliases",
                        "shape": "accountAliasListType",
                        "locationName": "AccountAliases",
                        "documentation": "\u003cp\u003eA list of aliases associated with the account.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laarIsTruncated",
                        "name": "_laarIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more account aliases to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more account aliases in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laarMarker",
                        "name": "_laarMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "laarAccountAliases",
                        "name": "_laarAccountAliases",
                        "shape": "accountAliasListType",
                        "locationName": "AccountAliases",
                        "documentation": "\u003cp\u003eA list of aliases associated with the account.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laarIsTruncated",
                        "name": "_laarIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more account aliases to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more account aliases in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laarMarker",
                        "name": "_laarMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListAccountAliases.html",
            "namespace": "Network.AWS.IAM.ListAccountAliases",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "laarIsTruncated",
                "token": {
                    "input": "laaMarker",
                    "output": "laarMarker"
                },
                "type": "one"
            },
            "name": "ListAccountAliases",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the account aliases associated with the account. For information about using an AWS account alias, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AccountAlias.html\"\u003eUsing an Alias for Your AWS Account ID\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listAccountAliases",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListAccountAliases",
                "query": [
                    {
                        "field": "_laaMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_laaMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laaMarker",
                        "name": "_laaMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "laaMaxItems",
                        "name": "_laaMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of account aliases you want in the response. If there are additional account aliases beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "laaMarker",
                        "name": "_laaMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "laaMaxItems",
                        "name": "_laaMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of account aliases you want in the response. If there are additional account aliases beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listGroupPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupPoliciesResponse",
                "resultWrapper": "ListGroupPoliciesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgprPolicyNames",
                        "name": "_lgprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgprIsTruncated",
                        "name": "_lgprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgprMarker",
                        "name": "_lgprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgprIsTruncated",
                        "name": "_lgprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgprMarker",
                        "name": "_lgprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgprPolicyNames",
                        "name": "_lgprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupPolicies.html",
            "namespace": "Network.AWS.IAM.ListGroupPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgprIsTruncated",
                "token": {
                    "input": "lgpMarker",
                    "output": "lgprMarker"
                },
                "type": "one"
            },
            "name": "ListGroupPolicies",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the names of the policies associated with the specified group. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroupPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lgpGroupName",
                        "name": "_lgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "ListGroupPolicies",
                "query": [
                    {
                        "field": "_lgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_lgpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgpMarker",
                        "name": "_lgpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgpMaxItems",
                        "name": "_lgpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lgpGroupName",
                        "name": "_lgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgpMarker",
                        "name": "_lgpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgpMaxItems",
                        "name": "_lgpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listGroupsResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupsResponse",
                "resultWrapper": "ListGroupsResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgrGroups",
                        "name": "_lgrGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "\u003cp\u003eA list of groups.\u003c/p\u003e",
                        "typeExposed": "[Group]",
                        "type": "[Group]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgrIsTruncated",
                        "name": "_lgrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more groups in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgrMarker",
                        "name": "_lgrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgrGroups",
                        "name": "_lgrGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "\u003cp\u003eA list of groups.\u003c/p\u003e",
                        "typeExposed": "[Group]",
                        "type": "[Group]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgrIsTruncated",
                        "name": "_lgrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more groups in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgrMarker",
                        "name": "_lgrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroups.html",
            "namespace": "Network.AWS.IAM.ListGroups",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgrIsTruncated",
                "token": {
                    "input": "lgMarker",
                    "output": "lgrMarker"
                },
                "type": "one"
            },
            "name": "ListGroups",
            "method": "post",
            "documentation": "\u003cp\u003eLists the groups that have the specified path prefix.\u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroups",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListGroups",
                "query": [
                    {
                        "field": "_lgPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lgMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgPathPrefix",
                        "name": "_lgPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e gets all groups whose path starts with \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgMaxItems",
                        "name": "_lgMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgMarker",
                        "name": "_lgMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgMaxItems",
                        "name": "_lgMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgPathPrefix",
                        "name": "_lgPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e gets all groups whose path starts with \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all groups. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "listGroupsForUserResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListGroupsForUserResponse",
                "resultWrapper": "ListGroupsForUserResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgfurGroups",
                        "name": "_lgfurGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "\u003cp\u003eA list of groups.\u003c/p\u003e",
                        "typeExposed": "[Group]",
                        "type": "[Group]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfurIsTruncated",
                        "name": "_lgfurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more groups in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfurMarker",
                        "name": "_lgfurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lgfurGroups",
                        "name": "_lgfurGroups",
                        "shape": "groupListType",
                        "locationName": "Groups",
                        "documentation": "\u003cp\u003eA list of groups.\u003c/p\u003e",
                        "typeExposed": "[Group]",
                        "type": "[Group]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfurIsTruncated",
                        "name": "_lgfurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more groups to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more groups in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfurMarker",
                        "name": "_lgfurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListGroupsForUser.html",
            "namespace": "Network.AWS.IAM.ListGroupsForUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lgfurIsTruncated",
                "token": {
                    "input": "lgfuMarker",
                    "output": "lgfurMarker"
                },
                "type": "one"
            },
            "name": "ListGroupsForUser",
            "method": "post",
            "documentation": "\u003cp\u003eLists the groups the specified user belongs to.\u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listGroupsForUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lgfuUserName",
                        "name": "_lgfuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to list groups for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListGroupsForUser",
                "query": [
                    {
                        "field": "_lgfuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lgfuMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lgfuMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfuMarker",
                        "name": "_lgfuMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfuMaxItems",
                        "name": "_lgfuMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfuMarker",
                        "name": "_lgfuMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lgfuMaxItems",
                        "name": "_lgfuMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of groups you want in the response. If there are additional groups beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lgfuUserName",
                        "name": "_lgfuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to list groups for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 21,
                "ctor": "listInstanceProfilesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListInstanceProfilesResponse",
                "resultWrapper": "ListInstanceProfilesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "liprInstanceProfiles",
                        "name": "_liprInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "\u003cp\u003eA list of instance profiles.\u003c/p\u003e",
                        "typeExposed": "[InstanceProfile]",
                        "type": "[InstanceProfile]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "liprIsTruncated",
                        "name": "_liprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more instance profiles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "liprMarker",
                        "name": "_liprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "liprInstanceProfiles",
                        "name": "_liprInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "\u003cp\u003eA list of instance profiles.\u003c/p\u003e",
                        "typeExposed": "[InstanceProfile]",
                        "type": "[InstanceProfile]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "liprIsTruncated",
                        "name": "_liprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more instance profiles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "liprMarker",
                        "name": "_liprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfiles.html",
            "namespace": "Network.AWS.IAM.ListInstanceProfiles",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "liprIsTruncated",
                "token": {
                    "input": "lipMarker",
                    "output": "liprMarker"
                },
                "type": "one"
            },
            "name": "ListInstanceProfiles",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the instance profiles that have the specified path prefix. If there are none, the action returns an empty list. For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listInstanceProfiles",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListInstanceProfiles",
                "query": [
                    {
                        "field": "_lipPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lipMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lipMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipPathPrefix",
                        "name": "_lipPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e gets all instance profiles whose path starts with \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipMarker",
                        "name": "_lipMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipMaxItems",
                        "name": "_lipMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of instance profiles you want in the response. If there are additional instance profiles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipMarker",
                        "name": "_lipMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipMaxItems",
                        "name": "_lipMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of instance profiles you want in the response. If there are additional instance profiles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipPathPrefix",
                        "name": "_lipPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e gets all instance profiles whose path starts with \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all instance profiles. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 23,
                "ctor": "listInstanceProfilesForRoleResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListInstanceProfilesForRoleResponse",
                "resultWrapper": "ListInstanceProfilesForRoleResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lipfrrInstanceProfiles",
                        "name": "_lipfrrInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "\u003cp\u003eA list of instance profiles.\u003c/p\u003e",
                        "typeExposed": "[InstanceProfile]",
                        "type": "[InstanceProfile]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrrIsTruncated",
                        "name": "_lipfrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more instance profiles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrrMarker",
                        "name": "_lipfrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lipfrrInstanceProfiles",
                        "name": "_lipfrrInstanceProfiles",
                        "shape": "instanceProfileListType",
                        "locationName": "InstanceProfiles",
                        "documentation": "\u003cp\u003eA list of instance profiles.\u003c/p\u003e",
                        "typeExposed": "[InstanceProfile]",
                        "type": "[InstanceProfile]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrrIsTruncated",
                        "name": "_lipfrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more instance profiles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more instance profiles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrrMarker",
                        "name": "_lipfrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListInstanceProfilesForRole.html",
            "namespace": "Network.AWS.IAM.ListInstanceProfilesForRole",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lipfrrIsTruncated",
                "token": {
                    "input": "lipfrMarker",
                    "output": "lipfrrMarker"
                },
                "type": "one"
            },
            "name": "ListInstanceProfilesForRole",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the instance profiles that have the specified associated role. If there are none, the action returns an empty list. For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listInstanceProfilesForRole",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lipfrRoleName",
                        "name": "_lipfrRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to list instance profiles for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListInstanceProfilesForRole",
                "query": [
                    {
                        "field": "_lipfrRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_lipfrMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lipfrMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrMarker",
                        "name": "_lipfrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrMaxItems",
                        "name": "_lipfrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of instance profiles you want in the response. If there are additional instance profiles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrMarker",
                        "name": "_lipfrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lipfrMaxItems",
                        "name": "_lipfrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of instance profiles you want in the response. If there are additional instance profiles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lipfrRoleName",
                        "name": "_lipfrRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to list instance profiles for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listMFADevicesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListMFADevicesResponse",
                "resultWrapper": "ListMFADevicesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmfadrMFADevices",
                        "name": "_lmfadrMFADevices",
                        "shape": "mfaDeviceListType",
                        "locationName": "MFADevices",
                        "documentation": "\u003cp\u003eA list of MFA devices.\u003c/p\u003e",
                        "typeExposed": "[MFADevice]",
                        "type": "[MFADevice]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadrIsTruncated",
                        "name": "_lmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more MFA devices to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more MFA devices in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadrMarker",
                        "name": "_lmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadrIsTruncated",
                        "name": "_lmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more MFA devices to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more MFA devices in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lmfadrMFADevices",
                        "name": "_lmfadrMFADevices",
                        "shape": "mfaDeviceListType",
                        "locationName": "MFADevices",
                        "documentation": "\u003cp\u003eA list of MFA devices.\u003c/p\u003e",
                        "typeExposed": "[MFADevice]",
                        "type": "[MFADevice]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadrMarker",
                        "name": "_lmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListMFADevices.html",
            "namespace": "Network.AWS.IAM.ListMFADevices",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lmfadrIsTruncated",
                "token": {
                    "input": "lmfadMarker",
                    "output": "lmfadrMarker"
                },
                "type": "one"
            },
            "name": "ListMFADevices",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the MFA devices. If the request includes the user name, then this action lists all the MFA devices associated with the specified user name. If you do not specify a user name, IAM determines the user name implicitly based on the AWS access key ID signing the request. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listMFADevices",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListMFADevices",
                "query": [
                    {
                        "field": "_lmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lmfadMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lmfadMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadUserName",
                        "name": "_lmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA devices you want to list.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadMarker",
                        "name": "_lmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadMaxItems",
                        "name": "_lmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA devices beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadMarker",
                        "name": "_lmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadMaxItems",
                        "name": "_lmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA devices beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lmfadUserName",
                        "name": "_lmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA devices you want to list.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "OpenIDConnectProviderListEntry",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listOpenIDConnectProvidersResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "loidcprOpenIDConnectProviderList",
                    "name": "_loidcprOpenIDConnectProviderList",
                    "shape": "OpenIDConnectProviderListType",
                    "locationName": "OpenIDConnectProviderList",
                    "documentation": "\u003cp\u003eThe list of IAM OpenID Connect providers in the AWS account.\u003c/p\u003e",
                    "typeExposed": "[OpenIDConnectProviderListEntry]",
                    "type": "[OpenIDConnectProviderListEntry]"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListOpenIDConnectProvidersResponse",
                "resultWrapper": "ListOpenIDConnectProvidersResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "loidcprOpenIDConnectProviderList",
                        "name": "_loidcprOpenIDConnectProviderList",
                        "shape": "OpenIDConnectProviderListType",
                        "locationName": "OpenIDConnectProviderList",
                        "documentation": "\u003cp\u003eThe list of IAM OpenID Connect providers in the AWS account.\u003c/p\u003e",
                        "typeExposed": "[OpenIDConnectProviderListEntry]",
                        "type": "[OpenIDConnectProviderListEntry]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "loidcprOpenIDConnectProviderList",
                        "name": "_loidcprOpenIDConnectProviderList",
                        "shape": "OpenIDConnectProviderListType",
                        "locationName": "OpenIDConnectProviderList",
                        "documentation": "\u003cp\u003eThe list of IAM OpenID Connect providers in the AWS account.\u003c/p\u003e",
                        "typeExposed": "[OpenIDConnectProviderListEntry]",
                        "type": "[OpenIDConnectProviderListEntry]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListOpenIDConnectProviders.html",
            "namespace": "Network.AWS.IAM.ListOpenIDConnectProviders",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListOpenIDConnectProviders",
            "method": "post",
            "documentation": "\u003cp\u003eLists information about the OpenID Connect providers in the AWS account. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listOpenIDConnectProviders",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListOpenIDConnectProviders",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listRolePoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListRolePoliciesResponse",
                "resultWrapper": "ListRolePoliciesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrprPolicyNames",
                        "name": "_lrprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrprIsTruncated",
                        "name": "_lrprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrprMarker",
                        "name": "_lrprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrprIsTruncated",
                        "name": "_lrprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrprMarker",
                        "name": "_lrprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrprPolicyNames",
                        "name": "_lrprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRolePolicies.html",
            "namespace": "Network.AWS.IAM.ListRolePolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lrprIsTruncated",
                "token": {
                    "input": "lrpMarker",
                    "output": "lrprMarker"
                },
                "type": "one"
            },
            "name": "ListRolePolicies",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the names of the policies associated with the specified role. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listRolePolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrpRoleName",
                        "name": "_lrpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListRolePolicies",
                "query": [
                    {
                        "field": "_lrpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_lrpMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lrpMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrpMarker",
                        "name": "_lrpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrpMaxItems",
                        "name": "_lrpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of role policies you want in the response. If there are additional role policies beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrpMarker",
                        "name": "_lrpMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrpMaxItems",
                        "name": "_lrpMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of role policies you want in the response. If there are additional role policies beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lrpRoleName",
                        "name": "_lrpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listRolesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListRolesResponse",
                "resultWrapper": "ListRolesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrrRoles",
                        "name": "_lrrRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "\u003cp\u003eA list of roles.\u003c/p\u003e",
                        "typeExposed": "[Role]",
                        "type": "[Role]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrIsTruncated",
                        "name": "_lrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more roles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more roles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrMarker",
                        "name": "_lrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrIsTruncated",
                        "name": "_lrrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more roles to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more roles in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrrMarker",
                        "name": "_lrrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lrrRoles",
                        "name": "_lrrRoles",
                        "shape": "roleListType",
                        "locationName": "Roles",
                        "documentation": "\u003cp\u003eA list of roles.\u003c/p\u003e",
                        "typeExposed": "[Role]",
                        "type": "[Role]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListRoles.html",
            "namespace": "Network.AWS.IAM.ListRoles",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lrrIsTruncated",
                "token": {
                    "input": "lrMarker",
                    "output": "lrrMarker"
                },
                "type": "one"
            },
            "name": "ListRoles",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the roles that have the specified path prefix. If there are none, the action returns an empty list. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e \u003cp\u003e The returned policy is URL-encoded according to RFC 3986. For more information about RFC 3986, go to \u003ca href=\"http://www.faqs.org/rfcs/rfc3986.html\"\u003ehttp://www.faqs.org/rfcs/rfc3986.html\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listRoles",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListRoles",
                "query": [
                    {
                        "field": "_lrPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lrMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lrMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrPathPrefix",
                        "name": "_lrPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e gets all roles whose path starts with \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrMarker",
                        "name": "_lrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrMaxItems",
                        "name": "_lrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of roles you want in the response. If there are additional roles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrMarker",
                        "name": "_lrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrMaxItems",
                        "name": "_lrMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of roles you want in the response. If there are additional roles beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lrPathPrefix",
                        "name": "_lrPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example, the prefix \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e gets all roles whose path starts with \u003ccode\u003e/application_abc/component_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all roles. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic",
                    "Monoid",
                    "Semigroup"
                ],
                "streaming": false,
                "listElement": "SAMLProviderListEntry",
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listSAMLProvidersResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "mempty",
                    "required": true,
                    "lens": "lsamlprSAMLProviderList",
                    "name": "_lsamlprSAMLProviderList",
                    "shape": "SAMLProviderListType",
                    "locationName": "SAMLProviderList",
                    "documentation": "\u003cp\u003eThe list of SAML providers for this account.\u003c/p\u003e",
                    "typeExposed": "[SAMLProviderListEntry]",
                    "type": "[SAMLProviderListEntry]"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSAMLProvidersResponse",
                "resultWrapper": "ListSAMLProvidersResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsamlprSAMLProviderList",
                        "name": "_lsamlprSAMLProviderList",
                        "shape": "SAMLProviderListType",
                        "locationName": "SAMLProviderList",
                        "documentation": "\u003cp\u003eThe list of SAML providers for this account.\u003c/p\u003e",
                        "typeExposed": "[SAMLProviderListEntry]",
                        "type": "[SAMLProviderListEntry]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lsamlprSAMLProviderList",
                        "name": "_lsamlprSAMLProviderList",
                        "shape": "SAMLProviderListType",
                        "locationName": "SAMLProviderList",
                        "documentation": "\u003cp\u003eThe list of SAML providers for this account.\u003c/p\u003e",
                        "typeExposed": "[SAMLProviderListEntry]",
                        "type": "[SAMLProviderListEntry]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSAMLProviders.html",
            "namespace": "Network.AWS.IAM.ListSAMLProviders",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ListSAMLProviders",
            "method": "post",
            "documentation": "\u003cp\u003eLists the SAML providers in the account.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 0,
                "ctor": "listSAMLProviders",
                "headerPad": 0,
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "queryPad": 0,
                "name": "ListSAMLProviders",
                "query": [],
                "type": "empty",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": []
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 34,
                "ctor": "listServerCertificatesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListServerCertificatesResponse",
                "resultWrapper": "ListServerCertificatesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lscrServerCertificateMetadataList",
                        "name": "_lscrServerCertificateMetadataList",
                        "shape": "serverCertificateMetadataListType",
                        "locationName": "ServerCertificateMetadataList",
                        "documentation": "\u003cp\u003eA list of server certificates.\u003c/p\u003e",
                        "typeExposed": "[ServerCertificateMetadata]",
                        "type": "[ServerCertificateMetadata]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscrIsTruncated",
                        "name": "_lscrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more server certificates to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more server certificates in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscrMarker",
                        "name": "_lscrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscrIsTruncated",
                        "name": "_lscrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more server certificates to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more server certificates in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscrMarker",
                        "name": "_lscrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lscrServerCertificateMetadataList",
                        "name": "_lscrServerCertificateMetadataList",
                        "shape": "serverCertificateMetadataListType",
                        "locationName": "ServerCertificateMetadataList",
                        "documentation": "\u003cp\u003eA list of server certificates.\u003c/p\u003e",
                        "typeExposed": "[ServerCertificateMetadata]",
                        "type": "[ServerCertificateMetadata]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListServerCertificates.html",
            "namespace": "Network.AWS.IAM.ListServerCertificates",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lscrIsTruncated",
                "token": {
                    "input": "lscMarker",
                    "output": "lscrMarker"
                },
                "type": "one"
            },
            "name": "ListServerCertificates",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the server certificates that have the specified path prefix. If none exist, the action returns an empty list. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "listServerCertificates",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListServerCertificates",
                "query": [
                    {
                        "field": "_lscPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_lscMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lscMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscPathPrefix",
                        "name": "_lscPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example: \u003ccode\u003e/company/servercerts\u003c/code\u003e would get all server certificates for which the path starts with \u003ccode\u003e/company/servercerts\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscMarker",
                        "name": "_lscMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscMaxItems",
                        "name": "_lscMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of server certificates you want in the response. If there are additional server certificates beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element will be set to \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscMarker",
                        "name": "_lscMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscMaxItems",
                        "name": "_lscMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of server certificates you want in the response. If there are additional server certificates beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element will be set to \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscPathPrefix",
                        "name": "_lscPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example: \u003ccode\u003e/company/servercerts\u003c/code\u003e would get all server certificates for which the path starts with \u003ccode\u003e/company/servercerts\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all server certificates. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 18,
                "ctor": "listSigningCertificatesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListSigningCertificatesResponse",
                "resultWrapper": "ListSigningCertificatesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lscr1Certificates",
                        "name": "_lscr1Certificates",
                        "shape": "certificateListType",
                        "locationName": "Certificates",
                        "documentation": "\u003cp\u003eA list of the user's signing certificate information.\u003c/p\u003e",
                        "typeExposed": "[SigningCertificate]",
                        "type": "[SigningCertificate]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscr1IsTruncated",
                        "name": "_lscr1IsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more certificate IDs to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more certificates in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscr1Marker",
                        "name": "_lscr1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lscr1Certificates",
                        "name": "_lscr1Certificates",
                        "shape": "certificateListType",
                        "locationName": "Certificates",
                        "documentation": "\u003cp\u003eA list of the user's signing certificate information.\u003c/p\u003e",
                        "typeExposed": "[SigningCertificate]",
                        "type": "[SigningCertificate]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscr1IsTruncated",
                        "name": "_lscr1IsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more certificate IDs to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more certificates in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lscr1Marker",
                        "name": "_lscr1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListSigningCertificates.html",
            "namespace": "Network.AWS.IAM.ListSigningCertificates",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lscr1IsTruncated",
                "token": {
                    "input": "lsc1Marker",
                    "output": "lscr1Marker"
                },
                "type": "one"
            },
            "name": "ListSigningCertificates",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about the signing certificates associated with the specified user. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003e Although each user is limited to a small number of signing certificates, you can still paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e \u003cp\u003e If the \u003ccode\u003eUserName\u003c/code\u003e field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listSigningCertificates",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListSigningCertificates",
                "query": [
                    {
                        "field": "_lsc1UserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lsc1Marker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lsc1MaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1UserName",
                        "name": "_lsc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1Marker",
                        "name": "_lsc1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1MaxItems",
                        "name": "_lsc1MaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of certificate IDs you want in the response. If there are additional certificate IDs beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1Marker",
                        "name": "_lsc1Marker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1MaxItems",
                        "name": "_lsc1MaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of certificate IDs you want in the response. If there are additional certificate IDs beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lsc1UserName",
                        "name": "_lsc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 16,
                "ctor": "listUserPoliciesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListUserPoliciesResponse",
                "resultWrapper": "ListUserPoliciesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "luprPolicyNames",
                        "name": "_luprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luprIsTruncated",
                        "name": "_luprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luprMarker",
                        "name": "_luprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luprIsTruncated",
                        "name": "_luprIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more policy names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more policy names in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luprMarker",
                        "name": "_luprMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "luprPolicyNames",
                        "name": "_luprPolicyNames",
                        "shape": "policyNameListType",
                        "locationName": "PolicyNames",
                        "documentation": "\u003cp\u003eA list of policy names.\u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUserPolicies.html",
            "namespace": "Network.AWS.IAM.ListUserPolicies",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "luprIsTruncated",
                "token": {
                    "input": "lupMarker",
                    "output": "luprMarker"
                },
                "type": "one"
            },
            "name": "ListUserPolicies",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the names of the policies associated with the specified user. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 12,
                "ctor": "listUserPolicies",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lupUserName",
                        "name": "_lupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListUserPolicies",
                "query": [
                    {
                        "field": "_lupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_lupMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lupMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lupMarker",
                        "name": "_lupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lupMaxItems",
                        "name": "_lupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lupMarker",
                        "name": "_lupMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lupMaxItems",
                        "name": "_lupMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this only when paginating results to indicate the maximum number of policy names you want in the response. If there are additional policy names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "lupUserName",
                        "name": "_lupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to list policies for.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listUsersResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListUsersResponse",
                "resultWrapper": "ListUsersResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lurUsers",
                        "name": "_lurUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "\u003cp\u003eA list of users.\u003c/p\u003e",
                        "typeExposed": "[User]",
                        "type": "[User]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lurIsTruncated",
                        "name": "_lurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more users in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lurMarker",
                        "name": "_lurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lurIsTruncated",
                        "name": "_lurIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more user names to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more users in the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lurMarker",
                        "name": "_lurMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lurUsers",
                        "name": "_lurUsers",
                        "shape": "userListType",
                        "locationName": "Users",
                        "documentation": "\u003cp\u003eA list of users.\u003c/p\u003e",
                        "typeExposed": "[User]",
                        "type": "[User]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListUsers.html",
            "namespace": "Network.AWS.IAM.ListUsers",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lurIsTruncated",
                "token": {
                    "input": "luMarker",
                    "output": "lurMarker"
                },
                "type": "one"
            },
            "name": "ListUsers",
            "method": "post",
            "documentation": "\u003cp\u003eLists the IAM users that have the specified path prefix. If no path prefix is specified, the action returns all users in the AWS account. If there are none, the action returns an empty list. \u003c/p\u003e \u003cp\u003eYou can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 13,
                "ctor": "listUsers",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 11,
                "name": "ListUsers",
                "query": [
                    {
                        "field": "_luPathPrefix",
                        "locationName": "PathPrefix",
                        "type": "field"
                    },
                    {
                        "field": "_luMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_luMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luPathPrefix",
                        "name": "_luPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example: \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e, which would get all user names whose path starts with \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luMarker",
                        "name": "_luMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "luMaxItems",
                        "name": "_luMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luMarker",
                        "name": "_luMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "luMaxItems",
                        "name": "_luMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of user names you want in the response. If there are additional user names beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "luPathPrefix",
                        "name": "_luPathPrefix",
                        "shape": "pathPrefixType",
                        "locationName": "PathPrefix",
                        "documentation": "\u003cp\u003e The path prefix for filtering the results. For example: \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e, which would get all user names whose path starts with \u003ccode\u003e/division_abc/subdivision_xyz/\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e This parameter is optional. If it is not included, it defaults to a slash (/), listing all user names. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 25,
                "ctor": "listVirtualMFADevicesResponse",
                "headerPad": 0,
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListVirtualMFADevicesResponse",
                "resultWrapper": "ListVirtualMFADevicesResult",
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lvmfadrVirtualMFADevices",
                        "name": "_lvmfadrVirtualMFADevices",
                        "shape": "virtualMFADeviceListType",
                        "locationName": "VirtualMFADevices",
                        "documentation": "\u003cp\u003e The list of virtual MFA devices in the current account that match the \u003ccode\u003eAssignmentStatus\u003c/code\u003e value that was passed in the request. \u003c/p\u003e",
                        "typeExposed": "[VirtualMFADevice]",
                        "type": "[VirtualMFADevice]"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadrIsTruncated",
                        "name": "_lvmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more items to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more items the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadrMarker",
                        "name": "_lvmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadrIsTruncated",
                        "name": "_lvmfadrIsTruncated",
                        "shape": "booleanType",
                        "locationName": "IsTruncated",
                        "documentation": "\u003cp\u003e A flag that indicates whether there are more items to list. If your results were truncated, you can make a subsequent pagination request using the \u003ccode\u003eMarker\u003c/code\u003e request parameter to retrieve more items the list. \u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadrMarker",
                        "name": "_lvmfadrMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e If \u003ccode\u003eIsTruncated\u003c/code\u003e is \u003ccode\u003etrue\u003c/code\u003e, this element is present and contains the value to use for the \u003ccode\u003eMarker\u003c/code\u003e parameter in a subsequent pagination request. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "lvmfadrVirtualMFADevices",
                        "name": "_lvmfadrVirtualMFADevices",
                        "shape": "virtualMFADeviceListType",
                        "locationName": "VirtualMFADevices",
                        "documentation": "\u003cp\u003e The list of virtual MFA devices in the current account that match the \u003ccode\u003eAssignmentStatus\u003c/code\u003e value that was passed in the request. \u003c/p\u003e",
                        "typeExposed": "[VirtualMFADevice]",
                        "type": "[VirtualMFADevice]"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ListVirtualMFADevices.html",
            "namespace": "Network.AWS.IAM.ListVirtualMFADevices",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": {
                "more": "lvmfadrIsTruncated",
                "token": {
                    "input": "lvmfadMarker",
                    "output": "lvmfadrMarker"
                },
                "type": "one"
            },
            "name": "ListVirtualMFADevices",
            "method": "post",
            "documentation": "\u003cp\u003e Lists the virtual MFA devices under the AWS account by assignment status. If you do not specify an assignment status, the action returns a list of all virtual MFA devices. Assignment status can be \u003ccode\u003eAssigned\u003c/code\u003e, \u003ccode\u003eUnassigned\u003c/code\u003e, or \u003ccode\u003eAny\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e You can paginate the results using the \u003ccode\u003eMaxItems\u003c/code\u003e and \u003ccode\u003eMarker\u003c/code\u003e parameters. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 23,
                "ctor": "listVirtualMFADevices",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 17,
                "name": "ListVirtualMFADevices",
                "query": [
                    {
                        "field": "_lvmfadAssignmentStatus",
                        "locationName": "AssignmentStatus",
                        "type": "field"
                    },
                    {
                        "field": "_lvmfadMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lvmfadMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadAssignmentStatus",
                        "name": "_lvmfadAssignmentStatus",
                        "shape": "assignmentStatusType",
                        "locationName": "AssignmentStatus",
                        "documentation": "\u003cp\u003e The status (unassigned or assigned) of the devices to list. If you do not specify an \u003ccode\u003eAssignmentStatus\u003c/code\u003e, the action defaults to \u003ccode\u003eAny\u003c/code\u003e which lists both assigned and unassigned virtual MFA devices. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadMarker",
                        "name": "_lvmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadMaxItems",
                        "name": "_lvmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA devices beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadAssignmentStatus",
                        "name": "_lvmfadAssignmentStatus",
                        "shape": "assignmentStatusType",
                        "locationName": "AssignmentStatus",
                        "documentation": "\u003cp\u003e The status (unassigned or assigned) of the devices to list. If you do not specify an \u003ccode\u003eAssignmentStatus\u003c/code\u003e, the action defaults to \u003ccode\u003eAny\u003c/code\u003e which lists both assigned and unassigned virtual MFA devices. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadMarker",
                        "name": "_lvmfadMarker",
                        "shape": "markerType",
                        "locationName": "Marker",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results, and only in a subsequent request after you've received a response where the results are truncated. Set it to the value of the \u003ccode\u003eMarker\u003c/code\u003e element in the response you just received. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "lvmfadMaxItems",
                        "name": "_lvmfadMaxItems",
                        "shape": "maxItemsType",
                        "locationName": "MaxItems",
                        "documentation": "\u003cp\u003e Use this parameter only when paginating results to indicate the maximum number of MFA devices you want in the response. If there are additional MFA devices beyond the maximum you specify, the \u003ccode\u003eIsTruncated\u003c/code\u003e response element is \u003ccode\u003etrue\u003c/code\u003e. This parameter is optional. If you do not include it, it defaults to 100. \u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putGroupPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutGroupPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutGroupPolicy.html",
            "namespace": "Network.AWS.IAM.PutGroupPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutGroupPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Adds (or updates) a policy document associated with the specified group. For information about policies, refer to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\"\u003eOverview of Policies\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e For information about limits on the number of policies you can associate with a group, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putGroupPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpGroupName",
                        "name": "_pgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpPolicyName",
                        "name": "_pgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpPolicyDocument",
                        "name": "_pgpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutGroupPolicy",
                "query": [
                    {
                        "field": "_pgpGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_pgpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_pgpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpGroupName",
                        "name": "_pgpGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpPolicyDocument",
                        "name": "_pgpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pgpPolicyName",
                        "name": "_pgpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutRolePolicy.html",
            "namespace": "Network.AWS.IAM.PutRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutRolePolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Adds (or updates) a policy document associated with the specified role. For information about policies, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\"\u003eOverview of Policies\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e For information about limits on the policies you can associate with a role, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpRoleName",
                        "name": "_prpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpPolicyName",
                        "name": "_prpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpPolicyDocument",
                        "name": "_prpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutRolePolicy",
                "query": [
                    {
                        "field": "_prpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_prpPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_prpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpPolicyDocument",
                        "name": "_prpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpPolicyName",
                        "name": "_prpPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "prpRoleName",
                        "name": "_prpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "putUserPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "PutUserPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_PutUserPolicy.html",
            "namespace": "Network.AWS.IAM.PutUserPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "PutUserPolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Adds (or updates) a policy document associated with the specified user. For information about policies, refer to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/PoliciesOverview.html\"\u003eOverview of Policies\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003e For information about limits on the number of policies you can associate with a user, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 18,
                "ctor": "putUserPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupUserName",
                        "name": "_pupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupPolicyName",
                        "name": "_pupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupPolicyDocument",
                        "name": "_pupPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "PutUserPolicy",
                "query": [
                    {
                        "field": "_pupUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_pupPolicyName",
                        "locationName": "PolicyName",
                        "type": "field"
                    },
                    {
                        "field": "_pupPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupPolicyDocument",
                        "name": "_pupPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupPolicyName",
                        "name": "_pupPolicyName",
                        "shape": "policyNameType",
                        "locationName": "PolicyName",
                        "documentation": "\u003cp\u003eThe name of the policy document.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "pupUserName",
                        "name": "_pupUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to associate the policy with.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeClientIDFromOpenIDConnectProviderResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveClientIDFromOpenIDConnectProviderResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveClientIDFromOpenIDConnectProvider.html",
            "namespace": "Network.AWS.IAM.RemoveClientIDFromOpenIDConnectProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveClientIDFromOpenIDConnectProvider",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves the specified client ID (also known as audience) from the list of client IDs registered for the specified IAM OpenID Connect provider.\u003c/p\u003e \u003cp\u003eThis action is idempotent; it does not fail or return an error if you try to remove a client ID that was removed previously.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 35,
                "ctor": "removeClientIDFromOpenIDConnectProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rcidfoidcpOpenIDConnectProviderArn",
                        "name": "_rcidfoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to remove the client ID from. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rcidfoidcpClientID",
                        "name": "_rcidfoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "\u003cp\u003eThe client ID (also known as audience) to remove from the IAM OpenID Connect provider. For more information about client IDs, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "RemoveClientIDFromOpenIDConnectProvider",
                "query": [
                    {
                        "field": "_rcidfoidcpOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_rcidfoidcpClientID",
                        "locationName": "ClientID",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rcidfoidcpClientID",
                        "name": "_rcidfoidcpClientID",
                        "shape": "clientIDType",
                        "locationName": "ClientID",
                        "documentation": "\u003cp\u003eThe client ID (also known as audience) to remove from the IAM OpenID Connect provider. For more information about client IDs, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rcidfoidcpOpenIDConnectProviderArn",
                        "name": "_rcidfoidcpOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to remove the client ID from. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeRoleFromInstanceProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveRoleFromInstanceProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveRoleFromInstanceProfile.html",
            "namespace": "Network.AWS.IAM.RemoveRoleFromInstanceProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveRoleFromInstanceProfile",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves the specified role from the specified instance profile.\u003c/p\u003e \u003cimportant\u003e Make sure you do not have any Amazon EC2 instances running with the role you are about to remove from the instance profile. Removing a role from an instance profile that is associated with a running instance will break any applications running on the instance. \u003c/important\u003e \u003cp\u003e For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. For more information about instance profiles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/AboutInstanceProfiles.html\"\u003eAbout Instance Profiles\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "removeRoleFromInstanceProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrfipInstanceProfileName",
                        "name": "_rrfipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrfipRoleName",
                        "name": "_rrfipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "RemoveRoleFromInstanceProfile",
                "query": [
                    {
                        "field": "_rrfipInstanceProfileName",
                        "locationName": "InstanceProfileName",
                        "type": "field"
                    },
                    {
                        "field": "_rrfipRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrfipInstanceProfileName",
                        "name": "_rrfipInstanceProfileName",
                        "shape": "instanceProfileNameType",
                        "locationName": "InstanceProfileName",
                        "documentation": "\u003cp\u003eThe name of the instance profile to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rrfipRoleName",
                        "name": "_rrfipRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "removeUserFromGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "RemoveUserFromGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_RemoveUserFromGroup.html",
            "namespace": "Network.AWS.IAM.RemoveUserFromGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "RemoveUserFromGroup",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves the specified user from the specified group.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "removeUserFromGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rufgGroupName",
                        "name": "_rufgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rufgUserName",
                        "name": "_rufgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 10,
                "name": "RemoveUserFromGroup",
                "query": [
                    {
                        "field": "_rufgGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_rufgUserName",
                        "locationName": "UserName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rufgGroupName",
                        "name": "_rufgGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003eThe name of the group to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rufgUserName",
                        "name": "_rufgUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user to remove.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "resyncMFADeviceResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "ResyncMFADeviceResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_ResyncMFADevice.html",
            "namespace": "Network.AWS.IAM.ResyncMFADevice",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "ResyncMFADevice",
            "method": "post",
            "documentation": "\u003cp\u003eSynchronizes the specified MFA device with AWS servers.\u003c/p\u003e \u003cp\u003eFor more information about creating and working with virtual MFA devices, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_VirtualMFA.html\"\u003eUsing a Virtual MFA Device\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "resyncMFADevice",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadUserName",
                        "name": "_rmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA device you want to resynchronize.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadSerialNumber",
                        "name": "_rmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eSerial number that uniquely identifies the MFA device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadAuthenticationCode1",
                        "name": "_rmfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "\u003cp\u003eAn authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadAuthenticationCode2",
                        "name": "_rmfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "\u003cp\u003eA subsequent authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 20,
                "name": "ResyncMFADevice",
                "query": [
                    {
                        "field": "_rmfadUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadSerialNumber",
                        "locationName": "SerialNumber",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadAuthenticationCode1",
                        "locationName": "AuthenticationCode1",
                        "type": "field"
                    },
                    {
                        "field": "_rmfadAuthenticationCode2",
                        "locationName": "AuthenticationCode2",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadAuthenticationCode1",
                        "name": "_rmfadAuthenticationCode1",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode1",
                        "documentation": "\u003cp\u003eAn authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadAuthenticationCode2",
                        "name": "_rmfadAuthenticationCode2",
                        "shape": "authenticationCodeType",
                        "locationName": "AuthenticationCode2",
                        "documentation": "\u003cp\u003eA subsequent authentication code emitted by the device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadSerialNumber",
                        "name": "_rmfadSerialNumber",
                        "shape": "serialNumberType",
                        "locationName": "SerialNumber",
                        "documentation": "\u003cp\u003eSerial number that uniquely identifies the MFA device.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "rmfadUserName",
                        "name": "_rmfadUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose MFA device you want to resynchronize.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAccessKeyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAccessKeyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html",
            "namespace": "Network.AWS.IAM.UpdateAccessKey",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAccessKey",
            "method": "post",
            "documentation": "\u003cp\u003e Changes the status of the specified access key from Active to Inactive, or vice versa. This action can be used to disable a user's key as part of a key rotation work flow. \u003c/p\u003e \u003cp\u003e If the \u003ccode\u003eUserName\u003c/code\u003e field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e \u003cp\u003e For information about rotating keys, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\"\u003eManaging Keys and Certificates\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "updateAccessKey",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uakAccessKeyId",
                        "name": "_uakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID of the secret access key you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uakStatus",
                        "name": "_uakStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status you want to assign to the secret access key. \u003ccode\u003eActive\u003c/code\u003e means the key can be used for API calls to AWS, while \u003ccode\u003eInactive\u003c/code\u003e means the key cannot be used. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "UpdateAccessKey",
                "query": [
                    {
                        "field": "_uakUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uakAccessKeyId",
                        "locationName": "AccessKeyId",
                        "type": "field"
                    },
                    {
                        "field": "_uakStatus",
                        "locationName": "Status",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uakUserName",
                        "name": "_uakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose key you want to update.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uakAccessKeyId",
                        "name": "_uakAccessKeyId",
                        "shape": "accessKeyIdType",
                        "locationName": "AccessKeyId",
                        "documentation": "\u003cp\u003eThe access key ID of the secret access key you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uakStatus",
                        "name": "_uakStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status you want to assign to the secret access key. \u003ccode\u003eActive\u003c/code\u003e means the key can be used for API calls to AWS, while \u003ccode\u003eInactive\u003c/code\u003e means the key cannot be used. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uakUserName",
                        "name": "_uakUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose key you want to update.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAccountPasswordPolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAccountPasswordPolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccountPasswordPolicy.html",
            "namespace": "Network.AWS.IAM.UpdateAccountPasswordPolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAccountPasswordPolicy",
            "method": "post",
            "documentation": "\u003cp\u003eUpdates the password policy settings for the AWS account.\u003c/p\u003e \u003cp\u003e For more information about using a password policy, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingPasswordPolicies.html\"\u003eManaging an IAM Password Policy\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 31,
                "ctor": "updateAccountPasswordPolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 27,
                "name": "UpdateAccountPasswordPolicy",
                "query": [
                    {
                        "field": "_uappMinimumPasswordLength",
                        "locationName": "MinimumPasswordLength",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireSymbols",
                        "locationName": "RequireSymbols",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireNumbers",
                        "locationName": "RequireNumbers",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireUppercaseCharacters",
                        "locationName": "RequireUppercaseCharacters",
                        "type": "field"
                    },
                    {
                        "field": "_uappRequireLowercaseCharacters",
                        "locationName": "RequireLowercaseCharacters",
                        "type": "field"
                    },
                    {
                        "field": "_uappAllowUsersToChangePassword",
                        "locationName": "AllowUsersToChangePassword",
                        "type": "field"
                    },
                    {
                        "field": "_uappMaxPasswordAge",
                        "locationName": "MaxPasswordAge",
                        "type": "field"
                    },
                    {
                        "field": "_uappPasswordReusePrevention",
                        "locationName": "PasswordReusePrevention",
                        "type": "field"
                    },
                    {
                        "field": "_uappHardExpiry",
                        "locationName": "HardExpiry",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappMinimumPasswordLength",
                        "name": "_uappMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "\u003cp\u003eThe minimum number of characters allowed in an IAM user password.\u003c/p\u003e \u003cp\u003eDefault value: 6\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireSymbols",
                        "name": "_uappRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:\u003c/p\u003e \u003cp\u003e! @ # $ % ^ &amp;amp; * ( ) _ + - = [ ] { } | '\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireNumbers",
                        "name": "_uappRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one numeric character (0 to 9).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireUppercaseCharacters",
                        "name": "_uappRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireLowercaseCharacters",
                        "name": "_uappRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappAllowUsersToChangePassword",
                        "name": "_uappAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "\u003cp\u003e Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\"\u003eLetting IAM Users Change Their Own Passwords\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappMaxPasswordAge",
                        "name": "_uappMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "\u003cp\u003eThe number of days that an IAM user password is valid. The default value of 0 means IAM user passwords never expire.\u003c/p\u003e \u003cp\u003eDefault value: 0\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappPasswordReusePrevention",
                        "name": "_uappPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "\u003cp\u003eSpecifies the number of previous passwords that IAM users are prevented from reusing. The default value of 0 means IAM users are not prevented from reusing previous passwords.\u003c/p\u003e \u003cp\u003eDefault value: 0\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappHardExpiry",
                        "name": "_uappHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "\u003cp\u003ePrevents IAM users from setting a new password after their password has expired.\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappAllowUsersToChangePassword",
                        "name": "_uappAllowUsersToChangePassword",
                        "shape": "booleanType",
                        "locationName": "AllowUsersToChangePassword",
                        "documentation": "\u003cp\u003e Allows all IAM users in your account to use the AWS Management Console to change their own passwords. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/HowToPwdIAMUser.html\"\u003eLetting IAM Users Change Their Own Passwords\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappHardExpiry",
                        "name": "_uappHardExpiry",
                        "shape": "booleanObjectType",
                        "locationName": "HardExpiry",
                        "documentation": "\u003cp\u003ePrevents IAM users from setting a new password after their password has expired.\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappMaxPasswordAge",
                        "name": "_uappMaxPasswordAge",
                        "shape": "maxPasswordAgeType",
                        "locationName": "MaxPasswordAge",
                        "documentation": "\u003cp\u003eThe number of days that an IAM user password is valid. The default value of 0 means IAM user passwords never expire.\u003c/p\u003e \u003cp\u003eDefault value: 0\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappMinimumPasswordLength",
                        "name": "_uappMinimumPasswordLength",
                        "shape": "minimumPasswordLengthType",
                        "locationName": "MinimumPasswordLength",
                        "documentation": "\u003cp\u003eThe minimum number of characters allowed in an IAM user password.\u003c/p\u003e \u003cp\u003eDefault value: 6\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Nat",
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappPasswordReusePrevention",
                        "name": "_uappPasswordReusePrevention",
                        "shape": "passwordReusePreventionType",
                        "locationName": "PasswordReusePrevention",
                        "documentation": "\u003cp\u003eSpecifies the number of previous passwords that IAM users are prevented from reusing. The default value of 0 means IAM users are not prevented from reusing previous passwords.\u003c/p\u003e \u003cp\u003eDefault value: 0\u003c/p\u003e",
                        "typeExposed": "Maybe Natural",
                        "type": "Maybe Nat"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireLowercaseCharacters",
                        "name": "_uappRequireLowercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireLowercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireNumbers",
                        "name": "_uappRequireNumbers",
                        "shape": "booleanType",
                        "locationName": "RequireNumbers",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one numeric character (0 to 9).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireSymbols",
                        "name": "_uappRequireSymbols",
                        "shape": "booleanType",
                        "locationName": "RequireSymbols",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:\u003c/p\u003e \u003cp\u003e! @ # $ % ^ &amp;amp; * ( ) _ + - = [ ] { } | '\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uappRequireUppercaseCharacters",
                        "name": "_uappRequireUppercaseCharacters",
                        "shape": "booleanType",
                        "locationName": "RequireUppercaseCharacters",
                        "documentation": "\u003cp\u003eSpecifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\u003c/p\u003e \u003cp\u003eDefault value: false\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateAssumeRolePolicyResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateAssumeRolePolicyResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAssumeRolePolicy.html",
            "namespace": "Network.AWS.IAM.UpdateAssumeRolePolicy",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateAssumeRolePolicy",
            "method": "post",
            "documentation": "\u003cp\u003e Updates the policy that grants an entity permission to assume a role. For more information about roles, go to \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/WorkingWithRoles.html\"\u003eWorking with Roles\u003c/a\u003e. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 19,
                "ctor": "updateAssumeRolePolicy",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uarpRoleName",
                        "name": "_uarpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uarpPolicyDocument",
                        "name": "_uarpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 15,
                "name": "UpdateAssumeRolePolicy",
                "query": [
                    {
                        "field": "_uarpRoleName",
                        "locationName": "RoleName",
                        "type": "field"
                    },
                    {
                        "field": "_uarpPolicyDocument",
                        "locationName": "PolicyDocument",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uarpPolicyDocument",
                        "name": "_uarpPolicyDocument",
                        "shape": "policyDocumentType",
                        "locationName": "PolicyDocument",
                        "documentation": "\u003cp\u003eThe policy that grants an entity permission to assume the role.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uarpRoleName",
                        "name": "_uarpRoleName",
                        "shape": "roleNameType",
                        "locationName": "RoleName",
                        "documentation": "\u003cp\u003eThe name of the role to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateGroupResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateGroupResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateGroup.html",
            "namespace": "Network.AWS.IAM.UpdateGroup",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateGroup",
            "method": "post",
            "documentation": "\u003cp\u003eUpdates the name and/or the path of the specified group.\u003c/p\u003e \u003cimportant\u003e You should understand the implications of changing a group's path or name. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\"\u003eRenaming Users and Groups\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 15,
                "ctor": "updateGroup",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ugGroupName",
                        "name": "_ugGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e Name of the group to update. If you're changing the name of the group, this is the original name. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 13,
                "name": "UpdateGroup",
                "query": [
                    {
                        "field": "_ugGroupName",
                        "locationName": "GroupName",
                        "type": "field"
                    },
                    {
                        "field": "_ugNewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_ugNewGroupName",
                        "locationName": "NewGroupName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ugNewPath",
                        "name": "_ugNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003eNew path for the group. Only include this if changing the group's path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ugNewGroupName",
                        "name": "_ugNewGroupName",
                        "shape": "groupNameType",
                        "locationName": "NewGroupName",
                        "documentation": "\u003cp\u003eNew name for the group. Only include this if changing the group's name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ugGroupName",
                        "name": "_ugGroupName",
                        "shape": "groupNameType",
                        "locationName": "GroupName",
                        "documentation": "\u003cp\u003e Name of the group to update. If you're changing the name of the group, this is the original name. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ugNewGroupName",
                        "name": "_ugNewGroupName",
                        "shape": "groupNameType",
                        "locationName": "NewGroupName",
                        "documentation": "\u003cp\u003eNew name for the group. Only include this if changing the group's name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ugNewPath",
                        "name": "_ugNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003eNew path for the group. Only include this if changing the group's path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateLoginProfileResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateLoginProfileResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateLoginProfile.html",
            "namespace": "Network.AWS.IAM.UpdateLoginProfile",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateLoginProfile",
            "method": "post",
            "documentation": "\u003cp\u003eChanges the password for the specified user.\u003c/p\u003e \u003cp\u003eUsers can change their own passwords by calling \u003ca\u003eChangePassword\u003c/a\u003e. For more information about modifying passwords, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html\"\u003eManaging Passwords\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "updateLoginProfile",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ulpUserName",
                        "name": "_ulpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose password you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "UpdateLoginProfile",
                "query": [
                    {
                        "field": "_ulpUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_ulpPassword",
                        "locationName": "Password",
                        "type": "field"
                    },
                    {
                        "field": "_ulpPasswordResetRequired",
                        "locationName": "PasswordResetRequired",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ulpPassword",
                        "name": "_ulpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "\u003cp\u003eThe new password for the specified user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ulpPasswordResetRequired",
                        "name": "_ulpPasswordResetRequired",
                        "shape": "booleanObjectType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003eRequire the specified user to set a new password on next sign-in.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": "mapping _Sensitive",
                        "default": "Nothing",
                        "required": false,
                        "lens": "ulpPassword",
                        "name": "_ulpPassword",
                        "shape": "passwordType",
                        "locationName": "Password",
                        "documentation": "\u003cp\u003eThe new password for the specified user.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe (Sensitive Text)"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "ulpPasswordResetRequired",
                        "name": "_ulpPasswordResetRequired",
                        "shape": "booleanObjectType",
                        "locationName": "PasswordResetRequired",
                        "documentation": "\u003cp\u003eRequire the specified user to set a new password on next sign-in.\u003c/p\u003e",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "ulpUserName",
                        "name": "_ulpUserName",
                        "shape": "userNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user whose password you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateOpenIDConnectProviderThumbprintResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateOpenIDConnectProviderThumbprintResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateOpenIDConnectProviderThumbprint.html",
            "namespace": "Network.AWS.IAM.UpdateOpenIDConnectProviderThumbprint",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateOpenIDConnectProviderThumbprint",
            "method": "post",
            "documentation": "\u003cp\u003eReplaces the existing list of server certificate thumbprints with a new list. \u003c/p\u003e \u003cp\u003eThe list that you pass with this action completely replaces the existing list of thumbprints. (The lists are not merged.)\u003c/p\u003e \u003cp\u003eTypically, you need to update a thumbprint only when the identity provider's certificate changes, which occurs rarely. However, if the provider's certificate \u003ci\u003edoes\u003c/i\u003e change, any attempt to assume an IAM role that specifies the IAM provider as a principal will fail until the certificate thumbprint is updated.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 32,
                "ctor": "updateOpenIDConnectProviderThumbprint",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uoidcptOpenIDConnectProviderArn",
                        "name": "_uoidcptOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to update the thumbprint for. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "UpdateOpenIDConnectProviderThumbprint",
                "query": [
                    {
                        "field": "_uoidcptOpenIDConnectProviderArn",
                        "locationName": "OpenIDConnectProviderArn",
                        "type": "field"
                    },
                    {
                        "field": "_uoidcptThumbprintList",
                        "locationName": "ThumbprintList",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uoidcptThumbprintList",
                        "name": "_uoidcptThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uoidcptOpenIDConnectProviderArn",
                        "name": "_uoidcptOpenIDConnectProviderArn",
                        "shape": "arnType",
                        "locationName": "OpenIDConnectProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the IAM OpenID Connect (OIDC) provider to update the thumbprint for. You can get a list of OIDC provider ARNs by using the \u003ca\u003eListOpenIDConnectProviders\u003c/a\u003e action. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "mempty",
                        "required": true,
                        "lens": "uoidcptThumbprintList",
                        "name": "_uoidcptThumbprintList",
                        "shape": "thumbprintListType",
                        "locationName": "ThumbprintList",
                        "documentation": "\u003cp\u003eA list of certificate thumbprints that are associated with the specified IAM OpenID Connect provider. For more information, see \u003ca\u003eCreateOpenIDConnectProvider\u003c/a\u003e. \u003c/p\u003e",
                        "typeExposed": "[Text]",
                        "type": "[Text]"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Monoid"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "updateSAMLProviderResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "usamlprSAMLProviderArn",
                    "name": "_usamlprSAMLProviderArn",
                    "shape": "arnType",
                    "locationName": "SAMLProviderArn",
                    "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider that was updated.\u003c/p\u003e",
                    "typeExposed": "Maybe Text",
                    "type": "Maybe Text"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UpdateSAMLProviderResponse",
                "resultWrapper": "UpdateSAMLProviderResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usamlprSAMLProviderArn",
                        "name": "_usamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider that was updated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usamlprSAMLProviderArn",
                        "name": "_usamlprSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider that was updated.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSAMLProvider.html",
            "namespace": "Network.AWS.IAM.UpdateSAMLProvider",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateSAMLProvider",
            "method": "post",
            "documentation": "\u003cp\u003eUpdates the metadata document for an existing SAML provider.\u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 27,
                "ctor": "updateSAMLProvider",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usamlpSAMLMetadataDocument",
                        "name": "_usamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003e An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usamlpSAMLProviderArn",
                        "name": "_usamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 21,
                "name": "UpdateSAMLProvider",
                "query": [
                    {
                        "field": "_usamlpSAMLMetadataDocument",
                        "locationName": "SAMLMetadataDocument",
                        "type": "field"
                    },
                    {
                        "field": "_usamlpSAMLProviderArn",
                        "locationName": "SAMLProviderArn",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usamlpSAMLMetadataDocument",
                        "name": "_usamlpSAMLMetadataDocument",
                        "shape": "SAMLMetadataDocumentType",
                        "locationName": "SAMLMetadataDocument",
                        "documentation": "\u003cp\u003e An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usamlpSAMLProviderArn",
                        "name": "_usamlpSAMLProviderArn",
                        "shape": "arnType",
                        "locationName": "SAMLProviderArn",
                        "documentation": "\u003cp\u003eThe Amazon Resource Name (ARN) of the SAML provider to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateServerCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateServerCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateServerCertificate.html",
            "namespace": "Network.AWS.IAM.UpdateServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateServerCertificate",
            "method": "post",
            "documentation": "\u003cp\u003eUpdates the name and/or the path of the specified server certificate.\u003c/p\u003e \u003cimportant\u003e You should understand the implications of changing a server certificate's path or name. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingServerCerts.html\"\u003eManaging Server Certificates\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 29,
                "ctor": "updateServerCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usc1ServerCertificateName",
                        "name": "_usc1ServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate that you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 25,
                "name": "UpdateServerCertificate",
                "query": [
                    {
                        "field": "_usc1ServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    },
                    {
                        "field": "_usc1NewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_usc1NewServerCertificateName",
                        "locationName": "NewServerCertificateName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1NewPath",
                        "name": "_usc1NewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003e The new path for the server certificate. Include this only if you are updating the server certificate's path. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1NewServerCertificateName",
                        "name": "_usc1NewServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "NewServerCertificateName",
                        "documentation": "\u003cp\u003e The new name for the server certificate. Include this only if you are updating the server certificate's name. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1NewPath",
                        "name": "_usc1NewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003e The new path for the server certificate. Include this only if you are updating the server certificate's path. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1NewServerCertificateName",
                        "name": "_usc1NewServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "NewServerCertificateName",
                        "documentation": "\u003cp\u003e The new name for the server certificate. Include this only if you are updating the server certificate's name. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usc1ServerCertificateName",
                        "name": "_usc1ServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name of the server certificate that you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateSigningCertificateResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateSigningCertificateResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateSigningCertificate.html",
            "namespace": "Network.AWS.IAM.UpdateSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateSigningCertificate",
            "method": "post",
            "documentation": "\u003cp\u003e Changes the status of the specified signing certificate from active to disabled, or vice versa. This action can be used to disable a user's signing certificate as part of a certificate rotation work flow. \u003c/p\u003e \u003cp\u003e If the \u003ccode\u003eUserName\u003c/code\u003e field is not specified, the UserName is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e \u003cp\u003e For information about rotating certificates, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/ManagingCredentials.html\"\u003eManaging Keys and Certificates\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 17,
                "ctor": "updateSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscCertificateId",
                        "name": "_uscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID of the signing certificate you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscStatus",
                        "name": "_uscStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status you want to assign to the certificate. \u003ccode\u003eActive\u003c/code\u003e means the certificate can be used for API calls to AWS, while \u003ccode\u003eInactive\u003c/code\u003e means the certificate cannot be used. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 14,
                "name": "UpdateSigningCertificate",
                "query": [
                    {
                        "field": "_uscUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateId",
                        "locationName": "CertificateId",
                        "type": "field"
                    },
                    {
                        "field": "_uscStatus",
                        "locationName": "Status",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscUserName",
                        "name": "_uscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate belongs to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscCertificateId",
                        "name": "_uscCertificateId",
                        "shape": "certificateIdType",
                        "locationName": "CertificateId",
                        "documentation": "\u003cp\u003eThe ID of the signing certificate you want to update.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscStatus",
                        "name": "_uscStatus",
                        "shape": "statusType",
                        "locationName": "Status",
                        "documentation": "\u003cp\u003e The status you want to assign to the certificate. \u003ccode\u003eActive\u003c/code\u003e means the certificate can be used for API calls to AWS, while \u003ccode\u003eInactive\u003c/code\u003e means the certificate cannot be used. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscUserName",
                        "name": "_uscUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate belongs to.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "updateUserResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "query",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "UpdateUserResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateUser.html",
            "namespace": "Network.AWS.IAM.UpdateUser",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UpdateUser",
            "method": "post",
            "documentation": "\u003cp\u003eUpdates the name and/or the path of the specified user.\u003c/p\u003e \u003cimportant\u003e You should understand the implications of changing a user's path or name. For more information, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_WorkingWithGroupsAndUsers.html\"\u003eRenaming Users and Groups\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/important\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 14,
                "ctor": "updateUser",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uuUserName",
                        "name": "_uuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003e Name of the user to update. If you're changing the name of the user, this is the original user name. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 12,
                "name": "UpdateUser",
                "query": [
                    {
                        "field": "_uuUserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_uuNewPath",
                        "locationName": "NewPath",
                        "type": "field"
                    },
                    {
                        "field": "_uuNewUserName",
                        "locationName": "NewUserName",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uuNewPath",
                        "name": "_uuNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003eNew path for the user. Include this parameter only if you're changing the user's path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uuNewUserName",
                        "name": "_uuNewUserName",
                        "shape": "userNameType",
                        "locationName": "NewUserName",
                        "documentation": "\u003cp\u003eNew name for the user. Include this parameter only if you're changing the user's name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uuNewPath",
                        "name": "_uuNewPath",
                        "shape": "pathType",
                        "locationName": "NewPath",
                        "documentation": "\u003cp\u003eNew path for the user. Include this parameter only if you're changing the user's path.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uuNewUserName",
                        "name": "_uuNewUserName",
                        "shape": "userNameType",
                        "locationName": "NewUserName",
                        "documentation": "\u003cp\u003eNew name for the user. Include this parameter only if you're changing the user's name.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uuUserName",
                        "name": "_uuUserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003e Name of the user to update. If you're changing the name of the user, this is the original user name. \u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "uploadServerCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "required": false,
                    "lens": "uscrServerCertificateMetadata",
                    "name": "_uscrServerCertificateMetadata",
                    "shape": "ServerCertificateMetadata",
                    "locationName": "ServerCertificateMetadata",
                    "documentation": "\u003cp\u003e The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key. \u003c/p\u003e",
                    "typeExposed": "Maybe ServerCertificateMetadata",
                    "type": "Maybe ServerCertificateMetadata"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UploadServerCertificateResponse",
                "resultWrapper": "UploadServerCertificateResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscrServerCertificateMetadata",
                        "name": "_uscrServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "\u003cp\u003e The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key. \u003c/p\u003e",
                        "typeExposed": "Maybe ServerCertificateMetadata",
                        "type": "Maybe ServerCertificateMetadata"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscrServerCertificateMetadata",
                        "name": "_uscrServerCertificateMetadata",
                        "shape": "ServerCertificateMetadata",
                        "locationName": "ServerCertificateMetadata",
                        "documentation": "\u003cp\u003e The meta information of the uploaded server certificate without its certificate body, certificate chain, and private key. \u003c/p\u003e",
                        "typeExposed": "Maybe ServerCertificateMetadata",
                        "type": "Maybe ServerCertificateMetadata"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadServerCertificate.html",
            "namespace": "Network.AWS.IAM.UploadServerCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UploadServerCertificate",
            "method": "post",
            "documentation": "\u003cp\u003e Uploads a server certificate entity for the AWS account. The server certificate entity includes a public key certificate, a private key, and an optional certificate chain, which should all be PEM-encoded. \u003c/p\u003e \u003cp\u003e For information about the number of server certificates you can upload, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/LimitationsOnEntities.html\"\u003eLimitations on IAM Entities\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 25,
                "ctor": "uploadServerCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscServerCertificateName",
                        "name": "_uscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name for the server certificate. Do not include the path in this value.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscCertificateBody",
                        "name": "_uscCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate in PEM-encoded format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscPrivateKey",
                        "name": "_uscPrivateKey",
                        "shape": "privateKeyType",
                        "locationName": "PrivateKey",
                        "documentation": "\u003cp\u003eThe contents of the private key in PEM-encoded format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 22,
                "name": "UploadServerCertificate",
                "query": [
                    {
                        "field": "_uscPath",
                        "locationName": "Path",
                        "type": "field"
                    },
                    {
                        "field": "_uscServerCertificateName",
                        "locationName": "ServerCertificateName",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateBody",
                        "locationName": "CertificateBody",
                        "type": "field"
                    },
                    {
                        "field": "_uscPrivateKey",
                        "locationName": "PrivateKey",
                        "type": "field"
                    },
                    {
                        "field": "_uscCertificateChain",
                        "locationName": "CertificateChain",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscPath",
                        "name": "_uscPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the server certificate. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscCertificateChain",
                        "name": "_uscCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "\u003cp\u003e The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscCertificateBody",
                        "name": "_uscCertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the public key certificate in PEM-encoded format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscCertificateChain",
                        "name": "_uscCertificateChain",
                        "shape": "certificateChainType",
                        "locationName": "CertificateChain",
                        "documentation": "\u003cp\u003e The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain. \u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "uscPath",
                        "name": "_uscPath",
                        "shape": "pathType",
                        "locationName": "Path",
                        "documentation": "\u003cp\u003e The path for the server certificate. For more information about paths, see \u003ca href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html\"\u003eIAM Identifiers\u003c/a\u003e in the \u003ci\u003eUsing IAM\u003c/i\u003e guide. \u003c/p\u003e \u003cp\u003eThis parameter is optional. If it is not included, it defaults to a slash (/).\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": "_Sensitive",
                        "lensMapping": "_Sensitive",
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscPrivateKey",
                        "name": "_uscPrivateKey",
                        "shape": "privateKeyType",
                        "locationName": "PrivateKey",
                        "documentation": "\u003cp\u003eThe contents of the private key in PEM-encoded format.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Sensitive Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscServerCertificateName",
                        "name": "_uscServerCertificateName",
                        "shape": "serverCertificateNameType",
                        "locationName": "ServerCertificateName",
                        "documentation": "\u003cp\u003eThe name for the server certificate. Do not include the path in this value.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "IAM",
            "response": {
                "deriving": [
                    "Eq",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "uploadSigningCertificateResponse",
                "headerPad": 0,
                "field": {
                    "location": "querystring",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "required": true,
                    "lens": "uscrCertificate",
                    "name": "_uscrCertificate",
                    "shape": "SigningCertificate",
                    "locationName": "Certificate",
                    "documentation": "\u003cp\u003eInformation about the certificate.\u003c/p\u003e",
                    "typeExposed": "SigningCertificate",
                    "type": "SigningCertificate"
                },
                "contents": [],
                "wrapper": false,
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscrCertificate",
                        "name": "_uscrCertificate",
                        "shape": "SigningCertificate",
                        "locationName": "Certificate",
                        "documentation": "\u003cp\u003eInformation about the certificate.\u003c/p\u003e",
                        "typeExposed": "SigningCertificate",
                        "type": "SigningCertificate"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "UploadSigningCertificateResponse",
                "resultWrapper": "UploadSigningCertificateResult",
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "uscrCertificate",
                        "name": "_uscrCertificate",
                        "shape": "SigningCertificate",
                        "locationName": "Certificate",
                        "documentation": "\u003cp\u003eInformation about the certificate.\u003c/p\u003e",
                        "typeExposed": "SigningCertificate",
                        "type": "SigningCertificate"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/IAM/latest/APIReference/API_UploadSigningCertificate.html",
            "namespace": "Network.AWS.IAM.UploadSigningCertificate",
            "protocol": "query",
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.IAM.Types"
            ],
            "pager": null,
            "name": "UploadSigningCertificate",
            "method": "post",
            "documentation": "\u003cp\u003e Uploads an X.509 signing certificate and associates it with the specified user. Some AWS services use X.509 signing certificates to validate requests that are signed with a corresponding private key. When you upload the certificate, its default status is \u003ccode\u003eActive\u003c/code\u003e. \u003c/p\u003e \u003cp\u003e If the \u003ccode\u003eUserName\u003c/code\u003e field is not specified, the user name is determined implicitly based on the AWS access key ID used to sign the request. Because this action works for access keys under the AWS account, you can use this action to manage root credentials even if the AWS account has no associated users. \u003c/p\u003e",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "query",
                "fieldPad": 20,
                "ctor": "uploadSigningCertificate",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "protocol": "query",
                "payload": null,
                "required": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usc1CertificateBody",
                        "name": "_usc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 16,
                "name": "UploadSigningCertificate",
                "query": [
                    {
                        "field": "_usc1UserName",
                        "locationName": "UserName",
                        "type": "field"
                    },
                    {
                        "field": "_usc1CertificateBody",
                        "locationName": "CertificateBody",
                        "type": "field"
                    }
                ],
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1UserName",
                        "name": "_usc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate is for.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "required": true,
                        "lens": "usc1CertificateBody",
                        "name": "_usc1CertificateBody",
                        "shape": "certificateBodyType",
                        "locationName": "CertificateBody",
                        "documentation": "\u003cp\u003eThe contents of the signing certificate.\u003c/p\u003e",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "required": false,
                        "lens": "usc1UserName",
                        "name": "_usc1UserName",
                        "shape": "existingUserNameType",
                        "locationName": "UserName",
                        "documentation": "\u003cp\u003eThe name of the user the signing certificate is for.\u003c/p\u003e",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        }
    ]
}