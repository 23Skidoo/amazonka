{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "RDS",
        "error": "RDSError",
        "namespace": "Network.AWS.RDS",
        "protocol": "query",
        "imports": [
            "Network.AWS.RDS.AddSourceIdentifierToSubscription",
            "Network.AWS.RDS.AddTagsToResource",
            "Network.AWS.RDS.AuthorizeDBSecurityGroupIngress",
            "Network.AWS.RDS.CopyDBParameterGroup",
            "Network.AWS.RDS.CopyDBSnapshot",
            "Network.AWS.RDS.CopyOptionGroup",
            "Network.AWS.RDS.CreateDBInstance",
            "Network.AWS.RDS.CreateDBInstanceReadReplica",
            "Network.AWS.RDS.CreateDBParameterGroup",
            "Network.AWS.RDS.CreateDBSecurityGroup",
            "Network.AWS.RDS.CreateDBSnapshot",
            "Network.AWS.RDS.CreateDBSubnetGroup",
            "Network.AWS.RDS.CreateEventSubscription",
            "Network.AWS.RDS.CreateOptionGroup",
            "Network.AWS.RDS.DeleteDBInstance",
            "Network.AWS.RDS.DeleteDBParameterGroup",
            "Network.AWS.RDS.DeleteDBSecurityGroup",
            "Network.AWS.RDS.DeleteDBSnapshot",
            "Network.AWS.RDS.DeleteDBSubnetGroup",
            "Network.AWS.RDS.DeleteEventSubscription",
            "Network.AWS.RDS.DeleteOptionGroup",
            "Network.AWS.RDS.DescribeDBEngineVersions",
            "Network.AWS.RDS.DescribeDBInstances",
            "Network.AWS.RDS.DescribeDBLogFiles",
            "Network.AWS.RDS.DescribeDBParameterGroups",
            "Network.AWS.RDS.DescribeDBParameters",
            "Network.AWS.RDS.DescribeDBSecurityGroups",
            "Network.AWS.RDS.DescribeDBSnapshots",
            "Network.AWS.RDS.DescribeDBSubnetGroups",
            "Network.AWS.RDS.DescribeEngineDefaultParameters",
            "Network.AWS.RDS.DescribeEventCategories",
            "Network.AWS.RDS.DescribeEventSubscriptions",
            "Network.AWS.RDS.DescribeEvents",
            "Network.AWS.RDS.DescribeOptionGroupOptions",
            "Network.AWS.RDS.DescribeOptionGroups",
            "Network.AWS.RDS.DescribeOrderableDBInstanceOptions",
            "Network.AWS.RDS.DescribeReservedDBInstances",
            "Network.AWS.RDS.DescribeReservedDBInstancesOfferings",
            "Network.AWS.RDS.DownloadDBLogFilePortion",
            "Network.AWS.RDS.ListTagsForResource",
            "Network.AWS.RDS.ModifyDBInstance",
            "Network.AWS.RDS.ModifyDBParameterGroup",
            "Network.AWS.RDS.ModifyDBSubnetGroup",
            "Network.AWS.RDS.ModifyEventSubscription",
            "Network.AWS.RDS.ModifyOptionGroup",
            "Network.AWS.RDS.PromoteReadReplica",
            "Network.AWS.RDS.PurchaseReservedDBInstancesOffering",
            "Network.AWS.RDS.RebootDBInstance",
            "Network.AWS.RDS.RemoveSourceIdentifierFromSubscription",
            "Network.AWS.RDS.RemoveTagsFromResource",
            "Network.AWS.RDS.ResetDBParameterGroup",
            "Network.AWS.RDS.RestoreDBInstanceFromDBSnapshot",
            "Network.AWS.RDS.RestoreDBInstanceToPointInTime",
            "Network.AWS.RDS.RevokeDBSecurityGroupIngress",
            "Network.AWS.RDS.Types"
        ],
        "name": "Amazon Relational Database Service",
        "version": "2014-09-01",
        "documentation": "\u003cfullname\u003eAmazon Relational Database Service\u003c/fullname\u003e \u003cp\u003e Amazon Relational Database Service (Amazon RDS) is a web service that makes it easier to set up, operate, and scale a relational database in the cloud. It provides cost-efficient, resizable capacity for an industry-standard relational database and manages common database administration tasks, freeing up developers to focus on what makes their applications and businesses unique. \u003c/p\u003e \u003cp\u003e Amazon RDS gives you access to the capabilities of a MySQL, PostgreSQL, Microsoft SQL Server, or Oracle database server. This means the code, applications, and tools you already use today with your existing databases work with Amazon RDS without modification. Amazon RDS automatically backs up your database and maintains the database software that powers your DB instance. Amazon RDS is flexible: you can scale your database instance's compute resources and storage capacity to meet your application's demand. As with all Amazon Web Services, there are no up-front investments, and you pay only for the resources you use. \u003c/p\u003e \u003cp\u003e This is an interface reference for Amazon RDS. It contains documentation for a programming or command line interface you can use to manage Amazon RDS. Note that Amazon RDS is asynchronous, which means that some interfaces may require techniques such as polling or callback functions to determine when a command has been applied. In this reference, the parameter descriptions indicate whether a command is applied immediately, on the next instance reboot, or during the maintenance window. For a summary of the Amazon RDS interfaces, go to \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Welcome.html#Welcome.Interfaces\"\u003eAvailable RDS Interfaces\u003c/a\u003e. \u003c/p\u003e",
        "xmlNamespace": "http://rds.amazonaws.com/doc/2014-09-01/",
        "endpoint": "regional",
        "endpointPrefix": "rds"
    },
    "cabal": {
        "library": "amazonka-rds",
        "modules": [
            "Network.AWS.RDS",
            "Network.AWS.RDS.AddSourceIdentifierToSubscription",
            "Network.AWS.RDS.AddTagsToResource",
            "Network.AWS.RDS.AuthorizeDBSecurityGroupIngress",
            "Network.AWS.RDS.CopyDBParameterGroup",
            "Network.AWS.RDS.CopyDBSnapshot",
            "Network.AWS.RDS.CopyOptionGroup",
            "Network.AWS.RDS.CreateDBInstance",
            "Network.AWS.RDS.CreateDBInstanceReadReplica",
            "Network.AWS.RDS.CreateDBParameterGroup",
            "Network.AWS.RDS.CreateDBSecurityGroup",
            "Network.AWS.RDS.CreateDBSnapshot",
            "Network.AWS.RDS.CreateDBSubnetGroup",
            "Network.AWS.RDS.CreateEventSubscription",
            "Network.AWS.RDS.CreateOptionGroup",
            "Network.AWS.RDS.DeleteDBInstance",
            "Network.AWS.RDS.DeleteDBParameterGroup",
            "Network.AWS.RDS.DeleteDBSecurityGroup",
            "Network.AWS.RDS.DeleteDBSnapshot",
            "Network.AWS.RDS.DeleteDBSubnetGroup",
            "Network.AWS.RDS.DeleteEventSubscription",
            "Network.AWS.RDS.DeleteOptionGroup",
            "Network.AWS.RDS.DescribeDBEngineVersions",
            "Network.AWS.RDS.DescribeDBInstances",
            "Network.AWS.RDS.DescribeDBLogFiles",
            "Network.AWS.RDS.DescribeDBParameterGroups",
            "Network.AWS.RDS.DescribeDBParameters",
            "Network.AWS.RDS.DescribeDBSecurityGroups",
            "Network.AWS.RDS.DescribeDBSnapshots",
            "Network.AWS.RDS.DescribeDBSubnetGroups",
            "Network.AWS.RDS.DescribeEngineDefaultParameters",
            "Network.AWS.RDS.DescribeEventCategories",
            "Network.AWS.RDS.DescribeEventSubscriptions",
            "Network.AWS.RDS.DescribeEvents",
            "Network.AWS.RDS.DescribeOptionGroupOptions",
            "Network.AWS.RDS.DescribeOptionGroups",
            "Network.AWS.RDS.DescribeOrderableDBInstanceOptions",
            "Network.AWS.RDS.DescribeReservedDBInstances",
            "Network.AWS.RDS.DescribeReservedDBInstancesOfferings",
            "Network.AWS.RDS.DownloadDBLogFilePortion",
            "Network.AWS.RDS.ListTagsForResource",
            "Network.AWS.RDS.ModifyDBInstance",
            "Network.AWS.RDS.ModifyDBParameterGroup",
            "Network.AWS.RDS.ModifyDBSubnetGroup",
            "Network.AWS.RDS.ModifyEventSubscription",
            "Network.AWS.RDS.ModifyOptionGroup",
            "Network.AWS.RDS.PromoteReadReplica",
            "Network.AWS.RDS.PurchaseReservedDBInstancesOffering",
            "Network.AWS.RDS.RebootDBInstance",
            "Network.AWS.RDS.RemoveSourceIdentifierFromSubscription",
            "Network.AWS.RDS.RemoveTagsFromResource",
            "Network.AWS.RDS.ResetDBParameterGroup",
            "Network.AWS.RDS.RestoreDBInstanceFromDBSnapshot",
            "Network.AWS.RDS.RestoreDBInstanceToPointInTime",
            "Network.AWS.RDS.RevokeDBSecurityGroupIngress",
            "Network.AWS.RDS.Types"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "OptionGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogOptions",
                    "type": "List Option"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogOptionGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogOptionGroupDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogEngineName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogMajorEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogAllowsVpcAndNonVpcInstanceMemberships",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogVpcId",
                    "type": "Maybe Text"
                }
            ]
        },
        "DBParameterGroupStatus": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgsDBParameterGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgsParameterApplyStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "Event": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveEventCategories",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveSourceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveSourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveMessage",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "eveDate",
                    "type": "Maybe (Time RFC822)"
                }
            ]
        },
        "DBSecurityGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgEC2SecurityGroups",
                    "type": "List EC2SecurityGroup"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgIPRanges",
                    "type": "List IPRange"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgOwnerId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgDBSecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgDBSecurityGroupDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgVpcId",
                    "type": "Maybe Text"
                }
            ]
        },
        "Tag": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagKey",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "tagValue",
                    "type": "Maybe Text"
                }
            ]
        },
        "DBEngineVersion": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevSupportedCharacterSets",
                    "type": "List CharacterSet"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevEngine",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevDBParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevDBEngineDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevDBEngineVersionDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbevDefaultCharacterSet",
                    "type": "Maybe CharacterSet"
                }
            ]
        },
        "DBSnapshot": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsDBSnapshotIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsDBInstanceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsSnapshotCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsEngine",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsAllocatedStorage",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsPort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsAvailabilityZone",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsVpcId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsInstanceCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsMasterUsername",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsLicenseModel",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsSnapshotType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsIops",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsOptionGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsPercentProgress",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsSourceRegion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsStorageType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsTdeCredentialArn",
                    "type": "Maybe Text"
                }
            ]
        },
        "DBSecurityGroupMembership": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgmDBSecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsgmStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "EC2SecurityGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgEC2SecurityGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgEC2SecurityGroupId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecsgEC2SecurityGroupOwnerId",
                    "type": "Maybe Text"
                }
            ]
        },
        "DBParameterGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgDBParameterGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgDBParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgDescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "ReservedDBInstancesOffering": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioRecurringCharges",
                    "type": "List RecurringCharge"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioReservedDBInstancesOfferingId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioDBInstanceClass",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioDuration",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioFixedPrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioUsagePrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioCurrencyCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioProductDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioOfferingType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbioMultiAZ",
                    "type": "Maybe Bool"
                }
            ]
        },
        "CharacterSet": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csCharacterSetName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "csCharacterSetDescription",
                    "type": "Maybe Text"
                }
            ]
        },
        "Subnet": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetAvailabilityZone",
                    "type": "Maybe AvailabilityZone"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "subSubnetStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "ReservedDBInstance": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiRecurringCharges",
                    "type": "List RecurringCharge"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiReservedDBInstanceId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiReservedDBInstancesOfferingId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiDBInstanceClass",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiStartTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiDuration",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiFixedPrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiUsagePrice",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiCurrencyCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiDBInstanceCount",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiProductDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiOfferingType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiMultiAZ",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbiState",
                    "type": "Maybe Text"
                }
            ]
        },
        "namespace": "Network.AWS.RDS.Types",
        "EngineDefaults": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "edParameters",
                    "type": "List Parameter"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "edDBParameterGroupFamily",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "edMarker",
                    "type": "Maybe Text"
                }
            ]
        },
        "imports": [],
        "OptionGroupOption": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoOptionsDependedOn",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoOptionGroupOptionSettings",
                    "type": "List OptionGroupOptionSetting"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoEngineName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoMajorEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoMinimumRequiredMinorEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoPortRequired",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoDefaultPort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoPersistent",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogoPermanent",
                    "type": "Maybe Bool"
                }
            ]
        },
        "DBInstance": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBSecurityGroups",
                    "type": "List DBSecurityGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiVpcSecurityGroups",
                    "type": "List VpcSecurityGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBParameterGroups",
                    "type": "List DBParameterGroupStatus"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiReadReplicaDBInstanceIdentifiers",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiOptionGroupMemberships",
                    "type": "List OptionGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiStatusInfos",
                    "type": "List DBInstanceStatusInfo"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBInstanceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBInstanceClass",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiEngine",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBInstanceStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiMasterUsername",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiEndpoint",
                    "type": "Maybe Endpoint"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiAllocatedStorage",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiInstanceCreateTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiPreferredBackupWindow",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiBackupRetentionPeriod",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiAvailabilityZone",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiDBSubnetGroup",
                    "type": "Maybe DBSubnetGroup"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiPreferredMaintenanceWindow",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiPendingModifiedValues",
                    "type": "Maybe PendingModifiedValues"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiLatestRestorableTime",
                    "type": "Maybe (Time RFC822)"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiMultiAZ",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiAutoMinorVersionUpgrade",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiReadReplicaSourceDBInstanceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiLicenseModel",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiIops",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiCharacterSetName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiSecondaryAvailabilityZone",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiPubliclyAccessible",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiStorageType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbiTdeCredentialArn",
                    "type": "Maybe Text"
                }
            ]
        },
        "AvailabilityZone": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "azName",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "EventSubscription": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSourceIdsList",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esEventCategoriesList",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esCustomerAwsId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esCustSubscriptionId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSnsTopicArn",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSubscriptionCreationTime",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esSourceType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "esEnabled",
                    "type": "Maybe Bool"
                }
            ]
        },
        "DBSubnetGroup": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsg1Subnets",
                    "type": "List Subnet"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsg1DBSubnetGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsg1DBSubnetGroupDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsg1VpcId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbsg1SubnetGroupStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "DBInstanceStatusInfo": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbisiStatusType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbisiNormal",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbisiStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dbisiMessage",
                    "type": "Maybe Text"
                }
            ]
        },
        "OptionSetting": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osApplyType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osDataType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osAllowedValues",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osIsModifiable",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osIsCollection",
                    "type": "Maybe Bool"
                }
            ]
        },
        "DescribeDBLogFilesDetails": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ddblfdLogFileName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ddblfdLastWritten",
                    "type": "Maybe Integer"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ddblfdSize",
                    "type": "Maybe Integer"
                }
            ]
        },
        "OrderableDBInstanceOption": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioAvailabilityZones",
                    "type": "List AvailabilityZone"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioEngine",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioDBInstanceClass",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioLicenseModel",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioMultiAZCapable",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioReadReplicaCapable",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioVpc",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioStorageType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "odbioSupportsIops",
                    "type": "Maybe Bool"
                }
            ]
        },
        "Filter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "filName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "filValues",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "RecurringCharge": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcRecurringChargeAmount",
                    "type": "Maybe Double"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "rcRecurringChargeFrequency",
                    "type": "Maybe Text"
                }
            ]
        },
        "Endpoint": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "endAddress",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "endPort",
                    "type": "Maybe Int"
                }
            ]
        },
        "OptionConfiguration": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocOptionName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocDBSecurityGroupMemberships",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocVpcSecurityGroupMemberships",
                    "type": "List Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocOptionSettings",
                    "type": "List OptionSetting"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ocPort",
                    "type": "Maybe Int"
                }
            ]
        },
        "Option": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optOptionSettings",
                    "type": "List OptionSetting"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optDBSecurityGroupMemberships",
                    "type": "List DBSecurityGroupMembership"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optVpcSecurityGroupMemberships",
                    "type": "List VpcSecurityGroupMembership"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optOptionName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optOptionDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optPersistent",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optPermanent",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "optPort",
                    "type": "Maybe Int"
                }
            ]
        },
        "IPRange": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iprStatus",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "iprCIDRIP",
                    "type": "Maybe Text"
                }
            ]
        },
        "OptionGroupMembership": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogmOptionGroupName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogmStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "EventCategoriesMap": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmEventCategories",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmSourceType",
                    "type": "Maybe Text"
                }
            ]
        },
        "PendingModifiedValues": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvDBInstanceClass",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvAllocatedStorage",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvMasterUserPassword",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvPort",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvBackupRetentionPeriod",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvMultiAZ",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvIops",
                    "type": "Maybe Int"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvDBInstanceIdentifier",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "pmvStorageType",
                    "type": "Maybe Text"
                }
            ]
        },
        "VpcSecurityGroupMembership": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vsgmVpcSecurityGroupId",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "vsgmStatus",
                    "type": "Maybe Text"
                }
            ]
        },
        "Parameter": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parParameterName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parParameterValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parSource",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parApplyType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parDataType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parAllowedValues",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parIsModifiable",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parMinimumEngineVersion",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "parApplyMethod",
                    "type": "Maybe Text"
                }
            ]
        },
        "OptionGroupOptionSetting": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosSettingName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosSettingDescription",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosDefaultValue",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosApplyType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosAllowedValues",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "ogosIsModifiable",
                    "type": "Maybe Bool"
                }
            ]
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "prrrDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "PromoteReadReplicaResult",
                "resultWrapper": "PromoteReadReplicaResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.PromoteReadReplica",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "PromoteReadReplica",
            "method": "post",
            "documentation": "\u003cp\u003e Promotes a read replica DB instance to a standalone DB instance. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prrmDBInstanceIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "PromoteReadReplicaMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prrmBackupRetentionPeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prrmPreferredBackupWindow",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbevmDBEngineVersions",
                        "type": "List DBEngineVersion"
                    }
                ],
                "name": "DBEngineVersionMessage",
                "resultWrapper": "DescribeDBEngineVersionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbevmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBEngineVersions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBEngineVersions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of the available DB engines. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBEngineVersionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmEngine",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmEngineVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmDBParameterGroupFamily",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmDefaultOnly",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbevmListSupportedCharacterSets",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbsr1DBSnapshot",
                    "type": "Maybe DBSnapshot"
                },
                "wrapper": true,
                "name": "CopyDBSnapshotResult",
                "resultWrapper": "CopyDBSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CopyDBSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CopyDBSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Copies the specified DBSnapshot. The source DBSnapshot must be in the \"available\" state. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsmSourceDBSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsmTargetDBSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CopyDBSnapshotMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "asitsrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "AddSourceIdentifierToSubscriptionResult",
                "resultWrapper": "AddSourceIdentifierToSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.AddSourceIdentifierToSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "AddSourceIdentifierToSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eAdds a source identifier to an existing RDS event notification subscription.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asitsmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "asitsmSourceIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "AddSourceIdentifierToSubscriptionMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mdbirDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "ModifyDBInstanceResult",
                "resultWrapper": "ModifyDBInstanceResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ModifyDBInstance",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ModifyDBInstance",
            "method": "post",
            "documentation": "\u003cp\u003e Modify settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimDBSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimVpcSecurityGroupIds",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyDBInstanceMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimAllocatedStorage",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimApplyImmediately",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimMasterUserPassword",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimDBParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimBackupRetentionPeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimPreferredBackupWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimPreferredMaintenanceWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimEngineVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimAllowMajorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimAutoMinorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimIops",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimOptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimNewDBInstanceIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimStorageType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimTdeCredentialArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbimTdeCredentialPassword",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mesrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "ModifyEventSubscriptionResult",
                "resultWrapper": "ModifyEventSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ModifyEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ModifyEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eModifies an existing RDS event notification subscription. Note that you cannot modify the source identifiers using this call; to change source identifiers for a subscription, use the \u003ca\u003eAddSourceIdentifierToSubscription\u003c/a\u003e and \u003ca\u003eRemoveSourceIdentifierFromSubscription\u003c/a\u003e calls.\u003c/p\u003e \u003cp\u003eYou can see a list of the event categories for a given SourceType in the \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"\u003eEvents\u003c/a\u003e topic in the Amazon RDS User Guide or by using the \u003cb\u003eDescribeEventCategories\u003c/b\u003e action.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmEventCategories",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyEventSubscriptionMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSnsTopicArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mesmEnabled",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emEvents",
                        "type": "List Event"
                    }
                ],
                "name": "EventsMessage",
                "resultWrapper": "DescribeEventsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "emMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeEvents",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeEvents",
            "method": "post",
            "documentation": "\u003cp\u003e Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. Events specific to a particular DB instance, DB security group, database snapshot, or DB parameter group can be obtained by providing the name as a parameter. By default, the past hour of events are returned. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demEventCategories",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeEventsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demSourceIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demStartTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demEndTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demDuration",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "demMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dedprEngineDefaults",
                    "type": "Maybe EngineDefaults"
                },
                "wrapper": true,
                "name": "DescribeEngineDefaultParametersResult",
                "resultWrapper": "DescribeEngineDefaultParametersResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.DescribeEngineDefaultParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeEngineDefaultParameters",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the default engine and system parameter information for the specified database engine. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dedpmDBParameterGroupFamily",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dedpmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeEngineDefaultParametersMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dedpmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dedpmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ogOptionGroupsList",
                        "type": "List OptionGroup"
                    }
                ],
                "name": "OptionGroups",
                "resultWrapper": "DescribeOptionGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ogMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeOptionGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeOptionGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Describes the available option groups. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1Filters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeOptionGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1OptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1Marker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1EngineName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogm1MajorEngineVersion",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfrDescribeDBLogFiles",
                        "type": "List DescribeDBLogFilesDetails"
                    }
                ],
                "name": "DescribeDBLogFilesResponse",
                "resultWrapper": "DescribeDBLogFilesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfrMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBLogFiles",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBLogFiles",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of DB log files for the DB instance. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBLogFilesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmFilenameContains",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmFileLastWritten",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmFileSize",
                        "type": "Maybe Integer"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mdbsgrDBSubnetGroup",
                    "type": "Maybe DBSubnetGroup"
                },
                "wrapper": true,
                "name": "ModifyDBSubnetGroupResult",
                "resultWrapper": "ModifyDBSubnetGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ModifyDBSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ModifyDBSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbsgmDBSubnetGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbsgmSubnetIds",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyDBSubnetGroupMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbsgmDBSubnetGroupDescription",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "tlmTagList",
                    "type": "List Tag"
                },
                "wrapper": false,
                "name": "TagListMessage",
                "resultWrapper": "ListTagsForResourceResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ListTagsForResource",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ListTagsForResource",
            "method": "post",
            "documentation": "\u003cp\u003e Lists all tags on an Amazon RDS resource.\u003c/p\u003e \u003cp\u003eFor an overview on tagging an Amazon RDS resource, see \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\"\u003eTagging Amazon RDS Resources\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ltfrmResourceName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ltfrmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "ListTagsForResourceMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.DeleteOptionGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteOptionGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes an existing option group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dogmOptionGroupName",
                    "type": "Text"
                },
                "name": "DeleteOptionGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbimReservedDBInstances",
                        "type": "List ReservedDBInstance"
                    }
                ],
                "name": "ReservedDBInstanceMessage",
                "resultWrapper": "DescribeReservedDBInstancesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbimMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeReservedDBInstances",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeReservedDBInstances",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about reserved DB instances for this account, or about a specified reserved DB instance. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeReservedDBInstancesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimReservedDBInstanceId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimReservedDBInstancesOfferingId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimDuration",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimProductDescription",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimOfferingType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbimMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbpgrDBParameterGroup",
                    "type": "Maybe DBParameterGroup"
                },
                "wrapper": true,
                "name": "CopyDBParameterGroupResult",
                "resultWrapper": "CopyDBParameterGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CopyDBParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CopyDBParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Copies the specified DBParameterGroup. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgm1SourceDBParameterGroupIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgm1TargetDBParameterGroupIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgm1TargetDBParameterGroupDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgm1Tags",
                        "type": "List Tag"
                    }
                ],
                "name": "CopyDBParameterGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rsifsrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "RemoveSourceIdentifierFromSubscriptionResult",
                "resultWrapper": "RemoveSourceIdentifierFromSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.RemoveSourceIdentifierFromSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RemoveSourceIdentifierFromSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eRemoves a source identifier from an existing RDS event notification subscription.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rsifsmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rsifsmSourceIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "RemoveSourceIdentifierFromSubscriptionMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.RemoveTagsFromResource",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RemoveTagsFromResource",
            "method": "post",
            "documentation": "\u003cp\u003e Removes metadata tags from an Amazon RDS resource.\u003c/p\u003e \u003cp\u003eFor an overview on tagging an Amazon RDS resource, see \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\"\u003eTagging Amazon RDS Resources\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtfrmResourceName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rtfrmTagKeys",
                        "type": "List Text"
                    }
                ],
                "name": "RemoveTagsFromResourceMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbifdbsrDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "RestoreDBInstanceFromDBSnapshotResult",
                "resultWrapper": "RestoreDBInstanceFromDBSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.RestoreDBInstanceFromDBSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RestoreDBInstanceFromDBSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new DB instance from a DB snapshot. The target database is created from the source database restore point with the same configuration as the original source database, except that the new RDS instance is created with the default security group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmDBSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "RestoreDBInstanceFromDBSnapshotMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmDBSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmAutoMinorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmLicenseModel",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmDBName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmEngine",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmIops",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmOptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmStorageType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmTdeCredentialArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbifdbsmTdeCredentialPassword",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cesrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "CreateEventSubscriptionResult",
                "resultWrapper": "CreateEventSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eCreates an RDS event notification subscription. This action requires a topic ARN (Amazon Resource Name) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.\u003c/p\u003e \u003cp\u003eYou can specify the type of source (SourceType) you want to be notified of, provide a list of RDS sources (SourceIds) that triggers the events, and provide a list of event categories (EventCategories) for events you want to be notified of. For example, you can specify SourceType = db-instance, SourceIds = mydbinstance1, mydbinstance2 and EventCategories = Availability, Backup.\u003c/p\u003e \u003cp\u003eIf you specify both the SourceType and SourceIds, such as SourceType = db-instance and SourceIdentifier = myDBInstance1, you will be notified of all the db-instance events for the specified source. If you specify a SourceType but do not specify a SourceIdentifier, you will receive notice of the events for that source type for all your RDS sources. If you do not specify either the SourceType nor the SourceIdentifier, you will be notified of events generated from all RDS sources belonging to your customer account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSubscriptionName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSnsTopicArn",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmEventCategories",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSourceIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateEventSubscriptionMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmSourceType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cesmEnabled",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "prdbiorReservedDBInstance",
                    "type": "Maybe ReservedDBInstance"
                },
                "wrapper": true,
                "name": "PurchaseReservedDBInstancesOfferingResult",
                "resultWrapper": "PurchaseReservedDBInstancesOfferingResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.PurchaseReservedDBInstancesOffering",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "PurchaseReservedDBInstancesOffering",
            "method": "post",
            "documentation": "\u003cp\u003e Purchases a reserved DB instance offering. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prdbiomReservedDBInstancesOfferingId",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prdbiomTags",
                        "type": "List Tag"
                    }
                ],
                "name": "PurchaseReservedDBInstancesOfferingMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prdbiomReservedDBInstanceId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "prdbiomDBInstanceCount",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbirDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "CreateDBInstanceResult",
                "resultWrapper": "CreateDBInstanceResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBInstance",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBInstance",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new DB instance. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimAllocatedStorage",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBInstanceClass",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimEngine",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimMasterUsername",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimMasterUserPassword",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBSecurityGroups",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimVpcSecurityGroupIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBInstanceMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimPreferredMaintenanceWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimDBParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimBackupRetentionPeriod",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimPreferredBackupWindow",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimEngineVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimAutoMinorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimLicenseModel",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimIops",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimOptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimCharacterSetName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimStorageType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimTdeCredentialArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbimTdeCredentialPassword",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "adbsgirDBSecurityGroup",
                    "type": "Maybe DBSecurityGroup"
                },
                "wrapper": true,
                "name": "AuthorizeDBSecurityGroupIngressResult",
                "resultWrapper": "AuthorizeDBSecurityGroupIngressResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.AuthorizeDBSecurityGroupIngress",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "AuthorizeDBSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003e Enables ingress to a DBSecurityGroup using one of two forms of authorization. First, EC2 or VPC security groups can be added to the DBSecurityGroup if the application using the database is running on EC2 or VPC instances. Second, IP ranges are available if the application accessing your database is running on the Internet. Required parameters for this API are one of CIDR range, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId for non-VPC). \u003c/p\u003e \u003cp\u003eFor an overview of CIDR ranges, go to the \u003ca href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\u003eWikipedia Tutorial\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "adbsgimDBSecurityGroupName",
                        "type": "Text"
                    }
                ],
                "name": "AuthorizeDBSecurityGroupIngressMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "adbsgimCIDRIP",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "adbsgimEC2SecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "adbsgimEC2SecurityGroupId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "adbsgimEC2SecurityGroupOwnerId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "odbiomOrderableDBInstanceOptions",
                        "type": "List OrderableDBInstanceOption"
                    }
                ],
                "name": "OrderableDBInstanceOptionsMessage",
                "resultWrapper": "DescribeOrderableDBInstanceOptionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "odbiomMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeOrderableDBInstanceOptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeOrderableDBInstanceOptions",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of orderable DB instance options for the specified engine. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomEngine",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeOrderableDBInstanceOptionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomEngineVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomLicenseModel",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomVpc",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dodbiomMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbsrDBSnapshot",
                    "type": "Maybe DBSnapshot"
                },
                "wrapper": true,
                "name": "CreateDBSnapshotResult",
                "resultWrapper": "CreateDBSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a DBSnapshot. The source DBInstance must be in \"available\" state. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsm1DBSnapshotIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsm1DBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsm1Tags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBSnapshotMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "desrEventSubscription",
                    "type": "Maybe EventSubscription"
                },
                "wrapper": true,
                "name": "DeleteEventSubscriptionResult",
                "resultWrapper": "DeleteEventSubscriptionResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.DeleteEventSubscription",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteEventSubscription",
            "method": "post",
            "documentation": "\u003cp\u003eDeletes an RDS event notification subscription.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "desm1SubscriptionName",
                    "type": "Text"
                },
                "name": "DeleteEventSubscriptionMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbpgmDBParameterGroups",
                        "type": "List DBParameterGroup"
                    }
                ],
                "name": "DBParameterGroupsMessage",
                "resultWrapper": "DescribeDBParameterGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbpgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBParameterGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBParameterGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of \u003ccode\u003eDBParameterGroup\u003c/code\u003e descriptions. If a \u003ccode\u003eDBParameterGroupName\u003c/code\u003e is specified, the list will contain only the description of the specified DB parameter group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpgmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBParameterGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpgmDBParameterGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpgmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ogomOptionGroupOptions",
                        "type": "List OptionGroupOption"
                    }
                ],
                "name": "OptionGroupOptionsMessage",
                "resultWrapper": "DescribeOptionGroupOptionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ogomMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeOptionGroupOptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeOptionGroupOptions",
            "method": "post",
            "documentation": "\u003cp\u003e Describes all available options. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogomEngineName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogomFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeOptionGroupOptionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogomMajorEngineVersion",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogomMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dogomMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esmEventSubscriptionsList",
                        "type": "List EventSubscription"
                    }
                ],
                "name": "EventSubscriptionsMessage",
                "resultWrapper": "DescribeEventSubscriptionsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "esmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeEventSubscriptions",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeEventSubscriptions",
            "method": "post",
            "documentation": "\u003cp\u003eLists all the subscription descriptions for a customer account. The description for a subscription includes SubscriptionName, SNSTopicARN, CustomerID, SourceType, SourceID, CreationTime, and Status. \u003c/p\u003e \u003cp\u003eIf you specify a SubscriptionName, lists the description for that subscription.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeEventSubscriptionsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmSubscriptionName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "desmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.AddTagsToResource",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "AddTagsToResource",
            "method": "post",
            "documentation": "\u003cp\u003e Adds metadata tags to an Amazon RDS resource. These tags can also be used with cost allocation reporting to track cost associated with Amazon RDS resources, or used in Condition statement in IAM policy for Amazon RDS.\u003c/p\u003e \u003cp\u003eFor an overview on tagging Amazon RDS resources, see \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Tagging.html\"\u003eTagging Amazon RDS Resources\u003c/a\u003e.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "attrmResourceName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "attrmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "AddTagsToResourceMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbpgdParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "DBParameterGroupDetails",
                "resultWrapper": "DescribeDBParametersResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbpgdMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBParameters",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBParameters",
            "method": "post",
            "documentation": "\u003cp\u003e Returns the detailed parameter list for a particular DB parameter group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpmDBParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBParametersMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpmSource",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbpmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsmDBSnapshots",
                        "type": "List DBSnapshot"
                    }
                ],
                "name": "DBSnapshotMessage",
                "resultWrapper": "DescribeDBSnapshotsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBSnapshots",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBSnapshots",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about DB snapshots. This API supports pagination. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBSnapshotsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmDBInstanceIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmDBSnapshotIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmSnapshotType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsgm1DBSubnetGroups",
                        "type": "List DBSubnetGroup"
                    }
                ],
                "name": "DBSubnetGroupMessage",
                "resultWrapper": "DescribeDBSubnetGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsgm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBSubnetGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBSubnetGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of DBSubnetGroup descriptions. If a DBSubnetGroupName is specified, the list will contain only the descriptions of the specified DBSubnetGroup. \u003c/p\u003e \u003cp\u003eFor an overview of CIDR ranges, go to the \u003ca href=\"http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing\"\u003eWikipedia Tutorial\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBSubnetGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgmDBSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgmMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "mogrOptionGroup",
                    "type": "Maybe OptionGroup"
                },
                "wrapper": true,
                "name": "ModifyOptionGroupResult",
                "resultWrapper": "ModifyOptionGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ModifyOptionGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ModifyOptionGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies an existing option group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mogmOptionGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mogmOptionsToInclude",
                        "type": "List OptionConfiguration"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mogmOptionsToRemove",
                        "type": "List Text"
                    }
                ],
                "name": "ModifyOptionGroupMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mogmApplyImmediately",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbpgr1DBParameterGroup",
                    "type": "Maybe DBParameterGroup"
                },
                "wrapper": true,
                "name": "CreateDBParameterGroupResult",
                "resultWrapper": "CreateDBParameterGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new DB parameter group. \u003c/p\u003e \u003cp\u003e A DB parameter group is initially created with the default parameters for the database engine used by the DB instance. To provide custom values for any of the parameters, you must modify the group after creating it using \u003ci\u003eModifyDBParameterGroup\u003c/i\u003e. Once you've created a DB parameter group, you need to associate it with your DB instance using \u003ci\u003eModifyDBInstance\u003c/i\u003e. When you associate a new DB parameter group with a running DB instance, you need to reboot the DB instance without failover for the new DB parameter group and associated settings to take effect. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAfter you create a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the create action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the \u003ccode\u003echaracter_set_database\u003c/code\u003e parameter. You can use the \u003ci\u003eParameter Groups\u003c/i\u003e option of the \u003ca href=\"https://console.aws.amazon.com/rds/\"\u003eAmazon RDS console\u003c/a\u003e or the \u003ci\u003eDescribeDBParameters\u003c/i\u003e command to verify that your DB parameter group has been created or modified.\u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgmDBParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgmDBParameterGroupFamily",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgmDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbpgmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBParameterGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ecmEventCategoriesMapList",
                    "type": "List EventCategoriesMap"
                },
                "wrapper": false,
                "name": "EventCategoriesMessage",
                "resultWrapper": "DescribeEventCategoriesResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.DescribeEventCategories",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeEventCategories",
            "method": "post",
            "documentation": "\u003cp\u003eDisplays a list of categories for all event source types, or, if specified, for a specified source type. You can see a list of the event categories and source types in the \u003ca href=\"http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html\"\u003e Events\u003c/a\u003e topic in the Amazon RDS User Guide.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "decmFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeEventCategoriesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "decmSourceType",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbitpitrDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "RestoreDBInstanceToPointInTimeResult",
                "resultWrapper": "RestoreDBInstanceToPointInTimeResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.RestoreDBInstanceToPointInTime",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RestoreDBInstanceToPointInTime",
            "method": "post",
            "documentation": "\u003cp\u003e Restores a DB instance to an arbitrary point-in-time. Users can restore to any point in time before the latestRestorableTime for up to backupRetentionPeriod days. The target database is created from the source database with the same configuration as the original database except that the DB instance is created with the default DB security group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmSourceDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmTargetDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "RestoreDBInstanceToPointInTimeMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmRestoreTime",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmUseLatestRestorableTime",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmDBSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmAutoMinorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmLicenseModel",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmDBName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmEngine",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmIops",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmOptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmStorageType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmTdeCredentialArn",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbitpitmTdeCredentialPassword",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "dbpgnmDBParameterGroupName",
                    "type": "Maybe Text"
                },
                "wrapper": false,
                "name": "DBParameterGroupNameMessage",
                "resultWrapper": "ResetDBParameterGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.ResetDBParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ResetDBParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies the parameters of a DB parameter group to the engine/system default value. To reset specific parameters submit a list of the following: \u003ccode\u003eParameterName\u003c/code\u003e and \u003ccode\u003eApplyMethod\u003c/code\u003e. To reset the entire DB parameter group, specify the \u003ccode\u003eDBParameterGroup\u003c/code\u003e name and \u003ccode\u003eResetAllParameters\u003c/code\u003e parameters. When resetting the entire group, dynamic parameters are updated immediately and static parameters are set to \u003ccode\u003epending-reboot\u003c/code\u003e to take effect on the next DB instance restart or \u003ccode\u003eRebootDBInstance\u003c/code\u003e request. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbpgmDBParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbpgmParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "ResetDBParameterGroupMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbpgmResetAllParameters",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbsgirDBSecurityGroup",
                    "type": "Maybe DBSecurityGroup"
                },
                "wrapper": true,
                "name": "RevokeDBSecurityGroupIngressResult",
                "resultWrapper": "RevokeDBSecurityGroupIngressResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.RevokeDBSecurityGroupIngress",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RevokeDBSecurityGroupIngress",
            "method": "post",
            "documentation": "\u003cp\u003e Revokes ingress from a DBSecurityGroup for previously authorized IP ranges or EC2 or VPC Security Groups. Required parameters for this API are one of CIDRIP, EC2SecurityGroupId for VPC, or (EC2SecurityGroupOwnerId and either EC2SecurityGroupName or EC2SecurityGroupId). \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbsgimDBSecurityGroupName",
                        "type": "Text"
                    }
                ],
                "name": "RevokeDBSecurityGroupIngressMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbsgimCIDRIP",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbsgimEC2SecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbsgimEC2SecurityGroupId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbsgimEC2SecurityGroupOwnerId",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "DBParameterGroupNameMessage",
                "resultWrapper": "ModifyDBParameterGroupResult",
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.ModifyDBParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "ModifyDBParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Modifies the parameters of a DB parameter group. To modify more than one parameter, submit a list of the following: \u003ccode\u003eParameterName\u003c/code\u003e, \u003ccode\u003eParameterValue\u003c/code\u003e, and \u003ccode\u003eApplyMethod\u003c/code\u003e. A maximum of 20 parameters can be modified in a single request. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003eAfter you modify a DB parameter group, you should wait at least 5 minutes before creating your first DB instance that uses that DB parameter group as the default parameter group. This allows Amazon RDS to fully complete the modify action before the parameter group is used as the default for a new DB instance. This is especially important for parameters that are critical when creating the default database for a DB instance, such as the character set for the default database defined by the \u003ccode\u003echaracter_set_database\u003c/code\u003e parameter. You can use the \u003ci\u003eParameter Groups\u003c/i\u003e option of the \u003ca href=\"https://console.aws.amazon.com/rds/\"\u003eAmazon RDS console\u003c/a\u003e or the \u003ci\u003eDescribeDBParameters\u003c/i\u003e command to verify that your DB parameter group has been created or modified.\u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbpgmDBParameterGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "mdbpgmParameters",
                        "type": "List Parameter"
                    }
                ],
                "name": "ModifyDBParameterGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cogr1OptionGroup",
                    "type": "Maybe OptionGroup"
                },
                "wrapper": true,
                "name": "CreateOptionGroupResult",
                "resultWrapper": "CreateOptionGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateOptionGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateOptionGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new option group. You can create up to 20 option groups. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogmOptionGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogmEngineName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogmMajorEngineVersion",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogmOptionGroupDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateOptionGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbsrDBSnapshot",
                    "type": "Maybe DBSnapshot"
                },
                "wrapper": true,
                "name": "DeleteDBSnapshotResult",
                "resultWrapper": "DeleteDBSnapshotResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.DeleteDBSnapshot",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteDBSnapshot",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a DBSnapshot. If the snapshot is being copied, the copy operation is terminated. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbsm1DBSnapshotIdentifier",
                    "type": "Text"
                },
                "name": "DeleteDBSnapshotMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.DeleteDBSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteDBSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a DB subnet group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbsgm1DBSubnetGroupName",
                    "type": "Text"
                },
                "name": "DeleteDBSubnetGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbsgrDBSecurityGroup",
                    "type": "Maybe DBSecurityGroup"
                },
                "wrapper": true,
                "name": "CreateDBSecurityGroupResult",
                "resultWrapper": "CreateDBSecurityGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBSecurityGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new DB security group. DB security groups control access to a DB instance. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgm1DBSecurityGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgm1DBSecurityGroupDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgm1Tags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBSecurityGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdbirDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "RebootDBInstanceResult",
                "resultWrapper": "RebootDBInstanceResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.RebootDBInstance",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "RebootDBInstance",
            "method": "post",
            "documentation": "\u003cp\u003e Rebooting a DB instance restarts the database engine service. A reboot also applies to the DB instance any modifications to the associated DB parameter group that were pending. Rebooting a DB instance results in a momentary outage of the instance, during which the DB instance status is set to rebooting. If the RDS instance is configured for MultiAZ, it is possible that the reboot will be conducted through a failover. An Amazon RDS event is created when the reboot is completed. \u003c/p\u003e \u003cp\u003e If your DB instance is deployed in multiple Availability Zones, you can force a failover from one AZ to the other during the reboot. You might force a failover to test the availability of your DB instance deployment or to restore operations to the original AZ after a failover occurs. \u003c/p\u003e \u003cp\u003e The time required to reboot is a function of the specific database engine's crash recovery process. To improve the reboot time, we recommend that you reduce database activities as much as possible during the reboot process to reduce rollback activity for in-transit transactions. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbimDBInstanceIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "RebootDBInstanceMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbimForceFailover",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbsgrDBSubnetGroup",
                    "type": "Maybe DBSubnetGroup"
                },
                "wrapper": true,
                "name": "CreateDBSubnetGroupResult",
                "resultWrapper": "CreateDBSubnetGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBSubnetGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBSubnetGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two AZs in the region. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgmDBSubnetGroupName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgmDBSubnetGroupDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgmSubnetIds",
                        "type": "List Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbsgmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBSubnetGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbiomReservedDBInstancesOfferings",
                        "type": "List ReservedDBInstancesOffering"
                    }
                ],
                "name": "ReservedDBInstancesOfferingMessage",
                "resultWrapper": "DescribeReservedDBInstancesOfferingsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdbiomMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeReservedDBInstancesOfferings",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeReservedDBInstancesOfferings",
            "method": "post",
            "documentation": "\u003cp\u003e Lists available reserved DB instance offerings. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeReservedDBInstancesOfferingsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomReservedDBInstancesOfferingId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomDuration",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomProductDescription",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomOfferingType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomMultiAZ",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "drdbiomMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.DeleteDBSecurityGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteDBSecurityGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a DB security group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbsgmDBSecurityGroupName",
                    "type": "Text"
                },
                "name": "DeleteDBSecurityGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbirDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "DeleteDBInstanceResult",
                "resultWrapper": "DeleteDBInstanceResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.DeleteDBInstance",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteDBInstance",
            "method": "post",
            "documentation": "\u003cp\u003e The DeleteDBInstance action deletes a previously provisioned DB instance. A successful response from the web service indicates the request was received correctly. When you delete a DB instance, all automated backups for that instance are deleted and cannot be recovered. Manual DB snapshots of the DB instance to be deleted are not deleted. \u003c/p\u003e \u003cp\u003e If a final DB snapshot is requested the status of the RDS instance will be \"deleting\" until the DB snapshot is created. The API action \u003ccode\u003eDescribeDBInstance\u003c/code\u003e is used to monitor the status of this operation. The action cannot be canceled or reverted once submitted. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbim1DBInstanceIdentifier",
                        "type": "Text"
                    }
                ],
                "name": "DeleteDBInstanceMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbim1SkipFinalSnapshot",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbim1FinalDBSnapshotIdentifier",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdbirrrDBInstance",
                    "type": "Maybe DBInstance"
                },
                "wrapper": true,
                "name": "CreateDBInstanceReadReplicaResult",
                "resultWrapper": "CreateDBInstanceReadReplicaResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CreateDBInstanceReadReplica",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CreateDBInstanceReadReplica",
            "method": "post",
            "documentation": "\u003cp\u003e Creates a DB instance that acts as a read replica of a source DB instance. \u003c/p\u003e \u003cp\u003e All read replica DB instances are created as Single-AZ deployments with backups disabled. All other DB instance attributes (including DB security groups and DB parameter groups) are inherited from the source DB instance, except as specified below. \u003c/p\u003e \u003cimportant\u003e \u003cp\u003e The source DB instance must have backup retention enabled. \u003c/p\u003e \u003c/important\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmSourceDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmTags",
                        "type": "List Tag"
                    }
                ],
                "name": "CreateDBInstanceReadReplicaMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmDBInstanceClass",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmAvailabilityZone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmPort",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmAutoMinorVersionUpgrade",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmIops",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmOptionGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmPubliclyAccessible",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmDBSubnetGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdbirrmStorageType",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "Empty",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.RDS.DeleteDBParameterGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DeleteDBParameterGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Deletes a specified DBParameterGroup. The DBParameterGroup to be deleted cannot be associated with any DB instances. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddbpgm1DBParameterGroupName",
                    "type": "Text"
                },
                "name": "DeleteDBParameterGroupMessage",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsgmDBSecurityGroups",
                        "type": "List DBSecurityGroup"
                    }
                ],
                "name": "DBSecurityGroupMessage",
                "resultWrapper": "DescribeDBSecurityGroupsResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbsgmMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBSecurityGroups",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBSecurityGroups",
            "method": "post",
            "documentation": "\u003cp\u003e Returns a list of \u003ccode\u003eDBSecurityGroup\u003c/code\u003e descriptions. If a \u003ccode\u003eDBSecurityGroupName\u003c/code\u003e is specified, the list will contain only the descriptions of the specified DB security group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgm1Filters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBSecurityGroupsMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgm1DBSecurityGroupName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgm1MaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbsgm1Marker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cogrOptionGroup",
                    "type": "Maybe OptionGroup"
                },
                "wrapper": true,
                "name": "CopyOptionGroupResult",
                "resultWrapper": "CopyOptionGroupResult",
                "type": "newtype"
            },
            "namespace": "Network.AWS.RDS.CopyOptionGroup",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "CopyOptionGroup",
            "method": "post",
            "documentation": "\u003cp\u003e Copies the specified Option Group. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogm1SourceOptionGroupIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogm1TargetOptionGroupIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogm1TargetOptionGroupDescription",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cogm1Tags",
                        "type": "List Tag"
                    }
                ],
                "name": "CopyOptionGroupMessage",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbimDBInstances",
                        "type": "List DBInstance"
                    }
                ],
                "name": "DBInstanceMessage",
                "resultWrapper": "DescribeDBInstancesResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "dbimMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DescribeDBInstances",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DescribeDBInstances",
            "method": "post",
            "documentation": "\u003cp\u003e Returns information about provisioned RDS instances. This API supports pagination. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbimFilters",
                        "type": "List Filter"
                    }
                ],
                "name": "DescribeDBInstancesMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbimDBInstanceIdentifier",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbimMaxRecords",
                        "type": "Maybe Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddbimMarker",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "DownloadDBLogFilePortionDetails",
                "resultWrapper": "DownloadDBLogFilePortionResult",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpdLogFileData",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpdMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpdAdditionalDataPending",
                        "type": "Maybe Bool"
                    }
                ]
            },
            "namespace": "Network.AWS.RDS.DownloadDBLogFilePortion",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.Query",
                "Network.AWS.RDS.Types"
            ],
            "name": "DownloadDBLogFilePortion",
            "method": "post",
            "documentation": "\u003cp\u003e Downloads all or a portion of the specified log file. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpmDBInstanceIdentifier",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpmLogFileName",
                        "type": "Text"
                    }
                ],
                "name": "DownloadDBLogFilePortionMessage",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpmMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ddblfpmNumberOfLines",
                        "type": "Maybe Int"
                    }
                ]
            }
        }
    ]
}