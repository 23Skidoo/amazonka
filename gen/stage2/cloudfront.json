{
    "service": {
        "signature": "V4",
        "checksum": "sha256",
        "abbrev": "CloudFront",
        "error": "RESTError",
        "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/Welcome.html",
        "namespace": "Network.AWS.CloudFront",
        "protocol": "rest-xml",
        "imports": [
            "Network.AWS.CloudFront.CreateCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.CreateDistribution",
            "Network.AWS.CloudFront.CreateInvalidation",
            "Network.AWS.CloudFront.CreateStreamingDistribution",
            "Network.AWS.CloudFront.DeleteCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.DeleteDistribution",
            "Network.AWS.CloudFront.DeleteStreamingDistribution",
            "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentityConfig",
            "Network.AWS.CloudFront.GetDistribution",
            "Network.AWS.CloudFront.GetDistributionConfig",
            "Network.AWS.CloudFront.GetInvalidation",
            "Network.AWS.CloudFront.GetStreamingDistribution",
            "Network.AWS.CloudFront.GetStreamingDistributionConfig",
            "Network.AWS.CloudFront.ListCloudFrontOriginAccessIdentities",
            "Network.AWS.CloudFront.ListDistributions",
            "Network.AWS.CloudFront.ListInvalidations",
            "Network.AWS.CloudFront.ListStreamingDistributions",
            "Network.AWS.CloudFront.Types",
            "Network.AWS.CloudFront.UpdateCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.UpdateDistribution",
            "Network.AWS.CloudFront.UpdateStreamingDistribution"
        ],
        "name": "Amazon CloudFront",
        "version": "2014-05-31",
        "documentation": "Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, for example, .html, .css, .php, image, and media files, to end users. CloudFront delivers your content through a worldwide network of edge locations. When an end user requests content that you're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so content is delivered with the best possible performance. If the content is already in that edge location, CloudFront delivers it immediately. If the content is not currently in that edge location, CloudFront retrieves it from an Amazon S3 bucket or an HTTP server (for example, a web server) that you have identified as the source for the definitive version of your content.",
        "xmlNamespace": "http://cloudfront.amazonaws.com/doc/2014-05-31/",
        "jsonVersion": null,
        "endpoint": "Global",
        "endpointPrefix": "cloudfront",
        "targetPrefix": null
    },
    "cabal": {
        "other": [],
        "library": "amazonka-cloudfront",
        "exposed": [
            "Network.AWS.CloudFront",
            "Network.AWS.CloudFront.CreateCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.CreateDistribution",
            "Network.AWS.CloudFront.CreateInvalidation",
            "Network.AWS.CloudFront.CreateStreamingDistribution",
            "Network.AWS.CloudFront.DeleteCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.DeleteDistribution",
            "Network.AWS.CloudFront.DeleteStreamingDistribution",
            "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentityConfig",
            "Network.AWS.CloudFront.GetDistribution",
            "Network.AWS.CloudFront.GetDistributionConfig",
            "Network.AWS.CloudFront.GetInvalidation",
            "Network.AWS.CloudFront.GetStreamingDistribution",
            "Network.AWS.CloudFront.GetStreamingDistributionConfig",
            "Network.AWS.CloudFront.ListCloudFrontOriginAccessIdentities",
            "Network.AWS.CloudFront.ListDistributions",
            "Network.AWS.CloudFront.ListInvalidations",
            "Network.AWS.CloudFront.ListStreamingDistributions",
            "Network.AWS.CloudFront.Types",
            "Network.AWS.CloudFront.UpdateCloudFrontOriginAccessIdentity",
            "Network.AWS.CloudFront.UpdateDistribution",
            "Network.AWS.CloudFront.UpdateStreamingDistribution"
        ],
        "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/Welcome.html",
        "protocol": "rest-xml",
        "name": "Amazon CloudFront",
        "version": "0.0.0",
        "description": "Amazon CloudFront is a web service that speeds up distribution of your static and dynamic web content, for example, .html, .css, .php, image, and media files, to end users. CloudFront delivers your content through a worldwide network of edge locations. When an end user requests content that you're serving with CloudFront, the user is routed to the edge location that provides the lowest latency, so content is delivered with the best possible performance. If the content is already in that edge location, CloudFront delivers it immediately. If the content is not currently in that edge location, CloudFront retrieves it from an Amazon S3 bucket or an HTTP server (for example, a web server) that you have identified as the source for the definitive version of your content."
    },
    "types": {
        "namespace": "Network.AWS.CloudFront.Types",
        "types": [
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "cloudFrontOriginAccessIdentityList",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMarker",
                        "name": "_cfoailMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailNextMarker",
                        "name": "_cfoailNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMaxItems",
                        "name": "_cfoailMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailIsTruncated",
                        "name": "_cfoailIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailQuantity",
                        "name": "_cfoailQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CloudFront origin access identities that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailItems",
                        "name": "_cfoailItems",
                        "shape": "CloudFrontOriginAccessIdentitySummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current AWS account.",
                        "typeExposed": "[CloudFrontOriginAccessIdentitySummary]",
                        "type": "List \"CloudFrontOriginAccessIdentitySummary\" CloudFrontOriginAccessIdentitySummary"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMarker",
                        "name": "_cfoailMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMaxItems",
                        "name": "_cfoailMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailIsTruncated",
                        "name": "_cfoailIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailQuantity",
                        "name": "_cfoailQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CloudFront origin access identities that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 12,
                "name": "CloudFrontOriginAccessIdentityList",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailNextMarker",
                        "name": "_cfoailNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailItems",
                        "name": "_cfoailItems",
                        "shape": "CloudFrontOriginAccessIdentitySummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current AWS account.",
                        "typeExposed": "[CloudFrontOriginAccessIdentitySummary]",
                        "type": "List \"CloudFrontOriginAccessIdentitySummary\" CloudFrontOriginAccessIdentitySummary"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailIsTruncated",
                        "name": "_cfoailIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more origin access identities remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more items in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailItems",
                        "name": "_cfoailItems",
                        "shape": "CloudFrontOriginAccessIdentitySummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one CloudFrontOriginAccessIdentitySummary element for each origin access identity that was created by the current AWS account.",
                        "typeExposed": "[CloudFrontOriginAccessIdentitySummary]",
                        "type": "List \"CloudFrontOriginAccessIdentitySummary\" CloudFrontOriginAccessIdentitySummary"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMarker",
                        "name": "_cfoailMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailMaxItems",
                        "name": "_cfoailMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoailNextMarker",
                        "name": "_cfoailNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your origin access identities where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoailQuantity",
                        "name": "_cfoailQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CloudFront origin access identities that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "invalidation",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iId",
                        "name": "_iId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iStatus",
                        "name": "_iStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iCreateTime",
                        "name": "_iCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": "The date and time the invalidation request was first made.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iInvalidationBatch",
                        "name": "_iInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The current invalidation information for the batch request.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iId",
                        "name": "_iId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iStatus",
                        "name": "_iStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iCreateTime",
                        "name": "_iCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": "The date and time the invalidation request was first made.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iInvalidationBatch",
                        "name": "_iInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The current invalidation information for the batch request.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    }
                ],
                "contentPad": 18,
                "name": "Invalidation",
                "locationPad": 18,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iCreateTime",
                        "name": "_iCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": "The date and time the invalidation request was first made.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iId",
                        "name": "_iId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the invalidation request. For example: IDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iInvalidationBatch",
                        "name": "_iInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The current invalidation information for the batch request.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "iStatus",
                        "name": "_iStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of the invalidation request. When the invalidation batch is finished, the status is Completed.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Vip": "vip",
                    "SniOnly": "sni-only"
                },
                "valuePad": 9,
                "name": "SSLSupportMethod",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "allowedMethods",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amQuantity",
                        "name": "_amQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests) and 7 (for DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "amItems",
                        "name": "_amItems",
                        "shape": "AllowedMethodsList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.",
                        "typeExposed": "[Text]",
                        "type": "List \"Method\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amQuantity",
                        "name": "_amQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests) and 7 (for DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "AllowedMethods",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "amItems",
                        "name": "_amItems",
                        "shape": "AllowedMethodsList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.",
                        "typeExposed": "[Text]",
                        "type": "List \"Method\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "amItems",
                        "name": "_amItems",
                        "shape": "AllowedMethodsList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains the HTTP methods that you want CloudFront to process and forward to your origin.",
                        "typeExposed": "[Text]",
                        "type": "List \"Method\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "amQuantity",
                        "name": "_amQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of HTTP methods that you want CloudFront to forward to your origin. Valid values are 2 (for GET and HEAD requests) and 7 (for DELETE, GET, HEAD, OPTIONS, PATCH, POST, and PUT requests).",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "cloudFrontOriginAccessIdentityConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicCallerReference",
                        "name": "_cfoaicCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicComment",
                        "name": "_cfoaicComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicCallerReference",
                        "name": "_cfoaicCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicComment",
                        "name": "_cfoaicComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 16,
                "name": "CloudFrontOriginAccessIdentityConfig",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicCallerReference",
                        "name": "_cfoaicCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the CloudFrontOriginAccessIdentityConfig object), a new origin access identity is created. If the CallerReference is a value you already sent in a previous request to create an identity, and the content of the CloudFrontOriginAccessIdentityConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create an identity but the content of the CloudFrontOriginAccessIdentityConfig is different from the original request, CloudFront returns a CloudFrontOriginAccessIdentityAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaicComment",
                        "name": "_cfoaicComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "origin",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oId",
                        "name": "_oId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oDomainName",
                        "name": "_oDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oS3OriginConfig",
                        "name": "_oS3OriginConfig",
                        "shape": "S3OriginConfig",
                        "locationName": "S3OriginConfig",
                        "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                        "typeExposed": "Maybe S3OriginConfig",
                        "type": "Maybe S3OriginConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oCustomOriginConfig",
                        "name": "_oCustomOriginConfig",
                        "shape": "CustomOriginConfig",
                        "locationName": "CustomOriginConfig",
                        "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                        "typeExposed": "Maybe CustomOriginConfig",
                        "type": "Maybe CustomOriginConfig"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oId",
                        "name": "_oId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oDomainName",
                        "name": "_oDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 19,
                "name": "Origin",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oS3OriginConfig",
                        "name": "_oS3OriginConfig",
                        "shape": "S3OriginConfig",
                        "locationName": "S3OriginConfig",
                        "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                        "typeExposed": "Maybe S3OriginConfig",
                        "type": "Maybe S3OriginConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oCustomOriginConfig",
                        "name": "_oCustomOriginConfig",
                        "shape": "CustomOriginConfig",
                        "locationName": "CustomOriginConfig",
                        "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                        "typeExposed": "Maybe CustomOriginConfig",
                        "type": "Maybe CustomOriginConfig"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oCustomOriginConfig",
                        "name": "_oCustomOriginConfig",
                        "shape": "CustomOriginConfig",
                        "locationName": "CustomOriginConfig",
                        "documentation": "A complex type that contains information about a custom origin. If the origin is an Amazon S3 bucket, use the S3OriginConfig element instead.",
                        "typeExposed": "Maybe CustomOriginConfig",
                        "type": "Maybe CustomOriginConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oDomainName",
                        "name": "_oDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "Amazon S3 origins: The DNS name of the Amazon S3 bucket from which you want CloudFront to get objects for this origin, for example, myawsbucket.s3.amazonaws.com. Custom origins: The DNS domain name for the HTTP server from which you want CloudFront to get objects for this origin, for example, www.example.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oId",
                        "name": "_oId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "A unique identifier for the origin. The value of Id must be unique within the distribution. You use the value of Id when you create a cache behavior. The Id identifies the origin that CloudFront routes a request to when the request matches the path pattern for that cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "oS3OriginConfig",
                        "name": "_oS3OriginConfig",
                        "shape": "S3OriginConfig",
                        "locationName": "S3OriginConfig",
                        "documentation": "A complex type that contains information about the Amazon S3 origin. If the origin is a custom origin, use the CustomOriginConfig element instead.",
                        "typeExposed": "Maybe S3OriginConfig",
                        "type": "Maybe S3OriginConfig"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "HttpsOnly": "https-only",
                    "RedirectToHttps": "redirect-to-https",
                    "AllowAll": "allow-all"
                },
                "valuePad": 18,
                "name": "ViewerProtocolPolicy",
                "type": "nullary",
                "branchPad": 15
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 15,
                "ctor": "streamingDistributionList",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMarker",
                        "name": "_sdlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlNextMarker",
                        "name": "_sdlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your streaming distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMaxItems",
                        "name": "_sdlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlIsTruncated",
                        "name": "_sdlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlQuantity",
                        "name": "_sdlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of streaming distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlItems",
                        "name": "_sdlItems",
                        "shape": "StreamingDistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[StreamingDistributionSummary]",
                        "type": "List \"StreamingDistributionSummary\" StreamingDistributionSummary"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMarker",
                        "name": "_sdlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMaxItems",
                        "name": "_sdlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlIsTruncated",
                        "name": "_sdlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlQuantity",
                        "name": "_sdlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of streaming distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 12,
                "name": "StreamingDistributionList",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlNextMarker",
                        "name": "_sdlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your streaming distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlItems",
                        "name": "_sdlItems",
                        "shape": "StreamingDistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[StreamingDistributionSummary]",
                        "type": "List \"StreamingDistributionSummary\" StreamingDistributionSummary"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlIsTruncated",
                        "name": "_sdlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more streaming distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlItems",
                        "name": "_sdlItems",
                        "shape": "StreamingDistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one StreamingDistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[StreamingDistributionSummary]",
                        "type": "List \"StreamingDistributionSummary\" StreamingDistributionSummary"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMarker",
                        "name": "_sdlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlMaxItems",
                        "name": "_sdlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdlNextMarker",
                        "name": "_sdlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your streaming distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdlQuantity",
                        "name": "_sdlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of streaming distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "streamingDistributionConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcCallerReference",
                        "name": "_sdcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcS3Origin",
                        "name": "_sdcS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcAliases",
                        "name": "_sdcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcComment",
                        "name": "_sdcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcLogging",
                        "name": "_sdcLogging",
                        "shape": "StreamingLoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                        "typeExposed": "StreamingLoggingConfig",
                        "type": "StreamingLoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcTrustedSigners",
                        "name": "_sdcTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcPriceClass",
                        "name": "_sdcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcEnabled",
                        "name": "_sdcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcCallerReference",
                        "name": "_sdcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcS3Origin",
                        "name": "_sdcS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcAliases",
                        "name": "_sdcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcComment",
                        "name": "_sdcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcLogging",
                        "name": "_sdcLogging",
                        "shape": "StreamingLoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                        "typeExposed": "StreamingLoggingConfig",
                        "type": "StreamingLoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcTrustedSigners",
                        "name": "_sdcTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcPriceClass",
                        "name": "_sdcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcEnabled",
                        "name": "_sdcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 16,
                "name": "StreamingDistributionConfig",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcAliases",
                        "name": "_sdcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcCallerReference",
                        "name": "_sdcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the StreamingDistributionConfig object), a new streaming distribution is created. If the CallerReference is a value you already sent in a previous request to create a streaming distribution, and the content of the StreamingDistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a streaming distribution but the content of the StreamingDistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcComment",
                        "name": "_sdcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcEnabled",
                        "name": "_sdcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the streaming distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcLogging",
                        "name": "_sdcLogging",
                        "shape": "StreamingLoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the streaming distribution.",
                        "typeExposed": "StreamingLoggingConfig",
                        "type": "StreamingLoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcPriceClass",
                        "name": "_sdcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this streaming distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcS3Origin",
                        "name": "_sdcS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdcTrustedSigners",
                        "name": "_sdcTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "signer",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sAwsAccountNumber",
                        "name": "_sAwsAccountNumber",
                        "shape": "string",
                        "locationName": "AwsAccountNumber",
                        "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sKeyPairIds",
                        "name": "_sKeyPairIds",
                        "shape": "KeyPairIds",
                        "locationName": "KeyPairIds",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "Maybe KeyPairIds",
                        "type": "Maybe KeyPairIds"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 17,
                "name": "Signer",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sAwsAccountNumber",
                        "name": "_sAwsAccountNumber",
                        "shape": "string",
                        "locationName": "AwsAccountNumber",
                        "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sKeyPairIds",
                        "name": "_sKeyPairIds",
                        "shape": "KeyPairIds",
                        "locationName": "KeyPairIds",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "Maybe KeyPairIds",
                        "type": "Maybe KeyPairIds"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sAwsAccountNumber",
                        "name": "_sAwsAccountNumber",
                        "shape": "string",
                        "locationName": "AwsAccountNumber",
                        "documentation": "Specifies an AWS account that can create signed URLs. Values: self, which indicates that the AWS account that was used to create the distribution can created signed URLs, or an AWS account number. Omit the dashes in the account number.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sKeyPairIds",
                        "name": "_sKeyPairIds",
                        "shape": "KeyPairIds",
                        "locationName": "KeyPairIds",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "Maybe KeyPairIds",
                        "type": "Maybe KeyPairIds"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 19,
                "ctor": "cookiePreference",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cpForward",
                        "name": "_cpForward",
                        "shape": "ItemSelection",
                        "locationName": "Forward",
                        "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpWhitelistedNames",
                        "name": "_cpWhitelistedNames",
                        "shape": "CookieNames",
                        "locationName": "WhitelistedNames",
                        "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                        "typeExposed": "Maybe CookieNames",
                        "type": "Maybe CookieNames"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cpForward",
                        "name": "_cpForward",
                        "shape": "ItemSelection",
                        "locationName": "Forward",
                        "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 17,
                "name": "CookiePreference",
                "locationPad": 17,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpWhitelistedNames",
                        "name": "_cpWhitelistedNames",
                        "shape": "CookieNames",
                        "locationName": "WhitelistedNames",
                        "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                        "typeExposed": "Maybe CookieNames",
                        "type": "Maybe CookieNames"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cpForward",
                        "name": "_cpForward",
                        "shape": "ItemSelection",
                        "locationName": "Forward",
                        "documentation": "Use this element to specify whether you want CloudFront to forward cookies to the origin that is associated with this cache behavior. You can specify all, none or whitelist. If you choose All, CloudFront forwards all cookies regardless of how many your application uses.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cpWhitelistedNames",
                        "name": "_cpWhitelistedNames",
                        "shape": "CookieNames",
                        "locationName": "WhitelistedNames",
                        "documentation": "A complex type that specifies the whitelisted cookies, if any, that you want CloudFront to forward to your origin that is associated with this cache behavior.",
                        "typeExposed": "Maybe CookieNames",
                        "type": "Maybe CookieNames"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "HttpOnly": "http-only",
                    "MatchViewer": "match-viewer"
                },
                "valuePad": 13,
                "name": "OriginProtocolPolicy",
                "type": "nullary",
                "branchPad": 11
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 31,
                "ctor": "distribution",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dId",
                        "name": "_dId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dStatus",
                        "name": "_dStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dLastModifiedTime",
                        "name": "_dLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dInProgressInvalidationBatches",
                        "name": "_dInProgressInvalidationBatches",
                        "shape": "integer",
                        "locationName": "InProgressInvalidationBatches",
                        "documentation": "The number of invalidation batches currently in progress.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDomainName",
                        "name": "_dDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dActiveTrustedSigners",
                        "name": "_dActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDistributionConfig",
                        "name": "_dDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The current configuration information for the distribution.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dId",
                        "name": "_dId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dStatus",
                        "name": "_dStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dLastModifiedTime",
                        "name": "_dLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dInProgressInvalidationBatches",
                        "name": "_dInProgressInvalidationBatches",
                        "shape": "integer",
                        "locationName": "InProgressInvalidationBatches",
                        "documentation": "The number of invalidation batches currently in progress.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDomainName",
                        "name": "_dDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dActiveTrustedSigners",
                        "name": "_dActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDistributionConfig",
                        "name": "_dDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The current configuration information for the distribution.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ],
                "contentPad": 30,
                "name": "Distribution",
                "locationPad": 30,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dActiveTrustedSigners",
                        "name": "_dActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDistributionConfig",
                        "name": "_dDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The current configuration information for the distribution.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dDomainName",
                        "name": "_dDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dId",
                        "name": "_dId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dInProgressInvalidationBatches",
                        "name": "_dInProgressInvalidationBatches",
                        "shape": "integer",
                        "locationName": "InProgressInvalidationBatches",
                        "documentation": "The number of invalidation batches currently in progress.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dLastModifiedTime",
                        "name": "_dLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dStatus",
                        "name": "_dStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "cloudFrontOriginAccessIdentitySummary",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisId",
                        "name": "_cfoaisId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisS3CanonicalUserId",
                        "name": "_cfoaisS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisComment",
                        "name": "_cfoaisComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment for this origin access identity, as originally specified when created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisId",
                        "name": "_cfoaisId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisS3CanonicalUserId",
                        "name": "_cfoaisS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisComment",
                        "name": "_cfoaisComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment for this origin access identity, as originally specified when created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 18,
                "name": "CloudFrontOriginAccessIdentitySummary",
                "locationPad": 18,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisComment",
                        "name": "_cfoaisComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment for this origin access identity, as originally specified when created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisId",
                        "name": "_cfoaisId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaisS3CanonicalUserId",
                        "name": "_cfoaisS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 20,
                "ctor": "streamingDistributionSummary",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsId",
                        "name": "_sdsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsStatus",
                        "name": "_sdsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "Indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsLastModifiedTime",
                        "name": "_sdsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDomainName",
                        "name": "_sdsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsS3Origin",
                        "name": "_sdsS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsAliases",
                        "name": "_sdsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsTrustedSigners",
                        "name": "_sdsTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsComment",
                        "name": "_sdsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsPriceClass",
                        "name": "_sdsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsEnabled",
                        "name": "_sdsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsId",
                        "name": "_sdsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsStatus",
                        "name": "_sdsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "Indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsLastModifiedTime",
                        "name": "_sdsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDomainName",
                        "name": "_sdsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsS3Origin",
                        "name": "_sdsS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsAliases",
                        "name": "_sdsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsTrustedSigners",
                        "name": "_sdsTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsComment",
                        "name": "_sdsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsPriceClass",
                        "name": "_sdsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsEnabled",
                        "name": "_sdsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 17,
                "name": "StreamingDistributionSummary",
                "locationPad": 17,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsAliases",
                        "name": "_sdsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this streaming distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsComment",
                        "name": "_sdsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsDomainName",
                        "name": "_sdsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsEnabled",
                        "name": "_sdsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsId",
                        "name": "_sdsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsLastModifiedTime",
                        "name": "_sdsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsPriceClass",
                        "name": "_sdsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsS3Origin",
                        "name": "_sdsS3Origin",
                        "shape": "S3Origin",
                        "locationName": "S3Origin",
                        "documentation": "A complex type that contains information about the Amazon S3 bucket from which you want CloudFront to get your media files for distribution.",
                        "typeExposed": "S3Origin",
                        "type": "S3Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsStatus",
                        "name": "_sdsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "Indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdsTrustedSigners",
                        "name": "_sdsTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "customOriginConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPPort",
                        "name": "_cocHTTPPort",
                        "shape": "integer",
                        "locationName": "HTTPPort",
                        "documentation": "The HTTP port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPSPort",
                        "name": "_cocHTTPSPort",
                        "shape": "integer",
                        "locationName": "HTTPSPort",
                        "documentation": "The HTTPS port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocOriginProtocolPolicy",
                        "name": "_cocOriginProtocolPolicy",
                        "shape": "OriginProtocolPolicy",
                        "locationName": "OriginProtocolPolicy",
                        "documentation": "The origin protocol policy to apply to your origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPPort",
                        "name": "_cocHTTPPort",
                        "shape": "integer",
                        "locationName": "HTTPPort",
                        "documentation": "The HTTP port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPSPort",
                        "name": "_cocHTTPSPort",
                        "shape": "integer",
                        "locationName": "HTTPSPort",
                        "documentation": "The HTTPS port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocOriginProtocolPolicy",
                        "name": "_cocOriginProtocolPolicy",
                        "shape": "OriginProtocolPolicy",
                        "locationName": "OriginProtocolPolicy",
                        "documentation": "The origin protocol policy to apply to your origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 21,
                "name": "CustomOriginConfig",
                "locationPad": 21,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPPort",
                        "name": "_cocHTTPPort",
                        "shape": "integer",
                        "locationName": "HTTPPort",
                        "documentation": "The HTTP port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocHTTPSPort",
                        "name": "_cocHTTPSPort",
                        "shape": "integer",
                        "locationName": "HTTPSPort",
                        "documentation": "The HTTPS port the custom origin listens on.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cocOriginProtocolPolicy",
                        "name": "_cocOriginProtocolPolicy",
                        "shape": "OriginProtocolPolicy",
                        "locationName": "OriginProtocolPolicy",
                        "documentation": "The origin protocol policy to apply to your origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "aliases",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aQuantity",
                        "name": "_aQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "aItems",
                        "name": "_aItems",
                        "shape": "AliasList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"CNAME\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aQuantity",
                        "name": "_aQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "Aliases",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "aItems",
                        "name": "_aItems",
                        "shape": "AliasList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"CNAME\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "aItems",
                        "name": "_aItems",
                        "shape": "AliasList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains CNAME elements, if any, for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"CNAME\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "aQuantity",
                        "name": "_aQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of CNAMEs, if any, for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "invalidationBatch",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibPaths",
                        "name": "_ibPaths",
                        "shape": "Paths",
                        "locationName": "Paths",
                        "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                        "typeExposed": "Paths",
                        "type": "Paths"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibCallerReference",
                        "name": "_ibCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibPaths",
                        "name": "_ibPaths",
                        "shape": "Paths",
                        "locationName": "Paths",
                        "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                        "typeExposed": "Paths",
                        "type": "Paths"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibCallerReference",
                        "name": "_ibCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 16,
                "name": "InvalidationBatch",
                "locationPad": 16,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibCallerReference",
                        "name": "_ibCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique name that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the Path object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create an invalidation batch, and the content of each Path element is identical to the original request, the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of any Path is different from the original request, CloudFront returns an InvalidationBatchAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ibPaths",
                        "name": "_ibPaths",
                        "shape": "Paths",
                        "locationName": "Paths",
                        "documentation": "The path of the object to invalidate. The path is relative to the distribution and must begin with a slash (/). You must enclose each invalidation object with the Path element tags. If the path includes non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not invalidate the old version of the updated object.",
                        "typeExposed": "Paths",
                        "type": "Paths"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 13,
                "ctor": "invalidationSummary",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isId",
                        "name": "_isId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The unique ID for an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isCreateTime",
                        "name": "_isCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isStatus",
                        "name": "_isStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isId",
                        "name": "_isId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The unique ID for an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isCreateTime",
                        "name": "_isCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isStatus",
                        "name": "_isStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 11,
                "name": "InvalidationSummary",
                "locationPad": 11,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isCreateTime",
                        "name": "_isCreateTime",
                        "shape": "timestamp",
                        "locationName": "CreateTime",
                        "documentation": null,
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isId",
                        "name": "_isId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The unique ID for an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "isStatus",
                        "name": "_isStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The status of an invalidation request.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "distributionConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCallerReference",
                        "name": "_dcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcAliases",
                        "name": "_dcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultRootObject",
                        "name": "_dcDefaultRootObject",
                        "shape": "string",
                        "locationName": "DefaultRootObject",
                        "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcOrigins",
                        "name": "_dcOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultCacheBehavior",
                        "name": "_dcDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCacheBehaviors",
                        "name": "_dcCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcCustomErrorResponses",
                        "name": "_dcCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponse elements.",
                        "typeExposed": "Maybe CustomErrorResponses",
                        "type": "Maybe CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcComment",
                        "name": "_dcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcLogging",
                        "name": "_dcLogging",
                        "shape": "LoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the distribution.",
                        "typeExposed": "LoggingConfig",
                        "type": "LoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcPriceClass",
                        "name": "_dcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcEnabled",
                        "name": "_dcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcViewerCertificate",
                        "name": "_dcViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "Maybe ViewerCertificate",
                        "type": "Maybe ViewerCertificate"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcRestrictions",
                        "name": "_dcRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Maybe Restrictions",
                        "type": "Maybe Restrictions"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCallerReference",
                        "name": "_dcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcAliases",
                        "name": "_dcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultRootObject",
                        "name": "_dcDefaultRootObject",
                        "shape": "string",
                        "locationName": "DefaultRootObject",
                        "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcOrigins",
                        "name": "_dcOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultCacheBehavior",
                        "name": "_dcDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCacheBehaviors",
                        "name": "_dcCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcComment",
                        "name": "_dcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcLogging",
                        "name": "_dcLogging",
                        "shape": "LoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the distribution.",
                        "typeExposed": "LoggingConfig",
                        "type": "LoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcPriceClass",
                        "name": "_dcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcEnabled",
                        "name": "_dcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ],
                "contentPad": 21,
                "name": "DistributionConfig",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcCustomErrorResponses",
                        "name": "_dcCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponse elements.",
                        "typeExposed": "Maybe CustomErrorResponses",
                        "type": "Maybe CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcViewerCertificate",
                        "name": "_dcViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "Maybe ViewerCertificate",
                        "type": "Maybe ViewerCertificate"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcRestrictions",
                        "name": "_dcRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Maybe Restrictions",
                        "type": "Maybe Restrictions"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcAliases",
                        "name": "_dcAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCacheBehaviors",
                        "name": "_dcCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcCallerReference",
                        "name": "_dcCallerReference",
                        "shape": "string",
                        "locationName": "CallerReference",
                        "documentation": "A unique number that ensures the request can't be replayed. If the CallerReference is new (no matter the content of the DistributionConfig object), a new distribution is created. If the CallerReference is a value you already sent in a previous request to create a distribution, and the content of the DistributionConfig is identical to the original request (ignoring white space), the response includes the same information returned to the original request. If the CallerReference is a value you already sent in a previous request to create a distribution but the content of the DistributionConfig is different from the original request, CloudFront returns a DistributionAlreadyExists error.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcComment",
                        "name": "_dcComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "Any comments you want to include about the distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcCustomErrorResponses",
                        "name": "_dcCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponse elements.",
                        "typeExposed": "Maybe CustomErrorResponses",
                        "type": "Maybe CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultCacheBehavior",
                        "name": "_dcDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcDefaultRootObject",
                        "name": "_dcDefaultRootObject",
                        "shape": "string",
                        "locationName": "DefaultRootObject",
                        "documentation": "The object that you want CloudFront to return (for example, index.html) when an end user requests the root URL for your distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/index.html). Specifying a default root object avoids exposing the contents of your distribution. If you don't want to specify a default root object when you create a distribution, include an empty DefaultRootObject element. To delete the default root object from an existing distribution, update the distribution configuration and include an empty DefaultRootObject element. To replace the default root object, update the distribution configuration and specify the new object.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcEnabled",
                        "name": "_dcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcLogging",
                        "name": "_dcLogging",
                        "shape": "LoggingConfig",
                        "locationName": "Logging",
                        "documentation": "A complex type that controls whether access logs are written for the distribution.",
                        "typeExposed": "LoggingConfig",
                        "type": "LoggingConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcOrigins",
                        "name": "_dcOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcPriceClass",
                        "name": "_dcPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": "A complex type that contains information about price class for this distribution.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcRestrictions",
                        "name": "_dcRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Maybe Restrictions",
                        "type": "Maybe Restrictions"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcViewerCertificate",
                        "name": "_dcViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "Maybe ViewerCertificate",
                        "type": "Maybe ViewerCertificate"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "cacheBehavior",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbPathPattern",
                        "name": "_cbPathPattern",
                        "shape": "string",
                        "locationName": "PathPattern",
                        "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTargetOriginId",
                        "name": "_cbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbForwardedValues",
                        "name": "_cbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTrustedSigners",
                        "name": "_cbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbViewerProtocolPolicy",
                        "name": "_cbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbMinTTL",
                        "name": "_cbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbAllowedMethods",
                        "name": "_cbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbSmoothStreaming",
                        "name": "_cbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbPathPattern",
                        "name": "_cbPathPattern",
                        "shape": "string",
                        "locationName": "PathPattern",
                        "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTargetOriginId",
                        "name": "_cbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbForwardedValues",
                        "name": "_cbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTrustedSigners",
                        "name": "_cbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbViewerProtocolPolicy",
                        "name": "_cbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbMinTTL",
                        "name": "_cbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ],
                "contentPad": 21,
                "name": "CacheBehavior",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbAllowedMethods",
                        "name": "_cbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbSmoothStreaming",
                        "name": "_cbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbAllowedMethods",
                        "name": "_cbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbForwardedValues",
                        "name": "_cbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbMinTTL",
                        "name": "_cbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbPathPattern",
                        "name": "_cbPathPattern",
                        "shape": "string",
                        "locationName": "PathPattern",
                        "documentation": "The pattern (for example, images/*.jpg) that specifies which requests you want this cache behavior to apply to. When CloudFront receives an end-user request, the requested path is compared with path patterns in the order in which cache behaviors are listed in the distribution. The path pattern for the default cache behavior is * and cannot be changed. If the request for an object does not match the path pattern for any cache behaviors, CloudFront applies the behavior in the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cbSmoothStreaming",
                        "name": "_cbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTargetOriginId",
                        "name": "_cbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbTrustedSigners",
                        "name": "_cbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbViewerProtocolPolicy",
                        "name": "_cbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "distributionList",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMarker",
                        "name": "_dlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dlNextMarker",
                        "name": "_dlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMaxItems",
                        "name": "_dlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlIsTruncated",
                        "name": "_dlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlQuantity",
                        "name": "_dlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "dlItems",
                        "name": "_dlItems",
                        "shape": "DistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one DistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[DistributionSummary]",
                        "type": "List \"DistributionSummary\" DistributionSummary"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMarker",
                        "name": "_dlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMaxItems",
                        "name": "_dlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlIsTruncated",
                        "name": "_dlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlQuantity",
                        "name": "_dlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 12,
                "name": "DistributionList",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dlNextMarker",
                        "name": "_dlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "dlItems",
                        "name": "_dlItems",
                        "shape": "DistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one DistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[DistributionSummary]",
                        "type": "List \"DistributionSummary\" DistributionSummary"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlIsTruncated",
                        "name": "_dlIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more distributions remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more distributions in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "dlItems",
                        "name": "_dlItems",
                        "shape": "DistributionSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one DistributionSummary element for each distribution that was created by the current AWS account.",
                        "typeExposed": "[DistributionSummary]",
                        "type": "List \"DistributionSummary\" DistributionSummary"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMarker",
                        "name": "_dlMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlMaxItems",
                        "name": "_dlMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dlNextMarker",
                        "name": "_dlNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your distributions where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dlQuantity",
                        "name": "_dlQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of distributions that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "keyPairIds",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "kpiQuantity",
                        "name": "_kpiQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiItems",
                        "name": "_kpiItems",
                        "shape": "KeyPairIdList",
                        "locationName": "Items",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "[Text]",
                        "type": "List \"KeyPairId\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "kpiQuantity",
                        "name": "_kpiQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "KeyPairIds",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiItems",
                        "name": "_kpiItems",
                        "shape": "KeyPairIdList",
                        "locationName": "Items",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "[Text]",
                        "type": "List \"KeyPairId\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "kpiItems",
                        "name": "_kpiItems",
                        "shape": "KeyPairIdList",
                        "locationName": "Items",
                        "documentation": "A complex type that lists the active CloudFront key pairs, if any, that are associated with AwsAccountNumber.",
                        "typeExposed": "[Text]",
                        "type": "List \"KeyPairId\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "kpiQuantity",
                        "name": "_kpiQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of active CloudFront key pairs for AwsAccountNumber.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "PriceClass200": "PriceClass_200",
                    "PriceClass100": "PriceClass_100",
                    "PriceClassAll": "PriceClass_All"
                },
                "valuePad": 15,
                "name": "PriceClass",
                "type": "nullary",
                "branchPad": 13
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "customErrorResponses",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerQuantity",
                        "name": "_cerQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of custom error responses for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cerItems",
                        "name": "_cerItems",
                        "shape": "CustomErrorResponseList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains custom error responses for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CustomErrorResponse]",
                        "type": "List \"CustomErrorResponse\" CustomErrorResponse"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerQuantity",
                        "name": "_cerQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of custom error responses for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "CustomErrorResponses",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cerItems",
                        "name": "_cerItems",
                        "shape": "CustomErrorResponseList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains custom error responses for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CustomErrorResponse]",
                        "type": "List \"CustomErrorResponse\" CustomErrorResponse"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cerItems",
                        "name": "_cerItems",
                        "shape": "CustomErrorResponseList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains custom error responses for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CustomErrorResponse]",
                        "type": "List \"CustomErrorResponse\" CustomErrorResponse"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerQuantity",
                        "name": "_cerQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of custom error responses for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "s3OriginConfig",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "socOriginAccessIdentity",
                    "name": "_socOriginAccessIdentity",
                    "shape": "string",
                    "locationName": "OriginAccessIdentity",
                    "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. Use the format origin-access-identity/cloudfront/Id where Id is the value that CloudFront returned in the Id element when you created the origin access identity.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "socOriginAccessIdentity",
                        "name": "_socOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. Use the format origin-access-identity/cloudfront/Id where Id is the value that CloudFront returned in the Id element when you created the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "socOriginAccessIdentity",
                        "name": "_socOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. Use the format origin-access-identity/cloudfront/Id where Id is the value that CloudFront returned in the Id element when you created the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 0,
                "name": "S3OriginConfig",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "socOriginAccessIdentity",
                        "name": "_socOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "The CloudFront origin access identity to associate with the origin. Use an origin access identity to configure the origin so that end users can only access objects in an Amazon S3 bucket through CloudFront. If you want end users to be able to access objects using either the CloudFront URL or the Amazon S3 URL, specify an empty OriginAccessIdentity element. To delete the origin access identity from an existing distribution, update the distribution configuration and include an empty OriginAccessIdentity element. To replace the origin access identity, update the distribution configuration and specify the new origin access identity. Use the format origin-access-identity/cloudfront/Id where Id is the value that CloudFront returned in the Id element when you created the origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 18,
                "ctor": "geoRestriction",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grRestrictionType",
                        "name": "_grRestrictionType",
                        "shape": "GeoRestrictionType",
                        "locationName": "RestrictionType",
                        "documentation": "The method that you want to use to restrict distribution of your content by country: - none: No geo restriction is enabled, meaning access to content is not restricted by client geo location. - blacklist: The Location elements specify the countries in which you do not want CloudFront to distribute your content. - whitelist: The Location elements specify the countries in which you want CloudFront to distribute your content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grQuantity",
                        "name": "_grQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "When geo restriction is enabled, this is the number of countries in your whitelist or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "grItems",
                        "name": "_grItems",
                        "shape": "LocationList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). The Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist. Include one Location element for each country. CloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list in the CloudFront console, which includes both country names and codes.",
                        "typeExposed": "[Text]",
                        "type": "List \"Location\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grRestrictionType",
                        "name": "_grRestrictionType",
                        "shape": "GeoRestrictionType",
                        "locationName": "RestrictionType",
                        "documentation": "The method that you want to use to restrict distribution of your content by country: - none: No geo restriction is enabled, meaning access to content is not restricted by client geo location. - blacklist: The Location elements specify the countries in which you do not want CloudFront to distribute your content. - whitelist: The Location elements specify the countries in which you want CloudFront to distribute your content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grQuantity",
                        "name": "_grQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "When geo restriction is enabled, this is the number of countries in your whitelist or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 16,
                "name": "GeoRestriction",
                "locationPad": 16,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "grItems",
                        "name": "_grItems",
                        "shape": "LocationList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). The Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist. Include one Location element for each country. CloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list in the CloudFront console, which includes both country names and codes.",
                        "typeExposed": "[Text]",
                        "type": "List \"Location\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "grItems",
                        "name": "_grItems",
                        "shape": "LocationList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a Location element for each country in which you want CloudFront either to distribute your content (whitelist) or not distribute your content (blacklist). The Location element is a two-letter, uppercase country code for a country that you want to include in your blacklist or whitelist. Include one Location element for each country. CloudFront and MaxMind both use ISO 3166 country codes. For the current list of countries and the corresponding codes, see ISO 3166-1-alpha-2 code on the International Organization for Standardization website. You can also refer to the country list in the CloudFront console, which includes both country names and codes.",
                        "typeExposed": "[Text]",
                        "type": "List \"Location\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grQuantity",
                        "name": "_grQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "When geo restriction is enabled, this is the number of countries in your whitelist or blacklist. Otherwise, when it is not enabled, Quantity is 0, and you can omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "grRestrictionType",
                        "name": "_grRestrictionType",
                        "shape": "GeoRestrictionType",
                        "locationName": "RestrictionType",
                        "documentation": "The method that you want to use to restrict distribution of your content by country: - none: No geo restriction is enabled, meaning access to content is not restricted by client geo location. - blacklist: The Location elements specify the countries in which you do not want CloudFront to distribute your content. - whitelist: The Location elements specify the countries in which you want CloudFront to distribute your content.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "s3Origin",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soDomainName",
                        "name": "_soDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The DNS name of the S3 origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soOriginAccessIdentity",
                        "name": "_soOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "Your S3 origin's origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soDomainName",
                        "name": "_soDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The DNS name of the S3 origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soOriginAccessIdentity",
                        "name": "_soOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "Your S3 origin's origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 21,
                "name": "S3Origin",
                "locationPad": 21,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soDomainName",
                        "name": "_soDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The DNS name of the S3 origin.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "soOriginAccessIdentity",
                        "name": "_soOriginAccessIdentity",
                        "shape": "string",
                        "locationName": "OriginAccessIdentity",
                        "documentation": "Your S3 origin's origin access identity.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "headers",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hQuantity",
                        "name": "_hQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of different headers that you want CloudFront to forward to the origin and to vary on for this cache behavior. The maximum number of headers that you can specify by name is 10. If you want CloudFront to forward all headers to the origin and vary on all of them, specify 1 for Quantity and * for Name. If you don't want CloudFront to forward any additional headers to the origin or to vary on any headers, specify 0 for Quantity and omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "hItems",
                        "name": "_hItems",
                        "shape": "HeaderList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains a Name element for each header that you want CloudFront to forward to the origin and to vary on for this cache behavior. If Quantity is 0, omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hQuantity",
                        "name": "_hQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of different headers that you want CloudFront to forward to the origin and to vary on for this cache behavior. The maximum number of headers that you can specify by name is 10. If you want CloudFront to forward all headers to the origin and vary on all of them, specify 1 for Quantity and * for Name. If you don't want CloudFront to forward any additional headers to the origin or to vary on any headers, specify 0 for Quantity and omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "Headers",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "hItems",
                        "name": "_hItems",
                        "shape": "HeaderList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains a Name element for each header that you want CloudFront to forward to the origin and to vary on for this cache behavior. If Quantity is 0, omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "hItems",
                        "name": "_hItems",
                        "shape": "HeaderList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains a Name element for each header that you want CloudFront to forward to the origin and to vary on for this cache behavior. If Quantity is 0, omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "hQuantity",
                        "name": "_hQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of different headers that you want CloudFront to forward to the origin and to vary on for this cache behavior. The maximum number of headers that you can specify by name is 10. If you want CloudFront to forward all headers to the origin and vary on all of them, specify 1 for Quantity and * for Name. If you don't want CloudFront to forward any additional headers to the origin or to vary on any headers, specify 0 for Quantity and omit Items.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 31,
                "ctor": "viewerCertificate",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcIAMCertificateId",
                        "name": "_vcIAMCertificateId",
                        "shape": "string",
                        "locationName": "IAMCertificateId",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using an alternate domain name in your object URLs (for example, https://example.com/logo.jpg), specify the IAM certificate identifier of the custom viewer certificate for this distribution. Specify either this value or CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcCloudFrontDefaultCertificate",
                        "name": "_vcCloudFrontDefaultCertificate",
                        "shape": "boolean",
                        "locationName": "CloudFrontDefaultCertificate",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name of your distribution in your object URLs (for example, https://d111111abcdef8.cloudfront.net/logo.jpg), set to true. Omit this value if you are setting an IAMCertificateId.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcSSLSupportMethod",
                        "name": "_vcSSLSupportMethod",
                        "shape": "SSLSupportMethod",
                        "locationName": "SSLSupportMethod",
                        "documentation": "If you specify a value for IAMCertificateId, you must also specify how you want CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify vip, CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you must request permission to use this feature, and you incur additional monthly charges. If you specify sni-only, CloudFront can only respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. Do not specify a value for SSLSupportMethod if you specified true for CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "payload": null,
                "required": [],
                "contentPad": 29,
                "name": "ViewerCertificate",
                "locationPad": 29,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcIAMCertificateId",
                        "name": "_vcIAMCertificateId",
                        "shape": "string",
                        "locationName": "IAMCertificateId",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using an alternate domain name in your object URLs (for example, https://example.com/logo.jpg), specify the IAM certificate identifier of the custom viewer certificate for this distribution. Specify either this value or CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcCloudFrontDefaultCertificate",
                        "name": "_vcCloudFrontDefaultCertificate",
                        "shape": "boolean",
                        "locationName": "CloudFrontDefaultCertificate",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name of your distribution in your object URLs (for example, https://d111111abcdef8.cloudfront.net/logo.jpg), set to true. Omit this value if you are setting an IAMCertificateId.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcSSLSupportMethod",
                        "name": "_vcSSLSupportMethod",
                        "shape": "SSLSupportMethod",
                        "locationName": "SSLSupportMethod",
                        "documentation": "If you specify a value for IAMCertificateId, you must also specify how you want CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify vip, CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you must request permission to use this feature, and you incur additional monthly charges. If you specify sni-only, CloudFront can only respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. Do not specify a value for SSLSupportMethod if you specified true for CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcCloudFrontDefaultCertificate",
                        "name": "_vcCloudFrontDefaultCertificate",
                        "shape": "boolean",
                        "locationName": "CloudFrontDefaultCertificate",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using the CloudFront domain name of your distribution in your object URLs (for example, https://d111111abcdef8.cloudfront.net/logo.jpg), set to true. Omit this value if you are setting an IAMCertificateId.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcIAMCertificateId",
                        "name": "_vcIAMCertificateId",
                        "shape": "string",
                        "locationName": "IAMCertificateId",
                        "documentation": "If you want viewers to use HTTPS to request your objects and you're using an alternate domain name in your object URLs (for example, https://example.com/logo.jpg), specify the IAM certificate identifier of the custom viewer certificate for this distribution. Specify either this value or CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "vcSSLSupportMethod",
                        "name": "_vcSSLSupportMethod",
                        "shape": "SSLSupportMethod",
                        "locationName": "SSLSupportMethod",
                        "documentation": "If you specify a value for IAMCertificateId, you must also specify how you want CloudFront to serve HTTPS requests. Valid values are vip and sni-only. If you specify vip, CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you must request permission to use this feature, and you incur additional monthly charges. If you specify sni-only, CloudFront can only respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. Do not specify a value for SSLSupportMethod if you specified true for CloudFrontDefaultCertificate.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "listElement": null,
                "fieldPad": 0,
                "ctor": "restrictions",
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "rGeoRestriction",
                    "name": "_rGeoRestriction",
                    "shape": "GeoRestriction",
                    "locationName": "GeoRestriction",
                    "documentation": null,
                    "typeExposed": "GeoRestriction",
                    "type": "GeoRestriction"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rGeoRestriction",
                        "name": "_rGeoRestriction",
                        "shape": "GeoRestriction",
                        "locationName": "GeoRestriction",
                        "documentation": null,
                        "typeExposed": "GeoRestriction",
                        "type": "GeoRestriction"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rGeoRestriction",
                        "name": "_rGeoRestriction",
                        "shape": "GeoRestriction",
                        "locationName": "GeoRestriction",
                        "documentation": null,
                        "typeExposed": "GeoRestriction",
                        "type": "GeoRestriction"
                    }
                ],
                "contentPad": 0,
                "name": "Restrictions",
                "locationPad": 0,
                "type": "newtype",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "rGeoRestriction",
                        "name": "_rGeoRestriction",
                        "shape": "GeoRestriction",
                        "locationName": "GeoRestriction",
                        "documentation": null,
                        "typeExposed": "GeoRestriction",
                        "type": "GeoRestriction"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "origins",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oQuantity",
                        "name": "_oQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of origins for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oItems",
                        "name": "_oItems",
                        "shape": "OriginList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "typeExposed": "NonEmpty Origin",
                        "type": "List1 \"Origin\" Origin"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oQuantity",
                        "name": "_oQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of origins for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oItems",
                        "name": "_oItems",
                        "shape": "OriginList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "typeExposed": "NonEmpty Origin",
                        "type": "List1 \"Origin\" Origin"
                    }
                ],
                "contentPad": 9,
                "name": "Origins",
                "locationPad": 9,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List1",
                        "lensMapping": "_List1",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oItems",
                        "name": "_oItems",
                        "shape": "OriginList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains origins for this distribution.",
                        "typeExposed": "NonEmpty Origin",
                        "type": "List1 \"Origin\" Origin"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "oQuantity",
                        "name": "_oQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of origins for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "Head'": "HEAD",
                    "Post": "POST",
                    "Patch": "PATCH",
                    "Get": "GET",
                    "Options": "OPTIONS",
                    "Delete'": "DELETE",
                    "Put": "PUT"
                },
                "valuePad": 8,
                "name": "Method",
                "type": "nullary",
                "branchPad": 7
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "forwardedValues",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvQueryString",
                        "name": "_fvQueryString",
                        "shape": "boolean",
                        "locationName": "QueryString",
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvCookies",
                        "name": "_fvCookies",
                        "shape": "CookiePreference",
                        "locationName": "Cookies",
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "typeExposed": "CookiePreference",
                        "type": "CookiePreference"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "fvHeaders",
                        "name": "_fvHeaders",
                        "shape": "Headers",
                        "locationName": "Headers",
                        "documentation": "A complex type that specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior.",
                        "typeExposed": "Maybe Headers",
                        "type": "Maybe Headers"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvQueryString",
                        "name": "_fvQueryString",
                        "shape": "boolean",
                        "locationName": "QueryString",
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvCookies",
                        "name": "_fvCookies",
                        "shape": "CookiePreference",
                        "locationName": "Cookies",
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "typeExposed": "CookiePreference",
                        "type": "CookiePreference"
                    }
                ],
                "contentPad": 12,
                "name": "ForwardedValues",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "fvHeaders",
                        "name": "_fvHeaders",
                        "shape": "Headers",
                        "locationName": "Headers",
                        "documentation": "A complex type that specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior.",
                        "typeExposed": "Maybe Headers",
                        "type": "Maybe Headers"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvCookies",
                        "name": "_fvCookies",
                        "shape": "CookiePreference",
                        "locationName": "Cookies",
                        "documentation": "A complex type that specifies how CloudFront handles cookies.",
                        "typeExposed": "CookiePreference",
                        "type": "CookiePreference"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "fvHeaders",
                        "name": "_fvHeaders",
                        "shape": "Headers",
                        "locationName": "Headers",
                        "documentation": "A complex type that specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior.",
                        "typeExposed": "Maybe Headers",
                        "type": "Maybe Headers"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "fvQueryString",
                        "name": "_fvQueryString",
                        "shape": "boolean",
                        "locationName": "QueryString",
                        "documentation": "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "trustedSigners",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsEnabled",
                        "name": "_tsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsQuantity",
                        "name": "_tsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "tsItems",
                        "name": "_tsItems",
                        "shape": "AwsAccountNumberList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"AwsAccountNumber\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsEnabled",
                        "name": "_tsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsQuantity",
                        "name": "_tsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "TrustedSigners",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "tsItems",
                        "name": "_tsItems",
                        "shape": "AwsAccountNumberList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"AwsAccountNumber\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsEnabled",
                        "name": "_tsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want to require end users to use signed URLs to access the files specified by PathPattern and TargetOriginId.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "tsItems",
                        "name": "_tsItems",
                        "shape": "AwsAccountNumberList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains trusted signers for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"AwsAccountNumber\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "tsQuantity",
                        "name": "_tsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of trusted signers for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "None": "none",
                    "Whitelist": "whitelist",
                    "All": "all"
                },
                "valuePad": 10,
                "name": "ItemSelection",
                "type": "nullary",
                "branchPad": 9
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "streamingLoggingConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcEnabled",
                        "name": "_slcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcBucket",
                        "name": "_slcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcPrefix",
                        "name": "_slcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcEnabled",
                        "name": "_slcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcBucket",
                        "name": "_slcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcPrefix",
                        "name": "_slcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 8,
                "name": "StreamingLoggingConfig",
                "locationPad": 8,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcBucket",
                        "name": "_slcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcEnabled",
                        "name": "_slcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a streaming distribution or if you want to disable logging for an existing streaming distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket and Prefix, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "slcPrefix",
                        "name": "_slcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this streaming distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "cookieNames",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cnQuantity",
                        "name": "_cnQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of whitelisted cookies for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cnItems",
                        "name": "_cnItems",
                        "shape": "CookieNameList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cnQuantity",
                        "name": "_cnQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of whitelisted cookies for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "CookieNames",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cnItems",
                        "name": "_cnItems",
                        "shape": "CookieNameList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cnItems",
                        "name": "_cnItems",
                        "shape": "CookieNameList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains whitelisted cookies for this cache behavior. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[Text]",
                        "type": "List \"Name\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cnQuantity",
                        "name": "_cnQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of whitelisted cookies for this cache behavior.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 22,
                "ctor": "customErrorResponse",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerErrorCode",
                        "name": "_cerErrorCode",
                        "shape": "integer",
                        "locationName": "ErrorCode",
                        "documentation": "The 4xx or 5xx HTTP status code that you want to customize. For a list of HTTP status codes that you can customize, see CloudFront documentation.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponsePagePath",
                        "name": "_cerResponsePagePath",
                        "shape": "string",
                        "locationName": "ResponsePagePath",
                        "documentation": "The path of the custom error page (for example, /custom_404.html). The path is relative to the distribution and must begin with a slash (/). If the path includes any non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not return the custom error page to the viewer.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponseCode",
                        "name": "_cerResponseCode",
                        "shape": "string",
                        "locationName": "ResponseCode",
                        "documentation": "The HTTP status code that you want CloudFront to return with the custom error page to the viewer. For a list of HTTP status codes that you can replace, see CloudFront Documentation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerErrorCachingMinTTL",
                        "name": "_cerErrorCachingMinTTL",
                        "shape": "long",
                        "locationName": "ErrorCachingMinTTL",
                        "documentation": "The minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. You can specify a value from 0 to 31,536,000.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerErrorCode",
                        "name": "_cerErrorCode",
                        "shape": "integer",
                        "locationName": "ErrorCode",
                        "documentation": "The 4xx or 5xx HTTP status code that you want to customize. For a list of HTTP status codes that you can customize, see CloudFront documentation.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 19,
                "name": "CustomErrorResponse",
                "locationPad": 19,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponsePagePath",
                        "name": "_cerResponsePagePath",
                        "shape": "string",
                        "locationName": "ResponsePagePath",
                        "documentation": "The path of the custom error page (for example, /custom_404.html). The path is relative to the distribution and must begin with a slash (/). If the path includes any non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not return the custom error page to the viewer.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponseCode",
                        "name": "_cerResponseCode",
                        "shape": "string",
                        "locationName": "ResponseCode",
                        "documentation": "The HTTP status code that you want CloudFront to return with the custom error page to the viewer. For a list of HTTP status codes that you can replace, see CloudFront Documentation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerErrorCachingMinTTL",
                        "name": "_cerErrorCachingMinTTL",
                        "shape": "long",
                        "locationName": "ErrorCachingMinTTL",
                        "documentation": "The minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. You can specify a value from 0 to 31,536,000.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerErrorCachingMinTTL",
                        "name": "_cerErrorCachingMinTTL",
                        "shape": "long",
                        "locationName": "ErrorCachingMinTTL",
                        "documentation": "The minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated. You can specify a value from 0 to 31,536,000.",
                        "typeExposed": "Maybe Integer",
                        "type": "Maybe Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cerErrorCode",
                        "name": "_cerErrorCode",
                        "shape": "integer",
                        "locationName": "ErrorCode",
                        "documentation": "The 4xx or 5xx HTTP status code that you want to customize. For a list of HTTP status codes that you can customize, see CloudFront documentation.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponseCode",
                        "name": "_cerResponseCode",
                        "shape": "string",
                        "locationName": "ResponseCode",
                        "documentation": "The HTTP status code that you want CloudFront to return with the custom error page to the viewer. For a list of HTTP status codes that you can replace, see CloudFront Documentation.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cerResponsePagePath",
                        "name": "_cerResponsePagePath",
                        "shape": "string",
                        "locationName": "ResponsePagePath",
                        "documentation": "The path of the custom error page (for example, /custom_404.html). The path is relative to the distribution and must begin with a slash (/). If the path includes any non-ASCII characters or unsafe characters as defined in RFC 1783 (http://www.ietf.org/rfc/rfc1738.txt), URL encode those characters. Do not URL encode any other characters in the path, or CloudFront will not return the custom error page to the viewer.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 11,
                "ctor": "cacheBehaviors",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbQuantity",
                        "name": "_cbQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cbItems",
                        "name": "_cbItems",
                        "shape": "CacheBehaviorList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CacheBehavior]",
                        "type": "List \"CacheBehavior\" CacheBehavior"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbQuantity",
                        "name": "_cbQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "CacheBehaviors",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cbItems",
                        "name": "_cbItems",
                        "shape": "CacheBehaviorList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CacheBehavior]",
                        "type": "List \"CacheBehavior\" CacheBehavior"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "cbItems",
                        "name": "_cbItems",
                        "shape": "CacheBehaviorList",
                        "locationName": "Items",
                        "documentation": "Optional: A complex type that contains cache behaviors for this distribution. If Quantity is 0, you can omit Items.",
                        "typeExposed": "[CacheBehavior]",
                        "type": "List \"CacheBehavior\" CacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cbQuantity",
                        "name": "_cbQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of cache behaviors for this distribution.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 24,
                "ctor": "defaultCacheBehavior",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTargetOriginId",
                        "name": "_dcbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbForwardedValues",
                        "name": "_dcbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTrustedSigners",
                        "name": "_dcbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbViewerProtocolPolicy",
                        "name": "_dcbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbMinTTL",
                        "name": "_dcbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbAllowedMethods",
                        "name": "_dcbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbSmoothStreaming",
                        "name": "_dcbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTargetOriginId",
                        "name": "_dcbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbForwardedValues",
                        "name": "_dcbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTrustedSigners",
                        "name": "_dcbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbViewerProtocolPolicy",
                        "name": "_dcbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbMinTTL",
                        "name": "_dcbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    }
                ],
                "contentPad": 21,
                "name": "DefaultCacheBehavior",
                "locationPad": 21,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbAllowedMethods",
                        "name": "_dcbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbSmoothStreaming",
                        "name": "_dcbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbAllowedMethods",
                        "name": "_dcbAllowedMethods",
                        "shape": "AllowedMethods",
                        "locationName": "AllowedMethods",
                        "documentation": null,
                        "typeExposed": "Maybe AllowedMethods",
                        "type": "Maybe AllowedMethods"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbForwardedValues",
                        "name": "_dcbForwardedValues",
                        "shape": "ForwardedValues",
                        "locationName": "ForwardedValues",
                        "documentation": "A complex type that specifies how CloudFront handles query strings, cookies and headers.",
                        "typeExposed": "ForwardedValues",
                        "type": "ForwardedValues"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbMinTTL",
                        "name": "_dcbMinTTL",
                        "shape": "long",
                        "locationName": "MinTTL",
                        "documentation": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.You can specify a value from 0 to 3,153,600,000 seconds (100 years).",
                        "typeExposed": "Integer",
                        "type": "Integer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcbSmoothStreaming",
                        "name": "_dcbSmoothStreaming",
                        "shape": "boolean",
                        "locationName": "SmoothStreaming",
                        "documentation": "Indicates whether you want to distribute media files in Microsoft Smooth Streaming format using the origin that is associated with this cache behavior. If so, specify true; if not, specify false.",
                        "typeExposed": "Maybe Bool",
                        "type": "Maybe Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTargetOriginId",
                        "name": "_dcbTargetOriginId",
                        "shape": "string",
                        "locationName": "TargetOriginId",
                        "documentation": "The value of ID for the origin that you want CloudFront to route requests to when a request matches the path pattern either for a cache behavior or for the default cache behavior.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbTrustedSigners",
                        "name": "_dcbTrustedSigners",
                        "shape": "TrustedSigners",
                        "locationName": "TrustedSigners",
                        "documentation": "A complex type that specifies the AWS accounts, if any, that you want to allow to create signed URLs for private content. If you want to require signed URLs in requests for objects in the target origin that match the PathPattern for this cache behavior, specify true for Enabled, and specify the applicable values for Quantity and Items. For more information, go to Using a Signed URL to Serve Private Content in the Amazon CloudFront Developer Guide. If you don't want to require signed URLs in requests for objects that match PathPattern, specify false for Enabled and 0 for Quantity. Omit Items. To add, change, or remove one or more trusted signers, change Enabled to true (if it's currently false), change Quantity as applicable, and specify all of the trusted signers that you want to include in the updated distribution.",
                        "typeExposed": "TrustedSigners",
                        "type": "TrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcbViewerProtocolPolicy",
                        "name": "_dcbViewerProtocolPolicy",
                        "shape": "ViewerProtocolPolicy",
                        "locationName": "ViewerProtocolPolicy",
                        "documentation": "Use this element to specify the protocol that users can use to access the files in the origin specified by TargetOriginId when a request matches the path pattern in PathPattern. If you want CloudFront to allow end users to use any available protocol, specify allow-all. If you want CloudFront to require HTTPS, specify https. If you want CloudFront to respond to an HTTP request with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL, specify redirect-to-https. The viewer then resubmits the request using the HTTPS URL.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 14,
                "ctor": "invalidationList",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMarker",
                        "name": "_ilMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ilNextMarker",
                        "name": "_ilNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your invalidation batches where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMaxItems",
                        "name": "_ilMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilIsTruncated",
                        "name": "_ilIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilQuantity",
                        "name": "_ilQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of invalidation batches that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "ilItems",
                        "name": "_ilItems",
                        "shape": "InvalidationSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one InvalidationSummary element for each invalidation batch that was created by the current AWS account.",
                        "typeExposed": "[InvalidationSummary]",
                        "type": "List \"InvalidationSummary\" InvalidationSummary"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMarker",
                        "name": "_ilMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMaxItems",
                        "name": "_ilMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilIsTruncated",
                        "name": "_ilIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilQuantity",
                        "name": "_ilQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of invalidation batches that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 12,
                "name": "InvalidationList",
                "locationPad": 12,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ilNextMarker",
                        "name": "_ilNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your invalidation batches where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "ilItems",
                        "name": "_ilItems",
                        "shape": "InvalidationSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one InvalidationSummary element for each invalidation batch that was created by the current AWS account.",
                        "typeExposed": "[InvalidationSummary]",
                        "type": "List \"InvalidationSummary\" InvalidationSummary"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilIsTruncated",
                        "name": "_ilIsTruncated",
                        "shape": "boolean",
                        "locationName": "IsTruncated",
                        "documentation": "A flag that indicates whether more invalidation batch requests remain to be listed. If your results were truncated, you can make a follow-up pagination request using the Marker request parameter to retrieve more invalidation batches in the list.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "ilItems",
                        "name": "_ilItems",
                        "shape": "InvalidationSummaryList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one InvalidationSummary element for each invalidation batch that was created by the current AWS account.",
                        "typeExposed": "[InvalidationSummary]",
                        "type": "List \"InvalidationSummary\" InvalidationSummary"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMarker",
                        "name": "_ilMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "The value you provided for the Marker request parameter.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilMaxItems",
                        "name": "_ilMaxItems",
                        "shape": "integer",
                        "locationName": "MaxItems",
                        "documentation": "The value you provided for the MaxItems request parameter.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ilNextMarker",
                        "name": "_ilNextMarker",
                        "shape": "string",
                        "locationName": "NextMarker",
                        "documentation": "If IsTruncated is true, this element is present and contains the value you can use for the Marker request parameter to continue listing your invalidation batches where they left off.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ilQuantity",
                        "name": "_ilQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of invalidation batches that were created by the current AWS account.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 30,
                "ctor": "streamingDistribution",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdId",
                        "name": "_sdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStatus",
                        "name": "_sdStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdLastModifiedTime",
                        "name": "_sdLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdDomainName",
                        "name": "_sdDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdActiveTrustedSigners",
                        "name": "_sdActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamingDistributionConfig",
                        "name": "_sdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The current configuration information for the streaming distribution.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdId",
                        "name": "_sdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStatus",
                        "name": "_sdStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdDomainName",
                        "name": "_sdDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdActiveTrustedSigners",
                        "name": "_sdActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamingDistributionConfig",
                        "name": "_sdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The current configuration information for the streaming distribution.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ],
                "contentPad": 28,
                "name": "StreamingDistribution",
                "locationPad": 28,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdLastModifiedTime",
                        "name": "_sdLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdActiveTrustedSigners",
                        "name": "_sdActiveTrustedSigners",
                        "shape": "ActiveTrustedSigners",
                        "locationName": "ActiveTrustedSigners",
                        "documentation": "CloudFront automatically adds this element to the response only if you've set up the distribution to serve private content with signed URLs. The element lists the key pair IDs that CloudFront is aware of for each trusted signer. The Signer child element lists the AWS account number of the trusted signer (or an empty Self element if the signer is you). The Signer element also includes the IDs of any active key pairs associated with the trusted signer's AWS account. If no KeyPairId element appears for a Signer, that signer can't create working signed URLs.",
                        "typeExposed": "ActiveTrustedSigners",
                        "type": "ActiveTrustedSigners"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdDomainName",
                        "name": "_sdDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the streaming distribution. For example: s5c39gqb8ow64r.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdId",
                        "name": "_sdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the streaming distribution. For example: EGTXBD79H29TRA8.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": "mapping _Time",
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "sdLastModifiedTime",
                        "name": "_sdLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "Maybe UTCTime",
                        "type": "Maybe RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStatus",
                        "name": "_sdStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "The current status of the streaming distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "sdStreamingDistributionConfig",
                        "name": "_sdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The current configuration information for the streaming distribution.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 10,
                "ctor": "paths",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pQuantity",
                        "name": "_pQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of objects that you want to invalidate.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "pItems",
                        "name": "_pItems",
                        "shape": "PathList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                        "typeExposed": "[Text]",
                        "type": "List \"Path\" Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pQuantity",
                        "name": "_pQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of objects that you want to invalidate.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "Paths",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "pItems",
                        "name": "_pItems",
                        "shape": "PathList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                        "typeExposed": "[Text]",
                        "type": "List \"Path\" Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "pItems",
                        "name": "_pItems",
                        "shape": "PathList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains a list of the objects that you want to invalidate.",
                        "typeExposed": "[Text]",
                        "type": "List \"Path\" Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "pQuantity",
                        "name": "_pQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of objects that you want to invalidate.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 42,
                "ctor": "cloudFrontOriginAccessIdentity",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiId",
                        "name": "_cfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiS3CanonicalUserId",
                        "name": "_cfoaiS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_cfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The current configuration information for the identity.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiId",
                        "name": "_cfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiS3CanonicalUserId",
                        "name": "_cfoaiS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 37,
                "name": "CloudFrontOriginAccessIdentity",
                "locationPad": 37,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_cfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The current configuration information for the identity.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_cfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The current configuration information for the identity.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiId",
                        "name": "_cfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The ID for the origin access identity. For example: E74FTE3AJFJ256A.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cfoaiS3CanonicalUserId",
                        "name": "_cfoaiS3CanonicalUserId",
                        "shape": "string",
                        "locationName": "S3CanonicalUserId",
                        "documentation": "The Amazon S3 canonical user ID for the origin access identity, which you use when giving the origin access identity read permission to an object in Amazon S3.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 12,
                "ctor": "activeTrustedSigners",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsEnabled",
                        "name": "_atsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Each active trusted signer.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsQuantity",
                        "name": "_atsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                        "typeExposed": "Int",
                        "type": "Int"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "atsItems",
                        "name": "_atsItems",
                        "shape": "SignerList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                        "typeExposed": "[Signer]",
                        "type": "List \"Signer\" Signer"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsEnabled",
                        "name": "_atsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Each active trusted signer.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsQuantity",
                        "name": "_atsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ],
                "contentPad": 9,
                "name": "ActiveTrustedSigners",
                "locationPad": 9,
                "type": "record",
                "optional": [
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "atsItems",
                        "name": "_atsItems",
                        "shape": "SignerList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                        "typeExposed": "[Signer]",
                        "type": "List \"Signer\" Signer"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsEnabled",
                        "name": "_atsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Each active trusted signer.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": "_List",
                        "lensMapping": "_List",
                        "default": "mempty",
                        "flattened": false,
                        "required": false,
                        "lens": "atsItems",
                        "name": "_atsItems",
                        "shape": "SignerList",
                        "locationName": "Items",
                        "documentation": "A complex type that contains one Signer complex type for each unique trusted signer that is specified in the TrustedSigners complex type, including trusted signers in the default cache behavior and in all of the other cache behaviors.",
                        "typeExposed": "[Signer]",
                        "type": "List \"Signer\" Signer"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "atsQuantity",
                        "name": "_atsQuantity",
                        "shape": "integer",
                        "locationName": "Quantity",
                        "documentation": "The number of unique trusted signers included in all cache behaviors. For example, if three cache behaviors all list the same three AWS accounts, the value of Quantity for ActiveTrustedSigners will be 3.",
                        "typeExposed": "Int",
                        "type": "Int"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "fieldPad": 23,
                "ctor": "distributionSummary",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsId",
                        "name": "_dsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsLastModifiedTime",
                        "name": "_dsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDomainName",
                        "name": "_dsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsAliases",
                        "name": "_dsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsOrigins",
                        "name": "_dsOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDefaultCacheBehavior",
                        "name": "_dsDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCacheBehaviors",
                        "name": "_dsCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCustomErrorResponses",
                        "name": "_dsCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponses elements.",
                        "typeExposed": "CustomErrorResponses",
                        "type": "CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsComment",
                        "name": "_dsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsPriceClass",
                        "name": "_dsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsEnabled",
                        "name": "_dsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsViewerCertificate",
                        "name": "_dsViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "ViewerCertificate",
                        "type": "ViewerCertificate"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsRestrictions",
                        "name": "_dsRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Restrictions",
                        "type": "Restrictions"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsId",
                        "name": "_dsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsLastModifiedTime",
                        "name": "_dsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDomainName",
                        "name": "_dsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsAliases",
                        "name": "_dsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsOrigins",
                        "name": "_dsOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDefaultCacheBehavior",
                        "name": "_dsDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCacheBehaviors",
                        "name": "_dsCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCustomErrorResponses",
                        "name": "_dsCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponses elements.",
                        "typeExposed": "CustomErrorResponses",
                        "type": "CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsComment",
                        "name": "_dsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsPriceClass",
                        "name": "_dsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsEnabled",
                        "name": "_dsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsViewerCertificate",
                        "name": "_dsViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "ViewerCertificate",
                        "type": "ViewerCertificate"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsRestrictions",
                        "name": "_dsRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Restrictions",
                        "type": "Restrictions"
                    }
                ],
                "contentPad": 21,
                "name": "DistributionSummary",
                "locationPad": 21,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsAliases",
                        "name": "_dsAliases",
                        "shape": "Aliases",
                        "locationName": "Aliases",
                        "documentation": "A complex type that contains information about CNAMEs (alternate domain names), if any, for this distribution.",
                        "typeExposed": "Aliases",
                        "type": "Aliases"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCacheBehaviors",
                        "name": "_dsCacheBehaviors",
                        "shape": "CacheBehaviors",
                        "locationName": "CacheBehaviors",
                        "documentation": "A complex type that contains zero or more CacheBehavior elements.",
                        "typeExposed": "CacheBehaviors",
                        "type": "CacheBehaviors"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsComment",
                        "name": "_dsComment",
                        "shape": "string",
                        "locationName": "Comment",
                        "documentation": "The comment originally specified when this distribution was created.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsCustomErrorResponses",
                        "name": "_dsCustomErrorResponses",
                        "shape": "CustomErrorResponses",
                        "locationName": "CustomErrorResponses",
                        "documentation": "A complex type that contains zero or more CustomErrorResponses elements.",
                        "typeExposed": "CustomErrorResponses",
                        "type": "CustomErrorResponses"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDefaultCacheBehavior",
                        "name": "_dsDefaultCacheBehavior",
                        "shape": "DefaultCacheBehavior",
                        "locationName": "DefaultCacheBehavior",
                        "documentation": "A complex type that describes the default cache behavior if you do not specify a CacheBehavior element or if files don't match any of the values of PathPattern in CacheBehavior elements.You must create exactly one default cache behavior.",
                        "typeExposed": "DefaultCacheBehavior",
                        "type": "DefaultCacheBehavior"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsDomainName",
                        "name": "_dsDomainName",
                        "shape": "string",
                        "locationName": "DomainName",
                        "documentation": "The domain name corresponding to the distribution. For example: d604721fxaaqy9.cloudfront.net.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsEnabled",
                        "name": "_dsEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Whether the distribution is enabled to accept end user requests for content.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsId",
                        "name": "_dsId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identifier for the distribution. For example: EDFDVBD632BHDS5.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": "_Time",
                        "lensMapping": "_Time",
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsLastModifiedTime",
                        "name": "_dsLastModifiedTime",
                        "shape": "timestamp",
                        "locationName": "LastModifiedTime",
                        "documentation": "The date and time the distribution was last modified.",
                        "typeExposed": "UTCTime",
                        "type": "RFC822"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsOrigins",
                        "name": "_dsOrigins",
                        "shape": "Origins",
                        "locationName": "Origins",
                        "documentation": "A complex type that contains information about origins for this distribution.",
                        "typeExposed": "Origins",
                        "type": "Origins"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsPriceClass",
                        "name": "_dsPriceClass",
                        "shape": "PriceClass",
                        "locationName": "PriceClass",
                        "documentation": null,
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsRestrictions",
                        "name": "_dsRestrictions",
                        "shape": "Restrictions",
                        "locationName": "Restrictions",
                        "documentation": null,
                        "typeExposed": "Restrictions",
                        "type": "Restrictions"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsStatus",
                        "name": "_dsStatus",
                        "shape": "string",
                        "locationName": "Status",
                        "documentation": "This response element indicates the current status of the distribution. When the status is Deployed, the distribution's information is fully propagated throughout the Amazon CloudFront system.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsViewerCertificate",
                        "name": "_dsViewerCertificate",
                        "shape": "ViewerCertificate",
                        "locationName": "ViewerCertificate",
                        "documentation": null,
                        "typeExposed": "ViewerCertificate",
                        "type": "ViewerCertificate"
                    }
                ]
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic",
                    "Enum"
                ],
                "branches": {
                    "GRTBlacklist": "blacklist",
                    "GRTNone": "none",
                    "GRTWhitelist": "whitelist"
                },
                "valuePad": 10,
                "name": "GeoRestrictionType",
                "type": "nullary",
                "branchPad": 12
            },
            {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "fieldPad": 17,
                "ctor": "loggingConfig",
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcEnabled",
                        "name": "_lcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcIncludeCookies",
                        "name": "_lcIncludeCookies",
                        "shape": "boolean",
                        "locationName": "IncludeCookies",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcBucket",
                        "name": "_lcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcPrefix",
                        "name": "_lcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "payload": null,
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcEnabled",
                        "name": "_lcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcIncludeCookies",
                        "name": "_lcIncludeCookies",
                        "shape": "boolean",
                        "locationName": "IncludeCookies",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcBucket",
                        "name": "_lcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcPrefix",
                        "name": "_lcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "contentPad": 15,
                "name": "LoggingConfig",
                "locationPad": 15,
                "type": "record",
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcBucket",
                        "name": "_lcBucket",
                        "shape": "string",
                        "locationName": "Bucket",
                        "documentation": "The Amazon S3 bucket to store the access logs in, for example, myawslogbucket.s3.amazonaws.com.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcEnabled",
                        "name": "_lcEnabled",
                        "shape": "boolean",
                        "locationName": "Enabled",
                        "documentation": "Specifies whether you want CloudFront to save access logs to an Amazon S3 bucket. If you do not want to enable logging when you create a distribution or if you want to disable logging for an existing distribution, specify false for Enabled, and specify empty Bucket and Prefix elements. If you specify false for Enabled but you specify values for Bucket, prefix and IncludeCookies, the values are automatically deleted.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcIncludeCookies",
                        "name": "_lcIncludeCookies",
                        "shape": "boolean",
                        "locationName": "IncludeCookies",
                        "documentation": "Specifies whether you want CloudFront to include cookies in access logs, specify true for IncludeCookies. If you choose to include cookies in logs, CloudFront logs all cookies regardless of how you configure the cache behaviors for this distribution. If you do not want to include cookies when you create a distribution or if you want to disable include cookies for an existing distribution, specify false for IncludeCookies.",
                        "typeExposed": "Bool",
                        "type": "Bool"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcPrefix",
                        "name": "_lcPrefix",
                        "shape": "string",
                        "locationName": "Prefix",
                        "documentation": "An optional string that you want CloudFront to prefix to the access log filenames for this distribution, for example, myprefix/. If you want to enable logging, but you do not want to specify a prefix, you still must include an empty Prefix element in the Logging element.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        ],
        "imports": [],
        "shared": [
            "Invalidation",
            "Distribution",
            "StreamingDistribution",
            "CloudFrontOriginAccessIdentity"
        ]
    },
    "operations": [
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 38,
                "ctor": "createCloudFrontOriginAccessIdentityResponse",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairCloudFrontOriginAccessIdentity",
                        "name": "_ccfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "ccfoairCloudFrontOriginAccessIdentity",
                    "name": "_ccfoairCloudFrontOriginAccessIdentity",
                    "shape": "CloudFrontOriginAccessIdentity",
                    "locationName": "CloudFrontOriginAccessIdentity",
                    "documentation": "The origin access identity's information.",
                    "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                    "type": "Maybe CloudFrontOriginAccessIdentity"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_ccfoairLocation",
                        "locationName": "Location",
                        "type": "field"
                    },
                    {
                        "field": "_ccfoairETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 31,
                "name": "CreateCloudFrontOriginAccessIdentityResponse",
                "resultWrapper": null,
                "locationPad": 31,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairCloudFrontOriginAccessIdentity",
                        "name": "_ccfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairLocation",
                        "name": "_ccfoairLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new origin access identity just created. For example: https://cloudfront.amazonaws.com/2010-11-01/origin-access-identity/cloudfront/E74FTE3AJFJ256A.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairETag",
                        "name": "_ccfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the origin access identity created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairCloudFrontOriginAccessIdentity",
                        "name": "_ccfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairETag",
                        "name": "_ccfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the origin access identity created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ccfoairLocation",
                        "name": "_ccfoairLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new origin access identity just created. For example: https://cloudfront.amazonaws.com/2010-11-01/origin-access-identity/cloudfront/E74FTE3AJFJ256A.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/CreateCloudFrontOriginAccessIdentity.html",
            "namespace": "Network.AWS.CloudFront.CreateCloudFrontOriginAccessIdentity",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "CreateCloudFrontOriginAccessIdentity",
            "method": "post",
            "documentation": "Create a new origin access identity.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createCloudFrontOriginAccessIdentity",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ccfoaiCloudFrontOriginAccessIdentityConfig",
                    "name": "_ccfoaiCloudFrontOriginAccessIdentityConfig",
                    "shape": "CloudFrontOriginAccessIdentityConfig",
                    "locationName": "CloudFrontOriginAccessIdentityConfig",
                    "documentation": "The origin access identity's configuration information.",
                    "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                    "type": "CloudFrontOriginAccessIdentityConfig"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ccfoaiCloudFrontOriginAccessIdentityConfig",
                    "name": "_ccfoaiCloudFrontOriginAccessIdentityConfig",
                    "shape": "CloudFrontOriginAccessIdentityConfig",
                    "locationName": "CloudFrontOriginAccessIdentityConfig",
                    "documentation": "The origin access identity's configuration information.",
                    "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                    "type": "CloudFrontOriginAccessIdentityConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CreateCloudFrontOriginAccessIdentity",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ccfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 16,
                "ctor": "createDistributionResponse",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrDistribution",
                        "name": "_cdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cdrDistribution",
                    "name": "_cdrDistribution",
                    "shape": "Distribution",
                    "locationName": "Distribution",
                    "documentation": "The distribution's information.",
                    "typeExposed": "Maybe Distribution",
                    "type": "Maybe Distribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_cdrLocation",
                        "locationName": "Location",
                        "type": "field"
                    },
                    {
                        "field": "_cdrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 13,
                "name": "CreateDistributionResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrDistribution",
                        "name": "_cdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrLocation",
                        "name": "_cdrLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/distribution/EDFDVBD632BHDS5.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrETag",
                        "name": "_cdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the distribution created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrDistribution",
                        "name": "_cdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrETag",
                        "name": "_cdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the distribution created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cdrLocation",
                        "name": "_cdrLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/distribution/EDFDVBD632BHDS5.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/CreateDistribution.html",
            "namespace": "Network.AWS.CloudFront.CreateDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "CreateDistribution",
            "method": "post",
            "documentation": "Create a new distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createDistribution",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "cdDistributionConfig",
                    "name": "_cdDistributionConfig",
                    "shape": "DistributionConfig",
                    "locationName": "DistributionConfig",
                    "documentation": "The distribution's configuration information.",
                    "typeExposed": "DistributionConfig",
                    "type": "DistributionConfig"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cdDistributionConfig",
                        "name": "_cdDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/distribution",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "cdDistributionConfig",
                    "name": "_cdDistributionConfig",
                    "shape": "DistributionConfig",
                    "locationName": "DistributionConfig",
                    "documentation": "The distribution's configuration information.",
                    "typeExposed": "DistributionConfig",
                    "type": "DistributionConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cdDistributionConfig",
                        "name": "_cdDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CreateDistribution",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "cdDistributionConfig",
                        "name": "_cdDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 16,
                "ctor": "createInvalidationResponse",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cirInvalidation",
                        "name": "_cirInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "cirInvalidation",
                    "name": "_cirInvalidation",
                    "shape": "Invalidation",
                    "locationName": "Invalidation",
                    "documentation": "The invalidation's information.",
                    "typeExposed": "Maybe Invalidation",
                    "type": "Maybe Invalidation"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_cirLocation",
                        "locationName": "Location",
                        "type": "field"
                    }
                ],
                "contentPad": 13,
                "name": "CreateInvalidationResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cirLocation",
                        "name": "_cirLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the distribution and invalidation batch request, including the Invalidation ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cirInvalidation",
                        "name": "_cirInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cirInvalidation",
                        "name": "_cirInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "cirLocation",
                        "name": "_cirLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the distribution and invalidation batch request, including the Invalidation ID.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/CreateInvalidation.html",
            "namespace": "Network.AWS.CloudFront.CreateInvalidation",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "CreateInvalidation",
            "method": "post",
            "documentation": "Create a new invalidation.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 20,
                "ctor": "createInvalidation",
                "headerPad": 0,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ciInvalidationBatch",
                        "name": "_ciInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The batch information for the invalidation.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_ciDistributionId",
                        "type": "var"
                    },
                    {
                        "value": "/invalidation",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ciInvalidationBatch",
                    "name": "_ciInvalidationBatch",
                    "shape": "InvalidationBatch",
                    "locationName": "InvalidationBatch",
                    "documentation": "The batch information for the invalidation.",
                    "typeExposed": "InvalidationBatch",
                    "type": "InvalidationBatch"
                },
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ciDistributionId",
                        "name": "_ciDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ciInvalidationBatch",
                        "name": "_ciInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The batch information for the invalidation.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 18,
                "queryPad": 0,
                "name": "CreateInvalidation",
                "query": [],
                "locationPad": 18,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ciDistributionId",
                        "name": "_ciDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ciInvalidationBatch",
                        "name": "_ciInvalidationBatch",
                        "shape": "InvalidationBatch",
                        "locationName": "InvalidationBatch",
                        "documentation": "The batch information for the invalidation.",
                        "typeExposed": "InvalidationBatch",
                        "type": "InvalidationBatch"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 26,
                "ctor": "createStreamingDistributionResponse",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrStreamingDistribution",
                        "name": "_csdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "csdrStreamingDistribution",
                    "name": "_csdrStreamingDistribution",
                    "shape": "StreamingDistribution",
                    "locationName": "StreamingDistribution",
                    "documentation": "The streaming distribution's information.",
                    "typeExposed": "Maybe StreamingDistribution",
                    "type": "Maybe StreamingDistribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_csdrLocation",
                        "locationName": "Location",
                        "type": "field"
                    },
                    {
                        "field": "_csdrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 22,
                "name": "CreateStreamingDistributionResponse",
                "resultWrapper": null,
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrStreamingDistribution",
                        "name": "_csdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrLocation",
                        "name": "_csdrLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new streaming distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/streaming-distribution/EGTXBD79H29TRA8.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrETag",
                        "name": "_csdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the streaming distribution created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrETag",
                        "name": "_csdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the streaming distribution created.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrLocation",
                        "name": "_csdrLocation",
                        "shape": "string",
                        "locationName": "Location",
                        "documentation": "The fully qualified URI of the new streaming distribution resource just created. For example: https://cloudfront.amazonaws.com/2010-11-01/streaming-distribution/EGTXBD79H29TRA8.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "csdrStreamingDistribution",
                        "name": "_csdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/CreateStreamingDistribution.html",
            "namespace": "Network.AWS.CloudFront.CreateStreamingDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "CreateStreamingDistribution",
            "method": "post",
            "documentation": "Create a new streaming distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "createStreamingDistribution",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "csdStreamingDistributionConfig",
                    "name": "_csdStreamingDistributionConfig",
                    "shape": "StreamingDistributionConfig",
                    "locationName": "StreamingDistributionConfig",
                    "documentation": "The streaming distribution's configuration information.",
                    "typeExposed": "StreamingDistributionConfig",
                    "type": "StreamingDistributionConfig"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "csdStreamingDistributionConfig",
                        "name": "_csdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "csdStreamingDistributionConfig",
                    "name": "_csdStreamingDistributionConfig",
                    "shape": "StreamingDistributionConfig",
                    "locationName": "StreamingDistributionConfig",
                    "documentation": "The streaming distribution's configuration information.",
                    "typeExposed": "StreamingDistributionConfig",
                    "type": "StreamingDistributionConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "csdStreamingDistributionConfig",
                        "name": "_csdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "CreateStreamingDistribution",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "csdStreamingDistributionConfig",
                        "name": "_csdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteCloudFrontOriginAccessIdentityResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteCloudFrontOriginAccessIdentityResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/DeleteCloudFrontOriginAccessIdentity.html",
            "namespace": "Network.AWS.CloudFront.DeleteCloudFrontOriginAccessIdentity",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "DeleteCloudFrontOriginAccessIdentity",
            "method": "delete",
            "documentation": "Delete an origin access identity.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 14,
                "ctor": "deleteCloudFrontOriginAccessIdentity",
                "headerPad": 9,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront/",
                        "type": "const"
                    },
                    {
                        "value": "_dcfoaiId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcfoaiId",
                        "name": "_dcfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The origin access identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_dcfoaiIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteCloudFrontOriginAccessIdentity",
                "query": [],
                "locationPad": 9,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcfoaiIfMatch",
                        "name": "_dcfoaiIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received from a previous GET or PUT request. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dcfoaiId",
                        "name": "_dcfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The origin access identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dcfoaiIfMatch",
                        "name": "_dcfoaiIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received from a previous GET or PUT request. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteDistributionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteDistributionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/DeleteDistribution.html",
            "namespace": "Network.AWS.CloudFront.DeleteDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "DeleteDistribution",
            "method": "delete",
            "documentation": "Delete a distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 10,
                "ctor": "deleteDistribution",
                "headerPad": 9,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_ddId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ddId",
                        "name": "_ddId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_ddIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteDistribution",
                "query": [],
                "locationPad": 9,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ddIfMatch",
                        "name": "_ddIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when you disabled the distribution. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ddId",
                        "name": "_ddId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ddIfMatch",
                        "name": "_ddIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when you disabled the distribution. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Generic"
                ],
                "streaming": false,
                "style": "nullary",
                "fieldPad": 0,
                "ctor": "deleteStreamingDistributionResponse",
                "headerPad": 0,
                "wrapper": false,
                "protocol": "rest-xml",
                "required": [],
                "shared": false,
                "headers": [],
                "name": "DeleteStreamingDistributionResponse",
                "resultWrapper": null,
                "type": "empty",
                "headerAll": false,
                "optional": [],
                "fields": []
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/DeleteStreamingDistribution.html",
            "namespace": "Network.AWS.CloudFront.DeleteStreamingDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "DeleteStreamingDistribution",
            "method": "delete",
            "documentation": "Delete a streaming distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 11,
                "ctor": "deleteStreamingDistribution",
                "headerPad": 9,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_dsdId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsdId",
                        "name": "_dsdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_dsdIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 0,
                "queryPad": 0,
                "name": "DeleteStreamingDistribution",
                "query": [],
                "locationPad": 9,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdIfMatch",
                        "name": "_dsdIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when you disabled the streaming distribution. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "dsdId",
                        "name": "_dsdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "dsdIfMatch",
                        "name": "_dsdIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when you disabled the streaming distribution. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 38,
                "ctor": "getCloudFrontOriginAccessIdentityResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoairCloudFrontOriginAccessIdentity",
                        "name": "_gcfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gcfoairCloudFrontOriginAccessIdentity",
                    "name": "_gcfoairCloudFrontOriginAccessIdentity",
                    "shape": "CloudFrontOriginAccessIdentity",
                    "locationName": "CloudFrontOriginAccessIdentity",
                    "documentation": "The origin access identity's information.",
                    "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                    "type": "Maybe CloudFrontOriginAccessIdentity"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gcfoairETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 31,
                "name": "GetCloudFrontOriginAccessIdentityResponse",
                "resultWrapper": null,
                "locationPad": 31,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoairCloudFrontOriginAccessIdentity",
                        "name": "_gcfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoairETag",
                        "name": "_gcfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the origin access identity's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoairCloudFrontOriginAccessIdentity",
                        "name": "_gcfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoairETag",
                        "name": "_gcfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the origin access identity's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetCloudFrontOriginAccessIdentity.html",
            "namespace": "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentity",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetCloudFrontOriginAccessIdentity",
            "method": "get",
            "documentation": "Get the information about an origin access identity.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getCloudFrontOriginAccessIdentity",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gcfoaiId",
                    "name": "_gcfoaiId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The identity's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront/",
                        "type": "const"
                    },
                    {
                        "value": "_gcfoaiId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gcfoaiId",
                        "name": "_gcfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetCloudFrontOriginAccessIdentity",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gcfoaiId",
                        "name": "_gcfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 45,
                "ctor": "getCloudFrontOriginAccessIdentityConfigResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "name": "_gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gcfoaicrCloudFrontOriginAccessIdentityConfig",
                    "name": "_gcfoaicrCloudFrontOriginAccessIdentityConfig",
                    "shape": "CloudFrontOriginAccessIdentityConfig",
                    "locationName": "CloudFrontOriginAccessIdentityConfig",
                    "documentation": "The origin access identity's configuration information.",
                    "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                    "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gcfoaicrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 37,
                "name": "GetCloudFrontOriginAccessIdentityConfigResponse",
                "resultWrapper": null,
                "locationPad": 37,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "name": "_gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoaicrETag",
                        "name": "_gcfoaicrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "name": "_gcfoaicrCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The origin access identity's configuration information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentityConfig",
                        "type": "Maybe CloudFrontOriginAccessIdentityConfig"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gcfoaicrETag",
                        "name": "_gcfoaicrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetCloudFrontOriginAccessIdentityConfig.html",
            "namespace": "Network.AWS.CloudFront.GetCloudFrontOriginAccessIdentityConfig",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetCloudFrontOriginAccessIdentityConfig",
            "method": "get",
            "documentation": "Get the configuration information about an origin access identity.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getCloudFrontOriginAccessIdentityConfig",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gcfoaicId",
                    "name": "_gcfoaicId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The identity's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront/",
                        "type": "const"
                    },
                    {
                        "value": "_gcfoaicId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gcfoaicId",
                        "name": "_gcfoaicId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetCloudFrontOriginAccessIdentityConfig",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gcfoaicId",
                        "name": "_gcfoaicId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 16,
                "ctor": "getDistributionResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdrDistribution",
                        "name": "_gdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gdrDistribution",
                    "name": "_gdrDistribution",
                    "shape": "Distribution",
                    "locationName": "Distribution",
                    "documentation": "The distribution's information.",
                    "typeExposed": "Maybe Distribution",
                    "type": "Maybe Distribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gdrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 13,
                "name": "GetDistributionResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdrDistribution",
                        "name": "_gdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdrETag",
                        "name": "_gdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the distribution's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdrDistribution",
                        "name": "_gdrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdrETag",
                        "name": "_gdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the distribution's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetDistribution.html",
            "namespace": "Network.AWS.CloudFront.GetDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetDistribution",
            "method": "get",
            "documentation": "Get the information about a distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getDistribution",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gdId",
                    "name": "_gdId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The distribution's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_gdId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gdId",
                        "name": "_gdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetDistribution",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gdId",
                        "name": "_gdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 23,
                "ctor": "getDistributionConfigResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdcrDistributionConfig",
                        "name": "_gdcrDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "Maybe DistributionConfig",
                        "type": "Maybe DistributionConfig"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gdcrDistributionConfig",
                    "name": "_gdcrDistributionConfig",
                    "shape": "DistributionConfig",
                    "locationName": "DistributionConfig",
                    "documentation": "The distribution's configuration information.",
                    "typeExposed": "Maybe DistributionConfig",
                    "type": "Maybe DistributionConfig"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gdcrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 19,
                "name": "GetDistributionConfigResponse",
                "resultWrapper": null,
                "locationPad": 19,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdcrDistributionConfig",
                        "name": "_gdcrDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "Maybe DistributionConfig",
                        "type": "Maybe DistributionConfig"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdcrETag",
                        "name": "_gdcrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdcrDistributionConfig",
                        "name": "_gdcrDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "Maybe DistributionConfig",
                        "type": "Maybe DistributionConfig"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gdcrETag",
                        "name": "_gdcrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetDistributionConfig.html",
            "namespace": "Network.AWS.CloudFront.GetDistributionConfig",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetDistributionConfig",
            "method": "get",
            "documentation": "Get the configuration information about a distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getDistributionConfig",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gdcId",
                    "name": "_gdcId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The distribution's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_gdcId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gdcId",
                        "name": "_gdcId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetDistributionConfig",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gdcId",
                        "name": "_gdcId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getInvalidationResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "girInvalidation",
                    "name": "_girInvalidation",
                    "shape": "Invalidation",
                    "locationName": "Invalidation",
                    "documentation": "The invalidation's information.",
                    "typeExposed": "Maybe Invalidation",
                    "type": "Maybe Invalidation"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "girInvalidation",
                        "name": "_girInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "girInvalidation",
                    "name": "_girInvalidation",
                    "shape": "Invalidation",
                    "locationName": "Invalidation",
                    "documentation": "The invalidation's information.",
                    "typeExposed": "Maybe Invalidation",
                    "type": "Maybe Invalidation"
                },
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "GetInvalidationResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "girInvalidation",
                        "name": "_girInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "girInvalidation",
                        "name": "_girInvalidation",
                        "shape": "Invalidation",
                        "locationName": "Invalidation",
                        "documentation": "The invalidation's information.",
                        "typeExposed": "Maybe Invalidation",
                        "type": "Maybe Invalidation"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetInvalidation.html",
            "namespace": "Network.AWS.CloudFront.GetInvalidation",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetInvalidation",
            "method": "get",
            "documentation": "Get the information about an invalidation.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "getInvalidation",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_giDistributionId",
                        "type": "var"
                    },
                    {
                        "value": "/invalidation/",
                        "type": "const"
                    },
                    {
                        "value": "_giId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "giDistributionId",
                        "name": "_giDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "giId",
                        "name": "_giId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The invalidation's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetInvalidation",
                "query": [],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "giDistributionId",
                        "name": "_giDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "giId",
                        "name": "_giId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The invalidation's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 26,
                "ctor": "getStreamingDistributionResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdrStreamingDistribution",
                        "name": "_gsdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gsdrStreamingDistribution",
                    "name": "_gsdrStreamingDistribution",
                    "shape": "StreamingDistribution",
                    "locationName": "StreamingDistribution",
                    "documentation": "The streaming distribution's information.",
                    "typeExposed": "Maybe StreamingDistribution",
                    "type": "Maybe StreamingDistribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gsdrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 22,
                "name": "GetStreamingDistributionResponse",
                "resultWrapper": null,
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdrStreamingDistribution",
                        "name": "_gsdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdrETag",
                        "name": "_gsdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the streaming distribution's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdrETag",
                        "name": "_gsdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the streaming distribution's information. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdrStreamingDistribution",
                        "name": "_gsdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetStreamingDistribution.html",
            "namespace": "Network.AWS.CloudFront.GetStreamingDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetStreamingDistribution",
            "method": "get",
            "documentation": "Get the information about a streaming distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getStreamingDistribution",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gsdId",
                    "name": "_gsdId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The streaming distribution's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_gsdId",
                        "type": "var"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gsdId",
                        "name": "_gsdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetStreamingDistribution",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gsdId",
                        "name": "_gsdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 33,
                "ctor": "getStreamingDistributionConfigResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdcrStreamingDistributionConfig",
                        "name": "_gsdcrStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "Maybe StreamingDistributionConfig",
                        "type": "Maybe StreamingDistributionConfig"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "gsdcrStreamingDistributionConfig",
                    "name": "_gsdcrStreamingDistributionConfig",
                    "shape": "StreamingDistributionConfig",
                    "locationName": "StreamingDistributionConfig",
                    "documentation": "The streaming distribution's configuration information.",
                    "typeExposed": "Maybe StreamingDistributionConfig",
                    "type": "Maybe StreamingDistributionConfig"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_gsdcrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 28,
                "name": "GetStreamingDistributionConfigResponse",
                "resultWrapper": null,
                "locationPad": 28,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdcrStreamingDistributionConfig",
                        "name": "_gsdcrStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "Maybe StreamingDistributionConfig",
                        "type": "Maybe StreamingDistributionConfig"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdcrETag",
                        "name": "_gsdcrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdcrETag",
                        "name": "_gsdcrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "gsdcrStreamingDistributionConfig",
                        "name": "_gsdcrStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "Maybe StreamingDistributionConfig",
                        "type": "Maybe StreamingDistributionConfig"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/GetStreamingDistributionConfig.html",
            "namespace": "Network.AWS.CloudFront.GetStreamingDistributionConfig",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "GetStreamingDistributionConfig",
            "method": "get",
            "documentation": "Get the configuration information about a streaming distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show",
                    "Monoid",
                    "IsString"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "getStreamingDistributionConfig",
                "headerPad": 0,
                "field": {
                    "location": "uri",
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "gsdcId",
                    "name": "_gsdcId",
                    "shape": "string",
                    "locationName": "Id",
                    "documentation": "The streaming distribution's id.",
                    "typeExposed": "Text",
                    "type": "Text"
                },
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_gsdcId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gsdcId",
                        "name": "_gsdcId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 0,
                "name": "GetStreamingDistributionConfig",
                "query": [],
                "locationPad": 0,
                "type": "newtype",
                "queryAll": false,
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "gsdcId",
                        "name": "_gsdcId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listCloudFrontOriginAccessIdentitiesResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lcfoairCloudFrontOriginAccessIdentityList",
                    "name": "_lcfoairCloudFrontOriginAccessIdentityList",
                    "shape": "CloudFrontOriginAccessIdentityList",
                    "locationName": "CloudFrontOriginAccessIdentityList",
                    "documentation": "The CloudFrontOriginAccessIdentityList type.",
                    "typeExposed": "CloudFrontOriginAccessIdentityList",
                    "type": "CloudFrontOriginAccessIdentityList"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcfoairCloudFrontOriginAccessIdentityList",
                        "name": "_lcfoairCloudFrontOriginAccessIdentityList",
                        "shape": "CloudFrontOriginAccessIdentityList",
                        "locationName": "CloudFrontOriginAccessIdentityList",
                        "documentation": "The CloudFrontOriginAccessIdentityList type.",
                        "typeExposed": "CloudFrontOriginAccessIdentityList",
                        "type": "CloudFrontOriginAccessIdentityList"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lcfoairCloudFrontOriginAccessIdentityList",
                    "name": "_lcfoairCloudFrontOriginAccessIdentityList",
                    "shape": "CloudFrontOriginAccessIdentityList",
                    "locationName": "CloudFrontOriginAccessIdentityList",
                    "documentation": "The CloudFrontOriginAccessIdentityList type.",
                    "typeExposed": "CloudFrontOriginAccessIdentityList",
                    "type": "CloudFrontOriginAccessIdentityList"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcfoairCloudFrontOriginAccessIdentityList",
                        "name": "_lcfoairCloudFrontOriginAccessIdentityList",
                        "shape": "CloudFrontOriginAccessIdentityList",
                        "locationName": "CloudFrontOriginAccessIdentityList",
                        "documentation": "The CloudFrontOriginAccessIdentityList type.",
                        "typeExposed": "CloudFrontOriginAccessIdentityList",
                        "type": "CloudFrontOriginAccessIdentityList"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListCloudFrontOriginAccessIdentitiesResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lcfoairCloudFrontOriginAccessIdentityList",
                        "name": "_lcfoairCloudFrontOriginAccessIdentityList",
                        "shape": "CloudFrontOriginAccessIdentityList",
                        "locationName": "CloudFrontOriginAccessIdentityList",
                        "documentation": "The CloudFrontOriginAccessIdentityList type.",
                        "typeExposed": "CloudFrontOriginAccessIdentityList",
                        "type": "CloudFrontOriginAccessIdentityList"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/ListCloudFrontOriginAccessIdentities.html",
            "namespace": "Network.AWS.CloudFront.ListCloudFrontOriginAccessIdentities",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": {
                "more": "lcfoairCloudFrontOriginAccessIdentityList . cfoailIsTruncated",
                "token": {
                    "input": "lcfoaiMarker",
                    "outputRequired": false,
                    "output": "lcfoairCloudFrontOriginAccessIdentityList . cfoailNextMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListCloudFrontOriginAccessIdentities",
            "method": "get",
            "documentation": "List origin access identities.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 15,
                "ctor": "listCloudFrontOriginAccessIdentities",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListCloudFrontOriginAccessIdentities",
                "query": [
                    {
                        "field": "_lcfoaiMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lcfoaiMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lcfoaiMarker",
                        "name": "_lcfoaiMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last identity on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lcfoaiMaxItems",
                        "name": "_lcfoaiMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of origin access identities you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lcfoaiMarker",
                        "name": "_lcfoaiMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of origin access identities. The results include identities in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last identity on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lcfoaiMaxItems",
                        "name": "_lcfoaiMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of origin access identities you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listDistributionsResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ldrDistributionList",
                    "name": "_ldrDistributionList",
                    "shape": "DistributionList",
                    "locationName": "DistributionList",
                    "documentation": "The DistributionList type.",
                    "typeExposed": "DistributionList",
                    "type": "DistributionList"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ldrDistributionList",
                        "name": "_ldrDistributionList",
                        "shape": "DistributionList",
                        "locationName": "DistributionList",
                        "documentation": "The DistributionList type.",
                        "typeExposed": "DistributionList",
                        "type": "DistributionList"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ldrDistributionList",
                    "name": "_ldrDistributionList",
                    "shape": "DistributionList",
                    "locationName": "DistributionList",
                    "documentation": "The DistributionList type.",
                    "typeExposed": "DistributionList",
                    "type": "DistributionList"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ldrDistributionList",
                        "name": "_ldrDistributionList",
                        "shape": "DistributionList",
                        "locationName": "DistributionList",
                        "documentation": "The DistributionList type.",
                        "typeExposed": "DistributionList",
                        "type": "DistributionList"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListDistributionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ldrDistributionList",
                        "name": "_ldrDistributionList",
                        "shape": "DistributionList",
                        "locationName": "DistributionList",
                        "documentation": "The DistributionList type.",
                        "typeExposed": "DistributionList",
                        "type": "DistributionList"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/ListDistributions.html",
            "namespace": "Network.AWS.CloudFront.ListDistributions",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": {
                "more": "ldrDistributionList . dlIsTruncated",
                "token": {
                    "input": "ldMarker",
                    "outputRequired": false,
                    "output": "ldrDistributionList . dlNextMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListDistributions",
            "method": "get",
            "documentation": "List distributions.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 11,
                "ctor": "listDistributions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListDistributions",
                "query": [
                    {
                        "field": "_ldMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_ldMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ldMarker",
                        "name": "_ldMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ldMaxItems",
                        "name": "_ldMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of distributions you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ldMarker",
                        "name": "_ldMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ldMaxItems",
                        "name": "_ldMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of distributions you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listInvalidationsResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lirInvalidationList",
                    "name": "_lirInvalidationList",
                    "shape": "InvalidationList",
                    "locationName": "InvalidationList",
                    "documentation": "Information about invalidation batches.",
                    "typeExposed": "InvalidationList",
                    "type": "InvalidationList"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lirInvalidationList",
                        "name": "_lirInvalidationList",
                        "shape": "InvalidationList",
                        "locationName": "InvalidationList",
                        "documentation": "Information about invalidation batches.",
                        "typeExposed": "InvalidationList",
                        "type": "InvalidationList"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lirInvalidationList",
                    "name": "_lirInvalidationList",
                    "shape": "InvalidationList",
                    "locationName": "InvalidationList",
                    "documentation": "Information about invalidation batches.",
                    "typeExposed": "InvalidationList",
                    "type": "InvalidationList"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lirInvalidationList",
                        "name": "_lirInvalidationList",
                        "shape": "InvalidationList",
                        "locationName": "InvalidationList",
                        "documentation": "Information about invalidation batches.",
                        "typeExposed": "InvalidationList",
                        "type": "InvalidationList"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListInvalidationsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lirInvalidationList",
                        "name": "_lirInvalidationList",
                        "shape": "InvalidationList",
                        "locationName": "InvalidationList",
                        "documentation": "Information about invalidation batches.",
                        "typeExposed": "InvalidationList",
                        "type": "InvalidationList"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/ListInvalidations.html",
            "namespace": "Network.AWS.CloudFront.ListInvalidations",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": {
                "more": "lirInvalidationList . ilIsTruncated",
                "token": {
                    "input": "liMarker",
                    "outputRequired": false,
                    "output": "lirInvalidationList . ilNextMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListInvalidations",
            "method": "get",
            "documentation": "List invalidation batches.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 17,
                "ctor": "listInvalidations",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_liDistributionId",
                        "type": "var"
                    },
                    {
                        "value": "/invalidation",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "liDistributionId",
                        "name": "_liDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListInvalidations",
                "query": [
                    {
                        "field": "_liMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_liMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 15,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "liMarker",
                        "name": "_liMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response. This value is the same as the ID of the last invalidation batch on that page.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "liMaxItems",
                        "name": "_liMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of invalidation batches you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "liDistributionId",
                        "name": "_liDistributionId",
                        "shape": "string",
                        "locationName": "DistributionId",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "liMarker",
                        "name": "_liMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this parameter when paginating results to indicate where to begin in your list of invalidation batches. Because the results are returned in decreasing order from most recent to oldest, the most recent results are on the first page, the second page will contain earlier results, and so on. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response. This value is the same as the ID of the last invalidation batch on that page.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "liMaxItems",
                        "name": "_liMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of invalidation batches you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "listElement": null,
                "style": "xml",
                "fieldPad": 0,
                "ctor": "listStreamingDistributionsResponse",
                "headerPad": 0,
                "field": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lsdrStreamingDistributionList",
                    "name": "_lsdrStreamingDistributionList",
                    "shape": "StreamingDistributionList",
                    "locationName": "StreamingDistributionList",
                    "documentation": "The StreamingDistributionList type.",
                    "typeExposed": "StreamingDistributionList",
                    "type": "StreamingDistributionList"
                },
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lsdrStreamingDistributionList",
                        "name": "_lsdrStreamingDistributionList",
                        "shape": "StreamingDistributionList",
                        "locationName": "StreamingDistributionList",
                        "documentation": "The StreamingDistributionList type.",
                        "typeExposed": "StreamingDistributionList",
                        "type": "StreamingDistributionList"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "lsdrStreamingDistributionList",
                    "name": "_lsdrStreamingDistributionList",
                    "shape": "StreamingDistributionList",
                    "locationName": "StreamingDistributionList",
                    "documentation": "The StreamingDistributionList type.",
                    "typeExposed": "StreamingDistributionList",
                    "type": "StreamingDistributionList"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lsdrStreamingDistributionList",
                        "name": "_lsdrStreamingDistributionList",
                        "shape": "StreamingDistributionList",
                        "locationName": "StreamingDistributionList",
                        "documentation": "The StreamingDistributionList type.",
                        "typeExposed": "StreamingDistributionList",
                        "type": "StreamingDistributionList"
                    }
                ],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "name": "ListStreamingDistributionsResponse",
                "resultWrapper": null,
                "locationPad": 0,
                "type": "newtype",
                "headerAll": false,
                "optional": [],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "lsdrStreamingDistributionList",
                        "name": "_lsdrStreamingDistributionList",
                        "shape": "StreamingDistributionList",
                        "locationName": "StreamingDistributionList",
                        "documentation": "The StreamingDistributionList type.",
                        "typeExposed": "StreamingDistributionList",
                        "type": "StreamingDistributionList"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/ListStreamingDistributions.html",
            "namespace": "Network.AWS.CloudFront.ListStreamingDistributions",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": {
                "more": "lsdrStreamingDistributionList . sdlIsTruncated",
                "token": {
                    "input": "lsdMarker",
                    "outputRequired": false,
                    "output": "lsdrStreamingDistributionList . sdlNextMarker",
                    "inputRequired": false
                },
                "type": "one"
            },
            "name": "ListStreamingDistributions",
            "method": "get",
            "documentation": "List streaming distributions.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Ord",
                    "Show"
                ],
                "streaming": false,
                "style": "xml",
                "fieldPad": 12,
                "ctor": "listStreamingDistributions",
                "headerPad": 0,
                "contents": [],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": null,
                "required": [],
                "shared": false,
                "headers": [],
                "contentPad": 0,
                "queryPad": 9,
                "name": "ListStreamingDistributions",
                "query": [
                    {
                        "field": "_lsdMarker",
                        "locationName": "Marker",
                        "type": "field"
                    },
                    {
                        "field": "_lsdMaxItems",
                        "locationName": "MaxItems",
                        "type": "field"
                    }
                ],
                "locationPad": 9,
                "type": "record",
                "queryAll": true,
                "headerAll": false,
                "optional": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lsdMarker",
                        "name": "_lsdMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of streaming distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lsdMaxItems",
                        "name": "_lsdMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of streaming distributions you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lsdMarker",
                        "name": "_lsdMarker",
                        "shape": "string",
                        "locationName": "Marker",
                        "documentation": "Use this when paginating results to indicate where to begin in your list of streaming distributions. The results include distributions in the list that occur after the marker. To get the next page of results, set the Marker to the value of the NextMarker from the current page's response (which is also the ID of the last distribution on that page).",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": "querystring",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "lsdMaxItems",
                        "name": "_lsdMaxItems",
                        "shape": "string",
                        "locationName": "MaxItems",
                        "documentation": "The maximum number of streaming distributions you want in the response body.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 38,
                "ctor": "updateCloudFrontOriginAccessIdentityResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoairCloudFrontOriginAccessIdentity",
                        "name": "_ucfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "ucfoairCloudFrontOriginAccessIdentity",
                    "name": "_ucfoairCloudFrontOriginAccessIdentity",
                    "shape": "CloudFrontOriginAccessIdentity",
                    "locationName": "CloudFrontOriginAccessIdentity",
                    "documentation": "The origin access identity's information.",
                    "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                    "type": "Maybe CloudFrontOriginAccessIdentity"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_ucfoairETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 31,
                "name": "UpdateCloudFrontOriginAccessIdentityResponse",
                "resultWrapper": null,
                "locationPad": 31,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoairCloudFrontOriginAccessIdentity",
                        "name": "_ucfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoairETag",
                        "name": "_ucfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoairCloudFrontOriginAccessIdentity",
                        "name": "_ucfoairCloudFrontOriginAccessIdentity",
                        "shape": "CloudFrontOriginAccessIdentity",
                        "locationName": "CloudFrontOriginAccessIdentity",
                        "documentation": "The origin access identity's information.",
                        "typeExposed": "Maybe CloudFrontOriginAccessIdentity",
                        "type": "Maybe CloudFrontOriginAccessIdentity"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoairETag",
                        "name": "_ucfoairETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/UpdateCloudFrontOriginAccessIdentity.html",
            "namespace": "Network.AWS.CloudFront.UpdateCloudFrontOriginAccessIdentity",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "UpdateCloudFrontOriginAccessIdentity",
            "method": "put",
            "documentation": "Update an origin access identity.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 43,
                "ctor": "updateCloudFrontOriginAccessIdentity",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/origin-access-identity/cloudfront/",
                        "type": "const"
                    },
                    {
                        "value": "_ucfoaiId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "ucfoaiCloudFrontOriginAccessIdentityConfig",
                    "name": "_ucfoaiCloudFrontOriginAccessIdentityConfig",
                    "shape": "CloudFrontOriginAccessIdentityConfig",
                    "locationName": "CloudFrontOriginAccessIdentityConfig",
                    "documentation": "The identity's configuration information.",
                    "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                    "type": "CloudFrontOriginAccessIdentityConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ucfoaiId",
                        "name": "_ucfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_ucfoaiIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 37,
                "queryPad": 0,
                "name": "UpdateCloudFrontOriginAccessIdentity",
                "query": [],
                "locationPad": 37,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoaiIfMatch",
                        "name": "_ucfoaiIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the identity's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "name": "_ucfoaiCloudFrontOriginAccessIdentityConfig",
                        "shape": "CloudFrontOriginAccessIdentityConfig",
                        "locationName": "CloudFrontOriginAccessIdentityConfig",
                        "documentation": "The identity's configuration information.",
                        "typeExposed": "CloudFrontOriginAccessIdentityConfig",
                        "type": "CloudFrontOriginAccessIdentityConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "ucfoaiId",
                        "name": "_ucfoaiId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The identity's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "ucfoaiIfMatch",
                        "name": "_ucfoaiIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the identity's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 16,
                "ctor": "updateDistributionResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDistribution",
                        "name": "_udrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "udrDistribution",
                    "name": "_udrDistribution",
                    "shape": "Distribution",
                    "locationName": "Distribution",
                    "documentation": "The distribution's information.",
                    "typeExposed": "Maybe Distribution",
                    "type": "Maybe Distribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_udrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 13,
                "name": "UpdateDistributionResponse",
                "resultWrapper": null,
                "locationPad": 13,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDistribution",
                        "name": "_udrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udrETag",
                        "name": "_udrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udrDistribution",
                        "name": "_udrDistribution",
                        "shape": "Distribution",
                        "locationName": "Distribution",
                        "documentation": "The distribution's information.",
                        "typeExposed": "Maybe Distribution",
                        "type": "Maybe Distribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udrETag",
                        "name": "_udrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/UpdateDistribution.html",
            "namespace": "Network.AWS.CloudFront.UpdateDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "UpdateDistribution",
            "method": "put",
            "documentation": "Update a distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 21,
                "ctor": "updateDistribution",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "udDistributionConfig",
                        "name": "_udDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_udId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "udDistributionConfig",
                    "name": "_udDistributionConfig",
                    "shape": "DistributionConfig",
                    "locationName": "DistributionConfig",
                    "documentation": "The distribution's configuration information.",
                    "typeExposed": "DistributionConfig",
                    "type": "DistributionConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "udDistributionConfig",
                        "name": "_udDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "udId",
                        "name": "_udId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_udIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 19,
                "queryPad": 0,
                "name": "UpdateDistribution",
                "query": [],
                "locationPad": 19,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udIfMatch",
                        "name": "_udIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the distribution's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "udDistributionConfig",
                        "name": "_udDistributionConfig",
                        "shape": "DistributionConfig",
                        "locationName": "DistributionConfig",
                        "documentation": "The distribution's configuration information.",
                        "typeExposed": "DistributionConfig",
                        "type": "DistributionConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "udId",
                        "name": "_udId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "udIfMatch",
                        "name": "_udIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the distribution's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "service": "CloudFront",
            "response": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 26,
                "ctor": "updateStreamingDistributionResponse",
                "headerPad": 5,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdrStreamingDistribution",
                        "name": "_usdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ],
                "wrapper": false,
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "Nothing",
                    "flattened": false,
                    "required": false,
                    "lens": "usdrStreamingDistribution",
                    "name": "_usdrStreamingDistribution",
                    "shape": "StreamingDistribution",
                    "locationName": "StreamingDistribution",
                    "documentation": "The streaming distribution's information.",
                    "typeExposed": "Maybe StreamingDistribution",
                    "type": "Maybe StreamingDistribution"
                },
                "required": [],
                "shared": false,
                "headers": [
                    {
                        "field": "_usdrETag",
                        "locationName": "ETag",
                        "type": "field"
                    }
                ],
                "contentPad": 22,
                "name": "UpdateStreamingDistributionResponse",
                "resultWrapper": null,
                "locationPad": 22,
                "type": "record",
                "headerAll": false,
                "optional": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdrStreamingDistribution",
                        "name": "_usdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdrETag",
                        "name": "_usdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdrETag",
                        "name": "_usdrETag",
                        "shape": "string",
                        "locationName": "ETag",
                        "documentation": "The current version of the configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdrStreamingDistribution",
                        "name": "_usdrStreamingDistribution",
                        "shape": "StreamingDistribution",
                        "locationName": "StreamingDistribution",
                        "documentation": "The streaming distribution's information.",
                        "typeExposed": "Maybe StreamingDistribution",
                        "type": "Maybe StreamingDistribution"
                    }
                ]
            },
            "url": "http://docs.aws.amazon.com/AmazonCloudFront/latest/APIReference/UpdateStreamingDistribution.html",
            "namespace": "Network.AWS.CloudFront.UpdateStreamingDistribution",
            "protocol": "rest-xml",
            "imports": [
                "Network.AWS.Request.RestXML",
                "Network.AWS.CloudFront.Types"
            ],
            "pager": null,
            "name": "UpdateStreamingDistribution",
            "method": "put",
            "documentation": "Update a streaming distribution.",
            "documentationUrl": null,
            "request": {
                "deriving": [
                    "Eq",
                    "Show"
                ],
                "streaming": false,
                "style": "xml-headers",
                "fieldPad": 31,
                "ctor": "updateStreamingDistribution",
                "headerPad": 9,
                "contents": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "usdStreamingDistributionConfig",
                        "name": "_usdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ],
                "path": [
                    {
                        "value": "/2014-05-31/streaming-distribution/",
                        "type": "const"
                    },
                    {
                        "value": "_usdId",
                        "type": "var"
                    },
                    {
                        "value": "/config",
                        "type": "const"
                    }
                ],
                "protocol": "rest-xml",
                "payload": {
                    "location": null,
                    "iso": null,
                    "lensMapping": null,
                    "default": "\u003cerror\u003e",
                    "flattened": false,
                    "required": true,
                    "lens": "usdStreamingDistributionConfig",
                    "name": "_usdStreamingDistributionConfig",
                    "shape": "StreamingDistributionConfig",
                    "locationName": "StreamingDistributionConfig",
                    "documentation": "The streaming distribution's configuration information.",
                    "typeExposed": "StreamingDistributionConfig",
                    "type": "StreamingDistributionConfig"
                },
                "required": [
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "usdStreamingDistributionConfig",
                        "name": "_usdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    },
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "usdId",
                        "name": "_usdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    }
                ],
                "shared": false,
                "headers": [
                    {
                        "field": "_usdIfMatch",
                        "locationName": "If-Match",
                        "type": "field"
                    }
                ],
                "contentPad": 28,
                "queryPad": 0,
                "name": "UpdateStreamingDistribution",
                "query": [],
                "locationPad": 28,
                "type": "record",
                "queryAll": false,
                "headerAll": false,
                "optional": [
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdIfMatch",
                        "name": "_usdIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the streaming distribution's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    }
                ],
                "fields": [
                    {
                        "location": "uri",
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "usdId",
                        "name": "_usdId",
                        "shape": "string",
                        "locationName": "Id",
                        "documentation": "The streaming distribution's id.",
                        "typeExposed": "Text",
                        "type": "Text"
                    },
                    {
                        "location": "header",
                        "iso": null,
                        "lensMapping": null,
                        "default": "Nothing",
                        "flattened": false,
                        "required": false,
                        "lens": "usdIfMatch",
                        "name": "_usdIfMatch",
                        "shape": "string",
                        "locationName": "If-Match",
                        "documentation": "The value of the ETag header you received when retrieving the streaming distribution's configuration. For example: E2QWRUHAPOMQZL.",
                        "typeExposed": "Maybe Text",
                        "type": "Maybe Text"
                    },
                    {
                        "location": null,
                        "iso": null,
                        "lensMapping": null,
                        "default": "\u003cerror\u003e",
                        "flattened": false,
                        "required": true,
                        "lens": "usdStreamingDistributionConfig",
                        "name": "_usdStreamingDistributionConfig",
                        "shape": "StreamingDistributionConfig",
                        "locationName": "StreamingDistributionConfig",
                        "documentation": "The streaming distribution's configuration information.",
                        "typeExposed": "StreamingDistributionConfig",
                        "type": "StreamingDistributionConfig"
                    }
                ]
            }
        }
    ]
}