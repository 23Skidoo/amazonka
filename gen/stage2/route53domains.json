{
    "service": {
        "signature": "v4",
        "checksum": "sha256",
        "abbrev": "Route53Domains",
        "error": "Route53DomainsError",
        "namespace": "Network.AWS.Route53Domains",
        "protocol": "json",
        "imports": [
            "Network.AWS.Route53Domains.CheckDomainAvailability",
            "Network.AWS.Route53Domains.DisableDomainAutoRenew",
            "Network.AWS.Route53Domains.DisableDomainTransferLock",
            "Network.AWS.Route53Domains.EnableDomainAutoRenew",
            "Network.AWS.Route53Domains.EnableDomainTransferLock",
            "Network.AWS.Route53Domains.GetDomainDetail",
            "Network.AWS.Route53Domains.GetOperationDetail",
            "Network.AWS.Route53Domains.ListDomains",
            "Network.AWS.Route53Domains.ListOperations",
            "Network.AWS.Route53Domains.RegisterDomain",
            "Network.AWS.Route53Domains.RetrieveDomainAuthCode",
            "Network.AWS.Route53Domains.TransferDomain",
            "Network.AWS.Route53Domains.Types",
            "Network.AWS.Route53Domains.UpdateDomainContact",
            "Network.AWS.Route53Domains.UpdateDomainContactPrivacy",
            "Network.AWS.Route53Domains.UpdateDomainNameservers"
        ],
        "name": "Amazon Route 53 Domains",
        "version": "2014-05-15",
        "documentation": "",
        "xmlNamespace": "https://route53domains.amazonaws.com/doc/2014-05-15/",
        "endpoint": "regional",
        "endpointPrefix": "route53domains",
        "targetPrefix": "Route53Domains_v20140515"
    },
    "cabal": {
        "library": "amazonka-route53-domains",
        "modules": [
            "Network.AWS.Route53Domains",
            "Network.AWS.Route53Domains.CheckDomainAvailability",
            "Network.AWS.Route53Domains.DisableDomainAutoRenew",
            "Network.AWS.Route53Domains.DisableDomainTransferLock",
            "Network.AWS.Route53Domains.EnableDomainAutoRenew",
            "Network.AWS.Route53Domains.EnableDomainTransferLock",
            "Network.AWS.Route53Domains.GetDomainDetail",
            "Network.AWS.Route53Domains.GetOperationDetail",
            "Network.AWS.Route53Domains.ListDomains",
            "Network.AWS.Route53Domains.ListOperations",
            "Network.AWS.Route53Domains.RegisterDomain",
            "Network.AWS.Route53Domains.RetrieveDomainAuthCode",
            "Network.AWS.Route53Domains.TransferDomain",
            "Network.AWS.Route53Domains.Types",
            "Network.AWS.Route53Domains.UpdateDomainContact",
            "Network.AWS.Route53Domains.UpdateDomainContactPrivacy",
            "Network.AWS.Route53Domains.UpdateDomainNameservers"
        ],
        "dependencies": [],
        "version": "0.0.0",
        "synopsis": "",
        "description": ""
    },
    "types": {
        "DomainSummary": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsDomainName",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsAutoRenew",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsTransferLock",
                    "type": "Maybe Bool"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "dsExpiry",
                    "type": "Maybe (Time RFC822)"
                }
            ]
        },
        "InvalidInput": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "iimessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "Nameserver": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "namName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "namGlueIps",
                    "type": "List Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "namespace": "Network.AWS.Route53Domains.Types",
        "OperationLimitExceeded": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "olemessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "DomainLimitExceeded": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "dlemessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "imports": [],
        "UnsupportedTLD": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "utldmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ExtraParam": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "epName",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "epValue",
                    "type": "Text"
                }
            ],
            "type": "record",
            "optional": []
        },
        "TLDRulesViolation": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "tldrvmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "DuplicateRequest": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic",
                "monoid"
            ],
            "field": {
                "streaming": false,
                "payload": false,
                "name": "drmessage",
                "type": "Maybe Text"
            },
            "type": "newtype"
        },
        "ContactDetail": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdExtraParams",
                    "type": "List ExtraParam"
                }
            ],
            "type": "record",
            "optional": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdFirstName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdLastName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdContactType",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdOrganizationName",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdAddressLine1",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdAddressLine2",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdCity",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdState",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdCountryCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdZipCode",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdPhoneNumber",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdEmail",
                    "type": "Maybe Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "cdFax",
                    "type": "Maybe Text"
                }
            ]
        },
        "OperationSummary": {
            "deriving": [
                "eq",
                "ord",
                "show",
                "generic"
            ],
            "payload": null,
            "required": [
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osOperationId",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osStatus",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osType",
                    "type": "Text"
                },
                {
                    "streaming": false,
                    "payload": false,
                    "name": "osSubmittedDate",
                    "type": "Time RFC822"
                }
            ],
            "type": "record",
            "optional": []
        }
    },
    "operations": [
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lorOperations",
                        "type": "List OperationSummary"
                    }
                ],
                "name": "ListOperationsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lorNextPageMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53Domains.ListOperations",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "ListOperations",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns the operation IDs of operations that are not yet complete.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "ListOperationsRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lorMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "lorMaxItems",
                        "type": "Maybe Int"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrNameservers",
                        "type": "List Nameserver"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrAdminContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrRegistrantContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrTechContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrStatusList",
                        "type": "List Text"
                    }
                ],
                "name": "GetDomainDetailResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrAutoRenew",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrAdminPrivacy",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrRegistrantPrivacy",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrTechPrivacy",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrRegistrarName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrWhoIsServer",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrRegistrarUrl",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrAbuseContactEmail",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrAbuseContactPhone",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrRegistryDomainId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrCreationDate",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrUpdatedDate",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrExpirationDate",
                        "type": "Maybe (Time RFC822)"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrReseller",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "gddrDnsSec",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53Domains.GetDomainDetail",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "GetDomainDetail",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns detailed information about the domain. The domain's contact information is also returned as part of the output.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "gddr1DomainName",
                    "type": "Text"
                },
                "name": "GetDomainDetailRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "udcprOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "UpdateDomainContactPrivacyResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.UpdateDomainContactPrivacy",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "UpdateDomainContactPrivacy",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates the specified domain contact's privacy setting. When the privacy option is enabled, personal information such as postal or email address is hidden from the results of a public WHOIS query. The privacy services are provided by the AWS registrar, Gandi. For more information, see the \u003ca href=\"http://www.gandi.net/domain/whois/?currency=USD&amp;amp;lang=en\"\u003eGandi privacy features\u003c/a\u003e.\u003c/p\u003e \u003cp\u003eThis operation only affects the privacy of the specified contact type (registrant, administrator, or tech). Successful acceptance returns an operation ID that you can use with GetOperationDetail to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcprDomainName",
                        "type": "Text"
                    }
                ],
                "name": "UpdateDomainContactPrivacyRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcprAdminPrivacy",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcprRegistrantPrivacy",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcprTechPrivacy",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [],
                "name": "GetOperationDetailResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrOperationId",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrStatus",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrMessage",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrDomainName",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrType",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "godrSubmittedDate",
                        "type": "Maybe (Time RFC822)"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53Domains.GetOperationDetail",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "GetOperationDetail",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns the current status of an operation that is not completed.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "godr1OperationId",
                    "type": "Text"
                },
                "name": "GetOperationDetailRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "EnableDomainAutoRenewResponse",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Route53Domains.EnableDomainAutoRenew",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "EnableDomainAutoRenew",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation configures Amazon Route 53 to automatically renew the specified domain before the domain registration expires. The cost of renewing your domain registration is billed to your AWS account.\u003c/p\u003e \u003cp\u003eThe period during which you can renew a domain name varies by TLD. For a list of TLDs and their renewal policies, see \"Renewal, restoration, and deletion times\" (http://wiki.gandi.net/en/domains/renew#renewal_restoration_and_deletion_times) on the website for our registrar partner, Gandi. Route 53 requires that you renew before the end of the renewal period that is listed on the Gandi website so we can complete processing before the deadline.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "edarrDomainName",
                    "type": "Text"
                },
                "name": "EnableDomainAutoRenewRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [],
                "wrapper": false,
                "name": "DisableDomainAutoRenewResponse",
                "resultWrapper": null,
                "type": "empty"
            },
            "namespace": "Network.AWS.Route53Domains.DisableDomainAutoRenew",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "DisableDomainAutoRenew",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation disables automatic renewal of domain registration for the specified domain.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddarrDomainName",
                    "type": "Text"
                },
                "name": "DisableDomainAutoRenewRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "udcrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "UpdateDomainContactResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.UpdateDomainContact",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "UpdateDomainContact",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation updates the contact information for a particular domain. Information for at least one contact (registrant, administrator, or technical) must be supplied for update.\u003c/p\u003e \u003cp\u003eIf the update is successful, this method returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcrDomainName",
                        "type": "Text"
                    }
                ],
                "name": "UpdateDomainContactRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcrAdminContact",
                        "type": "Maybe ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcrRegistrantContact",
                        "type": "Maybe ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udcrTechContact",
                        "type": "Maybe ContactDetail"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "edtlrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "EnableDomainTransferLockResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.EnableDomainTransferLock",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "EnableDomainTransferLock",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation sets the transfer lock on the domain (specifically the \u003ccode\u003eclientTransferProhibited\u003c/code\u003e status) to prevent domain transfers. Successful submission returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "edtlrDomainName",
                    "type": "Text"
                },
                "name": "EnableDomainTransferLockRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "RegisterDomainResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.RegisterDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "RegisterDomain",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation registers a domain. Domains are registered by the AWS registrar partner, Gandi. For some top-level domains (TLDs), this operation requires extra parameters.\u003c/p\u003e \u003cp\u003eWhen you register a domain, Amazon Route 53 does the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003eCreates a Amazon Route 53 hosted zone that has the same name as the domain. Amazon Route 53 assigns four name servers to your hosted zone and automatically updates your domain registration with the names of these name servers.\u003c/li\u003e \u003cli\u003eEnables autorenew, so your domain registration will renew automatically each year. We'll notify you in advance of the renewal date so you can choose whether to renew the registration.\u003c/li\u003e \u003cli\u003eOptionally enables privacy protection, so WHOIS queries return contact information for our registrar partner, Gandi, instead of the information you entered for registrant, admin, and tech contacts.\u003c/li\u003e \u003cli\u003eIf registration is successful, returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant is notified by email.\u003c/li\u003e \u003cli\u003eCharges your AWS account an amount based on the top-level domain. For more information, see \u003ca href=\"http://aws.amazon.com/route53/pricing/\"\u003eAmazon Route 53 Pricing\u003c/a\u003e.\u003c/li\u003e \u003c/ul\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrDurationInYears",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrAdminContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrRegistrantContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrTechContact",
                        "type": "ContactDetail"
                    }
                ],
                "name": "RegisterDomainRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrIdnLangCode",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrAutoRenew",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrPrivacyProtectAdminContact",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrPrivacyProtectRegistrantContact",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "rdrPrivacyProtectTechContact",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddtlrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "DisableDomainTransferLockResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.DisableDomainTransferLock",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "DisableDomainTransferLock",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation removes the transfer lock on the domain (specifically the \u003ccode\u003eclientTransferProhibited\u003c/code\u003e status) to allow domain transfers. We recommend you refrain from performing this action unless you intend to transfer the domain to a different registrar. Successful submission returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "ddtlrDomainName",
                    "type": "Text"
                },
                "name": "DisableDomainTransferLockRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "cdarAvailability",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "CheckDomainAvailabilityResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.CheckDomainAvailability",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "CheckDomainAvailability",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation checks the availability of one domain name. You can access this API without authenticating. Note that if the availability status of a domain is pending, you must submit another request to determine the availability of the domain name.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdarDomainName",
                        "type": "Text"
                    }
                ],
                "name": "CheckDomainAvailabilityRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "cdarIdnLangCode",
                        "type": "Maybe Text"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "udnrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "UpdateDomainNameserversResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.UpdateDomainNameservers",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "UpdateDomainNameservers",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation replaces the current set of name servers for the domain with the specified set of name servers. If you use Amazon Route 53 as your DNS service, specify the four name servers in the delegation set for the hosted zone for the domain. \u003c/p\u003e \u003cp\u003eIf successful, this operation returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udnrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "udnrNameservers",
                        "type": "List Nameserver"
                    }
                ],
                "name": "UpdateDomainNameserversRequest",
                "type": "record",
                "optional": []
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdacrAuthCode",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "RetrieveDomainAuthCodeResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.RetrieveDomainAuthCode",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "RetrieveDomainAuthCode",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns the AuthCode for the domain. To transfer a domain to another registrar, you provide this value to the new registrar.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "rdacrDomainName",
                    "type": "Text"
                },
                "name": "RetrieveDomainAuthCodeRequest",
                "type": "newtype"
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic",
                    "monoid"
                ],
                "field": {
                    "streaming": false,
                    "payload": false,
                    "name": "tdrOperationId",
                    "type": "Text"
                },
                "wrapper": false,
                "name": "TransferDomainResponse",
                "resultWrapper": null,
                "type": "newtype"
            },
            "namespace": "Network.AWS.Route53Domains.TransferDomain",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "TransferDomain",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation transfers a domain from another registrar to Amazon Route 53. Domains are registered by the AWS registrar, Gandi upon transfer.\u003c/p\u003e \u003cp\u003eTo transfer a domain, you need to meet all the domain transfer criteria, including the following:\u003c/p\u003e \u003cul\u003e \u003cli\u003eYou must supply nameservers to transfer a domain.\u003c/li\u003e \u003cli\u003eYou must disable the domain transfer lock (if any) before transferring the domain.\u003c/li\u003e \u003cli\u003eA minimum of 60 days must have elapsed since the domain's registration or last transfer.\u003c/li\u003e \u003c/ul\u003e \u003cp\u003eWe recommend you use the Amazon Route 53 as the DNS service for your domain. You can create a hosted zone in Amazon Route 53 for your current domain before transferring your domain.\u003c/p\u003e \u003cp\u003eNote that upon transfer, the domain duration is extended for a year if not otherwise specified. Autorenew is enabled by default.\u003c/p\u003e \u003cp\u003eIf the transfer is successful, this method returns an operation ID that you can use to track the progress and completion of the action. If the request is not completed successfully, the domain registrant will be notified by email.\u003c/p\u003e \u003cp\u003eTransferring domains charges your AWS account an amount based on the top-level domain. For more information, see \u003ca href=\"http://aws.amazon.com/route53/pricing/\"\u003eAmazon Route 53 Pricing\u003c/a\u003e. \u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrDomainName",
                        "type": "Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrDurationInYears",
                        "type": "Int"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrNameservers",
                        "type": "List Nameserver"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrAdminContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrRegistrantContact",
                        "type": "ContactDetail"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrTechContact",
                        "type": "ContactDetail"
                    }
                ],
                "name": "TransferDomainRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrIdnLangCode",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrAuthCode",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrAutoRenew",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrPrivacyProtectAdminContact",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrPrivacyProtectRegistrantContact",
                        "type": "Maybe Bool"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "tdrPrivacyProtectTechContact",
                        "type": "Maybe Bool"
                    }
                ]
            }
        },
        {
            "response": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "wrapper": false,
                "payload": null,
                "required": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldrDomains",
                        "type": "List DomainSummary"
                    }
                ],
                "name": "ListDomainsResponse",
                "resultWrapper": null,
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldrNextPageMarker",
                        "type": "Maybe Text"
                    }
                ]
            },
            "namespace": "Network.AWS.Route53Domains.ListDomains",
            "uri": {
                "path": [
                    {
                        "value": "/",
                        "type": "const"
                    }
                ],
                "query": []
            },
            "imports": [
                "Network.AWS.Request.JSON",
                "Network.AWS.Route53Domains.Types"
            ],
            "name": "ListDomains",
            "method": "post",
            "documentation": "\u003cp\u003eThis operation returns all the domain names registered with Amazon Route 53 for the current AWS account.\u003c/p\u003e",
            "request": {
                "deriving": [
                    "eq",
                    "ord",
                    "show",
                    "generic"
                ],
                "payload": null,
                "required": [],
                "name": "ListDomainsRequest",
                "type": "record",
                "optional": [
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldrMarker",
                        "type": "Maybe Text"
                    },
                    {
                        "streaming": false,
                        "payload": false,
                        "name": "ldrMaxItems",
                        "type": "Maybe Int"
                    }
                ]
            }
        }
    ]
}