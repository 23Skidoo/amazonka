{-# LANGUAGE DeriveGeneric              #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase                 #-}
{-# LANGUAGE OverloadedStrings          #-}

{% include "_include/license.ede" %}

module {{ namespace }} where

import Network.AWS.Prelude

{% for type in types %}
  {% if type.value.documentation %}
{{ type.value.documentation | above(76, 0) }}
  {% endif %}
  {% case type.value.type %}
  {% when "record" %}
{% include "_include/record.ede" with type = type.value %}
  {% when "newtype" %}
{% include "_include/newtype.ede" with type = type.value %}
  {% when "nullary" %}
{% include "_include/nullary.ede" with type = type.value %}
  {% endcase %}

{% include "_include/xml.ede" with type = type.value %}
  {% if !type.last %}

  {% endif %}
{% endfor %}
