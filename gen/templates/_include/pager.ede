{% if pager %}

instance AWSPager {{ request.name }} where
  {% case pager.type %}
  {% when "next" %}
    next rq rs = (\x -> rq & {{ pager.token.input }} ?~ x)
        <$> (rs ^. {{ pager.token.output }})
  {% when "one" %}
    next rq rs
        | not (rs ^. {{ pager.more }}) = Nothing
    {% if pager.token.output_prefix %}
        | otherwise = Just $
            rq & {{ pager.token.input }} .~ rs ^. {{ pager.token.output }}
    {% else %}
        | otherwise = Just $
            rq & {{ pager.token.input }} .~ {{ pager.token.output }} rs
    {% endif %}
  {% when "many" %}
    next rq rs
        | not (rs ^. {{ pager.more }}) = Nothing
        | {{ pager.negate }} = Nothing
        | otherwise = Just $ rq
    {% for token in pager.tokens %}
            & {{ token.value.input }} .~ {{ token.key}}
    {% endfor %}
      where
    {% for token in pager.tokens %}
        {{ token.key }} = rs ^. {{ token.value.output }}
   {% endfor %}
  {% endcase %}
{% endif %}
