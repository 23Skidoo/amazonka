data {{ type.name }}
    {% for branch in type.branches %}
    {% if branch.first %}={% else %}|{% endif %} {{ branch.key }} -- ^ {{ branch.value }}
    {% endfor %}
      deriving {% include "../_include/deriving.ede" %}
instance Hashable {{ type.name }}

instance FromText {{ type.name }} where
    {% for branch in type.branches %}
      {% if branch.first %}
    parser = match "{{ branch.value }}" {{ branch.key }}
      {% else %}
         <|> match "{{ branch.value }}" {{ branch.key }}
      {% endif %}
    {% endfor %}

instance ToText {{ type.name }} where
    toText = \case
    {% for branch in type.branches %}
        {{ branch.key }} -> "{{ branch.value }}"
    {% endfor %}
