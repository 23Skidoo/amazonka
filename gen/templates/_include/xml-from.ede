
instance FromXML {{ type.name }} where
{% case type.type %}
{% when "nullary" %}
  {% if type.resultWrapper %}
    parseXML = withElement "{{ type.resultWrapper }}" (parseXMLText "{{ type.name }}")
  {% else %}
    parseXML = parseXMLText "{{ type.name }}"
  {% endif %}
{% else %}
  {% if type.resultWrapper %}
    parseXML = withElement "{{ type.resultWrapper }}" $ \x ->
        {{ type.name }}
    {% for field in type.fields %}
      {% if field.value.flattened %}
            {% include "applicative.ede" %} parseXML x
      {% else %}
            {% include "applicative.ede" %} x {% include "xml-operator.ede" %} "{{ field.value.locationName }}"
      {% endif %}
    {% endfor %}
  {% else %}
    parseXML x = {{ type.name }}
    {% for field in type.fields %}
        {% include "applicative.ede" %} x {% include "xml-operator.ede" %} "{{ field.value.locationName }}"
    {% endfor %}
  {% endif %}
{% endcase %}
