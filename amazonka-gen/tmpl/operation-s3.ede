{-# LANGUAGE DeriveGeneric               #-}
{-# LANGUAGE OverloadedStrings           #-}
{-# LANGUAGE RecordWildCards             #-}
{-# LANGUAGE TypeFamilies                #-}

{% include "_include/license.ede" with namespace %}

{{ documentation | above76 }}
module {{ namespace }} where

import           Control.Applicative
import           Data.ByteString      (ByteString)
import           Data.Default
import           Data.HashMap.Strict  (HashMap)
import           Data.Maybe
import           Data.Monoid
import           Data.Text            (Text)
import qualified Data.Text            as Text
import           GHC.Generics
import           Network.AWS.Data
import           Network.AWS.Response
import           Network.AWS.Types    hiding (Error)
import           {{ request_namespace }}
import           {{ types_namespace }}
import           Network.HTTP.Client  (Response)
import           Prelude              hiding (head)
{% if alias %}

type {{ alias }} = {{ request.name }}
type {{ alias }}Response = Rs {{ request.name }}
{% endif %}

{% include "_include/method.ede" with request %}

data {{ request.name }} = {{ request.name }}
{% include "_include/record.ede" with request.fields %}

{% include "_include/path.ede" with request %}

{% include "_include/query.ede" with request %}

{% include "_include/headers.ede" with request %}

{% include "_include/body.ede" with request %}

instance AWSRequest {{ request.name }} where
    type Sv {{ request.name }} = {{ service }}

    request  = {{ request.method }}
{% include "_include/response.ede" %}
{% include "_include/pager.ede" %}

data instance Rs {{ request.name }} = {{ response.name }}
{% include "_include/record.ede" with response.fields %}
{% if scope.response.type == "xml" %}

instance FromXML (Rs {{ request.name }})
{% endif %}
