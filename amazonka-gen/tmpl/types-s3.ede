{-# LANGUAGE TypeFamilies #-}

{% include "_include/license.ede" with types_namespace %}

{% if documentation %}
{{ documentation }}
{% endif %}
module {{ types_namespace }} where

import Network.AWS.Signing.{{ signature }}
import Network.AWS.Types

data {{ name }}

instance AWSService {{ name }} where
    type Sg {{ name }} = {{ signature }}
{% raw %}
    type Er {{ name }} = {{ error }}

data {{ error }} = {{ error }}
    deriving (Eq, Show)

instance AWSError {{ error }} where
    toError _ = Nested []

{% for data in types %}
data {{ data.value.name }} = {{ data.value.name }}
{% include "_include/record.ede" with data.value.fields %}
  {% if !data.last %}

  {% endif %}
{% endfor %}

{% endraw %}
