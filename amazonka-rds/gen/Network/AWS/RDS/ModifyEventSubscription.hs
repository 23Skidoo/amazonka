{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveGeneric      #-}
{-# LANGUAGE OverloadedStrings  #-}
{-# LANGUAGE RecordWildCards    #-}
{-# LANGUAGE TypeFamilies       #-}

{-# OPTIONS_GHC -fno-warn-unused-binds   #-}
{-# OPTIONS_GHC -fno-warn-unused-matches #-}

-- Derived from AWS service descriptions, licensed under Apache 2.0.

-- |
-- Module      : Network.AWS.RDS.ModifyEventSubscription
-- Copyright   : (c) 2013-2015 Brendan Hay
-- License     : Mozilla Public License, v. 2.0.
-- Maintainer  : Brendan Hay <brendan.g.hay@gmail.com>
-- Stability   : experimental
-- Portability : non-portable (GHC extensions)
--
-- Modifies an existing RDS event notification subscription. Note that you
-- cannot modify the source identifiers using this call; to change source
-- identifiers for a subscription, use the
-- AddSourceIdentifierToSubscription and
-- RemoveSourceIdentifierFromSubscription calls.
--
-- You can see a list of the event categories for a given SourceType in the
-- <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html Events>
-- topic in the Amazon RDS User Guide or by using the
-- __DescribeEventCategories__ action.
--
-- <http://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_ModifyEventSubscription.html>
module Network.AWS.RDS.ModifyEventSubscription
    (
    -- * Request
      ModifyEventSubscription
    -- ** Request constructor
    , modifyEventSubscription
    -- ** Request lenses
    , mesrqSNSTopicARN
    , mesrqEnabled
    , mesrqSourceType
    , mesrqEventCategories
    , mesrqSubscriptionName

    -- * Response
    , ModifyEventSubscriptionResponse
    -- ** Response constructor
    , modifyEventSubscriptionResponse
    -- ** Response lenses
    , mesrsEventSubscription
    , mesrsStatus
    ) where

import           Network.AWS.Prelude
import           Network.AWS.RDS.Types
import           Network.AWS.Request
import           Network.AWS.Response

-- |
--
-- /See:/ 'modifyEventSubscription' smart constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'mesrqSNSTopicARN'
--
-- * 'mesrqEnabled'
--
-- * 'mesrqSourceType'
--
-- * 'mesrqEventCategories'
--
-- * 'mesrqSubscriptionName'
data ModifyEventSubscription = ModifyEventSubscription'
    { _mesrqSNSTopicARN      :: !(Maybe Text)
    , _mesrqEnabled          :: !(Maybe Bool)
    , _mesrqSourceType       :: !(Maybe Text)
    , _mesrqEventCategories  :: !(Maybe [Text])
    , _mesrqSubscriptionName :: !Text
    } deriving (Eq,Read,Show,Data,Typeable,Generic)

-- | 'ModifyEventSubscription' smart constructor.
modifyEventSubscription :: Text -> ModifyEventSubscription
modifyEventSubscription pSubscriptionName_ =
    ModifyEventSubscription'
    { _mesrqSNSTopicARN = Nothing
    , _mesrqEnabled = Nothing
    , _mesrqSourceType = Nothing
    , _mesrqEventCategories = Nothing
    , _mesrqSubscriptionName = pSubscriptionName_
    }

-- | The Amazon Resource Name (ARN) of the SNS topic created for event
-- notification. The ARN is created by Amazon SNS when you create a topic
-- and subscribe to it.
mesrqSNSTopicARN :: Lens' ModifyEventSubscription (Maybe Text)
mesrqSNSTopicARN = lens _mesrqSNSTopicARN (\ s a -> s{_mesrqSNSTopicARN = a});

-- | A Boolean value; set to __true__ to activate the subscription.
mesrqEnabled :: Lens' ModifyEventSubscription (Maybe Bool)
mesrqEnabled = lens _mesrqEnabled (\ s a -> s{_mesrqEnabled = a});

-- | The type of source that will be generating the events. For example, if
-- you want to be notified of events generated by a DB instance, you would
-- set this parameter to db-instance. if this value is not specified, all
-- events are returned.
--
-- Valid values: db-instance | db-parameter-group | db-security-group |
-- db-snapshot
mesrqSourceType :: Lens' ModifyEventSubscription (Maybe Text)
mesrqSourceType = lens _mesrqSourceType (\ s a -> s{_mesrqSourceType = a});

-- | A list of event categories for a SourceType that you want to subscribe
-- to. You can see a list of the categories for a given SourceType in the
-- <http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html Events>
-- topic in the Amazon RDS User Guide or by using the
-- __DescribeEventCategories__ action.
mesrqEventCategories :: Lens' ModifyEventSubscription [Text]
mesrqEventCategories = lens _mesrqEventCategories (\ s a -> s{_mesrqEventCategories = a}) . _Default;

-- | The name of the RDS event notification subscription.
mesrqSubscriptionName :: Lens' ModifyEventSubscription Text
mesrqSubscriptionName = lens _mesrqSubscriptionName (\ s a -> s{_mesrqSubscriptionName = a});

instance AWSRequest ModifyEventSubscription where
        type Sv ModifyEventSubscription = RDS
        type Rs ModifyEventSubscription =
             ModifyEventSubscriptionResponse
        request = post
        response
          = receiveXMLWrapper "ModifyEventSubscriptionResult"
              (\ s h x ->
                 ModifyEventSubscriptionResponse' <$>
                   (x .@? "EventSubscription") <*> (pure (fromEnum s)))

instance ToHeaders ModifyEventSubscription where
        toHeaders = const mempty

instance ToPath ModifyEventSubscription where
        toPath = const "/"

instance ToQuery ModifyEventSubscription where
        toQuery ModifyEventSubscription'{..}
          = mconcat
              ["Action" =:
                 ("ModifyEventSubscription" :: ByteString),
               "Version" =: ("2014-10-31" :: ByteString),
               "SnsTopicArn" =: _mesrqSNSTopicARN,
               "Enabled" =: _mesrqEnabled,
               "SourceType" =: _mesrqSourceType,
               "EventCategories" =:
                 toQuery
                   (toQueryList "EventCategory" <$>
                      _mesrqEventCategories),
               "SubscriptionName" =: _mesrqSubscriptionName]

-- | /See:/ 'modifyEventSubscriptionResponse' smart constructor.
--
-- The fields accessible through corresponding lenses are:
--
-- * 'mesrsEventSubscription'
--
-- * 'mesrsStatus'
data ModifyEventSubscriptionResponse = ModifyEventSubscriptionResponse'
    { _mesrsEventSubscription :: !(Maybe EventSubscription)
    , _mesrsStatus            :: !Int
    } deriving (Eq,Read,Show,Data,Typeable,Generic)

-- | 'ModifyEventSubscriptionResponse' smart constructor.
modifyEventSubscriptionResponse :: Int -> ModifyEventSubscriptionResponse
modifyEventSubscriptionResponse pStatus_ =
    ModifyEventSubscriptionResponse'
    { _mesrsEventSubscription = Nothing
    , _mesrsStatus = pStatus_
    }

-- | FIXME: Undocumented member.
mesrsEventSubscription :: Lens' ModifyEventSubscriptionResponse (Maybe EventSubscription)
mesrsEventSubscription = lens _mesrsEventSubscription (\ s a -> s{_mesrsEventSubscription = a});

-- | FIXME: Undocumented member.
mesrsStatus :: Lens' ModifyEventSubscriptionResponse Int
mesrsStatus = lens _mesrsStatus (\ s a -> s{_mesrsStatus = a});
